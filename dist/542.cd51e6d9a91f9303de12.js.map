{"version":3,"file":"542.cd51e6d9a91f9303de12.js","mappings":"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","sources":["webpack://package.json/./src/components/hot_map/hot_map.component.jsx","webpack://package.json/./src/components/hot_map/hot_map.style.scss"],"sourcesContent":["import React from 'react';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { MySelect, MyDatePickerNew, MyTimePicker, MyCheckBox } from '../../stores/elements';\r\n\r\nconst queryString = require('query-string');\r\n\r\nfunction formatDate(date) {\r\n  var d = new Date(date),\r\n      month = '' + (d.getMonth() + 1),\r\n      day = '' + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n  if (month.length < 2) \r\n      month = '0' + month;\r\n  if (day.length < 2) \r\n      day = '0' + day;\r\n\r\n  return [year, month, day].join('-');\r\n}\r\n\r\nexport class HotMap extends React.Component {\r\n  map = null;\r\n  heatmap = null;\r\n  myGeoObject = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      module: 'hot_map',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      cities: [],\r\n      city_id: '',\r\n      \r\n      date_start: formatDate(new Date()),\r\n      date_end: formatDate(new Date()),\r\n      time_start: '00:00',\r\n      time_end: '23:59',\r\n\r\n      statAllCount: '',\r\n      statTrueCount: '',\r\n\r\n      is_new: 0,\r\n\r\n      isDrawing: true,\r\n\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    \r\n    let data = await this.getData('get_all');\r\n    \r\n    this.setState({\r\n      cities: data.cities,\r\n      city_id: data.cities[0].id,\r\n      module_name: data.module_info.name\r\n    })\r\n    \r\n    document.title = data.module_info.name;\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        window.location.pathname = '/';\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n    });\r\n  }\r\n   \r\n  changeCity(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      city_id: data\r\n    })\r\n    \r\n    setTimeout( () => {\r\n      //this.updateData();\r\n    }, 50 )\r\n  }\r\n  \r\n  async updateData(){\r\n\r\n    if(this.state.statAllCount) {\r\n       this.setState({\r\n        statAllCount: '',\r\n        statTrueCount: '',\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      isDrawing: true\r\n    })\r\n\r\n    let data = {\r\n      city_id: this.state.city_id,\r\n      date_start: this.state.date_start,\r\n      date_end: this.state.date_end,\r\n      time_start: this.state.time_start,\r\n      time_end: this.state.time_end,\r\n      is_new: this.state.is_new,\r\n    };\r\n    \r\n    let res = await this.getData('get_orders', data);\r\n    \r\n    console.log( res )\r\n\r\n    this.getOrders(res.points, res.all_points)\r\n  }\r\n  \r\n  getOrders(home, all_points){\r\n    //let objectManager = new ymaps.ObjectManager();\r\n    \r\n    var new_data = [];\r\n\t\t\t\t\r\n    all_points.map(function(item){\r\n      new_data.push([\r\n        parseFloat(item[0]),\r\n        parseFloat(item[1])\r\n      ])\r\n    })\r\n\r\n    \r\n    if( !this.map ){\r\n      ymaps.ready(() => {\r\n        this.map = new ymaps.Map('map', {\r\n          center: [home[0].home.latitude, home[0].home.longitude],\r\n          zoom: 11\r\n        }, {\r\n          searchControlProvider: 'yandex#search'\r\n        })\r\n        \r\n        var gradients = [\r\n          {\r\n            0.1: 'rgba(128, 255, 0, 0.7)',\r\n            0.2: 'rgba(255, 255, 0, 0.8)',\r\n            0.7: 'rgba(234, 72, 58, 0.9)',\r\n            1.0: 'rgba(162, 36, 25, 1)'\r\n          }, {\r\n            0.1: 'rgba(162, 36, 25, 0.7)',\r\n            0.2: 'rgba(234, 72, 58, 0.8)',\r\n            0.7: 'rgba(255, 255, 0, 0.9)',\r\n            1.0: 'rgba(128, 255, 0, 1)'\r\n          }\r\n        ],\r\n        radiuses = [5, 10, 20, 30],\r\n        opacities = [0.4, 0.6, 0.8, 1];\r\n\r\n       \r\n        ymaps.modules.require(['Heatmap'], (Heatmap) => {\r\n          this.heatmap = new Heatmap(new_data, {\r\n              gradient: gradients[0],\r\n              radius: radiuses[1],\r\n              opacity: opacities[2]\r\n          });\r\n          this.heatmap.setMap(this.map);\r\n        });\r\n\r\n        //return ;\r\n        \r\n\r\n        home.map( (item, key) => {\r\n          //дом\r\n          let myGeoObject1 = new ymaps.GeoObject({\r\n            geometry: {\r\n              type: \"Point\",\r\n              coordinates: [item.home.latitude, item.home.longitude]\r\n            },\r\n          }, {\r\n            preset: 'islands#blackDotIcon', \r\n            iconColor: 'black'\r\n          })\r\n\r\n          this.map.geoObjects.add(myGeoObject1);\r\n\r\n          let points_zone = [];\r\n\r\n          item.zone.map( (zon, k) => {\r\n            points_zone.push( JSON.parse(zon['zone']) );\r\n          } )\r\n          \r\n          let myGeoObject2 = [];\r\n\r\n          for(var poly = 0; poly < points_zone.length; poly++){\r\n\t\t\t\t\t\tmyGeoObject2[poly] = new ymaps.Polygon([points_zone[poly]], {\r\n\t\t\t\t\t\t\thintContent: \"\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tfillColor: 'rgba(187, 0, 37, 0)',\r\n\t\t\t\t\t\t\tstrokeColor: 'rgb(187, 0, 37)',\r\n\t\t\t\t\t\t\tstrokeWidth: 5\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tthis.map.geoObjects.add(myGeoObject2[poly]);\r\n\r\n\t\t\t\t\t}\r\n\r\n          this.map.geoObjects.events.add('click', this.changeColorPolygon.bind(this));\r\n          \r\n        })\r\n        \r\n      });\r\n    }else{\r\n      \r\n      this.map.geoObjects.removeAll()\r\n      this.heatmap.destroy();\r\n\r\n      this.map.setCenter([home[0].home.latitude, home[0].home.longitude]);\r\n\r\n      var gradients = [\r\n        {\r\n          0.1: 'rgba(128, 255, 0, 0.7)',\r\n          0.2: 'rgba(255, 255, 0, 0.8)',\r\n          0.7: 'rgba(234, 72, 58, 0.9)',\r\n          1.0: 'rgba(162, 36, 25, 1)'\r\n        }, {\r\n          0.1: 'rgba(162, 36, 25, 0.7)',\r\n          0.2: 'rgba(234, 72, 58, 0.8)',\r\n          0.7: 'rgba(255, 255, 0, 0.9)',\r\n          1.0: 'rgba(128, 255, 0, 1)'\r\n        }\r\n      ],\r\n      radiuses = [5, 10, 20, 30],\r\n      opacities = [0.4, 0.6, 0.8, 1];\r\n\r\n     \r\n      ymaps.modules.require(['Heatmap'], (Heatmap) => {\r\n        var heatmap = new Heatmap(new_data, {\r\n          gradient: gradients[0],\r\n          radius: radiuses[1],\r\n          opacity: opacities[2]\r\n        });\r\n        heatmap.setMap(this.map);\r\n      });\r\n      \r\n\r\n      home.map( (item, key) => {\r\n        //дом\r\n        let myGeoObject1 = new ymaps.GeoObject({\r\n          geometry: {\r\n            type: \"Point\",\r\n            coordinates: [item.home.latitude, item.home.longitude]\r\n          },\r\n        }, {\r\n          preset: 'islands#blackDotIcon', \r\n          iconColor: 'black'\r\n        })\r\n\r\n        this.map.geoObjects.add(myGeoObject1);\r\n\r\n        let points_zone = [];\r\n\r\n        item.zone.map( (zon, k) => {\r\n          points_zone.push( JSON.parse(zon['zone']) );\r\n        } )\r\n\r\n        let myGeoObject2 = [];\r\n\r\n        for(var poly = 0; poly < points_zone.length; poly++){\r\n          myGeoObject2[poly] = new ymaps.Polygon([points_zone[poly]], {\r\n            hintContent: \"\"\r\n          }, {\r\n            fillColor: 'rgba(187, 0, 37, 0)',\r\n            strokeColor: 'rgb(187, 0, 37)',\r\n            strokeWidth: 5\r\n          });\r\n          this.map.geoObjects.add(myGeoObject2[poly]);\r\n        }\r\n\r\n        this.map.geoObjects.events.add('click', this.changeColorPolygon.bind(this));\r\n\r\n      } )\r\n    }\r\n  }\r\n\r\n  async getCount(){\r\n    var new_this_zone = [];\r\n\t\t\r\n    this.map.geoObjects.each(function (geoObject) {\r\n\t\t\tnew_this_zone = new_this_zone.concat( geoObject.geometry.getCoordinates() );\r\n\t\t});\r\n\r\n    let data = {\r\n      city_id: this.state.city_id,\r\n      date_start: this.state.date_start,\r\n      date_end: this.state.date_end,\r\n      time_start: this.state.time_start,\r\n      time_end: this.state.time_end,\r\n      is_new: this.state.is_new,\r\n      \r\n      zone: new_this_zone[ new_this_zone.length - 1 ]\r\n    };\r\n\r\n    let res = await this.getData('getCount', data);\r\n\r\n    this.setState({\r\n      statAllCount: res.all_count,\r\n      statTrueCount: res.true + ' ( ' + res.true_percent + '% ) ',\r\n    })\r\n\r\n    console.log( res )\r\n  }\r\n\r\n  changeDateRange(data, event){\r\n    this.setState({\r\n      [data]: formatDate(event)\r\n    })\r\n  }\r\n\r\n  changeData(type, event){\r\n\r\n    let data = '';\r\n\r\n    if( type == 'is_new' ){\r\n      data = event.target.checked == true ? 1 : 0;\r\n    }else{\r\n      data = event.target.value;\r\n    }\r\n\r\n    this.setState({\r\n      [ type ]: data\r\n    })\r\n  }\r\n\r\n  startDrawing() {\r\n\r\n  this.setState({ \r\n    isDrawing: !this.state.isDrawing\r\n  })\r\n\r\n  ymaps.geoQuery(this.map.geoObjects).setOptions('strokeColor', 'rgb(187, 0, 37)')\r\n\r\n  // Создаем многоугольник, используя класс GeoObject.\r\n  this.myGeoObject = new ymaps.GeoObject({\r\n    geometry: {\r\n      type: \"Polygon\",\r\n      coordinates: [  ],\r\n      fillRule: \"nonZero\"\r\n    }\t\t\t\t\r\n  }, {\r\n    // Описываем опции геообъекта.\r\n    // Цвет заливки.\r\n    fillColor: '#00FF00',\r\n    // Цвет обводки.\r\n    strokeColor: '#0000FF',\r\n    // Общая прозрачность (как для заливки, так и для обводки).\r\n    opacity: 0.5,\r\n    // Ширина обводки.\r\n    strokeWidth: 5,\r\n    // Стиль обводки.\r\n    strokeStyle: 'shortdash'\r\n  });\r\n\r\n  this.map.geoObjects.add(this.myGeoObject);\r\n\r\n  this.myGeoObject.editor.startDrawing();\r\n\r\n  }\r\n\r\n  stopDrawing() {\r\n\r\n    this.setState({ \r\n      isDrawing: !this.state.isDrawing\r\n    })\r\n  \r\n    this.myGeoObject.editor.stopDrawing();\r\n  \r\n  }\r\n\r\n  changeColorPolygon(event) {\r\n\r\n    event.get('target').options.set({strokeColor: 'rgb(255, 255, 0)'})\r\n\r\n    const result = ymaps.geoQuery(this.map.geoObjects).search('options.strokeColor = \"rgb(255, 255, 0)\"')\r\n\r\n    if(result._objects.length > 1) {\r\n      result.setOptions('strokeColor', 'rgb(187, 0, 37)')\r\n    }\r\n\r\n    if(result) {\r\n      this.map.geoObjects.add(result._objects[0]);\r\n    }\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop open={this.state.is_load} style={{ zIndex: 99 }}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={6}>\r\n            <MySelect data={this.state.cities} value={this.state.city_id} func={ this.changeCity.bind(this) } label='Город' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <MyCheckBox value={ this.state.is_new == 1 ? true : false } func={ this.changeData.bind(this, 'is_new') } label='Только новые клиенты' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <MyDatePickerNew label=\"Дата от\" value={ this.state.date_start } func={ this.changeDateRange.bind(this, 'date_start') } />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <MyTimePicker label=\"Время от\" value={this.state.time_start} func={ this.changeData.bind(this, 'time_start') } />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <MyDatePickerNew label=\"Дата до\" value={ this.state.date_end } func={ this.changeDateRange.bind(this, 'date_end') } />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <MyTimePicker label=\"Время до\" value={this.state.time_end} func={ this.changeData.bind(this, 'time_end') } />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <Button variant=\"contained\" onClick={this.getCount.bind(this)}>Подсчитать количество</Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <Button variant=\"contained\" \r\n            onClick={this.state.isDrawing ? this.startDrawing.bind(this) : this.stopDrawing.bind(this)}\r\n            >{this.state.isDrawing ? 'Включить область редактирования' : 'Выключить область редактирования'}</Button>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={6}>\r\n                <Typography>Заказов в зоне: {this.state.statTrueCount}</Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography>Всего заказов в городе: {this.state.statAllCount}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12}>\r\n            <div id=\"map\" name=\"map\" style={{ width: '100%', height: 700, paddingTop: 10 }} />\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1664793407655\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","HotMap","props","method","data","setState","is_load","fetch","headers","body","stringify","module","state","version","login","localStorage","getItem","JSON","then","res","json","st","type","setTimeout","window","location","pathname","err","console","log","module_name","cities","city_id","date_start","date_end","time_start","time_end","statAllCount","statTrueCount","is_new","isDrawing","this","getData","id","module_info","name","document","title","event","target","value","getOrders","points","all_points","home","new_data","map","item","push","parseFloat","geoObjects","removeAll","heatmap","destroy","setCenter","latitude","longitude","gradients","radiuses","opacities","ymaps","modules","Heatmap","gradient","radius","opacity","setMap","key","myGeoObject1","GeoObject","geometry","coordinates","preset","iconColor","add","points_zone","zone","zon","k","parse","myGeoObject2","poly","Polygon","hintContent","fillColor","strokeColor","strokeWidth","events","changeColorPolygon","bind","ready","Map","center","zoom","searchControlProvider","new_this_zone","each","geoObject","concat","getCoordinates","all_count","true_percent","checked","geoQuery","setOptions","myGeoObject","fillRule","strokeStyle","editor","startDrawing","stopDrawing","get","options","set","result","search","_objects","Backdrop","open","style","zIndex","CircularProgress","color","Grid","container","spacing","xs","sm","func","changeCity","label","changeData","Button","variant","onClick","updateData","changeDateRange","getCount","Typography","width","height","paddingTop","React","cssReload","hot","dispose","accept","undefined"],"sourceRoot":""}