{"version":3,"file":"546.8dcae9c903df0af8b67a.js","mappings":"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","sources":["webpack://package.json/./src/components/registration/registration.component.jsx","webpack://package.json/./src/components/registration/registration.style.scss"],"sourcesContent":["import React from 'react';\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass Reg_ extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            module: 'auth',\r\n            module_name: '',\r\n            is_load: false,\r\n\r\n            modalDialog: false,\r\n            dialogTitle: '',\r\n            dialogText: '',\r\n\r\n            activeStep: 0,\r\n            steps: ['Телефон', 'Подтверждение', 'Новый пароль'],\r\n\r\n            phone: '',\r\n            code: '',\r\n            pwd: ''\r\n        };\r\n    }\r\n\r\n    getData = (method, data = {}) => {\r\n\r\n        this.setState({\r\n            is_load: true\r\n        })\r\n\r\n        return fetch('https://jacochef.ru/api/index_new.php', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: queryString.stringify({\r\n                method: method,\r\n                module: this.state.module,\r\n                version: 2,\r\n                login: '+79879340391',\r\n                //login: localStorage.getItem('login'),\r\n                data: JSON.stringify(data)\r\n            })\r\n        }).then(res => res.json()).then(json => {\r\n\r\n            if (json.st === false && json.type == 'redir') {\r\n                window.location.pathname = '/';\r\n                return;\r\n            }\r\n\r\n            if (json.st === false && json.type == 'auth') {\r\n                window.location.pathname = '/auth';\r\n                return;\r\n            }\r\n\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    is_load: false\r\n                })\r\n            }, 300)\r\n\r\n            return json;\r\n        })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n    }\r\n\r\n    async updateData() {\r\n        let data = {\r\n            point_id: this.state.point,\r\n            showReady: this.state.showReady === true ? 1 : 0\r\n        };\r\n\r\n        let res = await this.getData('get_orders', data);\r\n\r\n        this.setState({\r\n            read: res.read,\r\n            onstol: res.onstol,\r\n            ordersQueue: res.prestol_new\r\n        })\r\n    }\r\n\r\n    async nextStep() {\r\n        if (this.state.activeStep == 0) {\r\n            let data = {\r\n                login: document.getElementById('phone').value\r\n            }\r\n\r\n            let res = await this.getData('check_phone', data);\r\n\r\n            if (res.st === false) {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        modalDialog: true,\r\n                        dialogTitle: 'Предупреждение',\r\n                        dialogText: res.text\r\n                    })\r\n                }, 500)\r\n            } else {\r\n                this.setState({\r\n                    activeStep: this.state.activeStep + 1,\r\n                    phone: data.login\r\n                })\r\n            }\r\n        } else if (this.state.activeStep == 1) {\r\n            let data = {\r\n                login: this.state.phone,\r\n                code: document.getElementById('code').value\r\n            }\r\n\r\n            let res = await this.getData('check_code', data);\r\n\r\n            if (res.st === false) {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        modalDialog: true,\r\n                        dialogTitle: 'Предупреждение',\r\n                        dialogText: res.text\r\n                    })\r\n                }, 500)\r\n            } else {\r\n                this.setState({\r\n                    activeStep: this.state.activeStep + 1,\r\n                    code: data.code\r\n                })\r\n            }\r\n        } else if (this.state.activeStep == 2) {\r\n            let data = {\r\n                login: this.state.phone,\r\n                code: this.state.code,\r\n                pwd: document.getElementById('password').value\r\n            }\r\n\r\n            let res = await this.getData('save_new_pwd', data);\r\n\r\n            if (res.st === false) {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        modalDialog: true,\r\n                        dialogTitle: 'Предупреждение',\r\n                        dialogText: res.text\r\n                    })\r\n                }, 500)\r\n            } else {\r\n                localStorage.setItem('token', res.token)\r\n\r\n                setTimeout(() => {\r\n                    window.location.pathname = '/'\r\n                }, 300)\r\n            }\r\n        }\r\n    }\r\n\r\n    enterNextStep(event) {\r\n        if (event.charCode == 13) {\r\n            this.nextStep();\r\n        }\r\n    }\r\n\r\n    // функция проверка телефона\r\n    checkPhone(e) {\r\n\r\n        let v = event.target.value;\r\n        let maxLen = 0;\r\n\r\n        v = v.replace(/[^\\d+]/ig, \"\");\r\n        maxLen = v.substring(0, 1) == '+' ? 12 : 11;\r\n        v = v.substring(0, maxLen);\r\n        document.getElementById('phone').value = v;\r\n\r\n        return;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Backdrop style={{ zIndex: 99 }} open={this.state.is_load}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n\r\n                <Dialog\r\n                    open={this.state.modalDialog}\r\n                    onClose={() => { this.setState({ modalDialog: false }) }}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{this.state.dialogTitle}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">{this.state.dialogText}</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => { this.setState({ modalDialog: false }) }} color=\"primary\" autoFocus>Хорошо</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Grid container spacing={3} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n                    <Grid item xs={12} sm={6} md={6} lg={4} xl={3}>\r\n                        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', }}>\r\n                            <Avatar style={{ borderRadius: 0, width: '100%', height: 150, margin: 0, backgroundColor: '#fff', marginBottom: 20 }}>\r\n                                <img alt=\"Жако доставка роллов и пиццы\" src=\"../assets/img_other/Favikon.png\" style={{ height: '100%' }} />\r\n                            </Avatar>\r\n\r\n                            <Stepper activeStep={this.state.activeStep} alternativeLabel style={{ width: '100%' }}>\r\n                                {this.state.steps.map((label) => (\r\n                                    <Step key={label}>\r\n                                        <StepLabel>{label}</StepLabel>\r\n                                    </Step>\r\n                                ))}\r\n                            </Stepper>\r\n                            <div style={{ width: '100%' }}>\r\n\r\n                                {this.state.activeStep == 0 ?\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        size=\"small\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"phone\"\r\n                                        label=\"Номер телефона\"\r\n                                        name=\"phone\"\r\n                                        autoComplete=\"phone\"\r\n                                        autoFocus\r\n                                        onKeyPress={this.enterNextStep.bind(this)}\r\n                                        onChange={this.checkPhone.bind(this)}\r\n                                    />\r\n                                    :\r\n                                    null\r\n                                }\r\n\r\n                                {this.state.activeStep == 1 ?\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        size=\"small\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"code\"\r\n                                        label=\"Код из смс\"\r\n                                        name=\"code\"\r\n                                        autoComplete=\"code\"\r\n                                        autoFocus\r\n                                        onKeyPress={this.enterNextStep.bind(this)}\r\n                                    />\r\n                                    :\r\n                                    null\r\n                                }\r\n\r\n                                {this.state.activeStep == 2 ?\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        size=\"small\"\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"password\"\r\n                                        label=\"Пароль\"\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                        onKeyPress={this.enterNextStep.bind(this)}\r\n                                    />\r\n                                    :\r\n                                    null\r\n                                }\r\n\r\n                                <Button\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    style={{ marginTop: 10, marginBottom: 10 }}\r\n                                    onClick={this.nextStep.bind(this)}\r\n                                >\r\n                                    Дальше\r\n                                </Button>\r\n                                <Grid container>\r\n                                    <Grid item xs>\r\n                                        <a href=\"/auth\" style={{ color: '#c03' }}>Вернуться к авторизации</a>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport function Reg() {\r\n    return (\r\n        <Reg_ />\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1662025400205\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","Reg_","props","method","data","setState","is_load","fetch","headers","body","stringify","module","state","version","login","JSON","then","res","json","st","type","setTimeout","window","location","pathname","err","console","log","module_name","modalDialog","dialogTitle","dialogText","activeStep","steps","phone","code","pwd","point_id","this","point","showReady","getData","read","onstol","ordersQueue","prestol_new","document","getElementById","value","text","localStorage","setItem","token","event","charCode","nextStep","e","maxLen","v","target","replace","substring","Backdrop","style","zIndex","open","CircularProgress","color","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","autoFocus","Grid","container","spacing","direction","justifyContent","alignItems","item","xs","sm","md","lg","xl","display","flexDirection","Avatar","borderRadius","width","height","margin","backgroundColor","marginBottom","alt","src","Stepper","alternativeLabel","map","label","Step","key","StepLabel","TextField","variant","size","required","fullWidth","name","autoComplete","onKeyPress","enterNextStep","bind","onChange","checkPhone","marginTop","href","React","Reg","cssReload","hot","dispose","accept","undefined"],"sourceRoot":""}