{"version":3,"file":"66.5812b90d323bc296cb61.js","mappings":"oyBAiBA,IAAMA,EAAcC,EAAQ,MAEtBC,EAAAA,SAAAA,I,uHACJ,WAEE,IAAMC,EAAOC,KAAKC,MAAMF,KAClBG,EAASF,KAAKC,MAAMC,OAEtBC,EAAQH,KAAKC,MAAMG,mBAAmBC,MAAM,SAACC,GAAD,OAAQC,SAASD,EAAGE,UAAYD,SAASR,EAAKU,KAAOF,SAASD,EAAGI,YAAcH,SAASL,EAAOO,GAA/F,IAsBhD,OAjBEN,EAHGA,EAGKA,EAAMA,MAFN,GAoBR,gCACE,gBAACQ,EAAA,EAAD,CAAWC,UAAU,UACR,IAATT,EAAc,KACd,gBAAC,KAAD,CACEU,KAAMb,KAAKC,MAAMa,OACjBC,MAAO,GACPC,KAAO,WAAQ,EACfC,MAAM,MAIZ,gBAACN,EAAA,EAAD,CAAWC,UAAU,WAClBT,GAIR,K,EA7CGL,CAAmBoB,EAAAA,WAgDnBC,EAAAA,SAAAA,I,2BACJ,WAAYlB,GAAO,4BACjB,cAAMA,IADW,6BA+CT,SAACmB,GAAsB,IAAdP,EAAc,uDAAP,CAAC,EAKzB,OAJA,EAAKQ,SAAS,CACZC,SAAS,IAGJC,MAAM,wCAAyC,CACpDH,OAAQ,OACRI,QAAS,CACP,eAAgB,qCAElBC,KAAM7B,EAAY8B,UAAU,CAC1BN,OAAQA,EACRO,OAAQ,EAAKC,MAAMD,OACnBE,QAAS,EACTC,MAAOC,aAAaC,QAAQ,SAC5BnB,KAAMoB,KAAKP,UAAUb,OAGtBqB,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACE,GACL,IAAgB,IAAZA,EAAKC,IAA6B,SAAbD,EAAKE,KAA9B,CAKA,IAAgB,IAAZF,EAAKC,IAA6B,QAAbD,EAAKE,KAW9B,OANAC,YAAW,WACT,EAAKlB,SAAS,CACZC,SAAS,GAEZ,GAAE,KAEIc,EAVLI,OAAOC,SAASC,SAAW,OAH5B,MAFCF,OAAOC,SAASC,SAAW,GAgB9B,IAhCI,OAiCE,SAACC,GACNC,QAAQC,IAAIF,GACZ,EAAKtB,SAAS,CACZC,SAAS,GAEZ,GACJ,IAxFC,EAAKM,MAAQ,CACXD,OAAQ,SACRmB,YAAa,GACbxB,SAAS,EAETR,OAAQ,GACRiC,KAAM,GACNC,UAAW,GAEXC,MAAO,CACL,CAAExC,GAAI,IAAKyC,KAAM,OACjB,CAAEzC,GAAI,IAAKyC,KAAM,OACjB,CAAEzC,GAAI,IAAKyC,KAAM,QAEnBC,KAAM,GAENC,QAAS,GACTlD,OAAQ,GAERE,mBAAoB,GAEpBiD,KAAM,GAENC,QAAS,GACTC,OAAQ,IA3BO,CA6BlB,C,qEAED,oGACmBvD,KAAKwD,QAAQ,WADhC,OACM3C,EADN,OAGE+B,QAAQC,IAAIhC,GAEZb,KAAKqB,SAAS,CACZyB,YAAajC,EAAK4C,YAAYP,KAC9BpC,OAAQD,EAAKC,OACbiC,KAAMlC,EAAKC,OAAO,GAAGL,GACrB2C,QAASvC,EAAKuC,QACdE,QAASzC,EAAKwC,OAGhBK,SAASC,MAAQ9C,EAAK4C,YAAYP,KAbpC,gD,qEA8DA,SAAWU,GACT5D,KAAKqB,SAAS,CACZ0B,KAAMa,EAAMC,OAAO9C,OAEtB,G,0BAED,SAAa6C,EAAO7C,GAClBf,KAAKqB,SAAS,CACZnB,OAAQa,EACRwC,OAAQ,IAEX,G,uBAED,SAAUK,EAAO7C,GACff,KAAKqB,SAAS,CACZkC,OAAQxC,EACRb,OAAQ,IAEX,G,+CAED,6FACQW,EAAO,CACXiD,QAAS9D,KAAK4B,MAAMmB,KACpBK,QAASpD,KAAK4B,MAAM1B,OACpB6D,IAAK/D,KAAK4B,MAAM2B,QAJpB,SAOkBvD,KAAKwD,QAAQ,WAAY3C,GAP3C,OAOMsB,EAPN,OASES,QAAQC,IAAIV,GAEZnC,KAAKqB,SAAS,CACZgC,KAAMlB,EAAI6B,MACV5D,mBAAoB+B,EAAI/B,mBACxBgD,QAASjB,EAAIiB,QACbJ,UAAWb,EAAIrB,SAfnB,gD,uEAoBA,SAAa8C,GACX5D,KAAKqB,SAAS,CACZ8B,KAAMS,EAAMC,OAAO9C,OAGtB,G,oBAED,WAAS,WACP,OACE,gCACE,gBAACkD,EAAA,EAAD,CAAUC,KAAMlE,KAAK4B,MAAMN,SACzB,gBAAC6C,EAAA,EAAD,CAAkBC,MAAM,aAG1B,gBAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,GAAI,GAC9B,gBAACH,EAAA,GAAD,CAAMtE,MAAI,EAAC0E,GAAI,GAAIC,GAAI,IACrB,0BAAK1E,KAAK4B,MAAMkB,eAIpB,gBAACuB,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGI,eAAe,SAASH,GAAI,GACtD,gBAACH,EAAA,GAAD,CAAMtE,MAAI,EAAC0E,GAAI,GAAIC,GAAI,GACrB,gBAAC,KAAD,CACE7D,KAAMb,KAAK4B,MAAMd,OACjBC,MAAOf,KAAK4B,MAAMmB,KAClB/B,KAAMhB,KAAK4E,WAAWC,KAAK7E,MAC3BiB,MAAM,WAIV,gBAACoD,EAAA,GAAD,CAAMtE,MAAI,EAAC0E,GAAI,GAAIC,GAAI,GACrB,gBAAC,KAAD,CACEzD,MAAM,YACN6D,UAAU,EACVjE,KAAMb,KAAK4B,MAAMwB,QACjBrC,MAAOf,KAAK4B,MAAM1B,OAClBc,KAAMhB,KAAK+E,aAAaF,KAAK7E,SAGjC,gBAACqE,EAAA,GAAD,CAAMtE,MAAI,EAAC0E,GAAI,GAAIC,GAAI,GACrB,gBAAC,KAAD,CACEzD,MAAM,YACN6D,UAAU,EACVjE,KAAMb,KAAK4B,MAAM0B,QACjBvC,MAAOf,KAAK4B,MAAM2B,OAClBvC,KAAMhB,KAAKgF,UAAUH,KAAK7E,SAI9B,gBAACqE,EAAA,GAAD,CAAMtE,MAAI,EAAC0E,GAAI,GAAIC,GAAI,GACrB,gBAACO,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAO,CAAEC,WAAY,UACrBC,QAASrF,KAAKsF,aAAaT,KAAK7E,OAHlC,qBAUFA,KAAK4B,MAAMyB,KAAKkC,OAChB,gBAAClB,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,gBAACF,EAAA,GAAD,CAAMtE,MAAI,EAAC0E,GAAI,GAAIC,GAAI,IACrB,gBAACc,EAAA,EAAD,CAAgBC,GAAI,CAAEC,UAAW,CAAEjB,GAAI,OAAQC,GAAI,OACjD,gBAACiB,EAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,gBAC7B,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,KACE,gBAACnF,EAAA,EAAD,CAAW8E,GAAI,CAAEM,gBAAiB,YAAlC,aAGA,gBAACpF,EAAA,EAAD,CAAW8E,GAAI,CAAEM,gBAAiB,YAAlC,aAGA,gBAACpF,EAAA,EAAD,CAAW8E,GAAI,CAAEM,gBAAiB,YAAlC,OAGA,gBAACpF,EAAA,EAAD,CAAW8E,GAAI,CAAEM,gBAAiB,YAAlC,YAGA,gBAACpF,EAAA,EAAD,CAAW8E,GAAI,CAAEM,gBAAiB,YAAlC,UAGC/F,KAAK4B,MAAMwB,QAAQ4C,KAAI,SAAC9F,EAAQ+F,GAAT,OAEtB,gBAACtF,EAAA,EAAD,CACEsF,IAAKA,EACLd,MAAO,CACLC,WAAY,SACZW,gBAAiB,UACjBG,SAAU,KAEZC,QAAS,GAERjG,EAAOgD,KAXY,MAkB5B,gBAACkD,EAAA,EAAD,KACGpG,KAAK4B,MAAMyB,KAAK2C,KAAI,SAACjG,EAAMkG,GAAP,OACnB,gBAAC,WAAD,CAAgBA,IAAKA,GACnB,gBAACH,EAAA,EAAD,KACE,gBAACnF,EAAA,EAAD,CACEwF,QAAO,UAAK,EAAgC,EAA5B,EAAKvE,MAAMwB,QAAQmC,QACnCE,GAAI,CACFM,gBAAiB,YAGlBhG,EAAKmD,OAITnD,EAAKsD,KAAK2C,KAAI,SAACK,EAAUC,GAAX,OACb,gBAAC,WAAD,CAAgBL,IAAKK,GACnB,gBAACR,EAAA,EAAD,CACEL,GAAI,CAAE,OAAQ,CAAEM,gBAAiB,aAEjC,gBAACpF,EAAA,EAAD,KAAY0F,EAASnD,MACrB,gBAACvC,EAAA,EAAD,MACa,IAAZ2F,EACC,gBAAC3F,EAAA,EAAD,CAAWwF,QAAS,GAApB,wBAIA,gBAAC,WAAD,CAAgBF,IAAKK,GACnB,gBAAC3F,EAAA,EAAD,MACA,gBAACA,EAAA,EAAD,MACA,gBAACA,EAAA,EAAD,OAGH,EAAKiB,MAAMwB,QAAQ4C,KAAI,SAAC9F,EAAQ+F,GAAT,OACtB,gBAAC,WAAD,CAAgBA,IAAKA,GACnB,gBAACtF,EAAA,EAAD,CAAWwF,QAAS,IAFA,KAOzBE,EAASrC,MAAMgC,KAAI,SAACjG,EAAMwG,GAAP,OAClB,gBAACT,EAAA,EAAD,CAAUG,IAAKM,EAAGC,OAAK,GACrB,gBAAC7F,EAAA,EAAD,CAAWC,UAAU,YAClBb,EAAKmD,MAER,gBAACvC,EAAA,EAAD,MACA,gBAACA,EAAA,EAAD,MACA,gBAACA,EAAA,EAAD,MACA,gBAACA,EAAA,EAAD,MACC,EAAKiB,MAAMwB,QAAQ4C,KAAI,SAAC9F,EAAQ+F,GAAT,OACtB,gBAACnG,EAAD,CAAYmG,IAAKA,EAAK7F,mBAAoB,EAAKwB,MAAMxB,mBAAoBU,OAAQ,EAAKc,MAAMoB,UAAWjD,KAAMA,EAAMG,OAAQA,GADrG,IATR,IAzBT,IAbE,SAzCN,KA0GhC,K,EA5SGiB,CAAgBD,EAAAA,WA+Sf,SAASuF,IACd,OAAO,gBAACtF,EAAD,KACR,C,iBChXK,IAAIuF,EAAY,EAAQ,KAAR,CAA0F/E,EAAOlB,GAAI,CAAC,QAAS,IAC/HkB,EAAOgF,IAAIC,QAAQF,GACnB/E,EAAOgF,IAAIE,YAAOC,EAAWJ,E","sources":["webpack://package.json/./src/components/tender/tender.component.jsx","webpack://package.json/./src/components/tender/tender.style.scss?9070"],"sourcesContent":["import React from 'react';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableContainer from '@mui/material/TableContainer';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MyAutocomplite, MySelect } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nclass TenderCell extends React.Component {\n  render(){\n\n    const item = this.props.item;\n    const vendor = this.props.vendor;\n\n    let price = this.props.vendor_items_price.find( (it) => parseInt(it.item_id) == parseInt(item.id) && parseInt(it.vendor_id) == parseInt(vendor.id) );\n\n    if( !price ){\n      price = '';\n    }else{\n      price = price.price;\n    }\n\n      /*<MySelect\n        data={this.state.towns}\n        value={this.state.town}\n        func={this.changeSelect.bind(this)}\n        label=\"\"\n      />\n      \n        {`${Number(\n            vendor.price.find(\n              (it) => it.item_id === item.id\n            ).price\n          ).toFixed(2)} P`}\n      */\n\n    return (\n      <>\n        <TableCell className='tdcity'>\n          { price == '' ? null :\n            <MySelect\n              data={this.props.cities}\n              value={''}\n              func={ () => {} }\n              label=\"\"\n            />\n          }\n        </TableCell>\n        <TableCell className='tdprice'>\n          {price}\n        </TableCell>\n      </>\n    )\n  }\n}\n\nclass Tender_ extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      module: 'tender',\n      module_name: '',\n      is_load: false,\n\n      cities: [],\n      city: '',\n      newCities: [],\n\n      towns: [\n        { id: '1', name: 'Все' },\n        { id: '2', name: 'ТЛТ' },\n        { id: '3', name: 'СМР' },\n      ],\n      town: '',\n\n      vendors: [],\n      vendor: [],\n\n      vendor_items_price: [],\n\n      cats: [],\n\n      newCats: [],\n      newCat: ''\n    };\n  }\n\n  async componentDidMount() {\n    let data = await this.getData('get_all');\n\n    console.log(data);\n\n    this.setState({\n      module_name: data.module_info.name,\n      cities: data.cities,\n      city: data.cities[0].id,\n      vendors: data.vendors,\n      newCats: data.cats\n    });\n\n    document.title = data.module_info.name;\n  }\n\n  getData = (method, data = {}) => {\n    this.setState({\n      is_load: true,\n    });\n\n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: queryString.stringify({\n        method: method,\n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify(data),\n      }),\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        if (json.st === false && json.type == 'redir') {\n          window.location.pathname = '/';\n          return;\n        }\n\n        if (json.st === false && json.type == 'auth') {\n          window.location.pathname = '/auth';\n          return;\n        }\n\n        setTimeout(() => {\n          this.setState({\n            is_load: false,\n          });\n        }, 300);\n\n        return json;\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          is_load: false,\n        });\n      });\n  };\n\n  changeCity(event) {\n    this.setState({\n      city: event.target.value,\n    });\n  }\n\n  changeVendor(event, value) {\n    this.setState({\n      vendor: value,\n      newCat: ''\n    });\n  }\n\n  changeCat(event, value){\n    this.setState({\n      newCat: value,\n      vendor: [],\n    });\n  }\n\n  async getDataTable() {\n    const data = {\n      city_id: this.state.city,\n      vendors: this.state.vendor,\n      cat: this.state.newCat\n    };\n\n    let res = await this.getData('get_data', data);\n\n    console.log(res);\n\n    this.setState({\n      cats: res.items,\n      vendor_items_price: res.vendor_items_price,\n      vendors: res.vendors,\n      newCities: res.cities,\n      \n    });\n  }\n\n  changeSelect(event) {\n    this.setState({\n      town: event.target.value,\n    });\n\n  }\n\n  render() {\n    return (\n      <>\n        <Backdrop open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n\n        <Grid container spacing={3} mb={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} justifyContent=\"center\" mb={5}>\n          <Grid item xs={12} sm={3}>\n            <MySelect\n              data={this.state.cities}\n              value={this.state.city}\n              func={this.changeCity.bind(this)}\n              label=\"Город\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <MyAutocomplite\n              label=\"Поставщик\"\n              multiple={true}\n              data={this.state.vendors}\n              value={this.state.vendor}\n              func={this.changeVendor.bind(this)}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <MyAutocomplite\n              label=\"Категория\"\n              multiple={false}\n              data={this.state.newCats}\n              value={this.state.newCat}\n              func={this.changeCat.bind(this)}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <Button\n              variant=\"contained\"\n              style={{ whiteSpace: 'nowrap' }}\n              onClick={this.getDataTable.bind(this)}\n            >\n              Обновить данные\n            </Button>\n          </Grid>\n        </Grid>\n\n        {!this.state.cats.length ? null : (\n          <Grid container spacing={3} >\n            <Grid item xs={12} sm={12}>\n              <TableContainer sx={{ maxHeight: { xs: 'none', sm: 700 } }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell sx={{ backgroundColor: '#d87093' }}>\n                        Категория\n                      </TableCell>\n                      <TableCell sx={{ backgroundColor: '#d87093' }}>\n                        Параметры\n                      </TableCell>\n                      <TableCell sx={{ backgroundColor: '#d87093' }}>\n                        Все\n                      </TableCell>\n                      <TableCell sx={{ backgroundColor: '#d87093' }}>\n                        Тольятти\n                      </TableCell>\n                      <TableCell sx={{ backgroundColor: '#d87093' }}>\n                        Самара\n                      </TableCell>\n                      {this.state.vendors.map((vendor, key) => (\n                        \n                        <TableCell\n                          key={key}\n                          style={{\n                            whiteSpace: 'nowrap',\n                            backgroundColor: '#d87093',\n                            minWidth: 300\n                          }}\n                          colSpan={2}\n                        >\n                          {vendor.name}\n                        </TableCell>\n                        \n                      ))}\n                    </TableRow>\n                  </TableHead>\n\n                  <TableBody>\n                    {this.state.cats.map((item, key) => (\n                      <React.Fragment key={key}>\n                        <TableRow >\n                          <TableCell\n                            colSpan={`${5 + this.state.vendors.length * 2}`}\n                            sx={{\n                              backgroundColor: '#98FB98',\n                            }}\n                          >\n                            {item.name}\n                          </TableCell>\n                        </TableRow>\n\n                        {item.cats.map((category, key_cat) => (\n                          <React.Fragment key={key_cat}>\n                            <TableRow\n                              sx={{ '& td': { backgroundColor: '#40E0D0' } }}\n                            >\n                              <TableCell>{category.name}</TableCell>\n                              <TableCell></TableCell>\n                              {key_cat === 0 ? (\n                                <TableCell colSpan={3}>\n                                  Зафиксированные цены\n                                </TableCell>\n                              ) : (\n                                <React.Fragment key={key_cat}>\n                                  <TableCell></TableCell>\n                                  <TableCell></TableCell>\n                                  <TableCell></TableCell>\n                                </React.Fragment>\n                              )}\n                              {this.state.vendors.map((vendor, key) => (\n                                <React.Fragment key={key}>\n                                  <TableCell colSpan={2}></TableCell>\n                                </React.Fragment>\n                              ))}\n                            </TableRow>\n\n                            {category.items.map((item, k) => (\n                              <TableRow key={k} hover>\n                                <TableCell className=\"td_color\">\n                                  {item.name}\n                                </TableCell>\n                                <TableCell></TableCell>\n                                <TableCell></TableCell>\n                                <TableCell></TableCell>\n                                <TableCell></TableCell>\n                                {this.state.vendors.map((vendor, key) => (\n                                  <TenderCell key={key} vendor_items_price={this.state.vendor_items_price} cities={this.state.newCities} item={item} vendor={vendor} />\n\n                                ))}\n                              </TableRow>\n                            ))}\n                          </React.Fragment>\n                        ))}\n                      </React.Fragment>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Grid>\n          </Grid>\n        )}\n      </>\n    );\n  }\n}\n\nexport function Tender() {\n  return <Tender_ />;\n}\n","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1666810727967\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","TenderCell","item","this","props","vendor","price","vendor_items_price","find","it","parseInt","item_id","id","vendor_id","TableCell","className","data","cities","value","func","label","React","Tender_","method","setState","is_load","fetch","headers","body","stringify","module","state","version","login","localStorage","getItem","JSON","then","res","json","st","type","setTimeout","window","location","pathname","err","console","log","module_name","city","newCities","towns","name","town","vendors","cats","newCats","newCat","getData","module_info","document","title","event","target","city_id","cat","items","Backdrop","open","CircularProgress","color","Grid","container","spacing","mb","xs","sm","justifyContent","changeCity","bind","multiple","changeVendor","changeCat","Button","variant","style","whiteSpace","onClick","getDataTable","length","TableContainer","sx","maxHeight","Table","stickyHeader","TableHead","TableRow","backgroundColor","map","key","minWidth","colSpan","TableBody","category","key_cat","k","hover","Tender","cssReload","hot","dispose","accept","undefined"],"sourceRoot":""}