{"version":3,"file":"307.36b90e1631c0bb116d33.js","mappings":"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","sources":["webpack://package.json/./src/components/ras_by_bill/ras_by_bill.component.jsx","webpack://package.json/./src/components/ras_by_bill/ras_by_bill.style.scss"],"sourcesContent":["import React from 'react';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { MySelect, MyAutocomplite, MyDatePickerNew } from '../../stores/elements';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst queryString = require('query-string');\r\n\r\nfunction formatDate(date) {\r\n  var d = new Date(date),\r\n      month = '' + (d.getMonth() + 1),\r\n      day = '' + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n  if (month.length < 2) \r\n      month = '0' + month;\r\n  if (day.length < 2) \r\n      day = '0' + day;\r\n\r\n  return [year, month, day].join('-');\r\n}\r\n\r\nclass RasByBill_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      module: 'ras_by_bill',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      modalDialog: false,\r\n      \r\n      points: [],\r\n      point: [],\r\n      date_start: formatDate(new Date()),\r\n      date_end: formatDate(new Date()),\r\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\r\n      items: [],\r\n      cats: [],\r\n      items_cat: [],\r\n      item_cat: 0,\r\n      \r\n      myItems: [],\r\n      \r\n      calendar: []\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    let data = await this.getData('get_all');\r\n    \r\n    this.setState({\r\n      module_name: data.module_info.name,\r\n      points: data.points,\r\n      \r\n      items: data.items,\r\n      cats: data.cats,\r\n      items_cat: data.items_cat\r\n    })\r\n    \r\n    document.title = data.module_info.name;\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        window.location.pathname = '/';\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n      this.setState({\r\n        is_load: false\r\n      })\r\n    });\r\n  }\r\n   \r\n  changePoint(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      point: data\r\n    })\r\n  }\r\n  \r\n  changeItems(event, data){\r\n    this.setState({\r\n      myItems: data\r\n    })\r\n  }\r\n  \r\n  async getItems(){\r\n    let data = {\r\n      points: this.state.point,\r\n      items: this.state.myItems,\r\n      item_cat: this.state.item_cat,\r\n      start_date: this.state.date_start,\r\n      end_date: this.state.date_end,\r\n    };\r\n    \r\n    let res = await this.getData('get_this_rev', data);\r\n    \r\n    let summ = 0;\r\n    \r\n    res.items_ras.map( (item, key) => {\r\n      summ += parseFloat(item.sum);\r\n    } )\r\n    \r\n    this.setState({\r\n      resItems: {\r\n        items_ras: res.items_ras,\r\n        pf_ras: res.pf_ras,\r\n        rec_ras: res.rec_ras,\r\n        full_sum: summ.toFixed(2)\r\n      },\r\n      catItems: null\r\n    })\r\n  }\r\n  \r\n  async getCats(){\r\n    let data = {\r\n      points: this.state.point,\r\n      items: this.state.myItems,\r\n      start_date: this.state.date_start,\r\n      end_date: this.state.date_end,\r\n    };\r\n    \r\n    let res = await this.getData('get_this_rev_cat', data);\r\n    \r\n    \r\n    let summ = 0;\r\n    \r\n    res.rec_ras.map( (item, key) => {\r\n      summ += parseFloat(item.this_price);\r\n    } )\r\n    \r\n    this.setState({\r\n      catItems: {\r\n        count_pos: res.count_pos,\r\n        items_ras: res.items_ras,\r\n        rec_ras: res.rec_ras,\r\n        full_sum: summ.toFixed(2)\r\n      },\r\n      resItems: null\r\n    })\r\n  }\r\n  \r\n  changeDateRange(data, event){\r\n    this.setState({\r\n      [data]: formatDate(event)\r\n    })\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop style={{ zIndex: 99 }} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Dialog\r\n          open={this.state.modalDialog}\r\n          onClose={ () => { this.setState({ modalDialog: false }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">  </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              \r\n              \r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={ () => {} } color=\"primary\">Сохранить</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={3}>\r\n            <MySelect data={this.state.points} multiple={true} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={3}>\r\n            <MyDatePickerNew label=\"Дата от\" value={ this.state.date_start } func={ this.changeDateRange.bind(this, 'date_start') } />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <MyDatePickerNew label=\"Дата до\" value={ this.state.date_end } func={ this.changeDateRange.bind(this, 'date_end') } />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={3}>\r\n            <MySelect data={this.state.items_cat} multiple={false} value={this.state.item_cat} func={ (event) => {this.setState({ item_cat: event.target.value })} } label='Категория товара' />\r\n          </Grid>\r\n          \r\n\r\n          <Grid item xs={12} sm={12}>\r\n            <MyAutocomplite data={this.state.items} multiple={true} value={this.state.myItems} func={ this.changeItems.bind(this) } label='Заготовки' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Button variant=\"contained\" onClick={this.getItems.bind(this)}>Показать заготовки</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Button variant=\"contained\" onClick={this.getCats.bind(this)}>Показать категории</Button>\r\n          </Grid>\r\n        \r\n        \r\n          { this.state.resItems && this.state.resItems.items_ras ?\r\n              \r\n            <>\r\n              <Grid item xs={12}>\r\n                \r\n                <h1>Куплено по наклданым</h1>\r\n                <TableContainer component={Paper}>\r\n                  <Table aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Наименование товара</TableCell>\r\n                        <TableCell>Объем товра</TableCell>\r\n                        <TableCell>Объем заготовки</TableCell>\r\n                        <TableCell>Сумма</TableCell>\r\n                        <TableCell>Кол-во наклданых</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      \r\n                      { this.state.resItems.items_ras.map( (item, key) =>\r\n                        <TableRow key={key}>\r\n                          <TableCell> { item.name } </TableCell>\r\n                          <TableCell> { item.count_item + ' ' + item.ei_name } </TableCell>\r\n                          <TableCell> { item.count_pf + ' ' + item.ei_name_pf } </TableCell>\r\n                          <TableCell> { item.sum } </TableCell>\r\n                          <TableCell> { item.count_bill } </TableCell>\r\n                        </TableRow>\r\n                      ) }\r\n                      \r\n                      <TableRow>\r\n                        <TableCell> Всего: </TableCell>\r\n                        <TableCell> </TableCell>\r\n                        <TableCell> </TableCell>\r\n                        <TableCell> { this.state.resItems.full_sum } </TableCell>\r\n                        <TableCell> </TableCell>\r\n                      </TableRow>\r\n                      \r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12}>\r\n                \r\n                <h1>Расход заготовок (включая рецепты)</h1>\r\n                <TableContainer component={Paper}>\r\n                  <Table aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Наименование заготовки</TableCell>\r\n                        <TableCell>Объем заготовок</TableCell>\r\n                        <TableCell>Кол-во роллов</TableCell>\r\n                        <TableCell>Сумма роллов (примерно)</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      \r\n                      { this.state.resItems.pf_ras.map( (item, key) =>\r\n                        <TableRow key={key}>\r\n                          <TableCell> { item.pf_name } </TableCell>\r\n                          <TableCell> { item.count_pf + ' ' + item.ei_name } </TableCell>\r\n                          <TableCell> { item.count_rolls } </TableCell>\r\n                          <TableCell> { item.price_rolls } </TableCell>\r\n                        </TableRow>\r\n                      ) }\r\n                      \r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12}>\r\n                \r\n                <h1>Расход рецептов</h1>\r\n                <TableContainer component={Paper}>\r\n                  <Table aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Наименование заготовки</TableCell>\r\n                        <TableCell>Объем заготовок</TableCell>\r\n                        <TableCell>Кол-во роллов</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      \r\n                      { this.state.resItems.rec_ras.map( (item, key) =>\r\n                        <TableRow key={key}>\r\n                          <TableCell> { item.pf_name } </TableCell>\r\n                          <TableCell> { item.count_pf + ' ' + item.ei_name } </TableCell>\r\n                          <TableCell> { item.count_rolls } </TableCell>\r\n                        </TableRow>\r\n                      ) }\r\n                      \r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n            </>\r\n              :\r\n            null              \r\n          }\r\n          \r\n          { this.state.catItems && this.state.catItems.rec_ras ?\r\n            <Grid item xs={12}>\r\n              \r\n              <Accordion disabled>\r\n                <AccordionSummary>\r\n                  <Typography style={{ width: '50%' }}>Роллов: {this.state.catItems.count_pos.count_rolls}</Typography>\r\n                  <Typography style={{ width: '50%' }}>Пиццы: {this.state.catItems.count_pos.count_pizza}</Typography>\r\n                </AccordionSummary>\r\n              </Accordion>\r\n              \r\n              { this.state.catItems.rec_ras.map( (item, key) =>\r\n                <Accordion key={key}>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                  >\r\n                    <Typography style={{ width: '60%' }}>{item.name}</Typography>\r\n                    <Typography style={{ width: '20%' }}>{item.this_price}</Typography>\r\n                    <Typography style={{ width: '20%' }}>{item.price_by_items}</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    \r\n                    { item.parent_cat.map( (it, k) =>\r\n                      <Accordion key={k}>\r\n                        <AccordionSummary\r\n                          expandIcon={<ExpandMoreIcon />}\r\n                          aria-controls=\"panel1bh-content\"\r\n                        >\r\n                          <Typography style={{ width: '60%', paddingLeft: 20 }}>{it.name}</Typography>\r\n                          <Typography style={{ width: '20%', paddingLeft: 20 }}>{it.this_price}</Typography>\r\n                          <Typography style={{ width: '20%', paddingLeft: 20 }}>{it.price_by_items}</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                          \r\n                          <Accordion disabled={true}>\r\n                            <AccordionSummary>\r\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Товар</Typography>\r\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Товара</Typography>\r\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Заготовок</Typography>\r\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Накладных</Typography>\r\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Сумма</Typography>\r\n                            </AccordionSummary>\r\n                          </Accordion>\r\n                          \r\n                          { it.items.map( (parent_items, parent_key) =>\r\n                            <Accordion key={parent_key} disabled={true}>\r\n                              <AccordionSummary>\r\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.name}</Typography>\r\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_item} {parent_items.ei_name}</Typography>\r\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_pf} {parent_items.ei_name}</Typography>\r\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_bill}</Typography>\r\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.sum}</Typography>\r\n                              </AccordionSummary>\r\n                            </Accordion>\r\n                          ) }\r\n                          \r\n                        </AccordionDetails>\r\n                      </Accordion>\r\n                    ) }\r\n                    \r\n                    \r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              ) }\r\n              \r\n              <Accordion disabled>\r\n                <AccordionSummary>\r\n                  <Typography style={{ width: '60%', marginRight: -15 }}>Всего:</Typography>\r\n                  <Typography style={{ width: '40%' }}>{ this.state.catItems.full_sum }</Typography>\r\n                </AccordionSummary>\r\n              </Accordion>\r\n              \r\n            </Grid>\r\n              :\r\n            null              \r\n          }\r\n          \r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function RasByBill() {\r\n  return (\r\n    <RasByBill_ />\r\n  );\r\n}","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1668686723325\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","RasByBill_","props","method","data","setState","is_load","fetch","headers","body","stringify","module","state","version","login","localStorage","getItem","JSON","then","res","json","st","type","setTimeout","window","location","pathname","err","console","log","module_name","modalDialog","points","point","date_start","date_end","rangeDate","items","cats","items_cat","item_cat","myItems","calendar","this","getData","module_info","name","document","title","event","target","value","start_date","end_date","summ","items_ras","map","item","key","parseFloat","sum","resItems","pf_ras","rec_ras","full_sum","toFixed","catItems","this_price","count_pos","Backdrop","style","zIndex","open","CircularProgress","color","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","Grid","container","spacing","xs","sm","multiple","func","changePoint","bind","label","changeDateRange","changeItems","variant","getItems","getCats","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","count_item","ei_name","count_pf","ei_name_pf","count_bill","pf_name","count_rolls","price_rolls","Accordion","disabled","AccordionSummary","Typography","width","count_pizza","expandIcon","ExpandMore","price_by_items","AccordionDetails","parent_cat","it","k","paddingLeft","parent_items","parent_key","marginRight","React","RasByBill","cssReload","hot","dispose","accept","undefined"],"sourceRoot":""}