{"version":3,"file":"307.36b90e1631c0bb116d33.js","mappings":"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","sources":["webpack://package.json/./src/components/ras_by_bill/ras_by_bill.component.jsx","webpack://package.json/./src/components/ras_by_bill/ras_by_bill.style.scss"],"sourcesContent":["import React from 'react';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyAutocomplite, MyDatePickerNew } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\n\nconst queryString = require('query-string');\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass RasByBill_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      module: 'ras_by_bill',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      \n      points: [],\n      point: [],\n      date_start: formatDate(new Date()),\n      date_end: formatDate(new Date()),\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\n      items: [],\n      cats: [],\n      items_cat: [],\n      item_cat: 0,\n      \n      myItems: [],\n      \n      calendar: []\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      points: data.points,\n      \n      items: data.items,\n      cats: data.cats,\n      items_cat: data.items_cat\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        window.location.pathname = '/';\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n  }\n  \n  changeItems(event, data){\n    this.setState({\n      myItems: data\n    })\n  }\n  \n  async getItems(){\n    let data = {\n      points: this.state.point,\n      items: this.state.myItems,\n      item_cat: this.state.item_cat,\n      start_date: this.state.date_start,\n      end_date: this.state.date_end,\n    };\n    \n    let res = await this.getData('get_this_rev', data);\n    \n    let summ = 0;\n    \n    res.items_ras.map( (item, key) => {\n      summ += parseFloat(item.sum);\n    } )\n    \n    this.setState({\n      resItems: {\n        items_ras: res.items_ras,\n        pf_ras: res.pf_ras,\n        rec_ras: res.rec_ras,\n        full_sum: summ.toFixed(2)\n      },\n      catItems: null\n    })\n  }\n  \n  async getCats(){\n    let data = {\n      points: this.state.point,\n      items: this.state.myItems,\n      start_date: this.state.date_start,\n      end_date: this.state.date_end,\n    };\n    \n    let res = await this.getData('get_this_rev_cat', data);\n    \n    \n    let summ = 0;\n    \n    res.rec_ras.map( (item, key) => {\n      summ += parseFloat(item.this_price);\n    } )\n    \n    this.setState({\n      catItems: {\n        count_pos: res.count_pos,\n        items_ras: res.items_ras,\n        rec_ras: res.rec_ras,\n        full_sum: summ.toFixed(2)\n      },\n      resItems: null\n    })\n  }\n  \n  changeDateRange(data, event){\n    this.setState({\n      [data]: formatDate(event)\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop style={{ zIndex: 99 }} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">  </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              \n              \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ () => {} } color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect data={this.state.points} multiple={true} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MyDatePickerNew label=\"Дата от\" value={ this.state.date_start } func={ this.changeDateRange.bind(this, 'date_start') } />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MyDatePickerNew label=\"Дата до\" value={ this.state.date_end } func={ this.changeDateRange.bind(this, 'date_end') } />\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect data={this.state.items_cat} multiple={false} value={this.state.item_cat} func={ (event) => {this.setState({ item_cat: event.target.value })} } label='Категория товара' />\n          </Grid>\n          \n\n          <Grid item xs={12} sm={12}>\n            <MyAutocomplite data={this.state.items} multiple={true} value={this.state.myItems} func={ this.changeItems.bind(this) } label='Заготовки' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.getItems.bind(this)}>Показать заготовки</Button>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.getCats.bind(this)}>Показать категории</Button>\n          </Grid>\n        \n        \n          { this.state.resItems && this.state.resItems.items_ras ?\n              \n            <>\n              <Grid item xs={12}>\n                \n                <h1>Куплено по наклданым</h1>\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Наименование товара</TableCell>\n                        <TableCell>Объем товра</TableCell>\n                        <TableCell>Объем заготовки</TableCell>\n                        <TableCell>Сумма</TableCell>\n                        <TableCell>Кол-во наклданых</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      \n                      { this.state.resItems.items_ras.map( (item, key) =>\n                        <TableRow key={key}>\n                          <TableCell> { item.name } </TableCell>\n                          <TableCell> { item.count_item + ' ' + item.ei_name } </TableCell>\n                          <TableCell> { item.count_pf + ' ' + item.ei_name_pf } </TableCell>\n                          <TableCell> { item.sum } </TableCell>\n                          <TableCell> { item.count_bill } </TableCell>\n                        </TableRow>\n                      ) }\n                      \n                      <TableRow>\n                        <TableCell> Всего: </TableCell>\n                        <TableCell> </TableCell>\n                        <TableCell> </TableCell>\n                        <TableCell> { this.state.resItems.full_sum } </TableCell>\n                        <TableCell> </TableCell>\n                      </TableRow>\n                      \n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n              \n              <Grid item xs={12}>\n                \n                <h1>Расход заготовок (включая рецепты)</h1>\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Наименование заготовки</TableCell>\n                        <TableCell>Объем заготовок</TableCell>\n                        <TableCell>Кол-во роллов</TableCell>\n                        <TableCell>Сумма роллов (примерно)</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      \n                      { this.state.resItems.pf_ras.map( (item, key) =>\n                        <TableRow key={key}>\n                          <TableCell> { item.pf_name } </TableCell>\n                          <TableCell> { item.count_pf + ' ' + item.ei_name } </TableCell>\n                          <TableCell> { item.count_rolls } </TableCell>\n                          <TableCell> { item.price_rolls } </TableCell>\n                        </TableRow>\n                      ) }\n                      \n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n              \n              <Grid item xs={12}>\n                \n                <h1>Расход рецептов</h1>\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Наименование заготовки</TableCell>\n                        <TableCell>Объем заготовок</TableCell>\n                        <TableCell>Кол-во роллов</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      \n                      { this.state.resItems.rec_ras.map( (item, key) =>\n                        <TableRow key={key}>\n                          <TableCell> { item.pf_name } </TableCell>\n                          <TableCell> { item.count_pf + ' ' + item.ei_name } </TableCell>\n                          <TableCell> { item.count_rolls } </TableCell>\n                        </TableRow>\n                      ) }\n                      \n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n            </>\n              :\n            null              \n          }\n          \n          { this.state.catItems && this.state.catItems.rec_ras ?\n            <Grid item xs={12}>\n              \n              <Accordion disabled>\n                <AccordionSummary>\n                  <Typography style={{ width: '50%' }}>Роллов: {this.state.catItems.count_pos.count_rolls}</Typography>\n                  <Typography style={{ width: '50%' }}>Пиццы: {this.state.catItems.count_pos.count_pizza}</Typography>\n                </AccordionSummary>\n              </Accordion>\n              \n              { this.state.catItems.rec_ras.map( (item, key) =>\n                <Accordion key={key}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1bh-content\"\n                  >\n                    <Typography style={{ width: '60%' }}>{item.name}</Typography>\n                    <Typography style={{ width: '20%' }}>{item.this_price}</Typography>\n                    <Typography style={{ width: '20%' }}>{item.price_by_items}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    \n                    { item.parent_cat.map( (it, k) =>\n                      <Accordion key={k}>\n                        <AccordionSummary\n                          expandIcon={<ExpandMoreIcon />}\n                          aria-controls=\"panel1bh-content\"\n                        >\n                          <Typography style={{ width: '60%', paddingLeft: 20 }}>{it.name}</Typography>\n                          <Typography style={{ width: '20%', paddingLeft: 20 }}>{it.this_price}</Typography>\n                          <Typography style={{ width: '20%', paddingLeft: 20 }}>{it.price_by_items}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          \n                          <Accordion disabled={true}>\n                            <AccordionSummary>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Товар</Typography>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Товара</Typography>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Заготовок</Typography>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Накладных</Typography>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Сумма</Typography>\n                            </AccordionSummary>\n                          </Accordion>\n                          \n                          { it.items.map( (parent_items, parent_key) =>\n                            <Accordion key={parent_key} disabled={true}>\n                              <AccordionSummary>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.name}</Typography>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_item} {parent_items.ei_name}</Typography>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_pf} {parent_items.ei_name}</Typography>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_bill}</Typography>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.sum}</Typography>\n                              </AccordionSummary>\n                            </Accordion>\n                          ) }\n                          \n                        </AccordionDetails>\n                      </Accordion>\n                    ) }\n                    \n                    \n                  </AccordionDetails>\n                </Accordion>\n              ) }\n              \n              <Accordion disabled>\n                <AccordionSummary>\n                  <Typography style={{ width: '60%', marginRight: -15 }}>Всего:</Typography>\n                  <Typography style={{ width: '40%' }}>{ this.state.catItems.full_sum }</Typography>\n                </AccordionSummary>\n              </Accordion>\n              \n            </Grid>\n              :\n            null              \n          }\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function RasByBill() {\n  return (\n    <RasByBill_ />\n  );\n}","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1665661970844\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","RasByBill_","props","method","data","setState","is_load","fetch","headers","body","stringify","module","state","version","login","localStorage","getItem","JSON","then","res","json","st","type","setTimeout","window","location","pathname","err","console","log","module_name","modalDialog","points","point","date_start","date_end","rangeDate","items","cats","items_cat","item_cat","myItems","calendar","this","getData","module_info","name","document","title","event","target","value","start_date","end_date","summ","items_ras","map","item","key","parseFloat","sum","resItems","pf_ras","rec_ras","full_sum","toFixed","catItems","this_price","count_pos","Backdrop","style","zIndex","open","CircularProgress","color","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","Grid","container","spacing","xs","sm","multiple","func","changePoint","bind","label","changeDateRange","changeItems","variant","getItems","getCats","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","count_item","ei_name","count_pf","ei_name_pf","count_bill","pf_name","count_rolls","price_rolls","Accordion","disabled","AccordionSummary","Typography","width","count_pizza","expandIcon","ExpandMore","price_by_items","AccordionDetails","parent_cat","it","k","paddingLeft","parent_items","parent_key","marginRight","React","RasByBill","cssReload","hot","dispose","accept","undefined"],"sourceRoot":""}