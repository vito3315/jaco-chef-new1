{"version":3,"file":"714.076bef2b658573e82e19.js","mappings":"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","sources":["webpack://package.json/./src/components/site_stat_marc/site_stat_marc.component.jsx","webpack://package.json/./src/components/site_stat_marc/site_stat_marc.style.scss"],"sourcesContent":["import React from 'react';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport { MyTextInput, MySelect, MyAutocomplite, MyDaterange, MyCheckBox, MyDatePickerNew } from '../../stores/elements';\r\n\r\nconst queryString = require('query-string');\r\n\r\nfunction formatDate(date) {\r\n  var d = new Date(date),\r\n      month = '' + (d.getMonth() + 1),\r\n      day = '' + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n  if (month.length < 2) \r\n      month = '0' + month;\r\n  if (day.length < 2) \r\n      day = '0' + day;\r\n\r\n  return [year, month, day].join('-');\r\n}\r\n\r\nclass SiteStatMarc_ extends React.Component {\r\n  chartnewusers = null;\r\n  chartorders = null;\r\n  chartavgsumm = null;\r\n  chartcountpos = null;\r\n\r\n  chartnewusersD = null;\r\n  chartordersD = null;\r\n  chartavgsummD = null;\r\n  chartcountposD = null;\r\n\r\n \r\n\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      module: 'site_stat_marc',\r\n      module_name: '',\r\n      is_load: false,\r\n      is_show_adv: false,\r\n\r\n      show_stat_roll:   false,\r\n      show_stat_set:    false,\r\n      show_stat_pizza:  false,\r\n      \r\n      choosePoint: [],\r\n      points: [],\r\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\r\n      date_start: formatDate(new Date()),\r\n      date_end: formatDate(new Date()),\r\n      promoName: '',\r\n\r\n      newUsersTable: [],\r\n      countOrdersTable: [],\r\n      avgSumm: [],\r\n      countPos: [],\r\n      fakeUsers: [],\r\n\r\n      roll_stat:    [],\r\n      set_stat:     [],\r\n      pizza_stat:   [],\r\n   //\r\n      typesShow: [\r\n        {id: 1, name: 'Итоговый результат'},\r\n        {id: 2, name: 'График по месяцам'},\r\n        {id: 3, name: 'График по дням'},\r\n      ],\r\n        typeShow: 1,\r\n\r\n        // правка от 06.06.22\r\n        colors: [0x679499, 0x2941A, 0x62941A, 0xFF0000, 0x46bdc6, 0xFFB6C1,\r\n            0x679499, 0x2941A, 0x62941A, 0xFF0000, 0x46bdc6, 0xFFB6C1]\r\n    };\r\n  }\r\n\r\n   \r\n\r\n  async componentDidMount(){\r\n    let data = await this.getData('get_all');\r\n    \r\n    this.setState({\r\n      module_name: data.module_info.name,\r\n      points: data.points\r\n    })\r\n    \r\n      document.title = data.module_info.name;\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        window.location.pathname = '/';\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n      this.setState({\r\n        is_load: false\r\n      })\r\n    });\r\n  }\r\n   \r\n    changeChekBox(type, event) {\r\n        this.setState({\r\n            [type]: event.target.checked\r\n        })\r\n    }\r\n\r\n  async show() {\r\n    let data = {\r\n      points: this.state.choosePoint,\r\n      dateStart: this.state.date_start,\r\n      dateEnd: this.state.date_end,\r\n      typeShow: this.state.typeShow,\r\n      promoName: this.state.promoName,\r\n      advData: this.state.advData,\r\n    };\r\n\r\n    let res = await this.getData('show', data);\r\n\r\n      console.log(res);\r\n\r\n    // Итоговый результат\r\n      if (parseInt(this.state.typeShow) == 1) {\r\n         \r\n          this.setState({\r\n            newUsersTable: res.new_users,\r\n            countOrdersTable: res.count_orders,\r\n            avgSumm: res.avg_summ,\r\n            countPos: res.count_pos,\r\n            fakeUsers: res.fake_users,\r\n            roll_stat: res.roll_stat,\r\n            set_stat: res.set_stat,\r\n            pizza_stat: res.pizza_stat,\r\n          })\r\n      }\r\n\r\n    // графики по месяцам\r\n    if( parseInt( this.state.typeShow ) == 2 ){\r\n      this.renderGraphNewUsers(res.new_users);\r\n      this.renderGraphOrders(res.count_orders);\r\n      this.renderGraphAvgSumm(res.avg_summ);\r\n      this.renderCountPos(res.count_pos);\r\n      }\r\n\r\n     // графики по дням\r\n      if (parseInt(this.state.typeShow) == 3) {\r\n        \r\n        this.renderGraphNewUsersD(res.new_users);\r\n        this.renderGraphOrdersD(res.count_orders);\r\n        this.renderGraphAvgSummD(res.avg_summ);\r\n        this.renderCountPosD(res.count_pos);\r\n    }\r\n  }\r\n\r\n  renderGraphNewUsers(MyData){\r\n    if( this.chartnewusers ){\r\n      this.chartnewusers.dispose();\r\n    }\r\n\r\n    var root = am5.Root.new(\"chartnewusers\");\r\n    this.chartnewusers = root;\r\n\r\n    root.setThemes([\r\n      am5themes_Animated.new(root)\r\n    ]);\r\n\r\n    var chart = root.container.children.push( \r\n      am5xy.XYChart.new(root, {\r\n        panY: false,\r\n        wheelY: \"zoomX\",\r\n        layout: root.verticalLayout,\r\n        //maxTooltipDistance: 0\r\n      }) \r\n    );\r\n\r\n    var data_site = [];\r\n    var data_center = [];\r\n    var data_all = [];\r\n\r\n    MyData.site.map( (item) => {\r\n\r\n      let date = item.date.split('-');\r\n\r\n      data_site.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, 1).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.center.map( (item) => {\r\n\r\n      let date = item.date.split('-');\r\n\r\n      data_center.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, 1).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.all.map( (item) => {\r\n\r\n      let date = item.date.split('-');\r\n\r\n      data_all.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, 1).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    // Create Y-axis\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        extraTooltipPrecision: 1,\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Create X-Axis\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: \"month\", count: 1 },\r\n        startLocation: 0.5,\r\n        endLocation: 0.5,\r\n        renderer: am5xy.AxisRendererX.new(root, {\r\n          minGridDistance: 30\r\n        })\r\n      })\r\n    );\r\n\r\n    xAxis.get(\"dateFormats\")[\"day\"] = \"MM/dd\";\r\n    xAxis.get(\"periodChangeDateFormats\")[\"day\"] = \"MM/dd\";\r\n\r\n    // Create series правка 1 Новые клиенты по месяцам\r\n    function createSeries(name, field, data) {\r\n      var series = chart.series.push( \r\n      am5xy.SmoothedXLineSeries.new(root, {\r\n          name: name,\r\n          xAxis: xAxis, \r\n          yAxis: yAxis, \r\n          valueYField: field, \r\n          valueXField: \"date\",\r\n          tooltip: am5.Tooltip.new(root, {}),\r\n          maskBullets: false\r\n        }) \r\n      );\r\n\r\n      // правка radius: 5->3\r\n      series.bullets.push(function() {\r\n        return am5.Bullet.new(root, {\r\n          sprite: am5.Circle.new(root, {\r\n            radius: 2,\r\n            fill: series.get(\"fill\")\r\n          })\r\n        });\r\n      });\r\n        \r\n      series.strokes.template.set(\"strokeWidth\", 2);\r\n      if (name == 'Всего') {\r\n         series.strokes.template.set(\"strokeWidth\", 8)\r\n      }\r\n      series.get(\"tooltip\").label.set(\"text\", \"[bold]{name}[/]\\n{valueX.formatDate()}: {valueY}\")\r\n      series.data.setAll(data);\r\n    }\r\n\r\n    createSeries(\"Сайт\", \"value\", data_site);\r\n    createSeries(\"Контакт-центр\", \"value\", data_center);\r\n    createSeries(\"Всего\", \"value\", data_all);\r\n\r\n    // Add cursor\r\n    chart.set(\"cursor\", am5xy.XYCursor.new(root, {\r\n      behavior: \"zoomXY\",\r\n      xAxis: xAxis\r\n    }));\r\n\r\n    xAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      themeTags: [\"axis\"]\r\n    }));\r\n\r\n    yAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      themeTags: [\"axis\"]\r\n    }));\r\n  }\r\n\r\n  renderGraphNewUsersD(MyData){\r\n    if( this.chartnewusersD ){\r\n      this.chartnewusersD.dispose();\r\n    }\r\n\r\n    var root = am5.Root.new(\"chartnewusersD\");\r\n    this.chartnewusersD = root;\r\n\r\n    root.setThemes([\r\n      am5themes_Animated.new(root)\r\n    ]);\r\n\r\n    var chart = root.container.children.push( \r\n      am5xy.XYChart.new(root, {\r\n        panY: false,\r\n        wheelY: \"zoomX\",\r\n        layout: root.verticalLayout,\r\n        //maxTooltipDistance: 0\r\n      }) \r\n    );\r\n\r\n    var data_site = [];\r\n    var data_center = [];\r\n    var data_all = [];\r\n   \r\n\r\n    MyData.site.map( (item) => {\r\n      let date = item.date_new.split('-');\r\n      data_site.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, parseInt(date[2])).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.center.map( (item) => {\r\n      let date = item.date_new.split('-');\r\n      data_center.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, parseInt(date[2])).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.all.map( (item) => {\r\n      let date = item.date_new.split('-');\r\n      data_all.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, parseInt(date[2])).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    })\r\n\r\n\r\n    // Create Y-axis\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        extraTooltipPrecision: 1,\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Create X-Axis\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: \"day\", count: 1 },\r\n        startLocation: 0.5,\r\n        endLocation: 0.5,\r\n        renderer: am5xy.AxisRendererX.new(root, {})\r\n      })\r\n    );\r\n\r\n    xAxis.get(\"dateFormats\")[\"day\"] = \"MM/dd\";\r\n    xAxis.get(\"periodChangeDateFormats\")[\"day\"] = \"MM/dd\";\r\n\r\n    // Create series\r\n    function createSeries(name, field, data) {\r\n\r\n      // новые клиенты по дням правка 2\r\n      var series = chart.series.push( \r\n      am5xy.SmoothedXLineSeries.new(root, {\r\n          name: name,\r\n         //stacked: true,\r\n          xAxis: xAxis, \r\n          yAxis: yAxis, \r\n          valueYField: field, \r\n          valueXField: \"date\",\r\n          tooltip: am5.Tooltip.new(root, {}),\r\n          maskBullets: false\r\n        }) \r\n      );\r\n\r\n      series.bullets.push(function() {\r\n        return am5.Bullet.new(root, {\r\n          sprite: am5.Circle.new(root, {\r\n            radius: 2,\r\n            fill: series.get(\"fill\")\r\n          })\r\n        });\r\n      });\r\n      \r\n        series.strokes.template.set(\"strokeWidth\", 2);\r\n        if (name == 'Всего') {\r\n            series.strokes.template.set(\"strokeWidth\", 8)\r\n        }\r\n        series.get(\"tooltip\").label.set(\"text\", \"[bold]{name}[/]\\n{valueX.formatDate()}: {valueY}\")\r\n        series.data.setAll(data);\r\n      }\r\n\r\n    createSeries(\"Сайт\", \"value\", data_site);\r\n    createSeries(\"Контакт-центр\", \"value\", data_center);\r\n    createSeries(\"Всего\", \"value\", data_all);\r\n   \r\n\r\n    // Add cursor\r\n    \r\n    chart.set(\"cursor\", am5xy.XYCursor.new(root, {\r\n      behavior: \"zoomXY\",\r\n      xAxis: xAxis\r\n    }));\r\n\r\n    xAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      themeTags: [\"axis\"]\r\n    }));\r\n\r\n    yAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      themeTags: [\"axis\"]\r\n    }));\r\n    \r\n  }\r\n\r\n  renderGraphOrders(MyData){\r\n    if( this.chartorders ){\r\n      this.chartorders.dispose();\r\n    }\r\n\r\n    var root = am5.Root.new(\"chartorders\"); \r\n\r\n    this.chartorders = root;\r\n\r\n    root.setThemes([\r\n      am5themes_Animated.new(root)\r\n    ]);\r\n\r\n    var chart = root.container.children.push( \r\n      am5xy.XYChart.new(root, {\r\n        panY: false,\r\n        wheelY: \"zoomX\",\r\n        layout: root.verticalLayout,\r\n        //maxTooltipDistance: 0\r\n      }) \r\n    );\r\n\r\n    var data_all = [];\r\n    var data_pic = [];\r\n    var data_dev = [];\r\n    var data_hall = [];\r\n    var data_adv = [];\r\n     \r\n    MyData.all.map( (item) => {\r\n\r\n      let date = item.date_new.split('-');\r\n\r\n      data_all.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, 1).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.pic.map( (item) => {\r\n\r\n      let date = item.date_new.split('-');\r\n\r\n      data_pic.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, 1).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.dev.map( (item) => {\r\n\r\n      let date = item.date_new.split('-');\r\n\r\n      data_dev.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, 1).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.hall.map( (item) => {\r\n\r\n      let date = item.date_new.split('-');\r\n\r\n      data_hall.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, 1).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    })\r\n\r\n    // Create Y-axis\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        extraTooltipPrecision: 1,\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Create X-Axis\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: \"month\", count: 1 },\r\n        startLocation: 0.5,\r\n        endLocation: 0.5,\r\n        renderer: am5xy.AxisRendererX.new(root, {\r\n          minGridDistance: 30\r\n        })\r\n      })\r\n    );\r\n\r\n    xAxis.get(\"dateFormats\")[\"day\"] = \"MM/dd\";\r\n    xAxis.get(\"periodChangeDateFormats\")[\"day\"] = \"MM/dd\";\r\n\r\n    // Create series Правка 3 Заказы по месяцам\r\n    function createSeries(name, field, data) {\r\n      var series = chart.series.push( \r\n      am5xy.SmoothedXLineSeries.new(root, {\r\n          name: name,\r\n          xAxis: xAxis, \r\n          yAxis: yAxis, \r\n          valueYField: field, \r\n          valueXField: \"date\",\r\n          tooltip: am5.Tooltip.new(root, {}),\r\n          maskBullets: false\r\n        }) \r\n      );\r\n      \r\n      series.bullets.push(function() {\r\n        return am5.Bullet.new(root, {\r\n          sprite: am5.Circle.new(root, {\r\n            radius: 2,\r\n            fill: series.get(\"fill\")\r\n          })\r\n        });\r\n      });\r\n      \r\n      series.strokes.template.set(\"strokeWidth\", 2);\r\n      if (name == 'Всего') {\r\n        series.strokes.template.set(\"strokeWidth\", 8)\r\n      }\r\n      series.get(\"tooltip\").label.set(\"text\", \"[bold]{name}[/]\\n{valueX.formatDate()}: {valueY}\")\r\n      series.data.setAll(data);\r\n    }\r\n\r\n    createSeries(\"Всего\", \"value\", data_all);\r\n    createSeries(\"Самовывозов\", \"value\", data_pic);\r\n    createSeries(\"Доставок\", \"value\", data_dev);\r\n    createSeries(\"Зал\", \"value\", data_hall);\r\n   \r\n    // Add cursor\r\n    chart.set(\"cursor\", am5xy.XYCursor.new(root, {\r\n      behavior: \"zoomXY\",\r\n      xAxis: xAxis\r\n    }));\r\n\r\n    xAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      themeTags: [\"axis\"]\r\n    }));\r\n\r\n    yAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      themeTags: [\"axis\"]\r\n    }));\r\n  }\r\n\r\n   // заказы по дням\r\n  renderGraphOrdersD(MyData){\r\n    if( this.chartordersD ){\r\n      this.chartordersD.dispose();\r\n    }\r\n\r\n    var root = am5.Root.new(\"chartordersD\"); \r\n\r\n    this.chartordersD = root;\r\n\r\n    root.setThemes([\r\n      am5themes_Animated.new(root)\r\n    ]);\r\n\r\n    root.dateFormatter.setAll({\r\n        dateFormat: \"yyyy-MM-dd\", \r\n        dateFields: [\"valueX\", \"openValueX\"] \r\n    });\r\n\r\n    var chart = root.container.children.push( \r\n      am5xy.XYChart.new(root, {\r\n        panY: false,\r\n        wheelY: \"zoomX\",\r\n        layout: root.verticalLayout,\r\n        //maxTooltipDistance: 0\r\n      }) \r\n    );\r\n\r\n    var data_all = [];\r\n    var data_pic = [];\r\n    var data_dev = [];\r\n    var data_hall = [];\r\n \r\n    MyData.all.map( (item) => {\r\n      let date = item.date_new.split('-');\r\n      data_all.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, parseInt(date[2])).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.pic.map( (item) => {\r\n      let date = item.date_new.split('-');\r\n      data_pic.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, parseInt(date[2])).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.dev.map( (item) => {\r\n      let date = item.date_new.split('-');\r\n      data_dev.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, parseInt(date[2])).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.hall.map( (item) => {\r\n      let date = item.date_new.split('-');\r\n      data_hall.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, parseInt(date[2])).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    })\r\n     \r\n     // Create Y-axis\r\n      var yAxis = chart.yAxes.push(\r\n          am5xy.ValueAxis.new(root, {\r\n              extraTooltipPrecision: 1,\r\n              renderer: am5xy.AxisRendererY.new(root, {})\r\n          })\r\n      );\r\n\r\n    // Create X-Axis\r\n      let xAxis = chart.xAxes.push(\r\n          am5xy.DateAxis.new(root, {\r\n            baseInterval: { timeUnit: \"day\", count: 1 },\r\n            startLocation: 0.5,\r\n            endLocation: 0.5,\r\n            renderer: am5xy.AxisRendererX.new(root, {})\r\n          })\r\n      );\r\n\r\n      xAxis.get(\"dateFormats\")[\"day\"] = \"MM/dd\";\r\n      xAxis.get(\"periodChangeDateFormats\")[\"day\"] = \"MM/dd\";\r\n\r\n      var yAxis2 = chart.yAxes.push(\r\n          am5xy.CategoryAxis.new(root, {\r\n              categoryField: \"category\",\r\n              extraTooltipPrecision: 1,\r\n              renderer: am5xy.AxisRendererY.new(root, { inversed: true }),\r\n              //tooltip: am5.Tooltip.new(root, {\r\n              //    themeTags: [\"axis\"],\r\n              //    animationDuration: 200\r\n              //})\r\n          })\r\n      );\r\n\r\n\r\n    // Create series правка 4 Заказы по дням\r\n    function createSeries(name, field, data) {\r\n     \r\n      var series = chart.series.push( \r\n        am5xy.SmoothedXLineSeries.new(root, {\r\n          name: name,\r\n          xAxis: xAxis, \r\n          yAxis: yAxis, \r\n          valueYField: field,\r\n          strokeWidth: 5,\r\n          valueXField: \"date\",\r\n          tooltip: am5.Tooltip.new(root, {}),\r\n          maskBullets: false\r\n        }) \r\n      );\r\n\r\n      series.strokes.template.set(\"strokeWidth\", 2);\r\n\r\n      if (name == 'Всего') {\r\n          series.strokes.template.set(\"strokeWidth\", 8)\r\n      }\r\n       \r\n      series.bullets.push(function() {\r\n        return am5.Bullet.new(root, {\r\n          sprite: am5.Circle.new(root, {\r\n            radius: 2,\r\n            fill: series.get(\"fill\")\r\n          })\r\n        });\r\n      });\r\n      \r\n      series.get(\"tooltip\").label.set(\"text\", \"[bold]{name}[/]\\n{valueX.formatDate()}: {valueY}\")\r\n      series.data.setAll(data);\r\n    }\r\n\r\n      // Новый график рекламнеы компании, заказы по дням\r\n      let colors = this.state.colors;\r\n      function createSeries2(name, field, data) {\r\n\r\n          let cat = [];\r\n          data.map((item, k) => {\r\n              data[k].name = item.category;\r\n              data[k].promo = (item.promo != \"\" || item.promo.length > 0) ? '\\nПромокод: ' + item.promo : '';\r\n              data[k].columnSettings.fill = am5.color(colors[k]);\r\n              cat.push({ 'category': item.category })\r\n          })\r\n\r\n          // привязка категории\r\n          yAxis2.data.setAll(cat);\r\n\r\n          // инфилизация настроик графика\r\n          var series2 = null;\r\n          let ser_settings = {\r\n              xAxis: xAxis,\r\n              yAxis: yAxis2,\r\n              openValueXField: \"fromDate\",\r\n              valueXField: \"toDate\",\r\n              categoryYField: \"category\",\r\n              sequencedInterpolation: true,\r\n          }\r\n\r\n          // перебор массия для заполнения подсказки и цвета Рек. Компании\r\n          data.map(function (item, key) {\r\n              ser_settings['fill'] = am5.color(colors[key]);\r\n\r\n              series2 = chart.series.push(\r\n                  am5xy.ColumnSeries.new(root, ser_settings));\r\n\r\n              series2.columns.template.setAll({\r\n                  templateField: \"columnSettings\",\r\n                  strokeOpacity: 0,\r\n                  tooltipText: \"[bold]{category}[/]\\n{description}\\n\" +\r\n                      \"{openValueX.formatDate('yyyy-MM-dd')} - {valueX.formatDate('yyyy-MM-dd')}\" +\r\n                      \"{promo}\"\r\n              });\r\n\r\n              series2.bullets.push(function () {\r\n                  return am5.Bullet.new(root, {\r\n                      sprite: am5.Circle.new(root, {\r\n                          radius: 2,\r\n                          fill: series2.get(\"fill\")\r\n                      })\r\n                  });\r\n              });\r\n          })\r\n\r\n          series2.columns.template.setAll({\r\n              opacity: 0.5,\r\n          });\r\n\r\n          series2.data.processor = am5.DataProcessor.new(root, {\r\n              dateFields: [\"fromDate\", \"toDate\"],\r\n              dateFormat: \"yyyy-MM-dd HH:mm\"\r\n          });\r\n\r\n          series2.data.setAll(data);\r\n      }\r\n\r\n      createSeries(\"Всего\", \"value\", data_all);\r\n      createSeries(\"Самовывозов\", \"value\", data_pic);\r\n      createSeries(\"Доставок\", \"value\", data_dev);\r\n      createSeries(\"Зал\", \"value\", data_hall);\r\n\r\n     // правка от 08.04 показываем столбики\r\n     if (this.state.is_show_adv && MyData.adv_data.length > '1') {\r\n        createSeries2(\"Акция\", \"value\", MyData.adv_data);\r\n     }\r\n    // Add cursor\r\n    chart.set(\"cursor\", am5xy.XYCursor.new(root, {\r\n      behavior: \"zoomXY\",\r\n      xAxis: xAxis\r\n    }));\r\n\r\n    xAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      themeTags: [\"axis\"]\r\n    }));\r\n\r\n    yAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      themeTags: [\"axis\"]\r\n    }));\r\n  }\r\n\r\n  renderGraphAvgSumm(MyData){\r\n    if( this.chartavgsumm ){\r\n      this.chartavgsumm.dispose();\r\n    }\r\n\r\n    var root = am5.Root.new(\"chartavgsumm\"); \r\n\r\n    this.chartavgsumm = root;\r\n\r\n    root.setThemes([\r\n      am5themes_Animated.new(root)\r\n    ]);\r\n\r\n    var chart = root.container.children.push( \r\n      am5xy.XYChart.new(root, {\r\n        panY: false,\r\n        wheelY: \"zoomX\",\r\n        layout: root.verticalLayout,\r\n        //maxTooltipDistance: 0\r\n      }) \r\n    );\r\n\r\n    var data_all = [];\r\n    var data_pic = [];\r\n    var data_dev = [];\r\n    var data_hall = [];\r\n\r\n    MyData.all.map( (item) => {\r\n      let date = item.date_new.split('-');\r\n      data_all.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, 1).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.pic.map( (item) => {\r\n      let date = item.date_new.split('-');\r\n      data_pic.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, 1).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.dev.map( (item) => {\r\n      let date = item.date_new.split('-');\r\n      data_dev.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, 1).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.hall.map( (item) => {\r\n      let date = item.date_new.split('-');\r\n      data_hall.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, 1).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    // Create Y-axis\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        extraTooltipPrecision: 1,\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Create X-Axis\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: \"month\", count: 1 },\r\n        startLocation: 0.5,\r\n        endLocation: 0.5,\r\n        renderer: am5xy.AxisRendererX.new(root, {\r\n          minGridDistance: 30\r\n        })\r\n      })\r\n    );\r\n\r\n    xAxis.get(\"dateFormats\")[\"day\"] = \"MM/dd\";\r\n    xAxis.get(\"periodChangeDateFormats\")[\"day\"] = \"MM/dd\";\r\n\r\n     \r\n\r\n      // Create series правка 4 Заказы по дням\r\n      function createSeries(name, field, data) {\r\n\r\n          var series = chart.series.push(\r\n              am5xy.SmoothedXLineSeries.new(root, {\r\n                  name: name,\r\n                  xAxis: xAxis,\r\n                  yAxis: yAxis,\r\n                  valueYField: field,\r\n                  //fill: chart.get(\"colors\").getIndex(13),\r\n                  strokeWidth: 5,\r\n                  valueXField: \"date\",\r\n                  tooltip: am5.Tooltip.new(root, {}),\r\n                  maskBullets: false\r\n              })\r\n          );\r\n\r\n          series.strokes.template.set(\"strokeWidth\", 2);\r\n          if (name == 'Всего') {\r\n              series.strokes.template.set(\"strokeWidth\", 8)\r\n          }\r\n\r\n          series.bullets.push(function () {\r\n              return am5.Bullet.new(root, {\r\n                  sprite: am5.Circle.new(root, {\r\n                      radius: 2,\r\n                      fill: series.get(\"fill\")\r\n                  })\r\n              });\r\n          });\r\n\r\n          series.get(\"tooltip\").label.set(\"text\", \"[bold]{name}[/]\\n{valueX.formatDate()}: {valueY}\");\r\n         \r\n          series.data.setAll(data);\r\n      }\r\n    createSeries(\"Всего\", \"value\", data_all);\r\n    createSeries(\"Самовывозов\", \"value\", data_pic);\r\n    createSeries(\"Доставок\", \"value\", data_dev);\r\n    createSeries(\"Зал\", \"value\", data_hall);\r\n    \r\n    // Add cursor\r\n    chart.set(\"cursor\", am5xy.XYCursor.new(root, {\r\n      behavior: \"zoomXY\",\r\n      xAxis: xAxis\r\n    }));\r\n\r\n    xAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      themeTags: [\"axis\"]\r\n    }));\r\n\r\n    yAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      themeTags: [\"axis\"]\r\n    }));\r\n  }\r\n   // график средний чек за день\r\n  renderGraphAvgSummD(MyData){\r\n    if( this.chartavgsummD ){\r\n      this.chartavgsummD.dispose();\r\n    }\r\n\r\n    var root = am5.Root.new(\"chartavgsummD\"); \r\n\r\n    this.chartavgsummD = root;\r\n\r\n    root.setThemes([\r\n      am5themes_Animated.new(root)\r\n    ]);\r\n\r\n    root.dateFormatter.setAll({\r\n       dateFormat: \"yyyy-MM-dd\",\r\n       dateFields: [\"valueX\", \"openValueX\"]\r\n    });\r\n\r\n    var chart = root.container.children.push( \r\n      am5xy.XYChart.new(root, {\r\n        panY: false,\r\n        wheelY: \"zoomX\",\r\n        layout: root.verticalLayout,\r\n        //maxTooltipDistance: 0\r\n      }) \r\n    );\r\n\r\n    var data_all = [];\r\n    var data_pic = [];\r\n    var data_dev = [];\r\n    var data_hall = [];\r\n\r\n    MyData.all.map( (item) => {\r\n\r\n      let date = item.date_new.split('-');\r\n\r\n      data_all.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, parseInt(date[2])).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.pic.map( (item) => {\r\n\r\n      let date = item.date_new.split('-');\r\n\r\n      data_pic.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, parseInt(date[2])).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.dev.map( (item) => {\r\n\r\n      let date = item.date_new.split('-');\r\n\r\n      data_dev.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, parseInt(date[2])).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.hall.map( (item) => {\r\n\r\n      let date = item.date_new.split('-');\r\n\r\n      data_hall.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, parseInt(date[2])).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    })\r\n\r\n    // Create Y-axis\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        extraTooltipPrecision: 1,\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Create X-Axis\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: \"day\", count: 1 },\r\n        startLocation: 0.5,\r\n        endLocation: 0.5,\r\n        renderer: am5xy.AxisRendererX.new(root, {})\r\n      })\r\n    );\r\n\r\n    xAxis.get(\"dateFormats\")[\"day\"] = \"MM/dd\";\r\n    xAxis.get(\"periodChangeDateFormats\")[\"day\"] = \"MM/dd\";\r\n\r\n    var yAxis2 = chart.yAxes.push(\r\n        am5xy.CategoryAxis.new(root, {\r\n            categoryField: \"category\",\r\n            extraTooltipPrecision: 1,\r\n            renderer: am5xy.AxisRendererY.new(root, { inversed: true }),\r\n            //tooltip: am5.Tooltip.new(root, {\r\n            //    themeTags: [\"axis\"],\r\n            //    opacity: 0.4,\r\n            //    animationDuration: 200\r\n            //})\r\n        })\r\n    );\r\n\r\n      // Create series правка 4 Заказы по дням\r\n      function createSeries(name, field, data) {\r\n\r\n          var series = chart.series.push(\r\n              am5xy.SmoothedXLineSeries.new(root, {\r\n                  name: name,\r\n                  xAxis: xAxis,\r\n                  yAxis: yAxis,\r\n                  valueYField: field,\r\n                  strokeWidth: 5,\r\n                  valueXField: \"date\",\r\n                  tooltip: am5.Tooltip.new(root, {}),\r\n                  maskBullets: false\r\n              })\r\n          );\r\n\r\n          series.strokes.template.set(\"strokeWidth\", 2);\r\n\r\n          if (name == 'Всего') {\r\n              series.strokes.template.set(\"strokeWidth\", 8)\r\n          }\r\n\r\n          series.bullets.push(function () {\r\n              return am5.Bullet.new(root, {\r\n                  sprite: am5.Circle.new(root, {\r\n                      radius: 2,\r\n                      fill: series.get(\"fill\")\r\n                  })\r\n              });\r\n          });\r\n\r\n          series.get(\"tooltip\").label.set(\"text\", \"[bold]{name}[/]\\n{valueX.formatDate()}: {valueY}\")\r\n          series.data.setAll(data);\r\n      }\r\n\r\n      // Новый график Рекламные компании, Средний чек за день\r\n      let colors = this.state.colors;\r\n      function createSeries2(name, field, data) {\r\n\r\n          let cat = [];\r\n          data.map((item, k) => {\r\n              data[k].name  = item.category;\r\n              data[k].promo = (item.promo != \"\" || item.promo.length > 0) ? '\\nПромокод: ' + item.promo : '';\r\n              data[k].columnSettings.fill = am5.color(colors[k]);\r\n              cat.push({ 'category': item.category })\r\n          })\r\n\r\n          // привязка категории\r\n          yAxis2.data.setAll(cat);\r\n\r\n          // инфилизация настроик графика\r\n          var series2 = null;\r\n          let ser_settings = {\r\n              xAxis: xAxis,\r\n              yAxis: yAxis2,\r\n              openValueXField: \"fromDate\",\r\n              valueXField: \"toDate\",\r\n              categoryYField: \"category\",\r\n              sequencedInterpolation: true,\r\n          }\r\n\r\n          // перебор массия для заполнения подсказки и цвета Рек. Компании\r\n          data.map(function (item, key) {\r\n              ser_settings['fill'] = am5.color(colors[key]);\r\n\r\n              series2 = chart.series.push(\r\n                  am5xy.ColumnSeries.new(root, ser_settings));\r\n\r\n              series2.columns.template.setAll({\r\n                  templateField: \"columnSettings\",\r\n                  strokeOpacity: 0,\r\n                  tooltipText: \"[bold]{category}[/]\\n{description}\\n\" +\r\n                      \"{openValueX.formatDate('yyyy-MM-dd')} - {valueX.formatDate('yyyy-MM-dd')}\" +\r\n                      \"{promo}\"\r\n              });\r\n\r\n              series2.bullets.push(function () {\r\n                  return am5.Bullet.new(root, {\r\n                      sprite: am5.Circle.new(root, {\r\n                          radius: 2,\r\n                          fill: series2.get(\"fill\")\r\n                      })\r\n                  });\r\n              });\r\n          })\r\n\r\n          series2.columns.template.setAll({\r\n              opacity: 0.5,\r\n          });\r\n\r\n          series2.data.processor = am5.DataProcessor.new(root, {\r\n              dateFields: [\"fromDate\", \"toDate\"],\r\n              dateFormat: \"yyyy-MM-dd HH:mm\"\r\n          });\r\n\r\n          series2.data.setAll(data);\r\n      }\r\n\r\n    createSeries(\"Всего\", \"value\", data_all);\r\n    createSeries(\"Самовывозов\", \"value\", data_pic);\r\n    createSeries(\"Доставок\", \"value\", data_dev);\r\n    createSeries(\"Зал\", \"value\", data_hall);\r\n\r\n    // показ акций\r\n    if (this.state.is_show_adv && MyData.adv_data.length > '1') {\r\n        createSeries2(\"Акция\", \"value\", MyData.adv_data);\r\n    }\r\n\r\n    // Add cursor\r\n    chart.set(\"cursor\", am5xy.XYCursor.new(root, {\r\n      behavior: \"zoomXY\",\r\n      xAxis: xAxis\r\n    }));\r\n\r\n    xAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      themeTags: [\"axis\"]\r\n    }));\r\n\r\n    yAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      themeTags: [\"axis\"]\r\n    }));\r\n  }\r\n\r\n  renderCountPos(MyData){\r\n    if( this.chartcountpos ){\r\n      this.chartcountpos.dispose();\r\n    }\r\n\r\n    var root = am5.Root.new(\"chartcountpos\"); \r\n\r\n    this.chartcountpos = root;\r\n\r\n    root.setThemes([\r\n      am5themes_Animated.new(root)\r\n    ]);\r\n\r\n    var chart = root.container.children.push( \r\n      am5xy.XYChart.new(root, {\r\n        panY: false,\r\n        wheelY: \"zoomX\",\r\n        layout: root.verticalLayout,\r\n        //maxTooltipDistance: 0\r\n      }) \r\n    );\r\n\r\n    var data_pizza = [];\r\n    var data_rolls = [];\r\n    var data_adv = [];\r\n\r\n    MyData.count_pizza.map( (item) => {\r\n\r\n      let date = item.date_new.split('-');\r\n\r\n      data_pizza.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, 1).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.count_rolls.map( (item) => {\r\n\r\n      let date = item.date_new.split('-');\r\n\r\n      data_rolls.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, 1).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    })\r\n\r\n    // Create Y-axis\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        extraTooltipPrecision: 1,\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Create X-Axis\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: \"month\", count: 1 },\r\n        startLocation: 0.5,\r\n        endLocation: 0.5,\r\n        renderer: am5xy.AxisRendererX.new(root, {\r\n          minGridDistance: 30\r\n        })\r\n      })\r\n    );\r\n\r\n    xAxis.get(\"dateFormats\")[\"day\"] = \"MM/dd\";\r\n    xAxis.get(\"periodChangeDateFormats\")[\"day\"] = \"MM/dd\";\r\n\r\n    // Create series правка 7 Позиций по месяцам\r\n    function createSeries(name, field, data) {\r\n      var series = chart.series.push( \r\n          am5xy.SmoothedXLineSeries.new(root, {\r\n          name: name,\r\n          xAxis: xAxis, \r\n          yAxis: yAxis, \r\n          valueYField: field, \r\n          valueXField: \"date\",\r\n          tooltip: am5.Tooltip.new(root, {}),\r\n          maskBullets: false\r\n        }) \r\n      );\r\n      \r\n      series.bullets.push(function() {\r\n        return am5.Bullet.new(root, {\r\n          sprite: am5.Circle.new(root, {\r\n            radius: 2,\r\n            fill: series.get(\"fill\")\r\n          })\r\n        });\r\n      });\r\n      \r\n      series.strokes.template.set(\"strokeWidth\", 2);\r\n      \r\n      series.get(\"tooltip\").label.set(\"text\", \"[bold]{name}[/]\\n{valueX.formatDate()}: {valueY}\")\r\n      series.data.setAll(data);\r\n    }\r\n    function createSeries2(name, field, data) {\r\n\r\n        // вытаскиваем название акции\r\n        let adv1 = [], adv2 = [];\r\n        let lKey = 0, newArr = false;\r\n\r\n        // разделяем на два массива\r\n        for (const [key, value] of data.entries()) {\r\n            lKey = key == 0 ? 1 : key - 1;\r\n            if (key == 0) {\r\n                adv1.push(value);\r\n            } else if (data[lKey]['name'] != value['name']) {\r\n                adv2.push(value);\r\n                newArr = true;\r\n            } else if (newArr) {\r\n                adv2.push(value);\r\n            } else {\r\n                adv1.push(value);\r\n            }\r\n        }\r\n\r\n        // инцилизация первого массива на графике\r\n        if (adv1.length != 0) {\r\n            var series2 = chart.series.push(\r\n                am5xy.ColumnSeries.new(root, {\r\n                    name: adv1[0]['name'],\r\n                    xAxis: xAxis,\r\n                    yAxis: yAxis,\r\n                    valueYField: field,\r\n                    valueXField: \"date\",\r\n                    categoryXField: \"date\",\r\n                    color: '0x6794DC',\r\n                    clustered: false,\r\n                    tooltip: am5.Tooltip.new(root, {\r\n                        pointerOrientation: \"horizontal\",\r\n                        labelText: adv1[0]['name']\r\n                    })\r\n                })\r\n            );\r\n\r\n            series2.columns.template.setAll({\r\n                opacity: 0.5,\r\n                width: am5.percent(80),\r\n                templateField: \"columnSettings\",\r\n            });\r\n\r\n            chart.get(\"colors\").set(\"colors\", [\r\n                am5.color(0x6794DC),\r\n            ]);\r\n\r\n            // меняем цвет\r\n            series2.set(\"fill\", am5.color(0x6794DC));\r\n            series2.data.setAll(adv1);\r\n        }\r\n\r\n        // инцилизация второго массива на графике\r\n        if (adv2.length != 0) {\r\n            var series3 = chart.series.push(\r\n                am5xy.ColumnSeries.new(root, {\r\n                    name: adv2[0]['name'],\r\n                    xAxis: xAxis,\r\n                    yAxis: yAxis,\r\n                    valueYField: field,\r\n                    valueXField: \"date\",\r\n                    categoryXField: \"date\",\r\n                    color: '0x6794DC',\r\n                    clustered: false,\r\n                    tooltip: am5.Tooltip.new(root, {\r\n                        pointerOrientation: \"horizontal\",\r\n                        labelText: adv2[0]['name']\r\n                    })\r\n                })\r\n            );\r\n\r\n            series3.columns.template.setAll({\r\n                opacity: 0.5,\r\n                width: am5.percent(80),\r\n                templateField: \"columnSettings\",\r\n            });\r\n\r\n            chart.get(\"colors\").set(\"colors\", [\r\n                am5.color(0x6794DA),\r\n            ]);\r\n\r\n            // меняем цвет\r\n            series3.set(\"fill\", am5.color(0x6794DA));\r\n            series3.data.setAll(adv2);\r\n        }\r\n    }\r\n    createSeries(\"Роллов\", \"value\", data_rolls);\r\n    createSeries(\"Пиццы\", \"value\", data_pizza);\r\n    //if (this.state.is_show_adv && MyData.adv_data) {\r\n    //    createSeries2(\"Акция\", \"value\", data_adv)\r\n    //}\r\n    // Add cursor\r\n    chart.set(\"cursor\", am5xy.XYCursor.new(root, {\r\n      behavior: \"zoomXY\",\r\n      xAxis: xAxis\r\n    }));\r\n\r\n    xAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      themeTags: [\"axis\"]\r\n    }));\r\n\r\n    yAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      themeTags: [\"axis\"]\r\n    }));\r\n  }\r\n\r\n  // Позиций по дням\r\n  renderCountPosD(MyData){\r\n    if( this.chartcountposD ){\r\n      this.chartcountposD.dispose();\r\n    }\r\n\r\n    var root = am5.Root.new(\"chartcountposD\"); \r\n\r\n    this.chartcountposD = root;\r\n\r\n    root.setThemes([\r\n       am5themes_Animated.new(root)\r\n    ]);\r\n\r\n    root.dateFormatter.setAll({\r\n       dateFormat: \"yyyy-MM-dd\",\r\n       dateFields: [\"valueX\", \"openValueX\"]\r\n    });\r\n\r\n    var chart = root.container.children.push( \r\n      am5xy.XYChart.new(root, {\r\n        panY: false,\r\n        wheelY: \"zoomX\",\r\n        layout: root.verticalLayout,\r\n        //maxTooltipDistance: 0\r\n      }) \r\n    );\r\n\r\n    var data_pizza = [];\r\n    var data_rolls = [];\r\n    MyData.count_pizza.map( (item) => {\r\n\r\n      let date = item.date_new.split('-');\r\n\r\n      data_pizza.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, parseInt(date[2])).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    } )\r\n\r\n    MyData.count_rolls.map( (item) => {\r\n\r\n      let date = item.date_new.split('-');\r\n\r\n      data_rolls.push({\r\n        date: new Date(date[0], parseInt(date[1])-1, parseInt(date[2])).getTime(),\r\n        value: parseInt(item.count)\r\n      })\r\n    })\r\n\r\n    // Create Y-axis\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        extraTooltipPrecision: 1,\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Create X-Axis\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: \"day\", count: 1 },\r\n        startLocation: 0.5,\r\n        endLocation: 0.5,\r\n        renderer: am5xy.AxisRendererX.new(root, {})\r\n      })\r\n    );\r\n\r\n    xAxis.get(\"dateFormats\")[\"day\"] = \"MM/dd\";\r\n    xAxis.get(\"periodChangeDateFormats\")[\"day\"] = \"MM/dd\";\r\n\r\n      var yAxis2 = chart.yAxes.push(\r\n          am5xy.CategoryAxis.new(root, {\r\n              categoryField: \"category\",\r\n              extraTooltipPrecision: 1,\r\n              renderer: am5xy.AxisRendererY.new(root, { inversed: true }),\r\n              //tooltip: am5.Tooltip.new(root, {\r\n              //    themeTags: [\"axis\"],\r\n              //    animationDuration: 200\r\n              //})\r\n          })\r\n      );\r\n\r\n      // Create series правка 4 Заказы по дням\r\n      function createSeries(name, field, data) {\r\n\r\n          var series = chart.series.push(\r\n              am5xy.SmoothedXLineSeries.new(root, {\r\n                  name: name,\r\n                  xAxis: xAxis,\r\n                  yAxis: yAxis,\r\n                  valueYField: field,\r\n                  //fill: chart.get(\"colors\").getIndex(13),\r\n                  strokeWidth: 5,\r\n                  valueXField: \"date\",\r\n                  tooltip: am5.Tooltip.new(root, {}),\r\n                  maskBullets: false\r\n              })\r\n          );\r\n\r\n          series.strokes.template.set(\"strokeWidth\", 2);\r\n\r\n          if (name == 'Всего') {\r\n              //series.strokes.template.set(\"stroke\", 'red');\r\n              series.strokes.template.set(\"strokeWidth\", 8)\r\n          }\r\n\r\n          series.bullets.push(function () {\r\n              return am5.Bullet.new(root, {\r\n                  sprite: am5.Circle.new(root, {\r\n                      radius: 2,\r\n                      fill: series.get(\"fill\")\r\n                  })\r\n              });\r\n          });\r\n\r\n          series.get(\"tooltip\").label.set(\"text\", \"[bold]{name}[/]\\n{valueX.formatDate()}: {valueY}\")\r\n          series.data.setAll(data);\r\n      }\r\n\r\n      // Новый график Рекламные компании, Позиций по дням\r\n      let colors = this.state.colors;\r\n      function createSeries2(name, field, data) {\r\n\r\n          let cat = [];\r\n          data.map((item, k) => {\r\n              data[k].name = item.category;\r\n              data[k].promo = (item.promo != \"\" || item.promo.length > 0) ? '\\nПромокод: ' + item.promo : '';\r\n              data[k].columnSettings.fill = am5.color(colors[k]);\r\n              cat.push({ 'category': item.category })\r\n          })\r\n\r\n          // привязка категории\r\n          yAxis2.data.setAll(cat);\r\n\r\n          // инфилизация настроик графика\r\n          var series2 = null;\r\n          let ser_settings = {\r\n              xAxis: xAxis,\r\n              yAxis: yAxis2,\r\n              openValueXField: \"fromDate\",\r\n              valueXField: \"toDate\",\r\n              categoryYField: \"category\",\r\n              sequencedInterpolation: true,\r\n          }\r\n\r\n          // перебор массия для заполнения подсказки и цвета Рек. Компании\r\n          data.map(function (item, key) {\r\n              ser_settings['fill'] = am5.color(colors[key]);\r\n\r\n              series2 = chart.series.push(\r\n                  am5xy.ColumnSeries.new(root, ser_settings));\r\n\r\n              series2.columns.template.setAll({\r\n                  templateField: \"columnSettings\",\r\n                  strokeOpacity: 0,\r\n                  tooltipText: \"[bold]{category}[/]\\n{description}\\n\" +\r\n                      \"{openValueX.formatDate('yyyy-MM-dd')} - {valueX.formatDate('yyyy-MM-dd')}\" +\r\n                      \"{promo}\"\r\n              });\r\n\r\n              series2.bullets.push(function () {\r\n                  return am5.Bullet.new(root, {\r\n                      sprite: am5.Circle.new(root, {\r\n                          radius: 2,\r\n                          fill: series2.get(\"fill\")\r\n                      })\r\n                  });\r\n              });\r\n          })\r\n\r\n          series2.columns.template.setAll({\r\n              opacity: 0.5,\r\n          });\r\n\r\n          series2.data.processor = am5.DataProcessor.new(root, {\r\n              dateFields: [\"fromDate\", \"toDate\"],\r\n              dateFormat: \"yyyy-MM-dd HH:mm\"\r\n          });\r\n\r\n          series2.data.setAll(data);\r\n      }\r\n\r\n     createSeries(\"Роллов\", \"value\", data_rolls);\r\n     createSeries(\"Пиццы\", \"value\", data_pizza);\r\n      \r\n     if (this.state.is_show_adv && MyData.adv_data.length > '1') {\r\n        createSeries2(\"Акция\", \"value\", MyData.adv_data)\r\n     }\r\n\r\n    // Add cursor\r\n    chart.set(\"cursor\", am5xy.XYCursor.new(root, {\r\n      behavior: \"zoomXY\",\r\n      xAxis: xAxis\r\n    }));\r\n\r\n    xAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      themeTags: [\"axis\"]\r\n    }));\r\n\r\n    yAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      themeTags: [\"axis\"]\r\n    }));\r\n  }\r\n\r\n  changeDateRange(data, val) {\r\n    this.setState({\r\n      [data]: formatDate(val)\r\n    })\r\n  }\r\n\r\n  showStat(type) {\r\n      let val;\r\n      switch (type) {\r\n          case 'roll':\r\n              val = this.state.show_stat_roll ? false : true;\r\n              this.setState({ show_stat_roll: val })\r\n          break;\r\n          case 'set':\r\n              val = this.state.show_stat_set ? false : true;\r\n              this.setState({ show_stat_set: val });\r\n              \r\n          break;\r\n          case 'pizza':\r\n              val = this.state.show_stat_pizza ? false : true;\r\n              this.setState({ show_stat_pizza: val });\r\n          break;\r\n      }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop style={{ zIndex: 99 }} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <MyDatePickerNew label=\"Дата от\" value={ this.state.date_start } func={ this.changeDateRange.bind(this, 'date_start') } />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <MyDatePickerNew label=\"Дата от\" value={ this.state.date_end } func={ this.changeDateRange.bind(this, 'date_end') } />\r\n          </Grid>\r\n\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <MyAutocomplite data={this.state.points} value={this.state.choosePoint} func={ (event, data) => { this.setState({ choosePoint: data }) } } multiple={true} label='Точка' />\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <MyTextInput value={this.state.promoName} func={ (event) => { this.setState({ promoName: event.target.value }) } } label='Промокод' />\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}> \r\n            <MySelect data={this.state.typesShow} value={this.state.typeShow} func={ (event) => { this.setState({ typeShow: event.target.value }) } } label='Как показать' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}> \r\n            <MyCheckBox label='Показать акции' value={this.state.is_show_adv} func={this.changeChekBox.bind(this, 'is_show_adv') }   />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <Button variant=\"contained\" onClick={this.show.bind(this)}>Обновить данные</Button>\r\n          </Grid>\r\n        \r\n\r\n          { this.state.typeShow != 1 ? null :\r\n            <Grid item xs={12}>\r\n              <h2 style={{ textAlign: 'center' }}>Новые клиенты итог</h2>\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>Всего</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>Контакт-центр</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>Сайт</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                  \r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>{this.state.newUsersTable.all ? this.state.newUsersTable.all : 0}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{this.state.newUsersTable.center ? this.state.newUsersTable.center : 0}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{this.state.newUsersTable.site ? this.state.newUsersTable.site : 0}</TableCell>\r\n                    </TableRow>\r\n\r\n                    \r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          }\r\n\r\n          { this.state.typeShow != 1 ? null :\r\n            <Grid item xs={12}>\r\n              <h2 style={{ textAlign: 'center' }}>Заказы итог</h2>\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>Всего</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>Доставок</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>Зал</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>Самовывоз</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                  \r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>{this.state.countOrdersTable.all ? this.state.countOrdersTable.all : 0}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{this.state.countOrdersTable.dev ? this.state.countOrdersTable.dev : 0}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{this.state.countOrdersTable.hall ? this.state.countOrdersTable.hall : 0}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{this.state.countOrdersTable.pic ? this.state.countOrdersTable.pic : 0}</TableCell>\r\n                    </TableRow>\r\n\r\n                    \r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          }\r\n\r\n          { this.state.typeShow != 1 ? null :\r\n            <Grid item xs={12}>\r\n              <h2 style={{ textAlign: 'center' }}>Средний чек итог</h2>\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>Всего</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>Доставка</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>Зал</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>Самовывоз</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                  \r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>{this.state.avgSumm.all ? this.state.avgSumm.all : 0}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{this.state.avgSumm.dev ? this.state.avgSumm.dev : 0}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{this.state.avgSumm.hall ? this.state.avgSumm.hall : 0}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{this.state.avgSumm.pic ? this.state.avgSumm.pic : 0}</TableCell>\r\n                    </TableRow>\r\n\r\n                    \r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          }\r\n\r\n          { this.state.typeShow != 1 ? null :\r\n            <Grid item xs={12}>\r\n              <h2 style={{ textAlign: 'center' } }>Позиций итог</h2>\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>Роллов</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>Пиццы</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                  \r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>{this.state.countPos.count_rolls ? this.state.countPos.count_rolls : 0}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{this.state.countPos.count_pizza ? this.state.countPos.count_pizza : 0}</TableCell>\r\n                    </TableRow>\r\n\r\n                    \r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          }\r\n\r\n          { this.state.typeShow != 1 ? null :\r\n            <Grid item xs={12}>\r\n              <h2 style={{ textAlign: 'center' }}>Ушедшие клиенты</h2>\r\n              <h5 style={{ textAlign: 'center' }}>ушли - заказывали за 90 дней до указанного периода и больше не заказывали</h5>\r\n              <h5 style={{ textAlign: 'center' }}>вернулись - не заказывали 90 дней до указанного периода, сделали заказ в указанный период</h5>\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>Ушли</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>Вернулись</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                  \r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>{this.state.fakeUsers.lost_users ? this.state.fakeUsers.lost_users : 0}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{this.state.fakeUsers.ret_users ? this.state.fakeUsers.ret_users : 0}</TableCell>\r\n                    </TableRow>\r\n\r\n                    \r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n\r\n                 <Grid container spacing={3}>\r\n                   \r\n                    <Grid style={{ marginTop: 20, marginBottom: 200}} item xs={12} sm={4}> \r\n                        <h2 style={{ textAlign: 'center' }}>Рейтинг роллов </h2>\r\n                        <h5 style={{ textAlign: 'center', cursor: 'pointer' }} onClick={this.showStat.bind(this, 'roll')} >Показать/Скрыть</h5>\r\n                        {this.state.show_stat_roll != true ? null :\r\n                            <TableContainer style={{ marginTop: 20 }} component={Paper} >\r\n                                <Table>\r\n                                    <TableBody>\r\n\r\n                                        {this.state.roll_stat.map((item, key) =>\r\n                                            <TableRow key={key}>\r\n                                                <TableCell>{item.name}</TableCell>\r\n                                                <TableCell style={{ textAlign: 'center' }}>{item.count}</TableCell>\r\n                                            </TableRow>\r\n                                        )}\r\n\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        }\r\n                    </Grid>\r\n\r\n                    <Grid style={{ marginTop: 20, marginBottom: 200 }} item xs={12} sm={4}>\r\n                        <h2 style={{ textAlign: 'center' }}>Рейтинг сетов</h2>\r\n                        <h5 style={{ textAlign: 'center', cursor: 'pointer' }} onClick={this.showStat.bind(this, 'set')} >Показать/Скрыть</h5>\r\n                        {this.state.show_stat_set != true ? null :\r\n                            <TableContainer style={{ marginTop: 20 }} component={Paper} >\r\n                                <Table>\r\n                                    <TableBody>\r\n\r\n                                        {this.state.set_stat.map((item, key) =>\r\n                                            <TableRow key={key}>\r\n                                                <TableCell>{item.name}</TableCell>\r\n                                                <TableCell style={{ textAlign: 'center' }}>{item.count}</TableCell>\r\n                                            </TableRow>\r\n                                        )}\r\n\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        }\r\n                    </Grid>\r\n\r\n                     <Grid style={{ marginTop: 20, marginBottom: 200 }} item  xs={12} sm={4}> \r\n                        <h2 style={{ textAlign: 'center' }}>Рейтинг Пиццы</h2>\r\n                        <h5 style={{ textAlign: 'center', cursor: 'pointer' }} onClick={this.showStat.bind(this, 'pizza')}>Показать/Скрыть</h5>\r\n                        {this.state.show_stat_pizza != true ? null :\r\n                             <TableContainer style={{ marginTop: 20 }} component={Paper} >\r\n                                <Table>\r\n                                    <TableBody>\r\n\r\n                                        {this.state.pizza_stat.map((item, key) =>\r\n                                            <TableRow key={key}>\r\n                                                <TableCell>{item.name}</TableCell>\r\n                                                <TableCell style={{ textAlign: 'center' }}>{item.count}</TableCell>\r\n                                            </TableRow>\r\n                                        )}\r\n\r\n                                    </TableBody>\r\n                                </Table>\r\n                             </TableContainer>\r\n                         }\r\n                    </Grid>\r\n               </Grid>\r\n             </Grid>\r\n            }\r\n\r\n          { this.state.typeShow != 2 ? null :\r\n            <Grid item xs={12}>\r\n              <h2 style={{ textAlign: 'center' }}>Новые клиенты по месяцам</h2>\r\n              <div id=\"chartnewusers\" style={{ width: \"100%\", height: \"500px\" }} />\r\n            </Grid>\r\n          }\r\n\r\n          { this.state.typeShow != 2 ? null :\r\n            <Grid item xs={12}>\r\n              <h2 style={{ textAlign: 'center' }}>Заказы по месяцам</h2>\r\n              <div id=\"chartorders\" style={{ width: \"100%\", height: \"500px\" }} />\r\n            </Grid>\r\n          }\r\n\r\n          { this.state.typeShow != 2 ? null :\r\n            <Grid item xs={12}>\r\n              <h2 style={{ textAlign: 'center' }}>Средний чек по месяцам</h2>\r\n              <div id=\"chartavgsumm\" style={{ width: \"100%\", height: \"500px\" }} />\r\n            </Grid>\r\n          }\r\n\r\n          { this.state.typeShow != 2 ? null :\r\n            <Grid item xs={12}>\r\n              <h2 style={{ textAlign: 'center' }}>Позиций по месяцам</h2>\r\n              <div id=\"chartcountpos\" style={{ width: \"100%\", height: \"500px\" }} />\r\n            </Grid>\r\n          }\r\n\r\n\r\n          { this.state.typeShow != 3 ? null :\r\n            <Grid item xs={12}>\r\n              <h2 style={{ textAlign: 'center' }}>Новые клиенты по дням</h2>\r\n              <div id=\"chartnewusersD\" style={{ width: \"100%\", height: \"500px\" }} />\r\n            </Grid>\r\n          }\r\n\r\n          { this.state.typeShow != 3 ? null :\r\n            <Grid item xs={12}>\r\n              <h2 style={{ textAlign: 'center' }}>Заказы по дням</h2>\r\n              <div id=\"chartordersD\" style={{ width: \"100%\", height: \"500px\" }} />\r\n            </Grid>\r\n          }\r\n\r\n          { this.state.typeShow != 3 ? null :\r\n            <Grid item xs={12}>\r\n              <h2 style={{ textAlign: 'center' }}>Средний чек по дням</h2>\r\n              <div id=\"chartavgsummD\" style={{ width: \"100%\", height: \"500px\" }} />\r\n            </Grid>\r\n          }\r\n\r\n          { this.state.typeShow != 3 ? null :\r\n            <Grid item xs={12}>\r\n              <h2 style={{ textAlign: 'center' }}>Позиций по дням</h2>\r\n              <div id=\"chartcountposD\" style={{ width: \"100%\", height: \"500px\" }} />\r\n            </Grid>\r\n          }\r\n\r\n\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function SiteStatMarc() {\r\n  return (\r\n    <SiteStatMarc_ />\r\n  );\r\n}","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1660549430766\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","SiteStatMarc_","props","method","data","setState","is_load","fetch","headers","body","stringify","module","state","version","login","localStorage","getItem","JSON","then","res","json","st","type","setTimeout","window","location","pathname","err","console","log","module_name","is_show_adv","show_stat_roll","show_stat_set","show_stat_pizza","choosePoint","points","rangeDate","date_start","date_end","promoName","newUsersTable","countOrdersTable","avgSumm","countPos","fakeUsers","roll_stat","set_stat","pizza_stat","typesShow","id","name","typeShow","colors","this","getData","module_info","document","title","event","target","checked","dateStart","dateEnd","advData","parseInt","new_users","count_orders","avg_summ","count_pos","fake_users","renderGraphNewUsers","renderGraphOrders","renderGraphAvgSumm","renderCountPos","renderGraphNewUsersD","renderGraphOrdersD","renderGraphAvgSummD","renderCountPosD","MyData","chartnewusers","dispose","root","am5","Root","setThemes","am5themes_Animated","chart","container","children","push","am5xy","XYChart","panY","wheelY","layout","verticalLayout","data_site","data_center","data_all","site","map","item","split","getTime","value","count","center","all","yAxis","yAxes","ValueAxis","extraTooltipPrecision","renderer","AxisRendererY","xAxis","xAxes","DateAxis","baseInterval","timeUnit","startLocation","endLocation","AxisRendererX","minGridDistance","createSeries","field","series","SmoothedXLineSeries","valueYField","valueXField","tooltip","Tooltip","maskBullets","bullets","Bullet","sprite","Circle","radius","fill","get","strokes","template","set","label","setAll","XYCursor","behavior","themeTags","chartnewusersD","date_new","chartorders","data_pic","data_dev","data_hall","pic","dev","hall","chartordersD","dateFormatter","dateFormat","dateFields","yAxis2","CategoryAxis","categoryField","inversed","strokeWidth","adv_data","cat","k","category","promo","columnSettings","color","series2","ser_settings","openValueXField","categoryYField","sequencedInterpolation","key","ColumnSeries","columns","templateField","strokeOpacity","tooltipText","opacity","processor","DataProcessor","createSeries2","chartavgsumm","chartavgsummD","chartcountpos","data_pizza","data_rolls","count_pizza","count_rolls","chartcountposD","val","Backdrop","style","zIndex","open","CircularProgress","Grid","spacing","xs","sm","func","changeDateRange","bind","multiple","changeChekBox","Button","variant","onClick","show","textAlign","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","lost_users","ret_users","marginTop","marginBottom","cursor","showStat","width","height","React","SiteStatMarc","cssReload","hot","accept","undefined"],"sourceRoot":""}