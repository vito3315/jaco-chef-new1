{"version":3,"file":"223.3af26fa159cac236bb52.js","mappings":"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","sources":["webpack://package.json/./src/components/work_schedule/work_schedule.component.jsx","webpack://package.json/./src/components/work_schedule/work_schedule.style.scss?55ba"],"sourcesContent":["import React from 'react';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport TableFooter from '@mui/material/TableFooter';\nimport Paper from '@mui/material/Paper';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddIcon from '@mui/icons-material/Add';\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\n\nimport PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\n\nimport HomeWorkIcon from '@mui/icons-material/HomeWork';\nimport SyncAltIcon from '@mui/icons-material/SyncAlt';\n\nimport LooksOneIcon from '@mui/icons-material/LooksOne';\nimport LooksTwoIcon from '@mui/icons-material/LooksTwo';\nimport Looks3Icon from '@mui/icons-material/Looks3';\n\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport CheckIcon from '@mui/icons-material/Check';\nimport SendIcon from '@mui/icons-material/Send';\n\nimport { MySelect, MyTextInput, MyTimePicker, MyDatePickerGraph, formatDate } from '../../stores/elements';\nimport { PickersDay } from '@mui/x-date-pickers/PickersDay';\n\nconst queryString = require('query-string'); \n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <List sx={{ pt: 0 }}>\n        \n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AccessTimeIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Сменить часы на месяц\" />\n        </ListItem>\n        \n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <SyncAltIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Сменить смену\" />\n        </ListItem>\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <HomeWorkIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Сменить точку\" />\n        </ListItem>\n        \n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>{children}</Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass HeaderItem extends React.Component {\n  render(){\n    return (\n      <>\n        <TableRow>\n          <TableCell style={{ minWidth: 140, minHeight: 38 }}>Ур. кафе: {this.props.lv_cafe}</TableCell>\n          <TableCell style={{ minWidth: 165, minHeight: 38 }}>Число месяца</TableCell>\n\n          { this.props.kind == 'manager' ? null :\n            <TableCell></TableCell>\n          }\n          \n          {this.props.days.map( (item, key) => \n            <TableCell className=\"min_block\" style={{ backgroundColor: item.day == 'Пт' || item.day == 'Сб' || item.day == 'Вс' ? '#ffe9bd' : '#fff' }} key={key}>{item.date}</TableCell>\n          )}\n          \n          { this.props.kind == 'manager' ? null :\n            <>\n              <TableCell></TableCell>\n              \n              { this.props.dataKey > 0 ? \n                <>\n                  <TableCell style={{ textAlign: 'center' }}></TableCell>\n                  <TableCell style={{ textAlign: 'center' }}></TableCell>\n                </>\n                  :\n                <>\n                  <TableCell style={{ textAlign: 'center', cursor: 'pointer' }} onClick={this.props.changeDopBonus}>{ !this.props.bonus_other ? '+ / -' : parseInt(this.props.bonus_other) == 1 ? <AddIcon style={{ fontSize: 30, color: 'green' }} /> : <CloseIcon style={{ fontSize: 30, color: 'red' }} /> }</TableCell>\n                  <TableCell style={{ textAlign: 'center', cursor: 'pointer' }} onClick={this.props.changeLVDir}>Ур. дира: {this.props.lv_dir}</TableCell>\n                </>\n              }\n                  \n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n            </>\n          }\n\n        </TableRow>\n        <TableRow>\n          <TableCell style={{ minWidth: 140, minHeight: 38 }}>Сотрудник</TableCell>\n          <TableCell style={{ minWidth: 165, minHeight: 38 }}>Должность</TableCell>\n          \n          { this.props.kind == 'manager' ? null :\n            <TableCell></TableCell>\n          }\n          \n          {this.props.days.map( (item, key) => \n            <TableCell className=\"min_block\" style={{ backgroundColor: item.day == 'Пт' || item.day == 'Сб' || item.day == 'Вс' ? '#ffe9bd' : '#fff' }} key={key}>{item.day}</TableCell>\n          )}\n          \n          { this.props.kind == 'manager' ? null :\n            <>\n              <TableCell style={{ textAlign: 'center' }}>За 1ч</TableCell>\n              <TableCell style={{ textAlign: 'center' }}>Командный бонус</TableCell>\n              <TableCell style={{ textAlign: 'center' }}>За часы</TableCell>\n              <TableCell style={{ textAlign: 'center' }}>Ошибки</TableCell>\n              <TableCell style={{ textAlign: 'center' }}>Бонус</TableCell>\n              { this.props.show_zp == 1 || this.props.show_zp == 0 ?\n                <TableCell style={{ textAlign: 'center' }}>Всего</TableCell>\n                  :\n                null\n              }\n              <TableCell style={{ textAlign: 'center' }}>Выдано</TableCell>\n            </>\n          }\n        </TableRow>\n        \n        <TableRow style={{ backgroundColor: '#e5e5e5' }}>\n          <TableCell style={{ textAlign: 'center' }} colSpan={ this.props.days.length + 3 + 7 }>{this.props.item.data}</TableCell>\n        </TableRow>\n      </>\n    )\n  }\n}\n\nclass WorkSchedule_Table extends React.Component {\n  shouldComponentUpdate(nextProps) {\n\n    // console.log(nextProps); // какие именно массивы данных сравнивать ?\n\n    // var array1 = nextProps.event;\n    // var array2 = this.props.event;\n\n    // var is_same =\n    //   array1.length == array2.length &&\n    //   array1.every(function (element, index) {\n    //     return element === array2[index];\n    //   });\n\n    // return !is_same;\n    return true;\n  }\n\n  render() {\n    return (\n      <Box sx={{ width: '100%' }}>\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Tabs value={this.props.tabTable} onChange={ this.props.onChange.bind(this) } centered >\n          <Tab label=\"С 1 по 15 числа\" {...a11yProps(0)} />\n          <Tab label=\"С 16 по конец месяца\" {...a11yProps(1)} />\n        </Tabs>\n      </Box>\n      <TabPanel value={this.props.tabTable} index={0}>\n        { !this.props.one ? null :\n          <TableContainer component={Paper}>\n            <Table id=\"table_graph_one\">\n              \n              <TableBody>\n                \n                { this.props.test_one.map( (item, key) =>\n                  item.row == 'header' ?\n                    <HeaderItem key={key} bonus_other={this.props.one.bonus_other} changeLVDir={this.props.changeLVDir.bind(this)} changeDopBonus={this.props.changeDopBonus.bind(this)} kind={this.props.kind} show_zp={this.props.show_zp_one} lv_dir={this.props.lv_dir} lv_cafe={this.props.lv_cafe} dataKey={key} days={this.props.one.days} item={item} />\n                      :\n                    <TableRow key={key}>\n                      <TableCell className='name_pinning' onClick={ this.props.openM.bind(this, item.data) }>{item.data.user_name}</TableCell>\n                      <TableCell style={{ minWidth: 165, minHeight: 38 }}>{item.data.app_name}</TableCell>\n\n                      { this.props.kind == 'manager' ? null :\n                        <TableCell style={{ textAlign: 'center' }}> <SyncAltIcon style={{ cursor: 'pointer', display: 'block', margin: 'auto' }} \n                        onClick={this.props.onClick.bind(this)} /> </TableCell>\n                      }\n\n                      { item.data.dates.map( (date, date_k) =>\n                        <TableCell onClick={ this.props.openH.bind(this, item.data, date.date) } className=\"min_block\" style={{ backgroundColor: date.info ? date.info.color : '#fff', cursor: 'pointer' }} key={date_k}>{date.info ? date.info.hours : ''}</TableCell>\n                      ) }\n                      \n                      { this.props.kind == 'manager' ? null :\n                        <>\n                          <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}  onClick={this.props.onClick2.bind(this)}>{item.data.price_p_h}</TableCell>\n                          <TableCell style={{textAlign: 'center'}}>{item.data.dop_bonus}</TableCell>\n                          <TableCell style={{textAlign: 'center'}}>{item.data.h_price}</TableCell>\n                          <TableCell style={{textAlign: 'center'}}>{item.data.err_price}</TableCell>\n                          <TableCell style={{textAlign: 'center'}}>{item.data.my_bonus}</TableCell>\n\n                          { this.props.show_zp_one == 1 || this.props.show_zp_one == 0 ?\n                            <TableCell style={{textAlign: 'center'}}>{ ( parseInt(item.data.dop_bonus) + parseInt(item.data.dir_price) + parseInt(item.data.dir_price_dop) + parseInt(item.data.h_price) + parseInt(item.data.my_bonus) - parseInt(item.data.err_price) )+'' }</TableCell>\n                              :\n                            null\n                          }\n\n                          {item.data.app_type == 'driver' ?\n                            <TableCell style={{textAlign: 'center'}}></TableCell>\n                              :\n                            <TableCell style={{textAlign: 'center'}} onClick={this.props.openZP.bind(this, item.data.id, item.data.smena_id, item.data.app_id, 1, item.data)}>{item.data.given}</TableCell>\n                          }\n                          \n                        </>\n                      }\n                    </TableRow>\n                ) }\n                \n                \n              </TableBody>\n              \n              <TableFooter sx={{ '& td': { color: 'rgba(0, 0, 0, 0.87)'  } }}>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n\n                  { this.props.kind == 'manager' ? null :\n                    <TableCell></TableCell>\n                  }\n                  \n                  {this.props.one.bonus.map( (item, key) => \n                    <TableCell className=\"min_block min_size\" style={{ backgroundColor: item.type == 'cur' ? '#98e38d' : '#fff' }} key={key}>{item.res}</TableCell>\n                  )}\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <>\n                      <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}>{this.props.one.other_summ.sum_dop_bonus_price}</TableCell>\n                      <TableCell style={{textAlign: 'center'}}>{this.props.one.other_summ.sum_h_price}</TableCell>\n                      <TableCell style={{textAlign: 'center'}}>{this.props.one.other_summ.sum_err_price}</TableCell>\n                      <TableCell style={{textAlign: 'center'}}>{this.props.one.other_summ.sum_bonus_price}</TableCell>\n\n                      { this.props.show_zp_one == 1 || this.props.show_zp_one == 0 ?\n                        <TableCell style={{textAlign: 'center'}}>{this.props.one.other_summ.sum_to_given_price}</TableCell>\n                          :\n                        null\n                      }\n\n                      <TableCell style={{textAlign: 'center'}}>{this.props.one.other_summ.sum_given_price}</TableCell>\n                    </>\n                  }\n\n                </TableRow>\n                \n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Роллов</TableCell>\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <TableCell></TableCell>\n                  }\n                  \n                  {this.props.one.bonus.map( (item, key) => \n                    <TableCell className=\"min_block min_size\" key={key}>{item.count_rolls}</TableCell>\n                  )}\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <>\n                      <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n\n                      { this.props.show_zp_one == 1 || this.props.show_zp_one == 0 ?\n                        <TableCell style={{textAlign: 'center'}}></TableCell>\n                          :\n                        null\n                      }\n\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                    </>\n                  }\n\n                </TableRow>\n                \n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Пиццы</TableCell>\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <TableCell></TableCell>\n                  }\n                  \n                  {this.props.one.bonus.map( (item, key) => \n                    <TableCell className=\"min_block min_size\" key={key}>{item.count_pizza}</TableCell>\n                  )}\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <>\n                      <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n\n                      { this.props.show_zp_one == 1 || this.props.show_zp_one == 0 ?\n                        <TableCell style={{textAlign: 'center'}}></TableCell>\n                          :\n                        null\n                      }\n\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                    </>\n                  }\n                </TableRow>\n                \n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell className=\"min_size\">Заказы готовились больше 40 минут</TableCell>\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <TableCell></TableCell>\n                  }\n                  \n                  {this.props.one.order_stat.map( (item, key) => \n                    <TableCell className=\"min_block min_size\" key={key}>{item.count_false}</TableCell>\n                  )}\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <>\n                      <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n\n                      { this.props.show_zp_one == 1 || this.props.show_zp_one == 0 ?\n                        <TableCell style={{textAlign: 'center'}}></TableCell>\n                          :\n                        null\n                      }\n\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                    </>\n                  }\n                </TableRow>\n                \n              </TableFooter>\n              \n              \n            </Table>\n          </TableContainer>\n        }\n      </TabPanel>\n      <TabPanel value={this.props.tabTable} index={1}>\n        { !this.props.two ? null :\n          <TableContainer component={Paper}>\n            <Table id=\"table_graph_two\">\n              \n              <TableBody>\n                \n                { this.props.test_two.map( (item, key) =>\n                  item.row == 'header' ?\n                    <HeaderItem bonus_other={this.props.two.bonus_other} changeLVDir={this.props.changeLVDir.bind(this)} changeDopBonus={this.props.changeDopBonus.bind(this)} key={key} kind={this.props.kind} show_zp={this.props.show_zp_two} lv_dir={this.props.lv_dir} lv_cafe={this.props.lv_cafe} dataKey={key} days={this.props.two.days} item={item} />\n                      :\n                    <TableRow key={key}>\n                      <TableCell className='name_pinning' onClick={ this.props.openM.bind(this, item.data) }>{item.data.user_name}</TableCell>\n                      <TableCell style={{ minWidth: 165, minHeight: 38 }}>{item.data.app_name}</TableCell>\n\n                      { this.props.kind == 'manager' ? null :\n                        <TableCell style={{ textAlign: 'center' }}> <SyncAltIcon style={{ cursor: 'pointer', display: 'block', margin: 'auto'}}  onClick={this.props.onClick.bind(this)} /> </TableCell>\n                      }\n\n                      { item.data.dates.map( (date, date_k) =>\n                        <TableCell onClick={ this.props.openH.bind(this, item.data, date.date) } className=\"min_block\" style={{ backgroundColor: date.info ? date.info.color : '#fff', cursor: 'pointer' }} key={date_k}>{date.info ? date.info.hours : ''}</TableCell>\n                      ) }\n                      \n                      { this.props.kind == 'manager' ? null :\n                        <>\n                          <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}  onClick={this.props.onClick2.bind(this)}>{item.data.price_p_h}</TableCell>\n                          <TableCell style={{textAlign: 'center'}}>{item.data.dop_bonus}</TableCell>\n                          <TableCell style={{textAlign: 'center'}}>{item.data.h_price}</TableCell>\n                          <TableCell style={{textAlign: 'center'}}>{item.data.err_price}</TableCell>\n                          <TableCell style={{textAlign: 'center'}}>{item.data.my_bonus}</TableCell>\n                          \n                          { this.props.show_zp_two == 1 || this.props.show_zp_two == 0 ?\n                            <TableCell style={{textAlign: 'center'}}>{ ( parseInt(item.data.dop_bonus) + parseInt(item.data.dir_price_dop) + parseInt(item.data.h_price) + parseInt(item.data.my_bonus) - parseInt(item.data.err_price) )+'' }</TableCell>\n                              :\n                            null\n                          }\n\n                          {item.data.app_type == 'driver' ?\n                            <TableCell style={{textAlign: 'center'}}></TableCell>\n                              :\n                            <TableCell style={{textAlign: 'center'}} onClick={this.props.openZP.bind(this, item.data.id, item.data.smena_id, item.data.app_id, 2, item.data)}>{item.data.given}</TableCell>\n                          }\n                        </>\n                      }\n                    </TableRow>\n                ) }\n                \n                \n              </TableBody>\n              \n              <TableFooter sx={{ '& td': { color: 'rgba(0, 0, 0, 0.87)'  } }}>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <TableCell></TableCell>\n                  }\n                  \n                  {this.props.two.bonus.map( (item, key) => \n                    <TableCell className=\"min_block min_size\" style={{ backgroundColor: item.type == 'cur' ? '#98e38d' : '#fff' }} key={key}>{item.res}</TableCell>\n                  )}\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <>\n                      <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}>{this.props.two.other_summ.sum_dop_bonus_price}</TableCell>\n                      <TableCell style={{textAlign: 'center'}}>{this.props.two.other_summ.sum_h_price}</TableCell>\n                      <TableCell style={{textAlign: 'center'}}>{this.props.two.other_summ.sum_err_price}</TableCell>\n                      <TableCell style={{textAlign: 'center'}}>{this.props.two.other_summ.sum_bonus_price}</TableCell>\n\n                      { this.props.show_zp_two == 1 || this.props.show_zp_two == 0 ?\n                        <TableCell style={{textAlign: 'center'}}>{this.props.two.other_summ.sum_to_given_price}</TableCell>\n                          :\n                        null\n                      }\n\n                      <TableCell style={{textAlign: 'center'}}>{this.props.two.other_summ.sum_given_price}</TableCell>\n                    </>\n                  }\n                </TableRow>\n                \n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Роллов</TableCell>\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <TableCell></TableCell>\n                  }\n                  \n                  {this.props.two.bonus.map( (item, key) => \n                    <TableCell className=\"min_block min_size\" key={key}>{item.count_rolls}</TableCell>\n                  )}\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <>\n                      <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n\n                      { this.props.show_zp_two == 1 || this.props.show_zp_two == 0 ?\n                        <TableCell style={{textAlign: 'center'}}></TableCell>\n                          :\n                        null\n                      }\n\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                    </>\n                  }\n                </TableRow>\n                \n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Пиццы</TableCell>\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <TableCell></TableCell>\n                  }\n                  \n                  {this.props.two.bonus.map( (item, key) => \n                    <TableCell className=\"min_block min_size\" key={key}>{item.count_pizza}</TableCell>\n                  )}\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <>\n                      <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n\n                      { this.props.show_zp_two == 1 || this.props.show_zp_two == 0 ?\n                        <TableCell style={{textAlign: 'center'}}></TableCell>\n                          :\n                        null\n                      }\n\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                    </>\n                  }\n                </TableRow>\n                \n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell className=\"min_size\">Заказы готовились больше 40 минут</TableCell>\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <TableCell></TableCell>\n                  }\n                  \n                  {this.props.two.order_stat.map( (item, key) => \n                    <TableCell className=\"min_block min_size\" key={key}>{item.count_false}</TableCell>\n                  )}\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <>\n                      <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n\n                      { this.props.show_zp_two == 1 || this.props.show_zp_two == 0 ?\n                        <TableCell style={{textAlign: 'center'}}></TableCell>\n                          :\n                        null\n                      }\n\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                    </>\n                  }\n                </TableRow>\n                \n              </TableFooter>\n              \n              \n            </Table>\n          </TableContainer>\n        }\n      </TabPanel>\n      \n    </Box>\n    );\n  }\n}\n\nclass WorkSchedule_Table_without_functions extends React.Component {\n  shouldComponentUpdate(nextProps) {\n\n    // console.log(nextProps); // какие именно массивы данных сравнивать ?\n\n    // var array1 = nextProps.event;\n    // var array2 = this.props.event;\n\n    // var is_same =\n    //   array1.length == array2.length &&\n    //   array1.every(function (element, index) {\n    //     return element === array2[index];\n    //   });\n\n    // return !is_same;\n    return true;\n  }\n\n  render() {\n    return (\n      <Box sx={{ width: '100%' }}>\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Tabs value={this.props.tabTable} centered >\n          <Tab label=\"С 1 по 15 числа\" {...a11yProps(0)} />\n          <Tab label=\"С 16 по конец месяца\" {...a11yProps(1)} />\n        </Tabs>\n      </Box>\n      <TabPanel value={this.props.tabTable} index={0}>\n        { !this.props.one ? null :\n          <TableContainer component={Paper}>\n            <Table id=\"table_graph_one\">\n              \n              <TableBody>\n                \n                { this.props.test_one.map( (item, key) =>\n                  item.row == 'header' ?\n                    <HeaderItem key={key} bonus_other={this.props.one.bonus_other} show_zp={this.props.show_zp_one} lv_dir={this.props.lv_dir} lv_cafe={this.props.lv_cafe} dataKey={key} days={this.props.one.days} item={item} />\n                      :\n                    <TableRow key={key}>\n                      <TableCell className='name_pinning'>{item.data.user_name}</TableCell>\n                      <TableCell style={{ minWidth: 165, minHeight: 38 }}>{item.data.app_name}</TableCell>\n\n                      { this.props.kind == 'manager' ? null :\n                        <TableCell style={{ textAlign: 'center' }}> <SyncAltIcon style={{ cursor: 'pointer', display: 'block', margin: 'auto' }} /> </TableCell>\n                      }\n\n                      { item.data.dates.map( (date, date_k) =>\n                        <TableCell className=\"min_block\" style={{ backgroundColor: date.info ? date.info.color : '#fff', cursor: 'pointer' }} key={date_k}>{date.info ? date.info.hours : ''}</TableCell>\n                      ) }\n                      \n                      { this.props.kind == 'manager' ? null :\n                        <>\n                          <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}>{item.data.price_p_h}</TableCell>\n                          <TableCell style={{textAlign: 'center'}}>{item.data.dop_bonus}</TableCell>\n                          <TableCell style={{textAlign: 'center'}}>{item.data.h_price}</TableCell>\n                          <TableCell style={{textAlign: 'center'}}>{item.data.err_price}</TableCell>\n                          <TableCell style={{textAlign: 'center'}}>{item.data.my_bonus}</TableCell>\n\n                          { this.props.show_zp_one == 1 || this.props.show_zp_one == 0 ?\n                            <TableCell style={{textAlign: 'center'}}>{ ( parseInt(item.data.dop_bonus) + parseInt(item.data.dir_price) + parseInt(item.data.dir_price_dop) + parseInt(item.data.h_price) + parseInt(item.data.my_bonus) - parseInt(item.data.err_price) )+'' }</TableCell>\n                              :\n                            null\n                          }\n\n                          {item.data.app_type == 'driver' ?\n                            <TableCell style={{textAlign: 'center'}}></TableCell>\n                              :\n                            <TableCell style={{textAlign: 'center'}}>{item.data.given}</TableCell>\n                          }\n                          \n                        </>\n                      }\n                    </TableRow>\n                ) }\n                \n                \n              </TableBody>\n              \n              <TableFooter sx={{ '& td': { color: 'rgba(0, 0, 0, 0.87)'  } }}>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n\n                  { this.props.kind == 'manager' ? null :\n                    <TableCell></TableCell>\n                  }\n                  \n                  {this.props.one.bonus.map( (item, key) => \n                    <TableCell className=\"min_block min_size\" style={{ backgroundColor: item.type == 'cur' ? '#98e38d' : '#fff' }} key={key}>{item.res}</TableCell>\n                  )}\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <>\n                      <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}>{this.props.one.other_summ.sum_dop_bonus_price}</TableCell>\n                      <TableCell style={{textAlign: 'center'}}>{this.props.one.other_summ.sum_h_price}</TableCell>\n                      <TableCell style={{textAlign: 'center'}}>{this.props.one.other_summ.sum_err_price}</TableCell>\n                      <TableCell style={{textAlign: 'center'}}>{this.props.one.other_summ.sum_bonus_price}</TableCell>\n\n                      { this.props.show_zp_one == 1 || this.props.show_zp_one == 0 ?\n                        <TableCell style={{textAlign: 'center'}}>{this.props.one.other_summ.sum_to_given_price}</TableCell>\n                          :\n                        null\n                      }\n\n                      <TableCell style={{textAlign: 'center'}}>{this.props.one.other_summ.sum_given_price}</TableCell>\n                    </>\n                  }\n\n                </TableRow>\n                \n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Роллов</TableCell>\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <TableCell></TableCell>\n                  }\n                  \n                  {this.props.one.bonus.map( (item, key) => \n                    <TableCell className=\"min_block min_size\" key={key}>{item.count_rolls}</TableCell>\n                  )}\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <>\n                      <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n\n                      { this.props.show_zp_one == 1 || this.props.show_zp_one == 0 ?\n                        <TableCell style={{textAlign: 'center'}}></TableCell>\n                          :\n                        null\n                      }\n\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                    </>\n                  }\n\n                </TableRow>\n                \n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Пиццы</TableCell>\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <TableCell></TableCell>\n                  }\n                  \n                  {this.props.one.bonus.map( (item, key) => \n                    <TableCell className=\"min_block min_size\" key={key}>{item.count_pizza}</TableCell>\n                  )}\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <>\n                      <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n\n                      { this.props.show_zp_one == 1 || this.props.show_zp_one == 0 ?\n                        <TableCell style={{textAlign: 'center'}}></TableCell>\n                          :\n                        null\n                      }\n\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                    </>\n                  }\n                </TableRow>\n                \n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell className=\"min_size\">Заказы готовились больше 40 минут</TableCell>\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <TableCell></TableCell>\n                  }\n                  \n                  {this.props.one.order_stat.map( (item, key) => \n                    <TableCell className=\"min_block min_size\" key={key}>{item.count_false}</TableCell>\n                  )}\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <>\n                      <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n\n                      { this.props.show_zp_one == 1 || this.props.show_zp_one == 0 ?\n                        <TableCell style={{textAlign: 'center'}}></TableCell>\n                          :\n                        null\n                      }\n\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                    </>\n                  }\n                </TableRow>\n                \n              </TableFooter>\n              \n              \n            </Table>\n          </TableContainer>\n        }\n      </TabPanel>\n      <TabPanel value={this.props.tabTable} index={1}>\n        { !this.props.two ? null :\n          <TableContainer component={Paper}>\n            <Table id=\"table_graph_two\">\n              \n              <TableBody>\n                \n                { this.props.test_two.map( (item, key) =>\n                  item.row == 'header' ?\n                    <HeaderItem bonus_other={this.props.two.bonus_other} key={key} kind={this.props.kind} show_zp={this.props.show_zp_two} lv_dir={this.props.lv_dir} lv_cafe={this.props.lv_cafe} dataKey={key} days={this.props.two.days} item={item} />\n                      :\n                    <TableRow key={key}>\n                      <TableCell className='name_pinning'>{item.data.user_name}</TableCell>\n                      <TableCell style={{ minWidth: 165, minHeight: 38 }}>{item.data.app_name}</TableCell>\n\n                      { this.props.kind == 'manager' ? null :\n                        <TableCell style={{ textAlign: 'center' }}> <SyncAltIcon style={{ cursor: 'pointer', display: 'block', margin: 'auto'}} /> </TableCell>\n                      }\n\n                      { item.data.dates.map( (date, date_k) =>\n                        <TableCell className=\"min_block\" style={{ backgroundColor: date.info ? date.info.color : '#fff', cursor: 'pointer' }} key={date_k}>{date.info ? date.info.hours : ''}</TableCell>\n                      ) }\n                      \n                      { this.props.kind == 'manager' ? null :\n                        <>\n                          <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}>{item.data.price_p_h}</TableCell>\n                          <TableCell style={{textAlign: 'center'}}>{item.data.dop_bonus}</TableCell>\n                          <TableCell style={{textAlign: 'center'}}>{item.data.h_price}</TableCell>\n                          <TableCell style={{textAlign: 'center'}}>{item.data.err_price}</TableCell>\n                          <TableCell style={{textAlign: 'center'}}>{item.data.my_bonus}</TableCell>\n                          \n                          { this.props.show_zp_two == 1 || this.props.show_zp_two == 0 ?\n                            <TableCell style={{textAlign: 'center'}}>{ ( parseInt(item.data.dop_bonus) + parseInt(item.data.dir_price_dop) + parseInt(item.data.h_price) + parseInt(item.data.my_bonus) - parseInt(item.data.err_price) )+'' }</TableCell>\n                              :\n                            null\n                          }\n\n                          {item.data.app_type == 'driver' ?\n                            <TableCell style={{textAlign: 'center'}}></TableCell>\n                              :\n                            <TableCell style={{textAlign: 'center'}}>{item.data.given}</TableCell>\n                          }\n                        </>\n                      }\n                    </TableRow>\n                ) }\n                \n                \n              </TableBody>\n              \n              <TableFooter sx={{ '& td': { color: 'rgba(0, 0, 0, 0.87)'  } }}>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <TableCell></TableCell>\n                  }\n                  \n                  {this.props.two.bonus.map( (item, key) => \n                    <TableCell className=\"min_block min_size\" style={{ backgroundColor: item.type == 'cur' ? '#98e38d' : '#fff' }} key={key}>{item.res}</TableCell>\n                  )}\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <>\n                      <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}>{this.props.two.other_summ.sum_dop_bonus_price}</TableCell>\n                      <TableCell style={{textAlign: 'center'}}>{this.props.two.other_summ.sum_h_price}</TableCell>\n                      <TableCell style={{textAlign: 'center'}}>{this.props.two.other_summ.sum_err_price}</TableCell>\n                      <TableCell style={{textAlign: 'center'}}>{this.props.two.other_summ.sum_bonus_price}</TableCell>\n\n                      { this.props.show_zp_two == 1 || this.props.show_zp_two == 0 ?\n                        <TableCell style={{textAlign: 'center'}}>{this.props.two.other_summ.sum_to_given_price}</TableCell>\n                          :\n                        null\n                      }\n\n                      <TableCell style={{textAlign: 'center'}}>{this.props.two.other_summ.sum_given_price}</TableCell>\n                    </>\n                  }\n                </TableRow>\n                \n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Роллов</TableCell>\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <TableCell></TableCell>\n                  }\n                  \n                  {this.props.two.bonus.map( (item, key) => \n                    <TableCell className=\"min_block min_size\" key={key}>{item.count_rolls}</TableCell>\n                  )}\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <>\n                      <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n\n                      { this.props.show_zp_two == 1 || this.props.show_zp_two == 0 ?\n                        <TableCell style={{textAlign: 'center'}}></TableCell>\n                          :\n                        null\n                      }\n\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                    </>\n                  }\n                </TableRow>\n                \n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Пиццы</TableCell>\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <TableCell></TableCell>\n                  }\n                  \n                  {this.props.two.bonus.map( (item, key) => \n                    <TableCell className=\"min_block min_size\" key={key}>{item.count_pizza}</TableCell>\n                  )}\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <>\n                      <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n\n                      { this.props.show_zp_two == 1 || this.props.show_zp_two == 0 ?\n                        <TableCell style={{textAlign: 'center'}}></TableCell>\n                          :\n                        null\n                      }\n\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                    </>\n                  }\n                </TableRow>\n                \n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell className=\"min_size\">Заказы готовились больше 40 минут</TableCell>\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <TableCell></TableCell>\n                  }\n                  \n                  {this.props.two.order_stat.map( (item, key) => \n                    <TableCell className=\"min_block min_size\" key={key}>{item.count_false}</TableCell>\n                  )}\n                  \n                  { this.props.kind == 'manager' ? null :\n                    <>\n                      <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n\n                      { this.props.show_zp_two == 1 || this.props.show_zp_two == 0 ?\n                        <TableCell style={{textAlign: 'center'}}></TableCell>\n                          :\n                        null\n                      }\n\n                      <TableCell style={{textAlign: 'center'}}></TableCell>\n                    </>\n                  }\n                </TableRow>\n                \n              </TableFooter>\n              \n              \n            </Table>\n          </TableContainer>\n        }\n      </TabPanel>\n      \n    </Box>\n    );\n  }\n}\n\nclass WorkSchedule_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      module: 'work_schedule',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      mounths: [],\n      point: '',\n      mounth: '',\n      \n      one: null,\n      two: null,\n      test_one: [],\n      test_two: [],\n      \n      isOpenModalH: false,\n      isOpenModalM: false,\n\n      userInfo: null,\n      \n      hList: [],\n      mList: [],\n      \n      newTimeStart: '10:00',\n      newTimeEnd: '22:00',\n      \n      openNewTimeAdd: false,\n      \n      otherAppList: [],\n      otherApp: '',\n      \n      testVal: '',\n      testOpen: false,\n      \n      mainMenu: false,\n      mainMenuH: false,\n      mainMenuSmena: false,\n      show_bonus: false,\n      mainMenuPrice: false,\n      mainMenuLVDIR: false,\n      mainMenuDopBonus: false,\n      mainMenuZP: false,\n      mainMenuPoints: false,\n\n      show_zp_one: 0,\n      show_zp_two: 0,\n      kind: '',\n\n      myOtherPoints: [],\n      myOtherSmens: [],\n      \n      chooseUser: null,\n\n      tabTable: 1,\n\n      lv_cafe: 0,\n      lv_dir: 0,\n      arr_dir_lv: [],\n\n      arrTimeAdd: [],\n      typeTimeAdd: 0\n    };\n  }\n  \n  async componentDidMount(){\n    let data = {\n      \n    };\n    \n    let res = await this.getData('get_all', data);\n    \n    let hList = [];\n    let mList = [];\n    \n    for(let h = 0; h <= 23; h ++){\n      hList.push({\n        id: h,\n        name: h\n      })\n    }\n    \n    for(let m = 0; m <= 50; m += 10){\n      mList.push({\n        id: m,\n        name: m\n      })\n    }\n    \n    this.setState({\n      points: res.point_list,\n      point: res.point_list[0].id,\n      \n      mounths: res.mounths,\n      mounth: res.mounths.find( (item) => parseInt( item.is_active ) == 1 )['id'],\n      \n      hList: hList,\n      mList: mList,\n      \n      module_name: res.module_info.name\n    })\n    \n    document.title = res.module_info.name;\n    \n    let arr_dir_lv = [];\n\n    for(let i = 1; i <= 20; i ++){\n      arr_dir_lv.push(i);\n    }\n\n    this.setState({\n      arr_dir_lv: arr_dir_lv\n    })\n\n    setTimeout( () => {\n      this.updateData();\n    }, 300 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        window.location.pathname = '/';\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      console.log( err )\n    });\n  }\n   \n  changeCheckOrders(event){\n    let data = event.target.checked;\n    \n    this.setState({\n      showReady: data\n    })\n  }\n  \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      mounth: this.state.mounth\n    };\n    \n    let res = await this.getData('get_graph', data);\n    \n    // console.log( res )\n    \n    this.setState({\n      one: res.date.one,\n      two: res.date.two,\n      \n      test_one: res.one,\n      test_two: res.two,\n\n      show_zp_one: res.show_zp_one,\n      show_zp_two: res.show_zp_two,\n      kind: res.kind,\n\n      lv_cafe: res.lv_cafe,\n      lv_dir: res.lv_dir\n    })\n  }\n  \n  async openH(item, this_date){\n    // console.log( item )\n    \n    let data = {\n      smena_id: item.smena_id,\n      app_id: item.app_id,\n      user_id: item.id,\n      date: this_date,\n      date_start: item.date\n    };\n    \n    let res = await this.getData('get_user_day', data);\n    \n    // console.log( res )\n    \n    this.setState({\n      isOpenModalH: true,\n      userInfo: res.h_info,\n      otherAppList: res.other_app,\n      show_bonus: res.show_bonus\n    })\n  }\n\n  async openM(item){\n    // console.log( item )\n    \n    let data = {\n      smena_id: item.smena_id,\n      app_id: item.app_id,\n      user_id: item.id,\n      date: this.state.mounth,\n      date_start: item.date\n    };\n    \n    let res = await this.getData('get_user_month', data);\n    \n    // console.log( res )\n    \n    this.setState({\n      isOpenModalM: true,\n      userInfo: res.h_info,\n      arrTimeAdd: res.hourse_days\n    })\n  }\n  \n  delTime(key_time){\n    let userInfo = this.state.userInfo;\n    \n    userInfo.hours = userInfo.hours.filter( (item, key) => parseInt(key) != parseInt(key_time) );\n    \n    this.setState({\n      userInfo: userInfo\n    })\n  }\n  \n  changeHourse(type, key, event){\n    let userInfo = this.state.userInfo;\n    \n    userInfo.hours[ key ][ [type] ] = event.target.value;\n    \n    this.setState({\n      userInfo: userInfo\n    })\n  }\n  \n  async saveDayHourse(){\n    let data = {\n      date: this.state.userInfo.date,\n      user_id: this.state.userInfo.user_id,\n      smena_id: this.state.userInfo.smena_id,\n      app_id: this.state.userInfo.app_id,\n      hours: this.state.userInfo.hours,\n      new_app: this.state.userInfo.new_app,\n      mentor_id: this.state.userInfo.mentor_id\n    }\n    \n    let res = await this.getData('save_user_day', data);\n    \n    if( res['st'] == true ){\n      this.setState({\n        mainMenu: false,\n        mainMenuH: false,\n        mainMenuSmena: false,\n        isOpenModalH: false,\n        userInfo: null\n      })\n\n      setTimeout( () => {\n        this.updateData();\n      }, 300 )\n    }else{\n      alert(res['text'])\n    }\n  }\n  \n  addTime(){\n    let userInfo = this.state.userInfo;\n    \n    let check = userInfo.hours.find( (item) => item.time_start == this.state.newTimeStart && item.time_end == this.state.newTimeEnd );\n    \n    if( check ){\n      this.setState({\n        openNewTimeAdd: false\n      })\n      \n      return ;\n    }\n    \n    userInfo.hours.push({\n      time_start: this.state.newTimeStart,\n      time_end: this.state.newTimeEnd\n    })\n    \n    this.setState({\n      userInfo: userInfo,\n      openNewTimeAdd: false\n    })\n  }\n  \n  async fastTime(type){\n    let data = {\n      type: type,\n      user_id: this.state.chooseUser.id,\n      app_id: this.state.chooseUser.app_id,\n      smena_id: this.state.chooseUser.smena_id,\n      date: this.state.mounth\n    }\n    \n    let res = await this.getData('save_fastTime', data);\n    \n    // console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        mainMenu: false,\n        mainMenuH: false,\n        mainMenuSmena: false\n      })\n\n      setTimeout( () => {\n        this.updateData();\n      }, 300 )\n    }else{\n      alert(res['text'])\n    }\n  }\n\n  async fastSmena(smena_id){\n    let data = {\n      new_smena_id: smena_id,\n      user_id: this.state.chooseUser.id,\n      app_id: this.state.chooseUser.app_id,\n      smena_id: this.state.chooseUser.smena_id,\n      date: this.state.mounth,\n      part: this.state.tabTable\n    }\n    \n    let res = await this.getData('save_fastSmena', data);\n    \n    if( res['st'] == true ){\n      this.setState({\n        mainMenu: false,\n        mainMenuH: false,\n        mainMenuSmena: false\n      })\n\n      setTimeout( () => {\n        this.updateData();\n      }, 300 )\n      \n    }else{\n      alert(res['text'])\n    }\n  }\n\n  async changePriceH(price){\n    let data = {\n      price: price,\n      user_id: this.state.chooseUser.id,\n      app_id: this.state.chooseUser.app_id,\n      smena_id: this.state.chooseUser.smena_id,\n      date: this.state.mounth,\n      part: this.state.tabTable\n    }\n    \n    let res = await this.getData('save_userPriceH', data);\n    \n    // console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        mainMenu: false,\n        mainMenuH: false,\n        mainMenuPrice: false\n      })\n\n      this.updateData();\n    }else{\n      alert(res['text'])\n    }\n  }\n\n  checkFastPoint(point_id, smena_id){\n    if (confirm(\"Точно сменить точку с сегоднешнего дня ?\")) {\n      this.fastPoint(point_id, smena_id)\n    }\n  }\n\n  async fastPoint(point_id, smena_id){\n    let data = {\n      new_point_id: point_id,\n      new_smena_id: smena_id,\n      user_id: this.state.chooseUser.id,\n      app_id: this.state.chooseUser.app_id,\n      smena_id: this.state.chooseUser.smena_id,\n    }\n    \n    let res = await this.getData('save_fastPoint', data);\n    \n    // console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        mainMenu: false,\n        mainMenuPoints: false,\n        chooseUser: null\n      })\n\n      setTimeout( () => {\n        this.updateData();\n      }, 300 )\n      \n    }else{\n      alert(res['text'])\n    }\n  }\n\n  changeLVDir(){\n    this.setState({\n      mainMenuLVDIR: true\n    })\n  }\n\n  checkNewLvDir(LV){\n    if (confirm(\"Точно изменить уровень директора ?\")) {\n      this.newLvDir(LV)\n    } \n  }\n\n  async newLvDir(LV){\n    let data = {\n      date: this.state.mounth,\n      point_id: this.state.point,\n      dir_lv: LV\n    }\n    \n    let res = await this.getData('save_dir_lv', data);\n    \n    // console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        mainMenuLVDIR: false\n      })\n\n      setTimeout( () => {\n        this.updateData();\n      }, 300 )\n    }else{\n      alert(res['text'])\n    }\n  }\n\n  changeDopBonus(){\n    this.setState({\n      mainMenuDopBonus: true\n    })\n  }\n\n  checkDopBonus(type){\n    if (confirm(\"Точно ?\")) {\n      this.dop_bonus(type)\n    } \n  }\n\n  async dop_bonus(type){\n    let data = {\n      date: this.state.mounth,\n      part: this.state.tabTable,\n      point_id: this.state.point,\n      type: type\n    }\n    \n    let res = await this.getData('save_dop_bonus', data);\n    \n    // console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        mainMenuDopBonus: false\n      })\n\n      this.updateData();\n    }else{\n      alert(res['text'])\n    }\n  }\n\n  renderWeekPickerDay = (date, selectedDates, pickersDayProps) => {\n    pickersDayProps['selected'] = false;\n    pickersDayProps['aria-selected'] = false;\n\n    let arr = this.state.arrTimeAdd;\n    let res = arr.find( (item) => formatDate(item.date) == formatDate(date) );\n\n    if( res ){\n      let backgroundColor = '#fff';\n\n      if( parseInt(res.type) == 0 ){\n        backgroundColor = '#98e38d';\n      }else{\n        if( parseInt(res.type) == 1 ){\n          backgroundColor = '#3dcef2';\n        }else{\n          if( parseInt(res.type) == 2 ){\n            backgroundColor = '#1560bd';\n          }else{\n            backgroundColor = '#926eae';\n          }\n        }\n      }\n\n      return <PickersDay {...pickersDayProps} style={{ backgroundColor: backgroundColor, color: '#fff' }} onClick={ this.chooseDay.bind(this, date) } />;\n    }\n    \n    return <PickersDay {...pickersDayProps} onClick={ this.chooseDay.bind(this, date) }  />;\n  };\n\n  chooseDay(newValue, event){\n    let arr = this.state.arrTimeAdd;\n\n    let res = arr.find( (item) => formatDate(item.date) == formatDate(newValue) );\n\n    if( !res ){\n      let time_start = '';\n      let time_end = '';\n\n      if( parseInt(this.state.typeTimeAdd) == 0 ){\n        time_start = '10:00';\n        time_end = '22:00'\n      }\n\n      if( parseInt(this.state.typeTimeAdd) == 1 ){\n        time_start = '10:00';\n        time_end = '16:00'\n      }\n\n      if( parseInt(this.state.typeTimeAdd) == 2 ){\n        time_start = '16:00';\n        time_end = '22:00'\n      }\n\n      arr.push({\n        date: formatDate(newValue),\n        type: this.state.typeTimeAdd,\n        time_start: time_start,\n        time_end: time_end\n      })\n\n      this.setState({\n        arrTimeAdd: arr\n      })\n    }else{\n      let newArr = arr.filter( (item) => formatDate(item.date) != formatDate(newValue) );\n\n      this.setState({\n        arrTimeAdd: newArr\n      })\n    }\n  }\n\n  chooseType(type){\n    this.setState({\n      typeTimeAdd: type\n    })\n  }\n\n  async saveUserM(){\n    let data = {\n     \n      dates: this.state.arrTimeAdd,\n      point_id: this.state.point,\n      date: this.state.mounth,\n\n      user_id: this.state.userInfo.user.user_id,\n      smena_id: this.state.userInfo.user.smena_id,\n      app_id: this.state.userInfo.user.app_id,\n    }\n    \n    let res = await this.getData('save_user_month', data);\n    \n    // console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        isOpenModalM: false,\n        userInfo: null\n      })\n\n      setTimeout( () => {\n        this.updateData();\n      }, 300 )\n      \n    }else{\n      alert(res['text'])\n    }\n  }\n\n  openZP(user_id, smena_id, app_id, part, user){\n    // console.log(user)\n\n    let fullPrice = parseInt(user.h_price) + parseInt(user.my_bonus) + parseInt(user.dop_bonus) - parseInt(user.err_price);\n\n    this.setState({\n      mainMenuZP: true,\n      userInfo: {\n        name: user.user_name,\n        app: user.full_app_name,\n        fullPrice: fullPrice,\n        given: user.given,\n        date: this.state.mounth + (parseInt(part) == 1 ? '-01' : '-16'),\n        user_id: user_id,\n        smena_id: smena_id,\n        app_id: app_id\n      }\n    })\n  }\n\n  async saveGive(){\n    let data = {\n      date: this.state.userInfo.date,\n      user_id: this.state.userInfo.user_id,\n      smena_id: this.state.userInfo.smena_id,\n      app_id: this.state.userInfo.app_id,\n      give_price: this.state.userInfo.given,\n    }\n\n    let res = await this.getData('save_user_give_price', data);\n    \n    // console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        mainMenuZP: false,\n        userInfo: null\n      })\n\n      setTimeout( () => {\n        this.updateData();\n      }, 300 )\n      \n    }else{\n      alert(res['text'])\n    }\n  }\n\n  render(){ \n    return (\n      <>\n        <Backdrop open={this.state.is_load} style={{ zIndex: 999 }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog onClose={ () => { this.setState({ mainMenu: false }) } } open={this.state.mainMenu}>\n          \n          { !this.state.chooseUser ? null :\n            <DialogTitle>{this.state.chooseUser.full_app_name} {this.state.chooseUser.user_name} {this.state.mounth}</DialogTitle>\n          }\n          \n          <List sx={{ pt: 0 }}>\n            \n            <ListItem button onClick={ () => { this.setState({ mainMenu: false, mainMenuH: true }) } }>\n              <ListItemAvatar>\n                <Avatar>\n                  <AccessTimeIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Сменить часы на месяц\" />\n            </ListItem>\n            \n            <ListItem button onClick={ () => { this.setState({ mainMenu: false, mainMenuSmena: true, myOtherSmens: this.state.chooseUser.other_smens }) } }>\n              <ListItemAvatar>\n                <Avatar>\n                  <SyncAltIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Сменить смену\" />\n            </ListItem>\n            <ListItem button onClick={ () => { this.setState({ mainMenu: false, mainMenuPoints: true, myOtherPoints: this.state.chooseUser.other_points }) } }>\n              <ListItemAvatar>\n                <Avatar>\n                  <HomeWorkIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Сменить точку\" />\n            </ListItem>\n            \n          </List>\n        </Dialog>\n        \n        <Dialog onClose={ () => { this.setState({ mainMenuH: false }) } } open={this.state.mainMenuH}>\n          \n          { !this.state.chooseUser ? null :\n            <DialogTitle>Часы {this.state.chooseUser.user_name} {this.state.mounth}</DialogTitle>\n          }\n          \n          <List sx={{ pt: 0 }}>\n            \n            <ListItem button onClick={this.fastTime.bind(this, 1)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <LooksOneIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"С 1 числа 2/2 с 10 до 22 на месяц\" />\n            </ListItem>\n            \n            <ListItem button onClick={this.fastTime.bind(this, 2)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <LooksTwoIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Со 2 числа 2/2 с 10 до 22 на месяц\" />\n            </ListItem>\n            <ListItem button onClick={this.fastTime.bind(this, 3)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <Looks3Icon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"С 3 числа 2/2 с 10 до 22 на месяц\" />\n            </ListItem>\n            <ListItem button onClick={this.fastTime.bind(this, 4)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <Looks3Icon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"С 4 числа 2/2 с 10 до 22 на месяц\" />\n            </ListItem>\n            \n          </List>\n        </Dialog>\n\n        <Dialog onClose={ () => { this.setState({ mainMenuSmena: false }) } } open={this.state.mainMenuSmena}>\n          \n          { !this.state.chooseUser ? null :\n            <DialogTitle>Смена {this.state.chooseUser.user_name} {this.state.mounth}</DialogTitle>\n          }\n          \n          <List sx={{ pt: 0 }}>\n            \n            { this.state.myOtherSmens.map( (item, key) =>\n              <ListItem key={key} button onClick={this.fastSmena.bind(this, item.id)}>\n                <ListItemAvatar>\n                  <Avatar>\n                    <AssessmentIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={item.name} />\n              </ListItem>\n            ) }\n        \n          </List>\n        </Dialog>\n\n        <Dialog onClose={ () => { this.setState({ mainMenuPoints: false }) } } open={this.state.mainMenuPoints}>\n          \n          { !this.state.chooseUser ? null :\n            <DialogTitle>Смена точка с сегоднешнего дня {this.state.chooseUser.user_name}</DialogTitle>\n          }\n          \n          <List sx={{ pt: 0 }}>\n            \n            { this.state.myOtherPoints.map( (item, key) =>\n              <ListItem key={key} button >\n                <ListItemAvatar>\n                  <Avatar>\n                    <HomeWorkIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={item.name} />\n              </ListItem>\n            ) }\n        \n          </List>\n        </Dialog>\n        \n        <Dialog onClose={ () => { this.setState({ mainMenuPrice: false }) } } open={this.state.mainMenuPrice}>\n          \n          { !this.state.chooseUser ? null :\n            <DialogTitle>Часовая ставка {this.state.chooseUser.user_name} {this.state.mounth}</DialogTitle>\n          }\n          \n          { !this.state.chooseUser ? null :\n            <List sx={{ pt: 0 }}>\n              \n              { this.state.chooseUser.price_arr.map( (item, key) =>\n                <ListItem key={key} button onClick={this.changePriceH.bind(this, item)} style={ parseFloat(this.state.chooseUser.price_p_h) == parseFloat(item) ? { backgroundColor: 'green', color: '#fff' } : {} }>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <AssessmentIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary={item} />\n                </ListItem>\n              ) }\n          \n            </List>\n          }\n        </Dialog>\n\n        <Dialog onClose={ () => { this.setState({ mainMenuLVDIR: false }) } } open={this.state.mainMenuLVDIR}>\n          \n          <DialogTitle>Уровень директора {this.state.mounth}</DialogTitle>\n          \n          <List style={{ overflow: 'scroll' }}>\n            { this.state.arr_dir_lv.map( (item, key) =>\n              <ListItem key={key} button style={ parseFloat(this.state.lv_dir) == parseFloat(item) ? { backgroundColor: 'green', color: '#fff' } : {} } onClick={this.checkNewLvDir.bind(this, item)}>\n                <ListItemAvatar>\n                  <Avatar>\n                    <AssessmentIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={item+' уровень'} />\n              </ListItem>\n            ) }\n          </List>\n          \n        </Dialog>\n\n        <Dialog onClose={ () => { this.setState({ mainMenuDopBonus: false }) } } open={this.state.mainMenuDopBonus}>\n          \n          <DialogTitle>Командный бонус {this.state.mounth}-{ parseInt(this.state.tabTable) == 0 ? '01' : '16' }</DialogTitle>\n          \n          <List sx={{ pt: 0 }}>\n            \n            <ListItem button>\n              <ListItemAvatar>\n                <Avatar style={{ backgroundColor: 'green' }}>\n                  <CheckIcon style={{ color: '#fff' }} />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={'Выдать'} onClick={this.checkDopBonus.bind(this, 1)} />\n            </ListItem>\n            <ListItem button>\n              <ListItemAvatar>\n                <Avatar style={{ backgroundColor: 'red' }}>\n                  <CloseIcon style={{ color: '#fff' }} />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={'Отказать'} onClick={this.checkDopBonus.bind(this, 2)}/>\n            </ListItem>\n            \n          </List>\n          \n        </Dialog>\n\n        { !this.state.userInfo || this.state.mainMenuZP === false ? null :\n          <Dialog onClose={ () => { this.setState({ mainMenuZP: false, userInfo: null }) } } open={this.state.mainMenuZP}>\n            \n            <DialogTitle>{this.state.userInfo.app} {this.state.userInfo.name} {this.state.userInfo.date}</DialogTitle>\n\n            <DialogContent>\n              <Grid container spacing={3} style={{ marginTop: 10 }}>\n                <Grid item xs={12} sm={12}>\n                  <MyTextInput label=\"Выданная сумма\" value={this.state.userInfo.given} func={ (event) => { let userInfo = this.state.userInfo; userInfo.given = event.target.value; this.setState({ userInfo: userInfo }) } } /> \n                </Grid>\n\n                <Grid item xs={12} sm={12}>\n                  <span>Вся сумма: </span>\n                  <span style={{color: '#c03', borderBottom: '1px dotted #c03', cursor: 'pointer'}} onClick={ () => { let userInfo = this.state.userInfo; userInfo.given = userInfo.fullPrice; this.setState({ userInfo: userInfo }) } }>{this.state.userInfo.fullPrice}</span>\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n              <Button style={{ backgroundColor: 'green', color: '#fff' }} onClick={this.saveGive.bind(this)}>Сохранить</Button>\n              <Button style={{ backgroundColor: 'red', color: '#fff' }} onClick={() => { this.setState({ mainMenuZP: false, userInfo: null }) }}>Отмена</Button>\n            </DialogActions>\n          </Dialog>\n        }\n        \n        { !this.state.userInfo || this.state.isOpenModalH === false ? null :\n          <Dialog\n            open={this.state.isOpenModalH}\n            onClose={ () => { this.setState({ isOpenModalH: false }) } }\n            scroll='paper'\n            fullWidth={true}\n            maxWidth={'md'}\n            id={'OpenModalH'}\n          >\n            <DialogTitle id=\"scroll-dialog-title\">{this.state.userInfo.user.app_name + ' ' + this.state.userInfo.user.user_name + ' ' + this.state.userInfo.date}</DialogTitle>\n            <DialogContent>\n              \n              <Typography style={{ marginBottom: 10 }}>{'Нагрузка: ' + this.state.userInfo.user.my_load_h + ' / Средняя нагрузка: ' + this.state.userInfo.user.all_load_h}</Typography>\n              { this.state.show_bonus === false ? null :\n                <Typography style={{ marginBottom: 20 }}>{'Бонус: ' + this.state.userInfo.user.bonus}</Typography>\n              }\n              \n              { this.state.otherAppList.length == 0 ? null :\n                <MySelect data={this.state.otherAppList} value={this.state.userInfo.new_app} func={ (event) => { let userInfo = this.state.userInfo; userInfo.new_app = event.target.value; this.setState({ userInfo: userInfo }) } } label='Кем работает' />\n              }\n              \n              { this.state.userInfo.mentor_list.length == 0 ? null :\n                <MySelect data={this.state.userInfo.mentor_list} value={this.state.userInfo.mentor_id} func={ (event) => { let userInfo = this.state.userInfo; userInfo.mentor_id = event.target.value; this.setState({ userInfo: userInfo }) } } label='Кем работает' />\n              }\n              \n              <Accordion \n                style={{ marginTop: 20 }} \n                expanded={this.state.openNewTimeAdd} \n                onChange={ () => { this.setState({ openNewTimeAdd: !this.state.openNewTimeAdd }) } }>\n                  \n                <AccordionSummary\n                  expandIcon={<AddIcon />}\n                >\n                  <AccessTimeIcon style={{ marginRight: 10 }} />\n                  <Typography>Добавить время</Typography>\n                </AccordionSummary>\n                <AccordionDetails style={{ display: 'flex', flexDirection: 'row' }}>\n                  \n                  <MyTimePicker value={this.state.newTimeStart} func={ (event) => { this.setState({ newTimeStart: event.target.value }) } } label='Время начала работы' />\n                  <Typography width={'3%'}></Typography>\n                  <MyTimePicker value={this.state.newTimeEnd} func={ (event) => { this.setState({ newTimeEnd: event.target.value }) } } label='Время окончания работы' />\n                  <Typography width={'3%'}></Typography>\n                  <Button style={{ minWidth: '12%', backgroundColor: 'red', color: '#fff', cursor: 'pointer' }} onClick={ this.addTime.bind(this) }>Добавить</Button>\n                  \n                  {/* <AddIcon style={{ minWidth: 50, minHeight: 38, cursor: 'pointer' }} onClick={ this.addTime.bind(this) } /> */}\n                  \n                </AccordionDetails>\n              </Accordion>  \n              \n              { this.state.userInfo.hours.map( (item, key) =>\n                <Accordion key={key}>\n                  <AccordionSummary\n                    expandIcon={<CloseIcon onClick={ this.delTime.bind(this, key) } />}\n                  >\n                    <AccessTimeIcon style={{ marginRight: 10 }} />\n                    <Typography>{item.time_start + ' - ' + item.time_end}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails style={{ display: 'flex', flexDirection: 'row' }}>\n                    <MyTimePicker value={item.time_start} func={ this.changeHourse.bind(this, 'time_start', key) } label='Время начала работы' />\n                    <Typography width={'3%'}></Typography>\n                    <MyTimePicker value={item.time_end} func={ this.changeHourse.bind(this, 'time_end', key) } label='Время окончания работы' />\n                  </AccordionDetails>\n                </Accordion>  \n              ) }\n              \n              {!this.state.userInfo.hist.length ? null :\n              <Accordion style={{ marginTop: 50 }} disabled>\n                <AccordionSummary>\n                  <Typography>История</Typography>\n                </AccordionSummary>\n              </Accordion>  \n              }\n              { this.state.userInfo.hist.map( (item, key) =>\n                <Accordion key={key}>\n                  <AccordionSummary>\n                    <Typography>{item.date + ' - ' + item.user_name}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails style={{ display: 'flex', flexDirection: 'column' }}>\n                    \n                    { item.items.map( (it, k) =>\n                      <Typography key={k}>{it.time_start + ' - ' + it.time_end} {it.app_name == '' ? '' : ' - ' + it.app_name} </Typography>\n                    ) }\n                    \n                  </AccordionDetails>\n                </Accordion>  \n              ) }\n              \n            </DialogContent>\n            <DialogActions style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n              <Button style={{ backgroundColor: 'green', color: '#fff' }} onClick={this.saveDayHourse.bind(this)}>Сохранить</Button>\n              <Button style={{ backgroundColor: 'red', color: '#fff' }} onClick={() => { this.setState({ isOpenModalH: false }) }}>Отмена</Button>\n            </DialogActions>\n          </Dialog>\n        }\n\n        { !this.state.userInfo || this.state.isOpenModalM === false ? null :\n          <Dialog\n            open={this.state.isOpenModalM}\n            onClose={ () => { this.setState({ isOpenModalM: false }) } }\n            scroll='paper'\n            fullWidth={true}\n            maxWidth={'md'}\n            id={'OpenModalM'}\n          >\n            <DialogTitle>{this.state.userInfo.user.app_name + ' ' + this.state.userInfo.user.user_name}</DialogTitle>\n            <DialogContent>\n              \n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <List component=\"nav\">\n\n                    <ListItemButton\n                      onClick={this.chooseType.bind(this, 0)}\n                      style={{ backgroundColor: '#98e38d', color: '#fff' }}\n                    >\n                      <ListItemText primary=\"10:00 - 22:00\" />\n                      {this.state.typeTimeAdd === 0 ?\n                        <SendIcon />\n                          :\n                        null\n                      }\n                    </ListItemButton>\n\n                    <ListItemButton\n                      onClick={this.chooseType.bind(this, 1)}\n                      style={{ backgroundColor: '#3dcef2', color: '#fff' }}\n                    >\n                      <ListItemText primary=\"10:00 - 16:00\" />\n                      {this.state.typeTimeAdd === 1 ?\n                        <SendIcon />\n                          :\n                        null\n                      }\n                    </ListItemButton>\n\n                    <ListItemButton\n                      onClick={this.chooseType.bind(this, 2)}\n                      style={{ backgroundColor: '#1560bd', color: '#fff' }}\n                    >\n                      <ListItemText primary=\"16:00 - 22:00\" />\n                      {this.state.typeTimeAdd === 2 ?\n                        <SendIcon />\n                          :\n                        null\n                      }\n                    </ListItemButton>\n\n                    <ListItemButton\n                      style={{ backgroundColor: '#926eae', color: '#fff' }}\n                    >\n                      <ListItemText primary=\"Другое\" />\n                    </ListItemButton>\n\n                  </List>\n                  \n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <MyDatePickerGraph year={this.state.mounth} renderWeekPickerDay={this.renderWeekPickerDay} />\n                </Grid>\n              </Grid>\n\n            </DialogContent>\n            <DialogActions style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n              <Button style={{ backgroundColor: 'green', color: '#fff' }} onClick={this.saveUserM.bind(this)}>Сохранить</Button>\n              <Button style={{ backgroundColor: 'red', color: '#fff' }} onClick={() => { this.setState({ isOpenModalM: false }) }}>Отмена</Button>\n            </DialogActions>\n          </Dialog>\n        }\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.points} value={this.state.point} func={ (event) => { this.setState({ point: event.target.value }) } } label='Точка' />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.mounths} value={this.state.mounth} func={ (event) => { this.setState({ mounth: event.target.value }) } } label='Месяц' />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n          </Grid>\n          \n          <WorkSchedule_Table \n            tabTable={this.state.tabTable}\n            one={this.state.one}\n            test_one={this.state.test_one}\n            kind={this.state.kind}\n            show_zp_one={this.state.show_zp_one}\n            lv_dir={this.state.lv_dir}\n            lv_cafe={this.state.lv_cafe}\n            two={this.state.two}\n            test_two={this.state.test_two}\n            show_zp_two={this.state.show_zp_two}\n            changeLVDir={this.changeLVDir.bind(this)} \n            changeDopBonus={this.changeDopBonus.bind(this)}\n            openM={this.openM.bind(this)}\n            openH={this.openH.bind(this)}\n            openZP={this.openZP.bind(this)}\n            onChange={ (event, data) => { this.setState({ tabTable: data }) } }\n            onClick={ () => { this.setState({ mainMenu: true, chooseUser: item.data }) } }\n            onClick2={ () => {this.setState({ mainMenuPrice: true, chooseUser: item.data }) } }\n          />\n\n          {/* <WorkSchedule_Table_without_functions\n            tabTable={this.state.tabTable}\n            one={this.state.one}\n            test_one={this.state.test_one}\n            kind={this.state.kind}\n            show_zp_one={this.state.show_zp_one}\n            lv_dir={this.state.lv_dir}\n            lv_cafe={this.state.lv_cafe}\n            two={this.state.two}\n            test_two={this.state.test_two}\n            show_zp_two={this.state.show_zp_two}\n          /> */}\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function WorkSchedule() {\n  return (\n    <WorkSchedule_ />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1664532173788\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","TabPanel","props","children","value","index","other","role","hidden","id","Box","sx","p","a11yProps","PropTypes","propTypes","HeaderItem","TableRow","TableCell","style","minWidth","minHeight","this","lv_cafe","kind","days","map","item","key","className","backgroundColor","day","date","dataKey","textAlign","cursor","onClick","changeDopBonus","bonus_other","parseInt","Add","fontSize","color","Close","changeLVDir","lv_dir","show_zp","colSpan","length","data","React","WorkSchedule_Table","nextProps","width","borderBottom","borderColor","Tabs","tabTable","onChange","bind","centered","Tab","label","one","TableContainer","component","Paper","Table","TableBody","test_one","row","show_zp_one","openM","user_name","app_name","SyncAlt","display","margin","dates","date_k","openH","info","hours","onClick2","price_p_h","dop_bonus","h_price","err_price","my_bonus","dir_price","dir_price_dop","app_type","openZP","smena_id","app_id","given","TableFooter","bonus","type","res","other_summ","sum_dop_bonus_price","sum_h_price","sum_err_price","sum_bonus_price","sum_to_given_price","sum_given_price","count_rolls","count_pizza","order_stat","count_false","two","test_two","show_zp_two","WorkSchedule_","method","setState","is_load","fetch","headers","body","stringify","module","state","version","login","localStorage","getItem","JSON","then","json","st","setTimeout","window","location","pathname","err","console","log","selectedDates","pickersDayProps","arrTimeAdd","find","formatDate","PickersDay","chooseDay","module_name","points","mounths","point","mounth","isOpenModalH","isOpenModalM","userInfo","hList","mList","newTimeStart","newTimeEnd","openNewTimeAdd","otherAppList","otherApp","testVal","testOpen","mainMenu","mainMenuH","mainMenuSmena","show_bonus","mainMenuPrice","mainMenuLVDIR","mainMenuDopBonus","mainMenuZP","mainMenuPoints","myOtherPoints","myOtherSmens","chooseUser","arr_dir_lv","typeTimeAdd","getData","h","push","name","m","point_list","is_active","module_info","document","title","i","updateData","event","target","checked","showReady","point_id","this_date","user_id","date_start","h_info","other_app","hourse_days","key_time","filter","new_app","mentor_id","alert","time_start","time_end","new_smena_id","part","price","confirm","fastPoint","new_point_id","LV","newLvDir","dir_lv","newValue","arr","newArr","user","fullPrice","app","full_app_name","give_price","Backdrop","open","zIndex","CircularProgress","Dialog","onClose","DialogTitle","List","pt","ListItem","button","ListItemAvatar","Avatar","AccessTime","ListItemText","primary","other_smens","other_points","HomeWork","fastTime","LooksOne","LooksTwo","Looks3","fastSmena","Assessment","price_arr","changePriceH","parseFloat","overflow","checkNewLvDir","Check","checkDopBonus","DialogContent","Grid","container","spacing","marginTop","xs","sm","func","DialogActions","flexDirection","justifyContent","Button","saveGive","scroll","fullWidth","maxWidth","Typography","marginBottom","my_load_h","all_load_h","mentor_list","Accordion","expanded","AccordionSummary","expandIcon","marginRight","AccordionDetails","addTime","delTime","changeHourse","hist","disabled","items","it","k","saveDayHourse","ListItemButton","chooseType","Send","year","renderWeekPickerDay","saveUserM","variant","WorkSchedule","cssReload","hot","dispose","accept","undefined"],"sourceRoot":""}