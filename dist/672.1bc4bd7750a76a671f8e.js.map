{"version":3,"file":"672.1bc4bd7750a76a671f8e.js","mappings":"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","sources":["webpack://package.json/./src/components/drive_map_stat_all/drive_map_stat_all.component.jsx","webpack://package.json/./src/components/drive_map_stat_all/drive_map_stat_all.style.scss"],"sourcesContent":["import React from 'react';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { MySelect } from '../../stores/elements';\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass DriveMapStatAll_ extends React.Component {\r\n  map = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      module: 'drive_map_stat_all',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      points: [],\r\n      point: '0',\r\n      drivers: []\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    \r\n    let data = await this.getData('get_all');\r\n    \r\n    this.setState({\r\n      points: data.point_list,\r\n      point: data.point_list[0].id,\r\n      module_name: data.module_info.name\r\n    })\r\n    \r\n    document.title = data.module_info.name;\r\n    \r\n    setTimeout( () => {\r\n      //this.updateData();\r\n    }, 100 )\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        window.location.pathname = '/';\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n    });\r\n  }\r\n   \r\n  changePoint(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      point: data\r\n    })\r\n    \r\n    setTimeout( () => {\r\n      this.updateData();\r\n    }, 50 )\r\n  }\r\n  \r\n  async updateData(){\r\n    let data = {\r\n      point_id: this.state.point,\r\n    };\r\n    \r\n    let res = await this.getData('get_orders', data);\r\n    \r\n    this.getOrders(res.orders, res.home, res.drivers)\r\n\r\n    this.setState({\r\n      drivers: res.drivers\r\n    })\r\n\r\n    console.log( res.drivers )\r\n  }\r\n  \r\n  getOrders(orders, home, drivers){\r\n    let objectManager = new ymaps.ObjectManager();\r\n    \r\n    if( !this.map ){\r\n      ymaps.ready(() => {\r\n        this.map = new ymaps.Map('map', {\r\n          center: [home.latitude, home.longitude],\r\n          zoom: 11\r\n        }, {\r\n          searchControlProvider: 'yandex#search'\r\n        })\r\n        \r\n        //дом\r\n        let myGeoObject = new ymaps.GeoObject({\r\n          geometry: {\r\n            type: \"Point\",\r\n            coordinates: [home.latitude, home.longitude]\r\n          },\r\n        }, {\r\n          preset: 'islands#blackDotIcon', \r\n          iconColor: 'black'\r\n        })\r\n        \r\n        this.map.geoObjects.add(myGeoObject);\r\n        \r\n        \r\n        \r\n        let json = {\r\n          \"type\": \"FeatureCollection\",\r\n          \"features\": []\r\n        };\r\n                \r\n        orders.map( function(item){\r\n        \r\n          json.features.push({\r\n            type: \"Feature\",\r\n            id: item.id,\r\n            options: {\r\n              preset: parseInt(item.status_order) == 6 ? 'islands#blueCircleDotIconWithCaption' : 'islands#circleDotIcon', \r\n              iconColor: item.point_color ? item.point_color : item.color\r\n            },\r\n            properties: {\r\n              iconCaption: item.point_text,\r\n            },\r\n            geometry: {\r\n              type: \"Point\",\r\n              coordinates: [item.xy.latitude, item.xy.longitude]\r\n            },\r\n          })\r\n          \r\n        } )\r\n        \r\n        objectManager.add(json);\r\n\r\n        drivers.map( function(driver){\r\n          driver.positions.map( function(pos, key){\r\n\r\n            pos['xy'] = JSON.parse(pos['xy'], true);\r\n\r\n            json.features.push({\r\n              type: \"Feature\",\r\n              id: pos.id,\r\n              options: {\r\n                preset: 'islands#stretchyIcon', \r\n                iconColor: driver.color,\r\n              },\r\n              properties: {\r\n                iconContent: key\r\n              },\r\n              geometry: {\r\n                type: \"Point\",\r\n                coordinates: [pos['xy'][0], pos['xy'][1]],\r\n              },\r\n            })\r\n\r\n\r\n          } )\r\n        } )\r\n\r\n        objectManager.add(json);\r\n\r\n        this.map.geoObjects.add(objectManager);\r\n      });\r\n    }else{\r\n      \r\n      let json = {\r\n        \"type\": \"FeatureCollection\",\r\n        \"features\": []\r\n      };\r\n              \r\n      //дом\r\n      json.features.push({\r\n        type: \"Feature\",\r\n        id: 0,\r\n        options: {\r\n          preset: 'islands#blackDotIcon', \r\n          iconColor: 'black'\r\n        },\r\n        geometry: {\r\n          type: \"Point\",\r\n          coordinates: [home.latitude, home.longitude]\r\n        },\r\n      })\r\n      \r\n      \r\n      orders.map( function(item){\r\n        \r\n        json.features.push({\r\n          type: \"Feature\",\r\n          id: item.id,\r\n          options: {\r\n            preset: parseInt(item.status_order) == 6 ? 'islands#blueCircleDotIconWithCaption' : 'islands#circleDotIcon', \r\n            iconColor: item.point_color ? item.point_color : item.color\r\n          },\r\n          properties: {\r\n            iconCaption: item.point_text,\r\n            //iconCaption: parseInt(item.status_order) == 6 ? item.close_time_ : parseInt(item.is_pred) == 1 ? item.need_time : parseInt(item.is_my) == 1 ? item.time_start_mini : '',\r\n          },\r\n          geometry: {\r\n            type: \"Point\",\r\n            coordinates: [item.xy.latitude, item.xy.longitude]\r\n          },\r\n        })\r\n        \r\n      } )\r\n      \r\n      objectManager.add(json);\r\n\r\n      drivers.map( function(driver){\r\n        driver.positions.map( function(pos, key){\r\n\r\n          pos['xy'] = JSON.parse(pos['xy'], true);\r\n\r\n          json.features.push({\r\n            type: \"Feature\",\r\n            id: pos.id,\r\n            options: {\r\n              preset: 'islands#stretchyIcon', \r\n              iconColor: driver.color,\r\n            },\r\n            properties: {\r\n              iconContent: key\r\n            },\r\n            geometry: {\r\n              type: \"Point\",\r\n              coordinates: [pos['xy'][0], pos['xy'][1]],\r\n            },\r\n          })\r\n\r\n\r\n        } )\r\n      } )\r\n\r\n      objectManager.add(json);\r\n\r\n      this.map.geoObjects.removeAll()\r\n      this.map.geoObjects.add(objectManager);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop open={this.state.is_load} style={{ zIndex: 99 }}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          \r\n          <Grid item xs={6} sm={6}>\r\n            <MySelect data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\r\n          </Grid>\r\n          <Grid item xs={6} sm={6}>\r\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={12}>\r\n            { this.state.drivers.map( (item, key) =>\r\n              <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\r\n                <div style={{ width: 50, height: 20, backgroundColor: item.color }}></div>\r\n                <div>{item.driver_name}</div>\r\n              </div>\r\n            ) }\r\n          </Grid>       \r\n          \r\n          \r\n          <Grid item xs={12} sm={12}>\r\n            <div id=\"map\" name=\"map\" style={{ width: '100%', height: 700, paddingTop: 10 }} />\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function DriveMapStatAll() {\r\n  return (\r\n    <DriveMapStatAll_ />\r\n  );\r\n}","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1659453931474\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","DriveMapStatAll_","props","method","data","setState","is_load","fetch","headers","body","stringify","module","state","version","login","localStorage","getItem","JSON","then","res","json","st","type","setTimeout","window","location","pathname","err","console","log","module_name","points","point","drivers","this","getData","point_list","id","module_info","name","document","title","event","target","value","updateData","point_id","getOrders","orders","home","objectManager","ymaps","ObjectManager","map","features","push","options","preset","iconColor","geometry","coordinates","latitude","longitude","item","parseInt","status_order","point_color","color","properties","iconCaption","point_text","xy","add","driver","positions","pos","key","parse","iconContent","geoObjects","removeAll","ready","Map","center","zoom","searchControlProvider","myGeoObject","GeoObject","Backdrop","open","style","zIndex","CircularProgress","Grid","container","spacing","xs","sm","func","changePoint","bind","label","Button","variant","onClick","display","flexDirection","alignItems","width","height","backgroundColor","driver_name","paddingTop","React","DriveMapStatAll","cssReload","hot","dispose","accept","undefined"],"sourceRoot":""}