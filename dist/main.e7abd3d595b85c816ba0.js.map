{"version":3,"file":"main.e7abd3d595b85c816ba0.js","mappings":"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","sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/live_orders/live_orders.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/orders/orders.component.jsx","webpack://react-ssr/./src/components/ordercook/ordercook.component.jsx","webpack://react-ssr/./src/components/auth/auth.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr//Users/user/my_app/test1/siteJaco/jaco-chef-new/node_modules/moment/locale|sync|/ru/"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment-timezone\";\nimport config from './config';\n\nconst queryString = require('query-string');\n\nimport { configure } from \"mobx\"\n\nconfigure({\n  enforceActions: \"never\",\n  useProxies: \"ifavailable\"\n})\n\nclass ItemsStore {\n  // Don't need decorators now\n  \n  items = '';\n  itemsPromo = '';\n  promoName = '';\n  allItems = '';\n  allItemsCat = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = 0;\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  typeOrder = 0;\n  \n  clientNumber = '';\n  \n  clear = false;\n  \n  MyPromos = '';\n  updateMyPromos = '';\n  \n  dateTimeDel = null;\n  \n  free_drive = 0;\n  \n  setMyPromos = (items) => {\n    this.MyPromos = JSON.stringify( items );\n    \n    this.updateMyPromos = new Date();\n    \n    localStorage.setItem('MyPromos', JSON.stringify(items) );\n  };\n\n  getMyPromos(){\n    return this.MyPromos.length == 0 ? [] : JSON.parse(this.MyPromos, true);\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n    \n      console.log( json )\n    \n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).tz(\"Europe/Samara\").format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).tz(\"Europe/Samara\").format(\"H:mm\");\n      this_dow = parseInt(moment(new Date()).tz(\"Europe/Samara\").format(\"E\"));\n    }else{\n      this_date = moment(by_time).tz(\"Europe/Samara\").format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).tz(\"Europe/Samara\").format(\"H:mm\");\n      this_dow = parseInt(moment(by_time).tz(\"Europe/Samara\").format(\"E\"));\n    }\n    \n    \n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Промокод не найден или уже активирован'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Действует с '+promo_info.limits.date.min+' по '+promo_info.limits.date.max+' '+promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: this_time+' Действует с '+promo_info.limits.time.min+' по '+promo_info.limits.time.max+' '+promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Сумма от '+promo_info.limits.summ.min+' до '+promo_info.limits.summ.max+'  Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          \n          let type_ = '';\n          \n          if( parseInt( promo_info.limits.type_order ) == 1 ){\n            type_ = 'Все типы заказов';\n          }else{\n            if( parseInt( promo_info.limits.type_order ) == 2 ){\n              type_ = 'Только самовывоз';\n            }else{\n              if( parseInt( promo_info.limits.type_order ) == 4 ){\n                type_ = 'Только доставка';\n              }else{\n                type_ = 'Только в зале';\n              }\n            }\n          }\n          \n          return {\n            st: false,\n            text: 'Действует '+type_\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        let this_item_check = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          let check = allItems.find( (item) => item.id == need_item );\n          \n          if( check && check.name ){\n            this_item_check += check.name+', '\n            \n            if( this_item ){\n              check ++;\n            }\n          }\n          \n          \n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: 'Позиции, которые должны быть в корзине: '+this_item_check\n          }\n        }\n      }\n      \n      itemsStore.free_drive = parseInt(promo_info.limits.free_drive);\n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: 'Промокод не найден',\n        test: promo_info\n      }\n    }\n  }\n\n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      new_cart.push({\n        name: item.name,\n        item_id: item.item_id,\n        count: item.count,\n        one_price: parseInt( originalItem.price ),\n        all_price: parseInt( originalItem.price ) * parseInt( item.count )\n      })\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    let free_items = itemsStore.getFreeItems();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          \n          let check_add = free_items.filter( (item) => parseInt(item.this_item_id) == parseInt(id) && parseInt(item.is_add) == 1 );\n          \n          let check_in_cart = my_cart.some( (item) => parseInt(item.item_id) == parseInt(id) );\n          \n          if( !check_in_cart ){\n            my_cart.push({\n              name: item_info.name,\n              item_id: id,\n              count: count,\n              one_price: price,\n              all_price: count * price\n            })\n          }else{\n            my_cart.forEach((item, key) => {\n              if( parseInt(item.item_id) == parseInt(id) ){\n                my_cart[key]['count'] = count;\n                my_cart[key]['all_price'] = count * price;\n              }\n            });\n          }\n          \n          check_add.map( (add_item) => {\n            let check_item_add = all_items.find( (item) => parseInt(item.id) == parseInt(add_item.item_id) );\n            \n            if( check_item_add ){\n              \n              let check_in_cart = my_cart.some( (item) => parseInt(item.item_id) == parseInt(add_item.item_id) );\n          \n              if( !check_in_cart ){\n                my_cart.push({\n                  name: check_item_add.name,\n                  item_id: add_item.item_id,\n                  count: parseInt(add_item.count) * count,\n                  one_price: 0,\n                  all_price: 0\n                })\n              }else{\n                my_cart.forEach((item, key) => {\n                  if( parseInt(item.item_id) == parseInt(add_item.item_id) ){\n                    my_cart[key]['count'] = parseInt(add_item.count) * count;\n                    my_cart[key]['all_price'] = 0;\n                  }\n                });\n              }\n              \n            }\n          } )\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  AddCountItem(id, NewCount){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => parseInt(item.item_id) == parseInt(id) );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(id) );\n      \n      if(item_info){\n        let count = parseInt(NewCount),\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => parseInt(item.item_id) == parseInt(id) );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n  \n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = item_info['price'];\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      let max_count = 0;\n      let free_items = itemsStore.getFreeItems();\n      \n      if( count >= 0 ){\n        \n        let check_add = free_items.filter( (item) => parseInt(item.this_item_id) == parseInt(id) && parseInt(item.is_add) == 1 );\n        \n        \n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n        \n        setTimeout( () => {\n          my_cart.map( (item, key) => {\n            max_count = itemsStore.check_max_count(item.item_id)\n            \n            if( parseInt(max_count) < 0 ){\n              my_cart[key]['count'] = parseInt(item.count) + parseInt(max_count);\n              my_cart[key]['all_price'] = ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price);\n            }\n          })\n          \n          \n          check_add.map( (add_item) => {\n            let check_item_add = all_items.find( (item) => parseInt(item.id) == parseInt(add_item.item_id) );\n            \n            if( check_item_add ){\n              \n              let check_in_cart = my_cart.some( (item) => parseInt(item.item_id) == parseInt(add_item.item_id) );\n          \n              if( !check_in_cart ){\n                my_cart.push({\n                  name: check_item_add.name,\n                  item_id: add_item.item_id,\n                  count: parseInt(add_item.count) * count,\n                  one_price: 0,\n                  all_price: 0\n                })\n              }else{\n                my_cart.forEach((item, key) => {\n                  if( parseInt(item.item_id) == parseInt(add_item.item_id) ){\n                    my_cart[key]['count'] = parseInt(add_item.count) * count;\n                    my_cart[key]['all_price'] = 0;\n                  }\n                });\n              }\n              \n            }\n          } )\n          \n          \n          itemsStore.setItems(my_cart)\n        }, 300 )\n        \n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  delItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = 0,\n          price = item_info['price'];\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n        \n        let max_count = 0;\n        \n        setTimeout( () => {\n          my_cart.map( (item, key) => {\n            max_count = itemsStore.check_max_count(item.item_id)\n            \n            if( parseInt(max_count) < 0 ){\n              my_cart[key]['count'] = parseInt(item.count) + parseInt(max_count);\n              my_cart[key]['all_price'] = ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price);\n            }\n          })\n          \n          itemsStore.setItems(my_cart)\n        }, 300 )\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n  \n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let my_cart_promo = itemsStore.getItemsPromo();\n    let free_items = itemsStore.getFreeItems();\n    let all_items = itemsStore.getAllItems();\n    \n    let check_item = all_items.find( (item) => parseInt(item.id) == parseInt(item_id) );\n    \n    if( parseInt(check_item.type) != 3 || (parseInt(check_item.id) !== 17 && parseInt(check_item.id) !== 237) ){\n      return 99;\n    }\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    let all_max_count = 0;\n    let my_free_count = 0;\n    \n    my_cart.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    my_cart_promo.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count_in_cart: item_free['count_in_cart'],\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    if( new_free_dop.length > 0 ){\n      \n      max_count = new_free_dop.find( (item) => parseInt(item['item_id']) == 17 );\n      if( max_count ){\n        max_count = parseInt(max_count['count']);\n        \n        if( my_free_count >= max_count ){\n          return max_count - my_free_count;\n        }\n        \n      }\n    }\n    \n    return max_count;\n  }\n  \n  check_max_count_old(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let free_items = itemsStore.getFreeItems();\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    my_cart.forEach((item_cart, key) => {\n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    new_free_dop.forEach(el => {\n      if( parseInt( el['item_id'] ) == parseInt(item_id) ){\n        max_count = parseInt(el['count']);\n      }\n    });\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let allItems = this.getAllItems();\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        this.setToken( localStorage.getItem('token') );\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n      \n      if( localStorage.getItem('MyPromos') && localStorage.getItem('MyPromos').length > 0 ){\n        this.setMyPromos( JSON.parse(localStorage.getItem('MyPromos'), true) );\n      }\n    }\n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport LinkIcon from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst queryString = require('query-string');\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nclass MySelect extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <FormControl size=\"small\" variant=\"outlined\" className={this.state.classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">{this.props.label}</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={this.props.value}\n          onChange={ this.props.func }\n          label={this.props.label}\n          size=\"small\"\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          { this.props.data.map( (item, key) =>\n            <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n          ) }\n        </Select>\n      </FormControl>\n    )\n  }\n}\n\nclass MyCheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.props.value}\n              onChange={this.props.func}\n              color=\"primary\"\n            />\n          }\n          label={this.props.label}\n        />\n      </FormGroup>\n    )\n  }\n}\n\nclass Live_Orders extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      module: 'live_orders',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      showReady: false,\n      read: [],\n      onstol: [],\n      ordersQueue: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      points: data.point_list,\n      point: data.point_list[0].id,\n      module_name: data.module_info.name\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 100 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: '+79879340391',\n        //login: localStorage.getItem('login'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n        console.log( err )\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  changeCheckOrders(event){\n    let data = event.target.checked;\n    \n    this.setState({\n      showReady: data\n    })\n  }\n  \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      showReady: this.state.showReady === true ? 1 : 0\n    };\n    \n    let res = await this.getData('get_orders', data);\n    \n    this.setState({\n      read: res.read,\n      onstol: res.onstol,\n      ordersQueue: res.prestol_new\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          { this.state.points.length > 0 ?\n            <>\n              <Grid item xs={6} sm={6}>\n                <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n              </Grid>\n              <Grid item xs={6} sm={6}>\n                <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <MyCheckBox classes={this.state.classes} value={this.state.showReady} func={ this.changeCheckOrders.bind(this) } label='Показывать готовые' />\n              </Grid>\n            </>\n              :\n            null\n          }\n          \n          \n          \n          <Grid item xs={12} sm={12}>\n            \n            <TableContainer component={Paper}>\n              <Table aria-label=\"a dense table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>#</TableCell>\n                    <TableCell>Тип</TableCell>\n                    <TableCell>Время заказа</TableCell>\n                    <TableCell>Время предзакза</TableCell>\n                    \n                    <TableCell>Время выхода на стол</TableCell>\n                    <TableCell>Во сколько собрали</TableCell>\n                    <TableCell>Закрыли</TableCell>\n                    \n                    <TableCell>Приготовили</TableCell>\n                    <TableCell>Отдали</TableCell>\n                    <TableCell>Обещали</TableCell>\n                    \n                    <TableCell>Статус</TableCell>\n                    <TableCell>Стол</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  {this.state.read.map( (item, key) => (\n                    <TableRow key={key}>\n                      <TableCell>{item.id}</TableCell>\n                      <TableCell>{item.type_order}</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? '' : item.date_time_order }</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? item.date_time_preorder_ : '' }</TableCell>\n                      \n                      <TableCell>{item.unix_start_stol_or}</TableCell>\n                      <TableCell>{item.give_data_time_}</TableCell>\n                      <TableCell>{item.close_date_time_order}</TableCell>\n                      \n                      <TableCell style = {{backgroundColor: parseInt(item.type_) == 1 ? '' : item.color}}>{item.time_}</TableCell>\n                      <TableCell style = {{backgroundColor: parseInt(item.type_) != 1 ? '' : item.color}}>{item.test_time}</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\n                      \n                      <TableCell>{item.status}</TableCell>\n                      <TableCell>{item.stol_sborki}</TableCell>\n                    </TableRow>\n                  ))}\n                  \n                  {this.state.onstol.map( (item, key) => (\n                    <TableRow key={key} style = {{backgroundColor: 'yellow'}}>\n                      <TableCell>{item.id}</TableCell>\n                      <TableCell>{item.type_order}</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? '' : item.date_time_order }</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? item.date_time_preorder_ : '' }</TableCell>\n                      \n                      <TableCell>{item.unix_start_stol_or}</TableCell>\n                      <TableCell></TableCell>\n                      <TableCell></TableCell>\n                      \n                      <TableCell></TableCell>\n                      <TableCell></TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\n                      \n                      <TableCell>{item.status}</TableCell>\n                      <TableCell>{item.stol_sborki}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n            <TableContainer component={Paper}>\n              <Table aria-label=\"a dense table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>#</TableCell>\n                    <TableCell>Пред</TableCell>\n                    <TableCell>Время оформления</TableCell>\n                    <TableCell>Время выхода на стол</TableCell>\n                    <TableCell>Время закрытия</TableCell>\n                    <TableCell>Обещали</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  {this.state.ordersQueue.map( (item, key) => (\n                    <TableRow key={key}>\n                      <TableCell>{item.id}</TableCell>\n                      <TableCell>{ parseInt(item.is_preorder) == 1 ? item.date_time_preorder : '' }</TableCell>\n                      <TableCell>{ parseInt(item.is_preorder) == 0 ? item.date_time_order : '' }</TableCell>\n                      \n                      <TableCell>{item.time_start_order}</TableCell>\n                      <TableCell>{item.time_end_order}</TableCell>\n                      \n                      <TableCell>{ parseInt(item.is_preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\n                    </TableRow>\n                  ))}\n                  \n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function LiveOrders () {\n  const classes = useStyles();\n  \n  return (\n    <Live_Orders classes={classes} />\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport LinkIcon from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst queryString = require('query-string');\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nclass MySelect extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <FormControl size=\"small\" variant=\"outlined\" className={this.state.classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">{this.props.label}</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={this.props.value}\n          onChange={ this.props.func }\n          label={this.props.label}\n          size=\"small\"\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          { this.props.data.map( (item, key) =>\n            <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n          ) }\n        </Select>\n      </FormControl>\n    )\n  }\n}\n\nclass MyCheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.props.value}\n              onChange={this.props.func}\n              color=\"primary\"\n            />\n          }\n          label={this.props.label}\n        />\n      </FormGroup>\n    )\n  }\n}\n\nclass LiveOrders extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      module: 'live_orders',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      showReady: false,\n      read: [],\n      onstol: [],\n      ordersQueue: []\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    this.setState({\n      points: data.point_list,\n      point: data.point_list[0].id,\n      module_name: data.module_info.name\n    })\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 100 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: '+79879340391',\n        //login: localStorage.getItem('login'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n        console.log( err )\n    });\n  }\n  \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  changeCheckOrders(event){\n    let data = event.target.checked;\n    \n    this.setState({\n      showReady: data\n    })\n  }\n  \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      showReady: this.state.showReady === true ? 1 : 0\n    };\n    \n    let res = await this.getData('get_orders', data);\n    \n    this.setState({\n      read: res.read,\n      onstol: res.onstol,\n      ordersQueue: res.prestol_new\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          <Grid item xs={6} sm={6}>\n            <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          <Grid item xs={6} sm={6}>\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            <MyCheckBox classes={this.state.classes} value={this.state.showReady} func={ this.changeCheckOrders.bind(this) } label='Показывать готовые' />\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            \n            <TableContainer component={Paper}>\n              <Table aria-label=\"a dense table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>#</TableCell>\n                    <TableCell>Тип</TableCell>\n                    <TableCell>Время заказа</TableCell>\n                    <TableCell>Время предзакза</TableCell>\n                    \n                    <TableCell>Время выхода на стол</TableCell>\n                    <TableCell>Во сколько собрали</TableCell>\n                    <TableCell>Закрыли</TableCell>\n                    \n                    <TableCell>Приготовили</TableCell>\n                    <TableCell>Отдали</TableCell>\n                    <TableCell>Обещали</TableCell>\n                    \n                    <TableCell>Статус</TableCell>\n                    <TableCell>Стол</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  {this.state.read.map( (item, key) => (\n                    <TableRow key={key}>\n                      <TableCell>{item.id}</TableCell>\n                      <TableCell>{item.type_order}</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? '' : item.date_time_order }</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? item.date_time_preorder_ : '' }</TableCell>\n                      \n                      <TableCell>{item.unix_start_stol_or}</TableCell>\n                      <TableCell>{item.give_data_time_}</TableCell>\n                      <TableCell>{item.close_date_time_order}</TableCell>\n                      \n                      <TableCell style = {{backgroundColor: parseInt(item.type_) == 1 ? '' : item.color}}>{item.time_}</TableCell>\n                      <TableCell style = {{backgroundColor: parseInt(item.type_) != 1 ? '' : item.color}}>{item.test_time}</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\n                      \n                      <TableCell>{item.status}</TableCell>\n                      <TableCell>{item.stol_sborki}</TableCell>\n                    </TableRow>\n                  ))}\n                  \n                  {this.state.onstol.map( (item, key) => (\n                    <TableRow key={key} style = {{backgroundColor: 'yellow'}}>\n                      <TableCell>{item.id}</TableCell>\n                      <TableCell>{item.type_order}</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? '' : item.date_time_order }</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? item.date_time_preorder_ : '' }</TableCell>\n                      \n                      <TableCell>{item.unix_start_stol_or}</TableCell>\n                      <TableCell></TableCell>\n                      <TableCell></TableCell>\n                      \n                      <TableCell></TableCell>\n                      <TableCell></TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\n                      \n                      <TableCell>{item.status}</TableCell>\n                      <TableCell>{item.stol_sborki}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n            <TableContainer component={Paper}>\n              <Table aria-label=\"a dense table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>#</TableCell>\n                    <TableCell>Пред</TableCell>\n                    <TableCell>Время оформления</TableCell>\n                    <TableCell>Время выхода на стол</TableCell>\n                    <TableCell>Время закрытия</TableCell>\n                    <TableCell>Обещали</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  {this.state.ordersQueue.map( (item, key) => (\n                    <TableRow key={key}>\n                      <TableCell>{item.id}</TableCell>\n                      <TableCell>{ parseInt(item.is_preorder) == 1 ? item.date_time_preorder : '' }</TableCell>\n                      <TableCell>{ parseInt(item.is_preorder) == 0 ? item.date_time_order : '' }</TableCell>\n                      \n                      <TableCell>{item.time_start_order}</TableCell>\n                      <TableCell>{item.time_end_order}</TableCell>\n                      \n                      <TableCell>{ parseInt(item.is_preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\n                    </TableRow>\n                  ))}\n                  \n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Home () {\n  const classes = useStyles();\n  \n  return (\n    <LiveOrders classes={classes} />\n  );\n}","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport moment from \"moment\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nimport { autorun } from \"mobx\"\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport InputMask from \"react-input-mask\";\n\nconst queryString = require('query-string');\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nexport class Header extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      cityList: this.props.cityList,\n      city: itemsStore.getCity(),\n      page: this.props.page,\n      \n      updateMyPromos: null,\n      MyPromos: [],\n      \n      number: '',\n      \n      orderPromoText: '',\n      promo_name: '',\n      promoST: false,\n      \n      top: false,\n      left: false,\n      bottom: false,\n      right: false,\n      \n      thisDateTimeDel: null\n    };\n  }\n    \n  componentDidMount = () => {\n    this._isMounted = true;\n    \n    let defValue = '';\n  \n    if( localStorage.getItem('clientNumber') ){\n      defValue = localStorage.getItem('clientNumber');\n      itemsStore.clientNumber = defValue;\n      \n      this.setState({\n        number: defValue,\n      })\n    }\n    \n    if( localStorage.getItem('promo_name') ){\n      let promo = localStorage.getItem('promo_name');\n      \n      setTimeout( ()=>{\n        this.setState({\n          promo_name: promo\n        })\n        \n        this.checkPromo( {target: {value: promo}} )\n      }, 500 )\n      \n    }\n    \n    autorun(() => {\n      \n      //let test = itemsStore.cart_data;\n      let thisCity = itemsStore.getCity();\n      let cartData = itemsStore.getCartData();\n      \n      let dateTimeDel = itemsStore.dateTimeDel;\n      \n      setTimeout( () => {\n        dateTimeDel = itemsStore.dateTimeDel;\n        \n        if( this.state.thisDateTimeDel != dateTimeDel ){\n          this.setState({\n            thisDateTimeDel: dateTimeDel\n          })\n          \n          this.setState({\n            number: '',\n            promo_name: '',\n            orderPromoText: '',\n          })\n          \n          this.clear2();\n        }\n      }, 300 )\n      \n      \n      \n      if( this.state.promo_name && this.state.promo_name.length > 0 ){\n        this.checkPromo( {target: {value: this.state.promo_name}} )\n      }\n      \n      if( itemsStore.updateMyPromos != this.state.updateMyPromos ){\n        \n        let myPromos = itemsStore.getMyPromos();\n        let myPromosNew = [];\n        let checkDate = moment(new Date()).add(-7, 'days').format(\"YYYY-MM-DD\");\n        \n        myPromos = myPromos.filter( (item) => item.date >= checkDate );\n        \n        localStorage.setItem('MyPromos', JSON.stringify(myPromos) );\n        \n        myPromos.forEach( element => {\n          let check = myPromosNew.find( (item) => item.promo == element.promo )\n          \n          if( !check || check.length == 0 ){\n            element.count = 1;\n            \n            myPromosNew.push( element )\n          }else{\n            myPromosNew.forEach( (item, key) => {\n              if( item.promo == element.promo ){\n                myPromosNew[key]['count'] ++;\n              }\n            } )\n          }\n        });\n        \n        myPromosNew = myPromosNew.filter( (item) => item.count > 1 );\n        \n        this.setState({\n          updateMyPromos: itemsStore.updateMyPromos,\n          MyPromos: myPromosNew\n        })\n      }\n      \n      if( itemsStore.clear === true ){\n        this.clear();\n        \n        itemsStore.clear = false;\n      }\n    })\n  }\n    \n  saveNumber(event){\n    \n    let number = event.target.value;\n    let str = '';\n    \n    number = number+'';\n    \n    if( number.length > 0 ){\n      \n      number = number.split(' ').join('');\n      number = number.split('(').join('');\n      number = number.split(')').join('');\n      number = number.split('-').join('');\n      number = number.split('+').join('');\n      \n      if( number[0] == '7' || number[0] == 7 ){\n        str = number.split(\"\");\n        str[0] = 8;\n        number = str.join(\"\");\n      }\n      \n      if( number.length != 11 ){\n        alert('Номер введен в не верном формате!')\n        return;\n      }\n      \n    }\n    \n    this.setState({\n      number: number\n    })\n    \n    itemsStore.clientNumber = number;\n    localStorage.setItem('clientNumber', number)\n    \n    /*let number = event.target.value;\n          \n    if( number.length > 0 ){\n      number = number.split(' ').join('');\n      number = number.split('(').join('');\n      number = number.split(')').join('');\n      number = number.split('-').join('');\n      \n      number = number.slice(1);\n      \n      itemsStore.clientNumber = '8' + number;\n      localStorage.setItem('clientNumber', '8' + number)\n    }else{\n      itemsStore.clientNumber = '';\n      localStorage.setItem('clientNumber', '')\n    }*/\n  }\n    \n  checkPromo(event){\n    \n    let promo = event.target.value;\n    //let promo = this.state.promo_name;\n    \n    console.log( 'promo', promo )\n    console.log( 'promo 555', event.target.value )\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_promo', \n        city_id: itemsStore.getCity(),\n        promo_name: promo\n      })\n    }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promo );\n      let check_promo = itemsStore.checkPromo();\n        \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      if( promo.length == 0 ){\n        this.setState({\n          orderPromoText: '',\n          promo_name: '',\n          promoST: false\n        })\n        localStorage.removeItem('promo_name')\n      }else{\n        this.setState({\n          orderPromoText: check_promo.text,\n          promoST: check_promo.st,\n          promo_name: promo\n        })\n      }\n    })\n  }\n    \n  toggleDrawer2(anchor, open, event){\n    this.setState({\n      [anchor]: open\n    })\n  };\n    \n  clear(){\n    \n    return ;\n    \n    itemsStore.clientNumber = '';\n    localStorage.removeItem('clientNumber')\n    localStorage.removeItem('promo_name')\n    \n    itemsStore.setItems([]);\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n      \n      dateTime: new Date()\n    };\n    \n    itemsStore.dateTimeDel = new Date();\n    \n    itemsStore.saveCartData(data);\n    \n    \n    setTimeout( () => {\n      itemsStore.setPromo(null, '');\n      this.checkPromo({ target: {value: ''} })\n    }, 300)\n    \n    \n    this.setState({\n      number: '',\n      promo_name: '',\n      orderPromoText: '',\n    })\n  }\n  \n  clear2(){\n    \n    return ;\n    \n    itemsStore.clientNumber = '';\n    localStorage.removeItem('clientNumber')\n    localStorage.removeItem('promo_name')\n    \n    itemsStore.setItems([]);\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n      \n      dateTime: new Date()\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    \n    setTimeout( () => {\n      itemsStore.setPromo(null, '');\n      this.checkPromo({ target: {value: ''} })\n    }, 300)\n    \n    \n    this.setState({\n      number: '',\n      promo_name: '',\n      orderPromoText: '',\n    })\n  }\n    \n  changeCity(event){\n    let city = event.target.value;\n    \n    this.setState({ city: city });\n    itemsStore.setCity(city)\n    \n    localStorage.setItem('cityID', city)\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    setTimeout( () => {\n      //location.reload();\n    }, 500 )\n  }\n    \n  logOut(){\n    localStorage.removeItem('token');\n    \n    setTimeout( () => {\n      window.location.reload();\n    }, 500 )\n  }\n  \n  render() {\n    return (\n      <div className={this.state.classes.root}>\n        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000' }}>\n          <Toolbar style={{ minHeight: 48, height: 48 }}>\n            <IconButton edge=\"start\" onClick={this.toggleDrawer2.bind(this, 'left', true)} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            { this.state.page == 'createOrder' ?\n              <Grid container className='headerInput'>\n                \n                <Grid item xs={3}>\n                  <FormControl className={this.state.classes.formControl}>\n                    <InputLabel style={{ paddingBottom: 2 }}>Город</InputLabel>\n                    <Select\n                    \n                      style={{ marginTop: 9 }}\n                      value={this.state.city}\n                      onChange={ this.changeCity.bind(this) }\n                    >\n                      { this.state.cityList.map( (item, key) =>\n                        <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n                      ) }\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={6} style={{ display: 'flex', alignItems: 'center' }}>\n                  \n                  <Autocomplete\n                    freeSolo\n                    \n                    label=\"Промокод\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    \n                    style={{ minWidth: 200, marginRight: 8 }}\n                    \n                    value={ this.state.promo_name } \n                    onChange={ (event, val) => { console.log(val); this.setState({ promo_name: val }) } } \n                    onBlur={this.checkPromo.bind(this)} \n                    \n                    options={this.state.MyPromos.map((option) => option.promo)}\n                    renderInput={(params) => (\n                        <TextField {...params} label=\"Промокод\" margin=\"normal\" variant=\"outlined\" />\n                    )}\n                  />\n                  \n                  \n                  <HtmlTooltip\n                    placement=\"bottom\"\n                    title={\n                      <React.Fragment>\n                        <Typography color=\"inherit\" className={this.state.classes.size1}>{this.state.orderPromoText}</Typography>\n                      </React.Fragment>\n                    }\n                  >\n                    <Button variant=\"contained\" color=\"primary\" style={{ padding: '2px 6px', marginTop: 8, minWidth: 30, marginRight: 8, backgroundColor: this.state.promoST === false && this.state.orderPromoText.length == 0 ? 'gray' : this.state.promoST === false && this.state.orderPromoText.length > 0 ? 'red' : 'green' }}>?</Button>\n                  </HtmlTooltip>\n                  \n                  <Button variant=\"contained\" color=\"primary\" className=\"btnClear\" style={{ padding: '2px 6px', minWidth: 30, marginTop: 8 }} onClick={ this.clear.bind(this) } >\n                    <CloseIcon />\n                  </Button>\n                </Grid>\n                <Grid item xs={3} style={{ paddingTop: 14 }}>\n                  <TextField \n                    label=\"Телефон\" \n                    \n                    variant=\"outlined\"\n                    size=\"small\"\n                    \n                    placeholder=\"8 (999) 999-99-99\"\n                    value={this.state.number}\n                    onChange={ event => this.setState({ number: event.target.value }) } \n                    onBlur={this.saveNumber.bind(this)} \n                    style={{ marginRight: 4, marginLeft: 4, marginBottom: 6}} \n                  />\n                  \n                </Grid>\n              \n              </Grid>\n                :\n              null\n            }\n          </Toolbar>\n        </AppBar>\n        \n        \n          \n        \n        \n        <Drawer anchor={'left'} open={this.state.left} onClose={this.toggleDrawer2.bind(this, 'left', false)}>\n          <div\n            className={clsx(this.state.classes.list)}\n            role=\"presentation\"\n            //onClick={this.toggleDrawer2(this, 'left', false)}\n            //onKeyDown={this.toggleDrawer(this, 'left', false)}\n          >\n            <Link\n              to={ '/' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Оформить заказ</Typography>\n              </ListItem>\n            </Link>\n            <Link\n              to={ '/orders' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Список заказов</Typography>\n              </ListItem>\n            </Link>\n            <Link\n              to={ '/ordercook' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Заказы на кухне</Typography>\n              </ListItem>\n            </Link>\n            <Divider />\n            <List>\n              <ListItem button onClick={this.logOut.bind(this)}>\n                <ListItemText primary={'Выйти'} />\n              </ListItem>\n            </List>\n          </div>\n        </Drawer>      \n      </div>\n    )\n  }\n}","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\n//import 'date-fns';\nimport ruLocale from \"date-fns/locale/ru\";\nimport DateFnsUtils from '@date-io/date-fns';\n//import DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst queryString = require('query-string');\n\nimport { Header } from '../header';\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer'\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass OrdersStat extends React.Component {\n  interval = null;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      cityList: [],\n      spiner: false,\n      \n      selectedCity: 1,\n      selectedDate: formatDate(new Date()),\n      \n      points: [],\n      point: null,\n      \n      activeCat: 0,\n      \n      orders: [],\n      orderCheck: false,\n      \n      showOrder: null,\n      openDialog: false,\n      \n      delOrder: false,\n      radiogroup_options: [\n        {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n        {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n        {id: '2', label: 'Изменились планы', value: 0 },\n        {id: '3', label: 'Недостаточно средств', value: 0 },\n        {id: '4', label: 'Другое', value: 0 },\n      ],\n      textDel: '',\n      typeDel: -1,\n      \n      number: ''\n    };\n  }\n    \n  componentWillUnmount(){\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    \n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin();\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cityList: json.city_list,\n      })\n      \n      itemsStore.setAllItems(json.all_items);\n      \n      this.getPoints();\n    }).catch(err => { });\n  }\n    \n  handleDateChange(date){\n    this.setState({\n      selectedDate: formatDate(date)\n    })\n    \n    setTimeout( () => {\n      this.getOrders();\n    }, 500 )\n  };\n  \n  changeCity(event){\n    let city = event.target.value;\n    \n    this.setState({ selectedCity: city });\n    setTimeout( () => {\n      this.getPoints();  \n    },500 )\n  }\n  \n  getPoints(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_points', \n        city_id: this.state.selectedCity\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        points: json,\n        point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.getOrders();\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n  \n  changeCat = (event, newValue) => {\n    let point = this.state.points.find( (item, key) => key == newValue );\n    \n    this.setState({\n      activeCat: newValue,\n      point: point\n    })\n    \n    this.getOrders();\n  }\n  \n  getOrders(){\n    setTimeout( () => {\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'get_orders', \n          city_id: this.state.selectedCity,\n          point_id: this.state.point.id,\n          date: this.state.selectedDate\n        })\n      }).then(res => res.json()).then(json => {\n        console.log( json )\n        \n        this.setState({\n          orders: json.orders,\n        })\n        \n        setTimeout( () => {\n          this.changeNumber()\n        }, 100 )\n      })\n      .catch(err => { });\n    }, 500 )\n  }\n  \n  getOrder(order_id){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_order', \n        point_id: this.state.point.id,\n        order_id: order_id\n      })\n    }).then(res => res.json()).then(json => {\n      console.log( json )\n      \n      this.setState({ \n        showOrder: json,\n        openDialog: true\n    });\n    })\n    .catch(err => { });\n  }\n  \n  closeDialog(){\n    this.setState({\n      //showOrder: null,\n      openDialog: false\n    })\n  }\n  \n  closeOrder(order_id, point_id){\n    this.setState({\n      delOrder: true\n    })\n  }\n  \n  closeOrderTrue(){\n    let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n    if( deltype.id == '4' ){\n      deltype.label = this.state.textDel;\n    }\n    \n    if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'close_order_center', \n          typeCreate: 'center',\n          user_id: itemsStore.getToken(),\n          order_id: this.state.showOrder.order.order_id,\n          point_id: this.state.showOrder.order.point_id,\n          ans: deltype.label\n        })\n      }).then(res => res.json()).then(json => {\n        \n        console.log( json )\n        \n        setTimeout(() => {\n          if( json['st'] ){\n            this.setState({\n              delOrder: false,\n              openDialog: false,\n            });\n            \n            this.getOrders();\n          }else{\n            \n            alert( json['text'] );\n            \n          }\n        }, 300);\n      });\n    }\n  }\n  \n  changeAddr = (event) => {\n    this.setState({\n      typeDel: event.target.value,\n    })\n  }\n  \n  repeatOrder(){\n    let my_cart = [];\n    let all_items = itemsStore.getAllItems();\n    let item_info = null;\n    \n    localStorage.setItem('cityID', this.state.selectedCity)\n    \n    this.state.showOrder.order_items.map( (item) => {\n      item_info = all_items.find( (item_) => item_.id == item.item_id );\n      \n      if( item_info ){\n        let price = parseInt(item_info.price),\n            all_price = parseInt(item.count) * parseInt(item_info.price);\n        \n        my_cart.push({\n          name: item.name,\n          item_id: item.item_id,\n          count: item.count,\n          \n          one_price: price,\n          all_price: all_price\n        })\n      }\n    } )\n    \n    let data = {\n        orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n        orderAddr: this.state.showOrder.street.name,\n        orderPic: parseInt(this.state.showOrder.order.point_id),\n        orderComment: '',\n        \n        orderTimes: '1',\n        orderPredDay: '',\n        orderPredTime: '',\n        \n        orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n        orderSdacha: '',\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n      itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n    }\n    itemsStore.setItems(my_cart)\n    \n    setTimeout(()=>{\n      window.location.pathname = '/';\n    }, 500)\n  }\n  \n  changeText(event){\n    this.setState({ textDel: event.target.value })\n  }\n  \n  changeNumber(){\n    let orders = document.querySelectorAll('.order');\n    \n    var order = this.state.number;\n\t\t\n\t\tif( order.length == 0 ){\n\t\t\torders.forEach( item => {\n        item.classList.remove(\"dis_none\");\n\t\t\t});\n\t\t}else{\n      orders.forEach( item => {\n        let number = item.getAttribute('datanumber');\n        \n\t\t\t\tif( number.indexOf(order) >= 0 ){\n          item.classList.remove(\"dis_none\");\n\t\t\t\t}else{\n          item.classList.add(\"dis_none\");\n        }\n      });\n    }\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={0}>\n        \n        <Helmet>\n          <title>Оформленные заказы</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid item xs={12}>\n          { this.state.cityList.length > 0 ? <Header classes={this.state.classes} cityList={this.state.cityList} page=\"statOrder\" /> : null }\n        </Grid>\n        <Grid item xs={4}>\n          \n          <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\n            <Grid container justify=\"space-around\" style={{ alignItems: 'baseline' }}>\n              \n              <FormControl className={this.state.classes.formControl}>\n                <InputLabel>Город</InputLabel>\n                <Select\n                  value={this.state.selectedCity}\n                  onChange={ this.changeCity.bind(this) }\n                >\n                  { this.state.cityList.map( (item, key) =>\n                    <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n                  ) }\n                </Select>\n              </FormControl>\n              \n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"yyyy-MM-dd\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Дата\"\n                value={this.state.selectedDate}\n                onChange={this.handleDateChange.bind(this)}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        \n        </Grid>\n        \n        <Grid item xs={3}>\n          <TextField \n            label=\"Номер телефона\" \n            //variant=\"inlined\" \n            style={{ margin: '16px 8px 8px 8px', flex: 1 }}\n            value={ this.state.number }\n            onChange={ (event) => this.setState({ number: event.target.value }) }\n            onBlur={this.changeNumber.bind(this)}\n          />\n        </Grid>\n        \n        <Grid item xs={12}>\n          <AppBar position=\"static\">\n            <Tabs value={this.state.activeCat} onChange={this.changeCat} aria-label=\"simple tabs example\">\n              { this.state.points.map((item, key) =>\n                <Tab label={item.addr} style={{ minWidth: 'auto' }} key={key} {...a11yProps(key)} />\n              ) }\n            </Tabs>\n          </AppBar>\n          \n          { this.state.points.map((cat, key) =>\n            <TabPanel value={this.state.activeCat} index={key} key={key}>\n              \n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Оформил</TableCell>\n                      <TableCell>Телефон</TableCell>\n                      <TableCell>Адрес</TableCell>\n                      <TableCell>Оформлен</TableCell>\n                      <TableCell>Ко времени</TableCell>\n                      <TableCell>Закрыт на кухне</TableCell>\n                      <TableCell>Получен клиентом</TableCell>\n                      <TableCell>Тип</TableCell>\n                      <TableCell>Статус</TableCell>\n                      <TableCell>Сумма</TableCell>\n                      <TableCell>Оплата</TableCell>\n                      <TableCell>Курьер</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    \n                    { this.state.orders.map( (item, key) =>\n                      <TableRow key={key} className=\"order\" id={item.id} datanumber={item.number} style={ item.is_delete == 1 ? { backgroundColor: 'red', color: '#fff' } : {} }>\n                        <TableCell style={{ color: 'inherit', cursor: 'pointer' }} onClick={ this.getOrder.bind(this, item.id) }>{item.id}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_user}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.number}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.street} {item.home}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.date_time_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{ item.date_time_preorder == '00:00:00' ? '' : item.date_time_preorder }</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{ item.give_data_time == '00:00:00' ? '' : item.give_data_time }</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.close_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.order_price}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_pay}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.driver}</TableCell>\n                      </TableRow>\n                    ) }\n                    \n                    \n                  </TableBody>\n                </Table>\n              </TableContainer>\n              \n            </TabPanel>\n          )}\n          \n        </Grid>\n        \n        { this.state.showOrder ?\n          <Dialog \n              onClose={this.closeDialog.bind(this)} \n              aria-labelledby=\"customized-dialog-title\" \n              className=\"showOrderDialog\" \n              open={this.state.openDialog}\n              fullWidth={true}\n          >\n              <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                  <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                \n                  <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                      <CloseIcon />\n                  </IconButton>\n              </MuiDialogTitle>\n              \n              <MuiDialogContent className=\"showOrderDialogContent\">\n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                  \n                  <Grid container spacing={0}>\n                    { this.state.showOrder.order.number.length > 1 ? \n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Телефон: </Typography> \n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.number}</Typography> \n                      </Grid>\n                        : \n                      null\n                    }\n                  </Grid>\n                  \n                  \n                  { this.state.showOrder.order.delete_reason.length > 0 ? <Typography variant=\"h6\" component=\"span\" style={{ color: 'red' }}>Удален: {this.state.showOrder.order.date_time_delete}</Typography> : null}\n                  { this.state.showOrder.order.delete_reason.length > 0 ? <Typography variant=\"h6\" component=\"span\" style={{ color: 'red' }}>{this.state.showOrder.order.delete_reason}</Typography> : null}\n                  \n                  { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                    <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                  }\n                  \n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.textTime}</Typography>\n                  \n                  <Grid container spacing={0}>\n                    { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                      <>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h6\" component=\"b\">Промокод: </Typography>\n                          <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.promo_name}</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                        </Grid>\n                      </>\n                    }\n                    \n                    { this.state.showOrder.order.comment == null || this.state.showOrder.order.comment.length == 0 ? null :\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Комментарий: </Typography>\n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.comment}</Typography>\n                      </Grid>\n                    }\n                    \n                    { this.state.showOrder.order.sdacha == null || parseInt(this.state.showOrder.order.sdacha) == 0 ? null :\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Сдача: </Typography>\n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.sdacha}</Typography>\n                      </Grid>\n                    }\n                  </Grid>\n                  \n                  <table className=\"tableOrderCheck\">\n                      <tbody>\n                          {this.state.showOrder.order_items.map((item, key) => \n                              <tr key={key}>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                  </td>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                  </td>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.price} р</Typography>\n                                  </td>\n                              </tr>\n                          )}\n                          \n                          { parseInt(this.state.showOrder.order.type_order_) == 1 ?\n                            <tr>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                              </td>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\"></Typography>\n                              </td>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\">{this.state.showOrder.order.sum_div} р</Typography>\n                              </td>\n                            </tr>\n                              :\n                            null\n                          }\n                      </tbody>\n                      <tfoot>\n                        <tr>\n                          <th style={{ textAlign: 'left' }}>\n                            <Typography variant=\"h5\" component=\"span\">Сумма закза</Typography>\n                          </th>\n                          <td>\n                            <Typography variant=\"h5\" component=\"span\"></Typography>\n                          </td>\n                          <th style={{ textAlign: 'left' }}>\n                            <Typography variant=\"h5\" component=\"span\">{this.state.showOrder.order.sum_order} р</Typography>\n                          </th>\n                        </tr>\n                      </tfoot>\n                  </table>\n                  \n              </MuiDialogContent>\n              \n              { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                  <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                  </ButtonGroup>\n                </MuiDialogActions>\n                  :\n                null\n              }\n              { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                  <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                  </ButtonGroup>\n                </MuiDialogActions>\n                  :\n                null\n              }\n              \n          </Dialog>\n              :\n          null\n        }\n        \n        { this.state.showOrder ?\n          <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n              <Typography variant=\"h6\">Отмена заказа {this.state.showOrder.order.order_id}</Typography>\n            \n              <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                <CloseIcon />\n              </IconButton>\n            </MuiDialogTitle>\n            \n            <DialogContent>\n              <FormControl component=\"fieldset\">\n                <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                  {this.state.radiogroup_options.map((item, key) => \n                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                  )}\n                </RadioGroup>\n              </FormControl>\n            \n              <TextField\n                //autoFocus\n                onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                value={ this.state.textDel }\n                onChange={ this.changeText.bind(this) }\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Причина отмены\"\n                type=\"text\"\n                fullWidth\n              />\n            </DialogContent>\n            <DialogActions style={{ paddingBottom: 24 }}>\n              \n              <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n              </ButtonGroup>\n              \n              <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n              </ButtonGroup>\n              \n            </DialogActions>\n          </Dialog>\n            :\n          null\n        }\n        \n      </Grid>\n    )\n  }\n}\n\nexport function Orders() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <OrdersStat classes={classes} />\n    </div>\n  );\n}","import * as React from \"react\"\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Grid from '@material-ui/core/Grid';\n\nimport {Helmet} from \"react-helmet\";\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst queryString = require('query-string');\n\nimport { Header } from '../header';\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer'\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass OrderCook extends React.Component {\n  interval = null;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      cityList: [],\n      spiner: false,\n      \n      data: [],\n      \n      selectedPoint: 1,\n      selectedDate: formatDate(new Date()),\n      \n      points: [],\n      point: null,\n      \n      activeCat: 0,\n      \n      orders: [],\n      orderCheck: false,\n      \n      showOrder: null,\n      openDialog: false,\n      \n      delOrder: false,\n      radiogroup_options: [\n        {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n        {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n        {id: '2', label: 'Изминились планы', value: 0 },\n        {id: '3', label: 'Недостаточно средств', value: 0 },\n        {id: '4', label: 'Другое', value: 0 },\n      ],\n      textDel: '',\n      typeDel: -1\n    };\n  }\n    \n  componentWillUnmount(){\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    \n    this.setState({\n      spiner: true\n    })\n    \n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin();\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cityList: json.city_list\n      })\n    })\n    .catch(err => { });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_points', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      this.setState({\n        points: json,\n        point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.getCookOrders();\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n    \n  changePoint(event){\n    let point = event.target.value;\n    \n    this.setState({ selectedPoint: point });\n    setTimeout( () => {\n      this.getCookOrders();  \n    },500 )\n  }\n  \n  getCookOrders(){\n    this.setState({\n      spiner: true\n    })\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'getCookOrders', \n        point_id: this.state.selectedPoint\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      this.setState({\n        data: json,\n        //spiner: false\n        //point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.setState({\n          spiner: false\n        })\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={0}>\n        \n        <Helmet>\n          <title>Заказы на кухне</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid item xs={12}>\n          { this.state.cityList.length > 0 ? <Header classes={this.state.classes} cityList={this.state.cityList} page=\"OrderCook\" /> : null }\n        </Grid>\n        \n        <Grid item xs={12} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <FormControl className={this.state.classes.formControl}>\n            <InputLabel>Точка</InputLabel>\n            <Select\n              value={this.state.selectedPoint}\n              onChange={ this.changePoint.bind(this) }\n            >\n              { this.state.points.map( (item, key) =>\n                <MenuItem key={key} value={item.id}>{item.addr}</MenuItem>\n              ) }\n            </Select>\n          </FormControl>\n          \n          <Button variant=\"contained\" color=\"primary\" className=\"btnClear\" style={{ padding: '2px 6px', minWidth: 30 }} onClick={ this.getCookOrders.bind(this) }>\n            <CachedIcon />\n          </Button>\n        </Grid>\n        \n        <Grid item xs={12}>\n          \n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>#</TableCell>\n                  <TableCell>Тип</TableCell>\n                  <TableCell>Статус</TableCell>\n                  \n                  <TableCell>Время заказа / предзаказа</TableCell>\n                  <TableCell>Время выхода на стол</TableCell>\n                  <TableCell>Во сколько собрали</TableCell>\n                  \n                  <TableCell>Закрыли</TableCell>\n                  <TableCell>Приготовили</TableCell>\n                  <TableCell>Отдали</TableCell>\n                  <TableCell>Обещали</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                \n                \n              \n                { this.state.data.ready ?\n                   this.state.data.ready.map( (item, key) =>\n                    <TableRow key={key} style={{ backgroundColor: 'green' }}>\n                      <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                      \n                      <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder_ : item.date_time_order }</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.unix_start_stol_or}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                      \n                      <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                    </TableRow>\n                  )\n                    :\n                  null\n                }\n                \n                { this.state.data.onstol ?\n                 this.state.data.onstol.map( (item, key) =>\n                  <TableRow key={key} style={{ backgroundColor: 'yellow' }}>\n                    <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder_ : item.date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.unix_start_stol_or}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                  </TableRow>\n                )\n                  :\n                null\n                }\n                \n                { this.state.data.prestol_new ?\n                 this.state.data.prestol_new.map( (item, key) =>\n                  <TableRow key={key}>\n                    <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder : item.date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_start_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                  </TableRow>\n                )\n                  :\n                null\n                }\n                \n                \n              </TableBody>\n            </Table>\n          </TableContainer>\n        \n        </Grid>\n        \n        \n        \n      </Grid>\n    )\n  }\n}\n\nexport function ordercook() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <OrderCook classes={classes} />\n    </div>\n  );\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\n\nconst queryString = require('query-string');\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {    \n      number: '',\n      pass: ''\n    };\n  }\n    \n  componentDidMount = () => {\n  }\n    \n  login(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'login_center', \n        number: this.state.number,\n        pass: this.state.pass\n      })\n    }).then(res => res.json()).then(json => {\n      if( json['st'] ){\n        itemsStore.setToken(json.token, json.name);\n       \n        setTimeout( () => {\n          window.location.href = '/';\n        }, 500 )\n        \n      }else{\n        alert(json.text)\n      }\n    });\n  }\n  \n  handleKeyPress(target) {\n    if(target.charCode==13){\n      if( this.state.number.length > 0 && this.state.pass.length > 0 ){\n        this.login();\n      }\n    }\n  }\n  \n  render() {\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ height: '100vh' }}\n      >\n        <Grid container item xs={3}>\n          <img alt=\"Жако доставка роллов и пиццы\" src=\"../assets/logo.png\" style={{ height: 'auto', width: 'inherit' }} />\n        </Grid>\n            \n        <Grid container item xs={3} direction=\"column\">\n          \n          <FormControl>\n            <InputLabel htmlFor=\"my-input\">Номер телефона</InputLabel>\n            <Input \n              id=\"my-input\" \n              type=\"login\" \n              aria-describedby=\"my-helper-text\" \n              value={ this.state.number } \n              onChange={ (event) => { this.setState({ number: event.target.value }) } } \n              onKeyPress={this.handleKeyPress}\n            />\n          </FormControl>\n          \n          <FormControl>\n            <InputLabel htmlFor=\"my-input2\">Пароль</InputLabel>\n            <Input \n              id=\"my-input2\" \n              type='password' \n              aria-describedby=\"my-helper-text\" \n              value={ this.state.pass } \n              onChange={ (event) => { this.setState({ pass: event.target.value }) } } \n              onKeyPress={this.handleKeyPress}\n            />\n          </FormControl>\n          \n          <FormControl style={{ paddingTop: 8 }}>\n            <Button variant=\"contained\" style={{ backgroundColor: '#CC0033', color: '#fff' }} onClick={this.login.bind(this)}>Войти</Button>\n          </FormControl>\n          \n        </Grid>\n            \n      </Grid>\n    )\n  }\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport LinkIcon from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { createTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { useHistory } from \"react-router-dom\";\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nconst stores = { itemsStore };\n\nconst queryString = require('query-string');\n\n\n\nimport { LiveOrders } from '../live_orders';\n\nimport { Home } from '../home';\nimport { Orders } from '../orders';\nimport { ordercook } from '../ordercook';\nimport { Auth } from '../auth';\n\nconst theme = createTheme({\n    palette: {\n      primary: {\n        main: '#c03',\n      },\n      def: {\n        main: '#353b48',\n        secondary: '#fff'\n      },\n    },\n  });\n\nconst mainListItems = (\n  <div>\n    \n      \n      \n      <Link to={\"/live_orders/\"}>\n          \n        <ListItem button>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Заказы на кухне\" />\n        </ListItem>\n          \n      </Link>\n      <Link to={\"/\"}>\n          \n        <ListItem button>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Index\" />\n        </ListItem>\n          \n      </Link>\n    \n    <ListItem button>\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <Link to={\"/\"}>Index</Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Customers\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reports\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Integrations\" />\n    </ListItem>\n  </div>\n);\n\nconst secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem>\n  </div>\n);\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <LinkIcon color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </LinkIcon>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    width: '100%',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      \n      module: 'header',\n      \n      open: false,\n      menu: [],\n      full_menu: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      menu: data.info.left_menu,\n      full_menu: data.info.full_menu,\n    })\n  }\n  \n  getData = (method, data = {}) => {\n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: '+79879340391',\n        //login: localStorage.getItem('login'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      return json;\n    })\n    .catch(err => { \n        console.log( err )\n    });\n  }\n  \n  handleDrawerOpen(){\n    this.setState({\n      open: true\n    })\n  }\n  \n  handleDrawerClose(){\n    this.setState({\n      open: false\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <AppBar className={clsx(this.state.classes.appBar, this.state.open && this.state.classes.appBarShift)}>\n          <Toolbar className={this.state.classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={this.handleDrawerOpen.bind(this)}\n              className={clsx(this.state.classes.menuButton, this.state.open && this.state.classes.menuButtonHidden)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.state.classes.title}>\n              Dashboard\n            </Typography>\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        \n        <Drawer\n          variant=\"persistent\"\n          classes={{\n            paper: clsx(this.state.classes.drawerPaper, !this.state.open && this.state.classes.drawerPaperClose),\n          }}\n          open={this.state.open}\n        >\n          <div className={this.state.classes.toolbarIcon}>\n            \n            <Autocomplete\n              size=\"small\"\n              options={this.state.full_menu}\n              getOptionLabel={(option) => option.name}\n              onChange={(event, newValue) => {\n                if( newValue ){\n                  this.state.history.push(\"/\"+newValue.key_query+\"/\");\n                }\n              }}\n              style={{ width: 300 }}\n              renderInput={(params) => <TextField {...params} label=\"Поиск\" variant=\"outlined\" />}\n            />\n            \n            <IconButton onClick={this.handleDrawerClose.bind(this)}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          \n          { this.state.menu.map( (item, key) =>\n            <Accordion key={key} >\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Typography className={this.state.classes.heading}>{ item.parent.name }</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                \n                <List style={{ width: '100%' }}>\n                \n                  { item.chaild.map( (it, k) =>\n                    <ListItem button key={k}>\n                      <Link to={\"/\"+it.key_query+\"/\"}>\n                        <ListItemText primary={ it.name } />\n                      </Link>\n                    </ListItem>\n                  ) }\n                \n                </List>\n                \n              </AccordionDetails>\n            </Accordion>\n          ) }\n        \n        </Drawer>\n      </>\n    )\n  }\n}\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nexport function App () {\n    const classes = useStyles();\n    let history = useHistory();\n    \n    return (\n        <Provider { ...stores }>\n            <ThemeProvider theme={theme}>\n                <div className={classes.root}>\n                    <CssBaseline />\n                    <Header classes={classes} history={history} />\n                    <main className={classes.content}>\n                        <div className={classes.appBarSpacer} />\n                        <Container maxWidth={false} className={classes.container}>\n                    \n                            <Switch>\n                                <Route\n                                    path='/'\n                                    exact={ true }\n                                    component={ Home }\n                                />\n                                <Route\n                                    path='/live_orders'\n                                    exact={ true }\n                                    component={ LiveOrders }\n                                />\n                                <Route\n                                    path='/ordercook'\n                                    exact={ true }\n                                    component={ ordercook }\n                                />\n                                <Route\n                                    path='/auth'\n                                    exact={ true }\n                                    component={ Auth }\n                                />\n                                <Route\n                                    component={ NotFound }\n                                />\n                            </Switch>\n                    \n                   \n                    \n                            <Box pt={4}>\n                                <Copyright />\n                            </Box>\n                        </Container>\n                    </main>\n                </div>\n            </ThemeProvider>\n        </Provider>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","var map = {\n\t\"./ru\": 1793,\n\t\"./ru.js\": 1793\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;"],"names":["queryString","require","configure","enforceActions","useProxies","itemsStore","ItemsStore","items","MyPromos","JSON","stringify","updateMyPromos","Date","localStorage","setItem","sum_div","parseInt","need_dops","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","promo","name","itemsPromo","allItemsCat","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","cart","parse","new_cart","this","getAllItems","forEach","push","item_id","one_price","all_price","setItems","setToken","setTimeout","getInfoPromo","length","setMyPromos","makeAutoObservable","promoName","fetch","config","method","headers","body","type","city_id","getCity","promo_name","then","res","json","console","log","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","tz","format","status_promo","text","limits","date","min","max","promo_text","time","summ","dows","only_kassa","this_item","this_item_check","map","need_item","find","check","id","free_drive","count_sale","promo_action","sale","cat_sale","sale_action","el_promo","type_price","cat_id","items_add","el","items_on_price","new_one_price","test","originalItem","it","all_items","getFreeItems","cart_info","count_","item_info","max_count","check_max_count","check_add","this_item_id","is_add","some","key","add_item","check_item_add","NewCount","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","my_cart_promo","check_item","my_free_count","item_cart","check_free","Set","new_free_dop","unic_item","item_free","k","count_in_cart","useStyles","makeStyles","theme","formControl","width","selectEmpty","marginTop","spacing","MySelect","props","state","classes","FormControl","size","variant","className","InputLabel","label","Select","labelId","value","onChange","func","MenuItem","data","React","MyCheckBox","FormGroup","row","FormControlLabel","control","Checkbox","checked","color","Live_Orders","setState","is_load","module","version","login","err","module_name","points","point","showReady","read","onstol","ordersQueue","getData","point_list","module_info","document","title","updateData","event","target","prestol_new","Backdrop","backdrop","open","CircularProgress","Grid","container","xs","sm","changePoint","bind","Button","onClick","changeCheckOrders","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","preorder","date_time_order","date_time_preorder_","unix_start_stol_or","give_data_time_","close_date_time_order","style","backgroundColor","type_","time_","test_time","unix_time_to_client","status","stol_sborki","is_preorder","date_time_preorder","time_start_order","time_end_order","LiveOrders","zIndex","drawer","Home","HtmlTooltip","withStyles","tooltip","maxWidth","fontSize","typography","pxToRem","border","Tooltip","Header","_isMounted","defValue","number","autorun","dateTimeDel","thisDateTimeDel","orderPromoText","clear2","myPromos","myPromosNew","checkDate","add","element","clear","cityList","page","promoST","top","left","bottom","right","str","split","join","alert","check_promo","anchor","orderComment","orderPay","orderSdacha","location","reload","root","AppBar","position","Toolbar","minHeight","height","IconButton","edge","toggleDrawer2","Menu","paddingBottom","changeCity","display","alignItems","Autocomplete","freeSolo","minWidth","marginRight","val","onBlur","options","option","renderInput","params","TextField","margin","placement","Typography","size1","padding","Close","paddingTop","placeholder","saveNumber","marginLeft","marginBottom","Drawer","onClose","clsx","list","role","to","textDecoration","ListItem","button","Divider","List","logOut","ListItemText","primary","root2","flexDirection","justifyContent","borderRight","root3","fullList","flexGrow","paper","textAlign","palette","secondary","paperCat","cursor","paperCatInfo","scrollTable","maxHeight","overflow","PropTypes","OrderCook","d","month","day","year","spiner","interval","setInterval","checkLogin","city_list","getCookOrders","selectedPoint","selectedDate","getMonth","getDate","getFullYear","activeCat","orders","orderCheck","showOrder","openDialog","delOrder","radiogroup_options","textDel","typeDel","clearInterval","token","href","Helmet","addr","Cached","ready","ordercook","Auth","pass","charCode","direction","justify","alt","src","htmlFor","Input","aria-describedby","onKeyPress","handleKeyPress","stores","createTheme","main","def","Copyright","align","Link","ListItemIcon","People","ShoppingCart","BarChart","Layers","ListSubheader","Assignment","toolbar","paddingRight","toolbarIcon","mixins","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","fixedHeight","heading","fontWeight","fontWeightRegular","history","menu","full_menu","info","left_menu","handleDrawerOpen","noWrap","Badge","badgeContent","Notifications","getOptionLabel","newValue","key_query","handleDrawerClose","ChevronLeft","Accordion","AccordionSummary","expandIcon","ExpandMore","aria-controls","parent","AccordionDetails","chaild","Status","code","children","render","staticContext","NotFound","App","useHistory","ThemeProvider","CssBaseline","Container","path","exact","Box","pt","ReactDOM","getElementById","exports","urlApi","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","keys","Object","resolve"],"sourceRoot":""}