{"version":3,"file":"669.862b8955cebd9c40f8bc.js","mappings":"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","sources":["webpack://package.json/./src/components/vendor_item_price/vendor_item_price.component.jsx","webpack://package.json/./src/components/vendor_item_price/vendor_item_price.style.scss"],"sourcesContent":["import React from 'react';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox, MyTextInput, MyAutocomplite } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nclass VendorItemPrice_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      module: 'vendor_item_price',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      \n      vendors: [],\n      vendor: null,\n      \n      items: [],\n      \n      cities: [],\n      city: '',\n      allCity: false,\n      isPrioriti: false\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      cities: data.cities\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        window.location.pathname = '/';\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      console.log( err )\n    });\n  }\n   \n  async changeCity(event){\n    let data = {\n      city: event.target.value\n    }\n    \n    let res = await this.getData('get_vendors', data);\n    \n    this.setState({\n      vendors: res,\n      city: event.target.value,\n      vendor: null,\n      items: []\n    })\n  }\n  \n  async changeVendor(event, value){\n\n    console.log( event.target.value, value )\n\n    let data = {\n      city: this.state.city,\n      vendor_id: value.id,\n    }\n    \n    let res = await this.getData('get_vendor_items', data);\n    \n    this.setState({\n      items: res,\n      vendor: value,\n    })\n  }\n  \n  update(item_id, data, event){\n    let this_items = this.state.items;\n    \n    this_items.map( (item, key) => {\n      if( parseInt(item.item_id) == parseInt(item_id) ){\n        this_items[key][data] = event.target.value;\n        \n        this_items[key]['price'] = (parseFloat(this_items[key]['full_price']) / parseFloat(this_items[key]['rec_pq'])).toFixed(2);\n      }\n    } )\n    \n    this.setState({\n      items: this_items\n    })\n  }\n  \n  async save(){\n    let data = {\n      vendor_id: this.state.vendor,\n      items: this.state.items,\n      city_id: this.state.city,\n      all_city: this.state.allCity === true ? 1 : 0,\n      is_prioriti: this.state.isPrioriti === true ? 1 : 0,\n    }\n    \n    if( data.all_city == 1 ){\n      if( confirm(\"Точно сохранить на все города поставщика ?\") ){\n        let res = await this.getData('save_price', data);\n      }\n    }else{\n      let res = await this.getData('save_price', data);\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop style={{ zIndex: 999 }} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n            \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect data={this.state.cities} value={this.state.city} func={ this.changeCity.bind(this) } label='Город' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MyAutocomplite data={this.state.vendors} value={this.state.vendor} func={ this.changeVendor.bind(this) } multiple={false} label='Поставщик' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MyCheckBox value={this.state.allCity} func={ (event) => { this.setState({ allCity: event.target.checked }) } } label='На все города поставщика' />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <MyCheckBox value={this.state.isPrioriti} func={ (event) => { this.setState({ isPrioriti: event.target.checked }) } } label='Приоритетный постащик' />\n          </Grid>\n          \n          <Grid item xs={12}>\n            <Button onClick={this.save.bind(this)} variant=\"contained\">Сохранить</Button>\n          </Grid>\n          \n          \n          <Grid item xs={12}>\n              \n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Позиция</TableCell>\n                    <TableCell></TableCell>\n                    <TableCell>Комментарий</TableCell>\n                    <TableCell>Цена за упаковку</TableCell>\n                    <TableCell>Объем упаковки</TableCell>\n                    <TableCell>Цена за 1 ед.</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  { this.state.items.map( (item, key) => \n                    <TableRow key={key}>\n                      <TableCell>{item.name}</TableCell>\n                      <TableCell>{item.name_for_vendor}</TableCell>\n                      <TableCell>\n                        <MyTextInput label=\"\" value={item.comment} func={ this.update.bind(this, item.item_id, 'comment') } />\n                      </TableCell>\n                      <TableCell>\n                        <MyTextInput label=\"\" value={item.full_price} func={ this.update.bind(this, item.item_id, 'full_price') } />\n                      </TableCell>\n                      <TableCell>\n                        <MySelect data={item.pqs} value={ parseInt(item.rec_pq) == 0 ? '' : item.rec_pq } func={ this.update.bind(this, item.item_id, 'rec_pq') } label='' />\n                      </TableCell>\n                      <TableCell>{item.price} / {item.ei_name}</TableCell>\n                    </TableRow>\n                  ) }\n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n          </Grid>\n            \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function VendorItemPrice() {\n  return (\n    <VendorItemPrice_ />\n  );\n}","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1664775930077\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","VendorItemPrice_","props","method","data","setState","is_load","fetch","headers","body","stringify","module","state","version","login","localStorage","getItem","JSON","then","res","json","st","type","setTimeout","window","location","pathname","err","console","log","module_name","modalDialog","vendors","vendor","items","cities","city","allCity","isPrioriti","this","getData","module_info","name","document","title","event","target","value","vendor_id","id","item_id","this_items","map","item","key","parseInt","parseFloat","toFixed","city_id","all_city","is_prioriti","confirm","Backdrop","style","zIndex","open","CircularProgress","color","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","Grid","container","spacing","xs","sm","func","changeCity","bind","label","changeVendor","multiple","checked","onClick","save","variant","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","name_for_vendor","comment","update","full_price","pqs","rec_pq","price","ei_name","React","VendorItemPrice","cssReload","hot","dispose","accept","undefined"],"sourceRoot":""}