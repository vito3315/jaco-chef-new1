{"version":3,"file":"main.f1df12c5cb6e325c8edc.js","mappings":"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","sources":["webpack://package.json/./server/routes.js","webpack://package.json/./src/components/auth/auth.component.jsx","webpack://package.json/./src/components/category_items/category_items.component.jsx","webpack://package.json/./src/components/concenter/concenter.component.jsx","webpack://package.json/./src/components/drive_map_stat_all/drive_map_stat_all.component.jsx","webpack://package.json/./src/components/driver_stat/driver_stat.component.jsx","webpack://package.json/./src/components/events/events.component.jsx","webpack://package.json/./src/components/home/home.component.jsx","webpack://package.json/./src/components/live_orders/live_orders.component.jsx","webpack://package.json/./src/components/ras_by_bill/ras_by_bill.component.jsx","webpack://package.json/./src/components/registration/registration.component.jsx","webpack://package.json/./src/components/revizion/revizion.component.jsx","webpack://package.json/./src/components/site_sale_2/site_sale_2.component.jsx","webpack://package.json/./src/components/tender/tender.component.jsx","webpack://package.json/./src/components/vendor_item_price/vendor_item_price.component.jsx","webpack://package.json/./src/components/vendor_module/vendor_module.component.jsx","webpack://package.json/./src/components/work_schedule/work_schedule.component.jsx","webpack://package.json/./src/components/app/app.component.jsx","webpack://package.json/./src/index.prod.js","webpack://package.json/./src/stores/elements.js"],"sourcesContent":["const { Home } = require( '../src/components/home' );\nconst { Auth } = require( '../src/components/auth' );\nconst { Reg } = require( '../src/components/registration' );\n\nconst { LiveOrders } = require( '../src/components/live_orders' );\nconst { Events } = require( '../src/components/events' );\nconst { RasByBill } = require( '../src/components/ras_by_bill' );\nconst { CategoryItems } = require( '../src/components/category_items' );\nconst { VendorModule } = require( '../src/components/vendor_module' );\nconst { VendorItemPrice } = require( '../src/components/vendor_item_price' );\nconst { Tender } = require( '../src/components/tender' );\nconst { Revizion, RevizionNew } = require( '../src/components/revizion' );\nconst { WorkSchedule } = require( '../src/components/work_schedule' );\nconst { SiteSale2, SiteSale2_New, SiteSale2_Edit, SiteSale2_Stat, SiteSale2_StatList } = require( '../src/components/site_sale_2' );\nconst { DriveMapStatAll } = require( '../src/components/drive_map_stat_all' );\nconst { DriverStat } = require( '../src/components/driver_stat' );\nconst { Concenter } = require( '../src/components/concenter' );\n\n//\n\nmodule.exports = [\n    {\n        path: '/',\n        exact: true,\n        component: Home,\n        title: 'Главная',\n        code: 200\n    },\n    {\n        path: '/auth',\n        exact: true,\n        component: Auth,\n        title: 'Авторизация',\n        code: 200\n    },\n    {\n        path: '/registration',\n        exact: true,\n        component: Reg,\n        title: 'Регистрация',\n        code: 200\n    },\n    \n    {\n        path: '/live_orders',\n        exact: true,\n        component: LiveOrders,\n        title: 'Оформленные заказы',\n        code: 200\n    },\n    {\n        path: '/events',\n        exact: true,\n        component: Events,\n        title: 'События',\n        code: 200\n    },\n    {\n        path: '/ras_by_bill',\n        exact: true,\n        component: RasByBill,\n        title: 'Расход по накладным',\n        code: 200\n    },\n    {\n        path: '/category_items',\n        exact: true,\n        component: CategoryItems,\n        title: 'Категории товаров',\n        code: 200\n    },\n    {\n        path: '/vendor_module',\n        exact: true,\n        component: VendorModule,\n        title: 'Поставщики',\n        code: 200\n    },\n    {\n        path: '/vendor_item_price',\n        exact: true,\n        component: VendorItemPrice,\n        title: 'Цены на товары поставщика',\n        code: 200\n    },\n    {\n        path: '/tender',\n        exact: true,\n        component: Tender,\n        title: 'Цены на товары поставщика',\n        code: 200\n    },\n    {\n        path: '/revizion',\n        exact: true,\n        component: Revizion,\n        title: 'Ревизия',\n        code: 200\n    },\n    {\n        path: '/revizion/new',\n        exact: true,\n        component: RevizionNew,\n        title: 'Новая ревизия',\n        code: 200\n    },\n    {\n        path: '/work_schedule',\n        exact: true,\n        component: WorkSchedule,\n        title: 'График работы',\n        code: 200\n    },\n    \n    {\n        path: '/site_sale_2',\n        exact: true,\n        component: SiteSale2,\n        title: 'Промокоды маркетолога',\n        code: 200\n    },\n    {\n        path: '/site_sale_2/new',\n        exact: true,\n        component: SiteSale2_New,\n        title: 'Промокоды маркетолога',\n        code: 200\n    },\n    {\n        path: '/site_sale_2/edit/:promoId',\n        exact: true,\n        component: SiteSale2_Edit,\n        title: 'Промокоды маркетолога',\n        code: 200\n    },\n    {\n        path: '/site_sale_2/stat',\n        exact: true,\n        component: SiteSale2_Stat,\n        title: 'Промокоды маркетолога',\n        code: 200\n    },\n    {\n        path: '/site_sale_2/stat_list',\n        exact: true,\n        component: SiteSale2_StatList,\n        title: 'Выписанные промики',\n        code: 200\n    },\n    {\n        path: '/drive_map_stat_all',\n        exact: true,\n        component: DriveMapStatAll,\n        title: 'Курьеры на карте',\n        code: 200\n    },\n    {\n        path: '/driver_stat',\n        exact: true,\n        component: DriverStat,\n        title: 'Статистика курьеров',\n        code: 200\n    },\n    {\n        path: '/concenter',\n        exact: true,\n        component: Concenter,\n        title: 'Контакт-центр',\n        code: 200\n    },\n    \n    \n    \n];","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    borderRadius: 0,\n    width: '100%',\n    height: 150,\n    margin: 0,\n    backgroundColor: '#fff'\n  },\n  avatar2: {\n    borderRadius: 0,\n    width: '100%',\n    height: 130,\n    margin: 0,\n    backgroundColor: '#fff'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  textLink: {\n    color: '#c03'\n  }\n});\n\nclass Auth_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'auth',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      dialogTitle: '',\n      dialogText: ''\n    };\n  }\n  \n  async componentDidMount(){\n      \n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: '+79879340391',\n        //login: localStorage.getItem('login'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        this.state.history.push(\"/auth\");\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      showReady: this.state.showReady === true ? 1 : 0\n    };\n    \n    let res = await this.getData('get_orders', data);\n    \n    this.setState({\n      read: res.read,\n      onstol: res.onstol,\n      ordersQueue: res.prestol_new\n    })\n  }\n  \n  async auth(){\n    let data = {\n      login: document.getElementById('phone').value,\n      pwd: document.getElementById('password').value\n    };\n    \n    let res = await this.getData('auth', data);\n    \n    console.log( res )\n    \n    if( res.st === false ){\n      setTimeout( () => {\n        this.setState({ \n          modalDialog: true,\n          dialogTitle: 'Предупреждение',\n          dialogText: res.text\n        })\n      }, 500 )\n    }else{\n      localStorage.setItem('token', res.token)\n      \n      setTimeout( () => {\n        window.location.pathname = '/'\n      }, 300)\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{this.state.dialogTitle}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">{this.state.dialogText}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ () => { this.setState({ modalDialog: false }) } } color=\"primary\" autoFocus>Хорошо</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          <Grid item xs={12} sm={6} md={6} lg={4} xl={3}>\n            <div className={this.state.classes.paper}>\n              <Avatar className={this.state.classes.avatar}>\n                <img alt=\"Жако доставка роллов и пиццы\" src=\"../assets/img_other/Favikon.png\" style={{ height: '100%' }} />\n              </Avatar>\n              <form className={this.state.classes.form} noValidate>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  size=\"small\"\n                  required\n                  fullWidth\n                  id=\"phone\"\n                  label=\"Номер телефона\"\n                  name=\"phone\"\n                  autoComplete=\"phone\"\n                  autoFocus\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  size=\"small\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Пароль\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                />\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={this.state.classes.submit}\n                  onClick={ this.auth.bind(this) }\n                >\n                  Войти\n                </Button>\n                <Grid container>\n                  <Grid item xs>\n                    <a href=\"/registration\" className={this.state.classes.textLink}>Восстановить пароль</a>\n                  </Grid>\n                </Grid>\n              </form>\n            </div>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Auth () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <Auth_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport MenuIcon from '@mui/icons-material/Menu';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport TextField from '@mui/material/TextField';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyAutocomplite } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    },\n    def: {\n      main: '#353b48',\n      secondary: '#fff'\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nclass CategoryItems_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'category_items',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      modalDialog2: false,\n      modalDialog3: false,\n      \n      newMainCatMy: 0,\n      editMainCatMy: 0,\n      newMainNameMy: '',\n      editMainNameMy: '',\n      \n      editCat: null,\n      \n      allCats: [],\n      allItems: [],\n      \n      thisValItems: [],\n      thisDataItems: [],\n      thisCatId: 0,\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      allCats: data.cats,\n      allItems: data.items,\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  createCat(){\n    this.setState({\n      modalDialog: true,\n      newMainCatMy: 0,\n      newMainNameMy: ''\n    })\n  }\n  \n  changeCatMain(event){\n    let data = event.target.value;\n    \n    this.setState({\n      newMainCatMy: data\n    })\n  }\n  \n  changeCatMainEdit(event){\n    let data = event.target.value;\n    \n    this.setState({\n      editMainCatMy: data\n    })\n  }\n  \n  changeNameMain(event){\n    let data = event.target.value;\n    \n    this.setState({\n      newMainNameMy: data\n    })\n  }\n  \n  changeNameMainEdit(event){\n    let data = event.target.value;\n    \n    this.setState({\n      editMainNameMy: data\n    })\n  }\n  \n  async saveCat(){\n    let data = {\n      name: this.state.newMainNameMy,\n      cat_id: this.state.newMainCatMy\n    };\n    \n    let res = await this.getData('save_cat', data);\n    \n    if( res.st === false ){\n      alert(res.text);\n      return ;\n    }\n    \n    this.setState({\n      allCats: res.cats,\n      modalDialog: false\n    })\n  }\n  \n  addItems(cat_id){\n    \n    let myVal = this.state.allItems.filter( (item) => parseInt(item.cat_id) == parseInt(cat_id) );\n    let data = this.state.allItems.filter( (item) => parseInt(item.cat_id) == 0 );\n    \n    this.setState({\n      modalDialog2: true,\n      thisValItems: myVal,\n      thisDataItems: data,\n      thisCatId: cat_id\n    })\n  }\n  \n  async saveItems(){\n    let data = {\n      cat_id: this.state.thisCatId,\n      items: this.state.thisValItems\n    };\n    \n    let res = await this.getData('save_items_cat', data);\n    \n    this.setState({\n      allCats: res.cats,\n      allItems: res.items,\n      modalDialog2: false,\n      \n      thisValItems: [],\n      thisDataItems: [],\n      thisCatId: 0\n    })\n  }\n  \n  editCat(cat){\n    this.setState({\n      modalDialog3: true,\n      editMainCatMy: cat.parent_id,\n      editMainNameMy: cat.name,\n      editCat: cat\n    })\n  }\n  \n  async saveEditCat(){\n    let data = {\n      name: this.state.editMainNameMy,\n      cat_id: this.state.editMainCatMy,\n      id: this.state.editCat.id\n    };\n    \n    let res = await this.getData('edit_cat', data);\n    \n    if( res.st === false ){\n      alert(res.text);\n      return ;\n    }\n    \n    this.setState({\n      allCats: res.cats,\n      modalDialog: false\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Новая категория</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={12}>\n                <MySelect \n                  classes={this.state.classes} \n                  label=\"Главная категория\" \n                  data={ this.state.allCats.filter( (item) => parseInt(item.parent_id) == -1 || !item.parent_id ) }\n                  value={this.state.newMainCatMy} \n                  func={ this.changeCatMain.bind(this) } />\n              </Grid>  \n              <Grid item xs={12} sm={12}>\n                <TextField label=\"Название категории\" size=\"small\" variant=\"outlined\" style={{ width: '100%' }} color=\"primary\" value={this.state.newMainNameMy} onChange={this.changeNameMain.bind(this)} />\n              </Grid>\n            </Grid>\n            \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ this.saveCat.bind(this) } color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Dialog\n          open={this.state.modalDialog2}\n          onClose={ () => { this.setState({ modalDialog2: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle>Позиции категории</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={12}>\n                <MyAutocomplite \n                  label=\"Выбранные позиции\" \n                  func={ (event, val) => { this.setState({ thisValItems: val }) } }\n                  data={ this.state.thisDataItems } \n                  value={ this.state.thisValItems } />\n              </Grid>\n            </Grid>\n            \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ this.saveItems.bind(this) } color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Dialog\n          open={this.state.modalDialog3}\n          onClose={ () => { this.setState({ modalDialog3: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Редактирование категории</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={12}>\n                <MySelect \n                  classes={this.state.classes} \n                  label=\"Главная категория\" \n                  data={ this.state.allCats.filter( (item) => parseInt(item.parent_id) == -1 || !item.parent_id ) } \n                  value={this.state.editMainCatMy} \n                  func={ this.changeCatMainEdit.bind(this) } \n                />\n              </Grid>  \n              <Grid item xs={12} sm={12}>\n                <TextField \n                  label=\"Название категории\" \n                  size=\"small\" \n                  variant=\"outlined\" \n                  style={{ width: '100%' }} \n                  color=\"primary\" \n                  value={this.state.editMainNameMy} \n                  onChange={ this.changeNameMainEdit.bind(this) }\n                />\n              </Grid>\n            </Grid>\n            \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ this.saveEditCat.bind(this) } color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            <Button onClick={this.createCat.bind(this)}>Создать категорию</Button>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            { this.state.allCats.map( (main_cat, main_key) =>\n              parseInt(main_cat.parent_id) != -1 ? null :\n                <Accordion key={main_key}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                  >\n                    <MenuIcon style={{ marginRight: 10 }} onClick={ this.editCat.bind(this, main_cat) } />\n                    <Typography>{main_cat.name}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    \n                  { this.state.allCats.map( (parent_cat, parent_key) =>\n                    parseInt(main_cat.id) != parseInt(parent_cat.parent_id) ? null :\n                      <Accordion key={main_key+'_'+parent_key}>\n                        <AccordionSummary\n                          expandIcon={<ExpandMoreIcon />}\n                          aria-controls=\"panel1a-content\"\n                        >\n                          <MenuIcon style={{ marginRight: 10 }} onClick={ this.editCat.bind(this, parent_cat) } />\n                          <Typography>{parent_cat.name}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          \n                          { this.state.allItems.filter( (item) => parseInt(item.cat_id) == parseInt(parent_cat.id) ).map( (item, key) =>\n                            <Accordion key={main_key+'_'+parent_key+'_'+key}>\n                              <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                              >\n                                <Typography>{item.name}</Typography>\n                              </AccordionSummary>\n                            </Accordion>\n                          ) }\n                            \n                          <Button onClick={this.addItems.bind(this, parseInt(parent_cat.id))}>Добавить</Button>\n                            \n                        </AccordionDetails>\n                      </Accordion>\n                  )}\n                    \n                  </AccordionDetails>\n                </Accordion>\n            ) }\n          </Grid>\n          \n          \n        \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function CategoryItems () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <CategoryItems_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableFooter from '@mui/material/TableFooter';\nimport Paper from '@mui/material/Paper';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyDatePickerNew, MyTextInput } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>{children}</Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass Concenter_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'concenter',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      modalDialogDel: false,\n      \n      cities: [],\n      city_id: 1,\n      date: formatDate(new Date()),\n      point_list: [],\n      need_point_list: [],\n      point_id: 0,\n      indexTab: 0,\n\n      orders: [],\n      ordersRender: [],\n      showOrder: null,\n\n      radiogroup_options: [\n        {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n        {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n        {id: '2', label: 'Изменились планы', value: 0 },\n        {id: '3', label: 'Недостаточно средств', value: 0 },\n        {id: '4', label: 'Другое', value: 0 },\n      ],\n      textDel: '',\n      typeDel: -1,\n\n      number: ''\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    let need_points = data.points.filter( (item, key) => parseInt(item.city_id) == parseInt(data.cities[0].id) );\n\n    this.setState({\n      module_name: data.module_info.name,\n      cities: data.cities,\n      point_list: data.points,\n      need_point_list: need_points,\n      point_id: parseInt(need_points[0].id)\n    })\n    \n    document.title = data.module_info.name;\n\n    setTimeout( () => {\n      this.getOrders();\n    }, 300 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  changeCity(event){\n    this.setState({\n      number: ''\n    })\n\n    let data = event.target.value;\n    \n    let need_points = this.state.point_list.filter( (item, key) => parseInt(item.city_id) == parseInt(data) );\n\n    this.setState({\n      city_id: data,\n      need_point_list: need_points,\n      point_id: parseInt(need_points[0].id),\n      indexTab: 0\n    })\n\n    setTimeout( () => {\n      this.getOrders();\n    }, 300 )\n  }\n  \n  async changePoint(event, index){\n    let point_id = event.target.id;\n    point_id = point_id.split('-')[2]\n\n    this.setState({\n      point_id: point_id,\n      indexTab: index\n    })\n\n    setTimeout( () => {\n      this.getOrders();\n    }, 300 )\n    \n  }\n\n  async getOrders(){\n    let data = {\n      point_id: this.state.point_id,\n      date: this.state.date\n    };\n    \n    let res = await this.getData('get_orders', data);\n\n    console.log( res )\n\n    this.setState({\n      orders: res.orders\n    })\n\n    setTimeout( () => {\n      this.filterNumber();\n    }, 300 )\n  }\n\n  btnGetOrders(){\n    this.setState({\n      number: ''\n    })\n\n    this.getOrders();\n  }\n\n  async showOrder(order_id){\n    let data = {\n      point_id: this.state.point_id,\n      order_id: order_id\n    };\n\n    let res = await this.getData('get_order_new', data);\n\n    console.log( res )\n\n    this.setState({\n      modalDialog: true,\n      showOrder: res\n    })\n  }\n\n  closeOrder(){\n    this.setState({ modalDialogDel: true })\n  }\n\n  async closeOrderTrue(){\n    let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n    if( deltype.id == '4' ){\n      deltype.label = this.state.textDel;\n    }\n    \n    if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n      let data = {\n        typeCreate: 'center',\n        order_id: this.state.showOrder.order.order_id,\n        point_id: this.state.showOrder.order.point_id,\n        ans: deltype.label\n      };\n  \n      let res = await this.getData('close_order_center', data);\n\n      setTimeout(() => {\n        if( res['st'] ){\n          this.setState({\n            modalDialogDel: false,\n            modalDialog: false,\n          });\n          \n          this.getOrders();\n        }else{\n          alert( res['text'] );\n        }\n      }, 300);\n    }\n  }\n\n  async fakeUser(){\n    let type_check = 0;\n\n    if( parseInt(this.state.showOrder.order.check_pos) >= 0 ){\n      if( parseInt(this.state.showOrder.order.check_pos) <= 100 ){\n        type_check = 1;\n      }else{\n        type_check = 2;\n      }\n    }else{\n      type_check = 0;\n    }\n\n    //0 - не активно\n    //1 - сразу\n    //2 - уточнить\n\n    \n    if( parseInt(type_check) == 0 ){\n      alert('Создать обращение не возможно')\n      return ;\n    }\n\n    if( parseInt(type_check) == 1 ){\n      let text = prompt('Комментарий к ситуации', '');\n\n      if(text.length > 0){\n        let data = {\n          text: text,\n          point_id: parseInt(this.state.showOrder.order.point_id),\n          order_id: parseInt(this.state.showOrder.order.order_id),\n        };\n    \n        let res = await this.getData('get_order_new', data);\n  \n        if(res['st'] == true){\n          alert('Обращение зафиксировано')\n        }else{\n          alert(res['text'])\n        }\n\n      }else{\n        alert('надо указать комментарий')\n      }\n    }\n\n    if( parseInt(type_check) == 2 ){\n      const result = confirm('Курьер, предположительно, находиться далеко от клиента, точно оформить довоз ?');\n\n      if (result) {\n        var text = prompt('Комментарий к ситуации', '');\n\n        if(text.length > 0){\n          let data = {\n            text: text,\n            point_id: parseInt(this.state.showOrder.order.point_id),\n            order_id: parseInt(this.state.showOrder.order.order_id),\n          };\n      \n          let res = await this.getData('get_order_new', data);\n\n          if(res['st'] == true){\n            alert('Обращение зафиксировано')\n          }else{\n            alert(res['text'])\n          }\n        }else{\n          alert('надо указать комментарий')\n        }\n      }\n    }\n  }\n\n  changeText(event){\n    this.setState({ textDel: event.target.value })\n  }\n\n  changeAddr = (event) => {\n    this.setState({\n      typeDel: event.target.value,\n    })\n  }\n\n  changeDate(val){\n    this.setState({\n      number: ''\n    })\n    \n    this.setState({\n      date: formatDate(val)\n    })\n\n    setTimeout( () => {\n      this.getOrders();\n    }, 300 )\n  }\n\n  changeNumber(event){\n    let value = event.target.value;\n    \n    if( isNaN(value) ){\n      return ;\n    }\n\n    this.setState({ number: value })\n\n    setTimeout( () => {\n      this.filterNumber();\n    }, 300 )\n  }\n\n  filterNumber(){\n    if( this.state.number.length == 0 ){\n      this.setState({\n        ordersRender: this.state.orders\n      })\n    }else{\n      let renderOrders = this.state.orders.filter( (item) => item.number.indexOf(this.state.number) !== -1 );\n\n      this.setState({\n        ordersRender: renderOrders\n      })\n    }\n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        { !this.state.showOrder ? null : \n          <Dialog\n            open={this.state.modalDialog}\n            onClose={ () => { this.setState({ modalDialog: false }) } }\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{textAlign: 'center'}}>Заказ #{this.state.showOrder.order.order_id}</DialogTitle>\n            <DialogContent>\n              \n              <Grid container spacing={0}>\n                <Grid item xs={12}>\n                  <span>{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</span>\n                </Grid>\n                <Grid item xs={12}>\n                  <span>{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</span>\n                </Grid>\n\n                { this.state.showOrder.order.number.length > 1 ? \n                  <Grid item xs={12}>\n                    <b>Телефон: </b> \n                    <span>{this.state.showOrder.order.number}</span> \n                  </Grid>\n                    : \n                  null\n                }\n\n                { this.state.showOrder.order.delete_reason.length > 0 ? <Grid item xs={12}><span style={{ color: 'red' }}>Удален: {this.state.showOrder.order.date_time_delete}</span></Grid> : null}\n                { this.state.showOrder.order.delete_reason.length > 0 ? <Grid item xs={12}><span style={{ color: 'red' }}>{this.state.showOrder.order.delete_reason}</span></Grid> : null}\n                \n                { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                  <Grid item xs={12}><span>{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</span></Grid>\n                }\n                \n                <Grid item xs={12}><span>{this.state.showOrder.order.textTime}</span></Grid>\n                \n                \n                { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                  <>\n                    <Grid item xs={12}>\n                      <b>Промокод: </b>\n                      <span>{this.state.showOrder.order.promo_name}</span>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <span className=\"noSpace\">{this.state.showOrder.order.promo_text}</span>\n                    </Grid>\n                  </>\n                }\n                \n                { this.state.showOrder.order.comment == null || this.state.showOrder.order.comment.length == 0 ? null :\n                  <Grid item xs={12}>\n                    <b>Комментарий: </b>\n                    <span>{this.state.showOrder.order.comment}</span>\n                  </Grid>\n                }\n                \n                { this.state.showOrder.order.sdacha == null || parseInt(this.state.showOrder.order.sdacha) == 0 ? null :\n                  <Grid item xs={12}>\n                    <b>Сдача: </b>\n                    <span>{this.state.showOrder.order.sdacha}</span>\n                  </Grid>\n                }\n                \n                <Grid item xs={12}>\n                  <b>Сумма заказа: </b>\n                  <span>{this.state.showOrder.order.sum_order} р</span>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Table size={'small'} style={{ marginTop: 15 }}>\n                    <TableBody>\n                      { this.state.showOrder.order_items.map( (item, key) =>\n                        <TableRow key={key}>\n                          <TableCell>{item.name}</TableCell>\n                          <TableCell>{item.count}</TableCell>\n                          <TableCell>{item.price} р</TableCell>\n                        </TableRow>\n                      ) }\n                    </TableBody>\n                    <TableFooter>\n                      <TableRow>\n                        <TableCell style={{fontWeight: 'bold', color: '#000'}}>Сумма закза</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell style={{fontWeight: 'bold', color: '#000'}}>{this.state.showOrder.order.sum_order} р</TableCell>\n                      </TableRow>\n                    </TableFooter>\n                  </Table>\n                </Grid>\n\n                <Accordion style={{ width: '100%' }}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                  >\n                    <Typography>Расформировка</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Table size={'small'} style={{ marginTop: 15 }}>\n                      <TableBody>\n                        { this.state.showOrder.order_items_.map( (item, key) =>\n                          <TableRow key={key}>\n                            <TableCell>{item.name}</TableCell>\n                            <TableCell style={{ backgroundColor: parseInt(item.ready) > 0 ? '#6ab04c' : '#eb4d4b' }}></TableCell>\n                          </TableRow>\n                        ) }\n                      </TableBody>\n                    </Table>\n                  </AccordionDetails>\n                </Accordion>\n              </Grid>\n\n            </DialogContent>\n\n            { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n              <DialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                  <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this) }>Отменить заказ</Button>\n                </ButtonGroup>\n              </DialogActions>\n                :\n              null\n            }\n\n            { parseInt( this.state.showOrder.order.type_order_ ) == 1 && parseInt( this.state.showOrder.order.status_order ) > 4 && parseInt( this.state.showOrder.order.check_pos ) >= 0 ? \n              <DialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                  <Button variant=\"contained\" className=\"BtnCardMain CardInCardItemYellow\" onClick={ this.fakeUser.bind(this) }>Клиент не вышел на связь</Button>\n                </ButtonGroup>\n              </DialogActions>\n                :\n              null\n            }\n          </Dialog>\n        }\n\n        { !this.state.showOrder ? null : \n          <Dialog\n            open={this.state.modalDialogDel}\n            onClose={ () => { this.setState({ modalDialogDel: false }) } }\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{textAlign: 'center'}}>Отмена заказа {this.state.showOrder.order.order_id}</DialogTitle>\n            <DialogContent>\n              \n              <FormControl component=\"fieldset\">\n                <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                  {this.state.radiogroup_options.map((item, key) => \n                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                  )}\n                </RadioGroup>\n              </FormControl>\n\n              <TextField\n                //autoFocus\n                onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                value={ this.state.textDel }\n                onChange={ this.changeText.bind(this) }\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Причина отмены\"\n                type=\"text\"\n                fullWidth\n              />\n\n            </DialogContent>\n\n            <DialogActions style={{ paddingBottom: 24 }}>\n\n              <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n              </ButtonGroup>\n              \n              <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n              </ButtonGroup>\n\n            </DialogActions>\n                \n          </Dialog>\n        }\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city_id} func={ this.changeCity.bind(this) } label='Город' />\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <MyDatePickerNew label={'Дата'} value={this.state.date} func={ this.changeDate.bind(this) } />\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <MyTextInput label={'Номер телефона'} value={this.state.number} func={ this.changeNumber.bind(this) } />\n          </Grid>\n\n          \n          \n          \n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.btnGetOrders.bind(this)}>Обновить</Button>\n          </Grid>\n          \n          <Grid item xs={12}>\n            <Tabs value={this.state.indexTab} onChange={this.changePoint.bind(this)}>\n              { this.state.need_point_list.map( (item, key) =>\n                <Tab key={key} label={item.name} onClick={this.getOrders.bind(this)} {...a11yProps(parseInt(item.id))} />\n              ) }\n            </Tabs>\n          </Grid>\n\n          <Grid item xs={12}>\n            \n            <Table size={'small'}>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Заказ</TableCell>\n                  <TableCell>Оформил</TableCell>\n                  <TableCell>Номер клиента</TableCell>\n                  <TableCell>Адрес доставки</TableCell>\n                  <TableCell>Время открытия заказа</TableCell>\n                  \n                  <TableCell>Ко времени</TableCell>\n                  <TableCell>Закрыт на кухне</TableCell>\n                  <TableCell>Получен клиентом</TableCell>\n\n                  <TableCell>До просрочки</TableCell>\n                  <TableCell>Время обещ</TableCell>\n\n                  <TableCell>Тип</TableCell>\n                  <TableCell>Статус</TableCell>\n\n                  <TableCell>Сумма</TableCell>\n                  <TableCell>Оплата</TableCell>\n                  <TableCell>Водитель</TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                \n                { this.state.ordersRender.map( (item, key) =>\n                  <TableRow key={key} style={ parseInt(item.is_delete) == 1 ? {backgroundColor: 'red', color: '#fff', fontWeight: 'bold'} : {} }>\n                    <TableCell style={ parseInt(item.dist) >= 0 ? {backgroundColor: 'yellow', color: '#000', cursor: 'pointer', fontWeight: 'inherit'} : {color: 'inherit', cursor: 'pointer', fontWeight: 'inherit'} } onClick={this.showOrder.bind(this, item.id)}>{item.id}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.type_user}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.number}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.street} {item.home}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.date_time_order}</TableCell>\n\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit', backgroundColor: parseInt(item.is_preorder) == 1 ? '#bababa' : 'inherit' }}>{item.need_time}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{ item.give_data_time == '00:00:00' ? '' : item.give_data_time}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.close_order}</TableCell>\n\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.to_time}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.unix_time_to_client == '0' || parseInt(item.is_preorder) == 1 ? '' : item.unix_time_to_client}</TableCell>\n\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.type_order}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.status}</TableCell>\n\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.order_price}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.type_pay}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.driver}</TableCell>\n                  </TableRow>\n                ) }\n              \n              </TableBody>\n            \n            </Table>\n            \n          </Grid>\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Concenter () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <Concenter_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nclass DriveMapStatAll_ extends React.Component {\n  map = null;\n\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      //classes: this.props.classes,\n      history: this.props.history,\n      module: 'drive_map_stat_all',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      drivers: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      points: data.point_list,\n      point: data.point_list[0].id,\n      module_name: data.module_info.name\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      //this.updateData();\n    }, 100 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n    };\n    \n    let res = await this.getData('get_orders', data);\n    \n    this.getOrders(res.orders, res.home, res.drivers)\n\n    this.setState({\n      drivers: res.drivers\n    })\n\n    console.log( res.drivers )\n  }\n  \n  getOrders(orders, home, drivers){\n    \n      \n      //setTimeout( () => {\n        let objectManager = new ymaps.ObjectManager();\n        \n        if( !this.map ){\n          ymaps.ready(() => {\n            this.map = new ymaps.Map('map', {\n              center: [home.latitude, home.longitude],\n              zoom: 11\n            }, {\n              searchControlProvider: 'yandex#search'\n            })\n            \n            //дом\n            let myGeoObject = new ymaps.GeoObject({\n              geometry: {\n                type: \"Point\",\n                coordinates: [home.latitude, home.longitude]\n              },\n            }, {\n              preset: 'islands#blackDotIcon', \n              iconColor: 'black'\n            })\n            \n            this.map.geoObjects.add(myGeoObject);\n            \n            \n            \n            let json = {\n              \"type\": \"FeatureCollection\",\n              \"features\": []\n            };\n                    \n            orders.map( function(item){\n            \n              json.features.push({\n                type: \"Feature\",\n                id: item.id,\n                options: {\n                  preset: parseInt(item.status_order) == 6 ? 'islands#blueCircleDotIconWithCaption' : 'islands#circleDotIcon', \n                  iconColor: item.point_color ? item.point_color : item.color\n                },\n                properties: {\n                  iconCaption: item.point_text,\n                },\n                geometry: {\n                  type: \"Point\",\n                  coordinates: [item.xy.latitude, item.xy.longitude]\n                },\n              })\n              \n            } )\n            \n            objectManager.add(json);\n\n            drivers.map( function(driver){\n              driver.positions.map( function(pos, key){\n  \n                pos['xy'] = JSON.parse(pos['xy'], true);\n  \n                json.features.push({\n                  type: \"Feature\",\n                  id: pos.id,\n                  options: {\n                    preset: 'islands#stretchyIcon', \n                    iconColor: driver.color,\n                  },\n                  properties: {\n                    iconContent: key\n                  },\n                  geometry: {\n                    type: \"Point\",\n                    coordinates: [pos['xy'][0], pos['xy'][1]],\n                  },\n                })\n  \n  \n              } )\n            } )\n  \n            objectManager.add(json);\n\n            this.map.geoObjects.add(objectManager);\n          });\n        }else{\n          \n          let json = {\n            \"type\": \"FeatureCollection\",\n            \"features\": []\n          };\n                  \n          //дом\n          json.features.push({\n            type: \"Feature\",\n            id: 0,\n            options: {\n              preset: 'islands#blackDotIcon', \n              iconColor: 'black'\n            },\n            geometry: {\n              type: \"Point\",\n              coordinates: [home.latitude, home.longitude]\n            },\n          })\n          \n          \n          orders.map( function(item){\n            \n            json.features.push({\n              type: \"Feature\",\n              id: item.id,\n              options: {\n                preset: parseInt(item.status_order) == 6 ? 'islands#blueCircleDotIconWithCaption' : 'islands#circleDotIcon', \n                iconColor: item.point_color ? item.point_color : item.color\n              },\n              properties: {\n                iconCaption: item.point_text,\n                //iconCaption: parseInt(item.status_order) == 6 ? item.close_time_ : parseInt(item.is_pred) == 1 ? item.need_time : parseInt(item.is_my) == 1 ? item.time_start_mini : '',\n              },\n              geometry: {\n                type: \"Point\",\n                coordinates: [item.xy.latitude, item.xy.longitude]\n              },\n            })\n            \n          } )\n          \n          objectManager.add(json);\n\n          drivers.map( function(driver){\n            driver.positions.map( function(pos, key){\n\n              pos['xy'] = JSON.parse(pos['xy'], true);\n\n              json.features.push({\n                type: \"Feature\",\n                id: pos.id,\n                options: {\n                  preset: 'islands#stretchyIcon', \n                  iconColor: driver.color,\n                },\n                properties: {\n                  iconContent: key\n                },\n                geometry: {\n                  type: \"Point\",\n                  coordinates: [pos['xy'][0], pos['xy'][1]],\n                },\n              })\n\n\n            } )\n          } )\n\n          objectManager.add(json);\n\n          this.map.geoObjects.removeAll()\n          this.map.geoObjects.add(objectManager);\n        }\n        \n        /*objectManager.objects.events.add(['click'], (e) => {\n          let order_id = e.get('objectId');\n          let order = this.state.orders.find( (item) => parseInt(item.id) == parseInt(order_id) );\n          \n          if( order ){\n            this.showOrder(order);\n          }\n        });*/\n        \n      //}, 300 )\n    \n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={6} sm={6}>\n            <MySelect data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          <Grid item xs={6} sm={6}>\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            { this.state.drivers.map( (item, key) =>\n              <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                <div style={{ width: 50, height: 20, backgroundColor: item.color }}></div>\n                <div>{item.driver_name}</div>\n              </div>\n            ) }\n          </Grid>       \n          \n          \n          <Grid item xs={12} sm={12}>\n            <div id=\"map\" name=\"map\" style={{ width: '100%', height: 700, paddingTop: 10 }} />\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function DriveMapStatAll () {\n  let history = useHistory();\n  \n  return (\n    <DriveMapStatAll_ history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableFooter from '@mui/material/TableFooter';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyTextInput, MyDaterange } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass DriverStat_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'driver_stat',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      \n      date_start: formatDate(new Date()),\n      date_end: formatDate(new Date()),\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\n\n      modalDialog: false,\n\n      drive_stat_full: [],\n      drive_stat_date: null,\n      summ: 0,\n      choose_driver_id: 0,\n      check_cash: 0\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    console.log( data )\n    \n    this.setState({\n      points: data.points,\n      point: data.points[0].id,\n      module_name: data.module_info.name,\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      date_start: this.state.rangeDate[0],\n      date_end: this.state.rangeDate[1],\n    };\n    \n    let res = await this.getData('get_data', data);\n    \n    console.log( res )\n    \n    this.setState({\n      drive_stat_full: res.drive_stat_full,\n      drive_stat_date: res.stat_drive_date\n    })\n  }\n  \n  changeDateRange(data){\n    let dateStart = data[0] ? formatDate(data[0]) : '';\n    let dateEnd = data[1] ? formatDate(data[1]) : '';\n    \n    this.setState({\n      rangeDate: [dateStart, dateEnd]\n    })\n  }\n\n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n  }\n\n  giveCash(driver_id, check_cash){\n    this.setState({\n      modalDialog: true,\n      choose_driver_id: driver_id,\n      check_cash: check_cash\n    })\n  }\n\n  changeSumm(event){\n    this.setState({\n      summ: event.target.value,\n    })\n  }\n\n  async saveGivePrice(){\n\n    if( parseInt( this.state.summ ) > parseInt( this.state.check_cash ) ){\n      alert('Нельзя сдать денег больше, чем есть у курьера');\n      return;\n    }\n\n\n    let data = {\n      point_id: this.state.point,\n      price: this.state.summ,\n      driver_id: this.state.choose_driver_id,\n    };\n    \n    let res = await this.getData('save_give', data);\n\n    console.log( res )\n\n    if( res['st'] == true ){\n      this.setState({\n        modalDialog: false,\n        check_cash: 0,\n        choose_driver_id: 0,\n        summ: 0\n      })\n\n      this.updateData();\n    }else{\n      alert(res['text'])\n    }\n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false, check_cash: 0, choose_driver_id: 0, summ: 0 }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle>Какую сумму сдает курьер</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <MyTextInput label=\"\" value={this.state.summ} func={this.changeSumm.bind(this)} />\n\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={this.saveGivePrice.bind(this)}>Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={6} className=\"MyDaterange\">\n            <MyDaterange startText=\"Дата от\" endText=\"Дата до\" value={this.state.rangeDate} func={ this.changeDateRange.bind(this) } />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n          </Grid>\n        \n          <Grid item xs={12}>\n            <TableContainer component={Paper}>\n              <Table>\n                \n                <TableHead>\n                  <TableRow>\n                    <TableCell>Имя</TableCell>\n                    <TableCell>Вся сумма</TableCell>\n                    <TableCell>Сумма по налу</TableCell>\n                    <TableCell>Сумма по безналу</TableCell>\n                    <TableCell>Кол-во по налу</TableCell>\n                    <TableCell>Кол-во по безналу</TableCell>\n                    <TableCell>К сдаче</TableCell>\n\n                    <TableCell>Сдал за период</TableCell>\n\n                    <TableCell>Довозы</TableCell>\n                    <TableCell style={{ display: 'none' }}>Ошибки</TableCell>\n                    <TableCell>-</TableCell>\n                    <TableCell>Заказы</TableCell>\n                    <TableCell>Заработал</TableCell>\n                    <TableCell>Налички на руках</TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody>\n                  \n                  { this.state.drive_stat_full.map( (item, key) =>\n                    <TableRow key={key}>\n                      <TableCell>{item.name}</TableCell>\n                      <TableCell>{item.full_sum}</TableCell>\n                      <TableCell>{item.full_cash}</TableCell>\n                      <TableCell>{item.full_bank}</TableCell>\n                      <TableCell>{item.count_cash}</TableCell>\n                      <TableCell>{item.count_bank}</TableCell>\n                      <TableCell>{item.sdacha}</TableCell>\n\n                      <TableCell>{item.give_by_date}</TableCell>\n\n                      <TableCell>{item.dop_price ? item.dop_price : 0}</TableCell>\n                      <TableCell style={{ display: 'none' }}>{item.err_summ}</TableCell>\n                      <TableCell>{item.my_price ? item.my_price : 0}</TableCell>\n                      <TableCell>{item.my_orders}</TableCell>\n                      <TableCell>{item.my}</TableCell>\n                      <TableCell>{item.ost_cash}</TableCell>\n                      <TableCell>\n                        <Button variant=\"contained\" onClick={this.giveCash.bind(this, item.driver_id, item.ost_cash)}>Сдать</Button>\n                      </TableCell>\n                    </TableRow>\n                  ) }\n                \n                </TableBody>\n              \n              </Table>\n            </TableContainer>\n          </Grid>\n\n          { this.state.drive_stat_date == null ? null :\n            <Grid item xs={12}>\n              <TableContainer component={Paper}>\n                <Table>\n                  \n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Курьер</TableCell>\n\n                      { this.state.drive_stat_date.orders.map( (item, key) =>\n                        <TableCell key={key} colSpan={4} style={{textAlign: 'center'}}>{item.date}</TableCell>\n                      ) }\n                    </TableRow>\n                    <TableRow>\n                      <TableCell></TableCell>\n\n                      { this.state.drive_stat_date.orders.map( (item, key) =>\n                        <>\n                          <TableCell key={key+'_1'} style={{textAlign: 'center'}}>Наличка</TableCell>\n                          <TableCell key={key+'_2'} style={{textAlign: 'center'}}>Безнал</TableCell>\n                          <TableCell key={key+'_3'} style={{textAlign: 'center'}}>Сдача</TableCell>\n                          <TableCell key={key+'_4'} style={{textAlign: 'center'}}>Заработал</TableCell>\n                        </>\n                      ) }\n\n                    </TableRow>\n                  </TableHead>\n\n                  <TableBody>\n                    \n                    { this.state.drive_stat_date.unic_users.map( (item, key) =>\n                      <TableRow key={key}>\n                        <TableCell style={{borderRight: '1px solid #eee'}}>{item.short_name}</TableCell>\n\n                        { this.state.drive_stat_date.orders.map( function(order, order_k){\n\n                          let check = false,\n                            data = {};\n    \n                          order['new_users'].map(function(it, k){\n                            if(parseInt(it['driver_id']) == parseInt(item['driver_id']) && it['date'] == order['date']){\n                              check = true;\n                              data = it;\n                            }\n                          })\n\n                          if(check == false){\n                            return (\n                              <TableCell key={order_k} colSpan={4} style={{borderRight: '1px solid #eee'}}></TableCell>\n                            )\n                          }else{\n                            return (\n                              <>\n                                <TableCell key={order_k+'_1'} style={{textAlign: 'center'}}>{data.full_cash}</TableCell>\n                                <TableCell key={order_k+'_2'} style={{textAlign: 'center'}}>{data.full_bank}</TableCell>\n                                <TableCell key={order_k+'_3'} style={{textAlign: 'center'}}>{data.sdacha}</TableCell>\n                                <TableCell key={order_k+'_4'} style={{borderRight: '1px solid #eee', textAlign: 'center'}}>{data.my}</TableCell>\n                              </>\n                            )\n                          }\n\n                        })}\n\n                      </TableRow>\n                    )}\n                  </TableBody>\n                \n                  <TableFooter>\n                    \n                    <TableRow>\n                      <TableCell style={{borderRight: '1px solid #eee'}}></TableCell>\n\n                      { this.state.drive_stat_date.orders.map( (item, key) =>\n                        <>\n                          <TableCell key={key+'_1'} style={{textAlign: 'center'}}>{item.full_cash}</TableCell>\n                          <TableCell key={key+'_2'} style={{textAlign: 'center'}}>{item.full_bank}</TableCell>\n                          <TableCell key={key+'_3'} style={{textAlign: 'center'}}>{item.sdacha}</TableCell>\n                          <TableCell key={key+'_4'} style={{borderRight: '1px solid #eee', textAlign: 'center'}}>{item.my}</TableCell>\n                        </>\n                      )}\n                        \n\n                    </TableRow>\n                    \n                  </TableFooter>\n\n                </Table>\n              </TableContainer>\n            </Grid>\n          }\n\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function DriverStat () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <DriverStat_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox, MyTimePicker } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nclass Events_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'events',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      mounth: '0',\n      mounths: [],\n      years: [],\n      year: '0',\n      \n      calendar: [],\n      modalDialog: false,\n      \n      chooseDayHoly: '',\n      events: [],\n      chooseEvent: 0,\n      \n      eventPoint1: 0,\n      everyYear1: false,\n      timeStart2: '10:00',\n      timeEnd2: '21:30',\n      \n      expanded: '',\n      dayEvents: [],\n      events_hist: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    console.log( data )\n    \n    this.setState({\n      points: data.points,\n      point: data.points[0].id,\n      module_name: data.module_info.name,\n      mounths: data.mounth,\n      mounth: data.this_m,\n      years: data.years,\n      year: data.this_y,\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  changeMounth(event){\n    let data = event.target.value;\n    \n    this.setState({\n      mounth: data\n    })\n    \n    setTimeout( () => {\n      //this.updateData();\n    }, 50 )\n  }\n  \n  changeYear(event){\n    let data = event.target.value;\n    \n    this.setState({\n      year: data\n    })\n  }\n  \n  changeCheckOrders(event){\n    let data = event.target.checked;\n    \n    this.setState({\n      showReady: data\n    })\n  }\n  \n  async updateData(){\n    let data = {\n      m: this.state.mounth,\n      y: this.state.year,\n      point_id: this.state.point\n    };\n    \n    let res = await this.getData('get_calendar', data);\n    \n    console.log( res )\n    \n    this.setState({\n      calendar: res.year,\n    })\n  }\n  \n  async chooseDay(day){\n    \n    if( day.full_day ){\n    \n      this.setState({\n        chooseDay: null,\n        eventPoint1: this.state.point,\n        chooseEvent: 0,\n        everyYear1: false,\n        timeStart2: '10:00',\n        timeEnd2: '21:30',\n        modalDialog: false,\n        events_hist: []\n      })\n      \n      let data = {\n        date: day.full_day,\n        point_id: this.state.point\n      };\n      \n      let res = await this.getData('get_calendar_day', data);\n      \n      console.log( 'res', res )\n      \n      this.setState({\n        chooseDay: day,\n        chooseDayHoly: res.holy,\n        events: res.events,\n        events_hist: res.hist,\n        dayEvents: res.this_events,\n        modalDialog: true\n      })\n    }\n  }\n  \n  changeEvent(event){\n    let data = event.target.value;\n    \n    this.setState({\n      chooseEvent: data\n    })\n  }\n  \n  changePoint1(event){\n    let data = event.target.value;\n    \n    this.setState({\n      eventPoint1: data\n    })\n  }\n  \n  changeEveryYear1(event){\n    let data = event.target.checked;\n    \n    this.setState({\n      everyYear1: data\n    })\n  }\n  \n  changeTimeStart2(event){\n    let data = event.target.value;\n    \n    this.setState({\n      timeStart2: data\n    })\n  }\n  \n  changeTimeEnd2(event){\n    let data = event.target.value;\n    \n    this.setState({\n      timeEnd2: data\n    })\n  }\n  \n  async save(){\n    let data = {\n      date: this.state.chooseDay.full_day,\n      point_id: this.state.eventPoint1,\n      event: this.state.chooseEvent,\n      every_year: this.state.everyYear1 === true ? 1 : 0,\n      \n      time_start: this.state.timeStart2,\n      time_end: this.state.timeEnd2,\n    };\n    \n    let res = await this.getData('save_event', data);\n    \n    console.log( res )\n    \n    if( res.st === false ){\n      alert(res.text)\n    }else{\n      this.setState({\n        chooseDay: null,\n        eventPoint1: this.state.point,\n        chooseEvent: 0,\n        everyYear1: false,\n        timeStart2: '10:00',\n        timeEnd2: '21:30',\n        modalDialog: false\n      })\n      \n      setTimeout( () => {\n        this.updateData();\n      }, 300 )\n    }\n  }\n  \n  handleChange(data){\n    this.setState({\n      expanded: data\n    })\n  }\n  \n  async delEvent(event){\n    console.log( 'delEvent', event )\n    \n    if (confirm('Удалить событие \"'+event.title+' '+event.date+'\" ?')) {\n      let data = {\n        del_id: event.id\n      };\n      \n      let res = await this.getData('del_event', data);\n      \n      this.setState({\n        chooseDay: null,\n        eventPoint1: this.state.point,\n        chooseEvent: 0,\n        everyYear1: false,\n        timeStart2: '10:00',\n        timeEnd2: '21:30',\n        modalDialog: false\n      })\n      \n      setTimeout( () => {\n        this.updateData();\n      }, 300 )\n    } else {\n      \n    }\n    \n\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{this.state.chooseDay ? this.state.chooseDay.full_day : ''}</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            <DialogContentText id=\"alert-dialog-description\">\n              \n              <Grid container spacing={3}>\n                \n                {this.state.chooseDayHoly.length == 0 ? null :\n                  <Grid item xs={12} sm={12}>\n                    <Typography component=\"span\">{this.state.chooseDayHoly}</Typography>\n                  </Grid>\n                }\n                \n                <Grid item xs={12} sm={12}>\n                  <MySelect classes={this.state.classes} data={this.state.events} value={this.state.chooseEvent} func={ this.changeEvent.bind(this) } label='Событие' />\n                </Grid>\n                \n                <Grid item xs={12} sm={12}>\n                  <MySelect classes={this.state.classes} data={this.state.points} value={ this.state.eventPoint1 } func={ this.changePoint1.bind(this) } label='Точка' />\n                </Grid>\n                \n                { parseInt(this.state.chooseEvent) !== 2 ? null :\n                  <>\n                    <Grid item xs={6} sm={6}>\n                      <MyTimePicker classes={this.state.classes} value={ this.state.timeStart2 } func={ this.changeTimeStart2.bind(this) } label='Время начала работы' />\n                    </Grid>\n                    <Grid item xs={6} sm={6}>\n                      <MyTimePicker classes={this.state.classes} value={ this.state.timeEnd2 } func={ this.changeTimeEnd2.bind(this) } label='Время окончания работы' />\n                    </Grid>\n                  </>\n                }\n                \n                <Grid item xs={12} sm={12}>\n                  <MyCheckBox classes={this.state.classes} value={ this.state.everyYear1 } func={ this.changeEveryYear1.bind(this) } label='Каждый год' />\n                </Grid>\n                \n              </Grid>\n              \n              <List component=\"nav\">\n                { this.state.dayEvents.map( (item, key) => \n                  <ListItem key={key}>\n                    <ListItemText primary={item.title} />\n                    { parseInt(item.type) == 4 ? null :\n                      <CloseIcon color=\"primary\" onClick={this.delEvent.bind(this, item)} style={{ cursor: 'pointer' }} />\n                    }\n                  </ListItem>\n                )}\n              </List>\n              \n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography>История</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <List component=\"nav\">\n                    { this.state.events_hist.map( (item, key) => \n                      <ListItem key={key}>\n                        <ListItemText primary={item.title} />\n                      </ListItem>\n                    )}\n                  </List>\n                </AccordionDetails>\n              </Accordion>\n              \n              \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ this.save.bind(this) } color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.mounths} value={this.state.mounth} func={ this.changeMounth.bind(this) } label='Месяц' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.years} value={this.state.year} func={ this.changeYear.bind(this) } label='Год' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n          </Grid>\n        \n          \n          \n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }}>\n            \n            { this.state.calendar.map( (item, key) =>\n            \n              <Grid item xs={12} sm={4} key={key} style={{ padding: 20 }}>\n                <h1 style={{ textAlign: 'center' }}>{ item[0][0].mounth }</h1>\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\" style={{ overflow: 'hidden' }}>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell className={this.state.classes.tableCelHead}>Пн</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Вт</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Ср</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Чт</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Пт</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Сб</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Вс</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      \n                      { item.map( (mounth, m_key) =>\n                        <TableRow key={m_key}>\n                          { mounth.map( (day, k) =>\n                            <TableCell \n                              key={k} \n                              onClick={ this.chooseDay.bind(this, day) } \n                              \n                              style={{ color: day.dir ? 'yellow' : day.holy ? '#c03' : '#000' }}\n                              \n                              className={ day.event ? this.state.classes.customCel : this.state.classes.tableCel }\n                            > { day.day } </TableCell>\n                          ) }\n                        </TableRow>\n                      ) }\n                      \n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n            )}\n            \n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Events () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <Events_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n});\n\nclass Home_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      module: 'home',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      showReady: false,\n      read: [],\n      onstol: [],\n      ordersQueue: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n        console.log( err )\n    });\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          <Grid item xs={12} sm={12} style={{ height: '100vh' }}>\n            \n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Home () {\n  const classes = useStyles();\n  \n  return (\n    <Home_ classes={classes} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nclass Live_Orders extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'live_orders',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      showReady: false,\n      read: [],\n      onstol: [],\n      ordersQueue: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      points: data.point_list,\n      point: data.point_list[0].id,\n      module_name: data.module_info.name\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 100 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  changeCheckOrders(event){\n    let data = event.target.checked;\n    \n    this.setState({\n      showReady: data\n    })\n  }\n  \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      showReady: this.state.showReady === true ? 1 : 0\n    };\n    \n    let res = await this.getData('get_orders', data);\n    \n    this.setState({\n      read: res.read,\n      onstol: res.onstol,\n      ordersQueue: res.prestol_new\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          { this.state.points.length > 0 ?\n            <>\n              <Grid item xs={6} sm={6}>\n                <MySelect data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n              </Grid>\n              <Grid item xs={6} sm={6}>\n                <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <MyCheckBox value={this.state.showReady} func={ this.changeCheckOrders.bind(this) } label='Показывать готовые' />\n              </Grid>\n            </>\n              :\n            null\n          }\n          \n          \n          \n          <Grid item xs={12} sm={12}>\n            \n            <TableContainer component={Paper}>\n              <Table aria-label=\"a dense table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>#</TableCell>\n                    <TableCell>Тип</TableCell>\n                    <TableCell>Время заказа</TableCell>\n                    <TableCell>Время предзакза</TableCell>\n                    \n                    <TableCell>Время выхода на стол</TableCell>\n                    <TableCell>Во сколько собрали</TableCell>\n                    <TableCell>Закрыли</TableCell>\n                    \n                    <TableCell>Приготовили</TableCell>\n                    <TableCell>Отдали</TableCell>\n                    <TableCell>Обещали</TableCell>\n                    \n                    <TableCell>Статус</TableCell>\n                    <TableCell>Стол</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  {this.state.read.map( (item, key) => (\n                    <TableRow key={key}>\n                      <TableCell>{item.id}</TableCell>\n                      <TableCell>{item.type_order}</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? '' : item.date_time_order }</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? item.date_time_preorder_ : '' }</TableCell>\n                      \n                      <TableCell>{item.unix_start_stol_or}</TableCell>\n                      <TableCell>{item.give_data_time_}</TableCell>\n                      <TableCell>{item.close_date_time_order}</TableCell>\n                      \n                      <TableCell style = {{backgroundColor: parseInt(item.type_) == 1 ? '' : item.color}}>{item.time_}</TableCell>\n                      <TableCell style = {{backgroundColor: parseInt(item.type_) != 1 ? '' : item.color}}>{item.test_time}</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\n                      \n                      <TableCell>{item.status}</TableCell>\n                      <TableCell>{item.stol_sborki}</TableCell>\n                    </TableRow>\n                  ))}\n                  \n                  {this.state.onstol.map( (item, key) => (\n                    <TableRow key={key} style = {{backgroundColor: 'yellow'}}>\n                      <TableCell>{item.id}</TableCell>\n                      <TableCell>{item.type_order}</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? '' : item.date_time_order }</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? item.date_time_preorder_ : '' }</TableCell>\n                      \n                      <TableCell>{item.unix_start_stol_or}</TableCell>\n                      <TableCell></TableCell>\n                      <TableCell></TableCell>\n                      \n                      <TableCell></TableCell>\n                      <TableCell></TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\n                      \n                      <TableCell>{item.status}</TableCell>\n                      <TableCell>{item.stol_sborki}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n            <TableContainer component={Paper}>\n              <Table aria-label=\"a dense table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>#</TableCell>\n                    <TableCell>Пред</TableCell>\n                    <TableCell>Время оформления</TableCell>\n                    <TableCell>Время выхода на стол</TableCell>\n                    <TableCell>Время закрытия</TableCell>\n                    <TableCell>Обещали</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  {this.state.ordersQueue.map( (item, key) => (\n                    <TableRow key={key}>\n                      <TableCell>{item.id}</TableCell>\n                      <TableCell>{ parseInt(item.is_preorder) == 1 ? item.date_time_preorder : '' }</TableCell>\n                      <TableCell>{ parseInt(item.is_preorder) == 0 ? item.date_time_order : '' }</TableCell>\n                      \n                      <TableCell>{item.time_start_order}</TableCell>\n                      <TableCell>{item.time_end_order}</TableCell>\n                      \n                      <TableCell>{ parseInt(item.is_preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\n                    </TableRow>\n                  ))}\n                  \n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function LiveOrders () {\n  let history = useHistory();\n  \n  return (\n    <Live_Orders history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyAutocomplite, MyDaterange } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass RasByBill_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'ras_by_bill',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      \n      points: [],\n      point: [],\n      date_start: formatDate(new Date()),\n      date_end: formatDate(new Date()),\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\n      items: [],\n      cats: [],\n      items_cat: [],\n      item_cat: 0,\n      \n      myItems: [],\n      \n      calendar: []\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      points: data.points,\n      \n      items: data.items,\n      cats: data.cats,\n      items_cat: data.items_cat\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n  }\n  \n  changeItems(event, data){\n    this.setState({\n      myItems: data\n    })\n  }\n  \n  async getItems(){\n    let data = {\n      points: this.state.point,\n      items: this.state.myItems,\n      item_cat: this.state.item_cat,\n      start_date: this.state.rangeDate[0],\n      end_date: this.state.rangeDate[1],\n    };\n    \n    let res = await this.getData('get_this_rev', data);\n    \n    let summ = 0;\n    \n    res.items_ras.map( (item, key) => {\n      summ += parseFloat(item.sum);\n    } )\n    \n    this.setState({\n      resItems: {\n        items_ras: res.items_ras,\n        pf_ras: res.pf_ras,\n        rec_ras: res.rec_ras,\n        full_sum: summ.toFixed(2)\n      },\n      catItems: null\n    })\n  }\n  \n  async getCats(){\n    let data = {\n      points: this.state.point,\n      items: this.state.myItems,\n      start_date: this.state.rangeDate[0],\n      end_date: this.state.rangeDate[1],\n    };\n    \n    let res = await this.getData('get_this_rev_cat', data);\n    \n    \n    let summ = 0;\n    \n    res.rec_ras.map( (item, key) => {\n      summ += parseFloat(item.this_price);\n    } )\n    \n    this.setState({\n      catItems: {\n        count_pos: res.count_pos,\n        items_ras: res.items_ras,\n        rec_ras: res.rec_ras,\n        full_sum: summ.toFixed(2)\n      },\n      resItems: null\n    })\n  }\n  \n  changeDateRange(data){\n    let dateStart = data[0] ? formatDate(data[0]) : '';\n    let dateEnd = data[1] ? formatDate(data[1]) : '';\n    \n    this.setState({\n      rangeDate: [dateStart, dateEnd]\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">  </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              \n              \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ () => {} } color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.points} multiple={true} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          \n          <Grid item xs={12} sm={4} className=\"MyDaterange\">\n            <MyDaterange startText=\"Дата от\" endText=\"Дата до\" value={this.state.rangeDate} func={ this.changeDateRange.bind(this) } />\n          </Grid>\n          \n          <Grid item xs={12} sm={5}>\n            <MySelect classes={this.state.classes} data={this.state.items_cat} multiple={false} value={this.state.item_cat} func={ (event) => {this.setState({ item_cat: event.target.value })} } label='Категория товара' />\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            <MyAutocomplite classes={this.state.classes} data={this.state.items} multiple={true} value={this.state.myItems} func={ this.changeItems.bind(this) } label='Заготовки' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.getItems.bind(this)}>Показать заготовки</Button>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.getCats.bind(this)}>Показать категории</Button>\n          </Grid>\n        \n        \n          { this.state.resItems && this.state.resItems.items_ras ?\n              \n            <>\n              <Grid item xs={12}>\n                \n                <h1>Куплено по наклданым</h1>\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Наименование товара</TableCell>\n                        <TableCell>Объем товра</TableCell>\n                        <TableCell>Объем заготовки</TableCell>\n                        <TableCell>Сумма</TableCell>\n                        <TableCell>Кол-во наклданых</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      \n                      { this.state.resItems.items_ras.map( (item, key) =>\n                        <TableRow key={key}>\n                          <TableCell> { item.name } </TableCell>\n                          <TableCell> { item.count_item + ' ' + item.ei_name } </TableCell>\n                          <TableCell> { item.count_pf + ' ' + item.ei_name_pf } </TableCell>\n                          <TableCell> { item.sum } </TableCell>\n                          <TableCell> { item.count_bill } </TableCell>\n                        </TableRow>\n                      ) }\n                      \n                      <TableRow>\n                        <TableCell> Всего: </TableCell>\n                        <TableCell> </TableCell>\n                        <TableCell> </TableCell>\n                        <TableCell> { this.state.resItems.full_sum } </TableCell>\n                        <TableCell> </TableCell>\n                      </TableRow>\n                      \n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n              \n              <Grid item xs={12}>\n                \n                <h1>Расход заготовок (включая рецепты)</h1>\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Наименование заготовки</TableCell>\n                        <TableCell>Объем заготовок</TableCell>\n                        <TableCell>Кол-во роллов</TableCell>\n                        <TableCell>Сумма роллов (примерно)</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      \n                      { this.state.resItems.pf_ras.map( (item, key) =>\n                        <TableRow key={key}>\n                          <TableCell> { item.pf_name } </TableCell>\n                          <TableCell> { item.count_pf + ' ' + item.ei_name } </TableCell>\n                          <TableCell> { item.count_rolls } </TableCell>\n                          <TableCell> { item.price_rolls } </TableCell>\n                        </TableRow>\n                      ) }\n                      \n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n              \n              <Grid item xs={12}>\n                \n                <h1>Расход рецептов</h1>\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Наименование заготовки</TableCell>\n                        <TableCell>Объем заготовок</TableCell>\n                        <TableCell>Кол-во роллов</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      \n                      { this.state.resItems.rec_ras.map( (item, key) =>\n                        <TableRow key={key}>\n                          <TableCell> { item.pf_name } </TableCell>\n                          <TableCell> { item.count_pf + ' ' + item.ei_name } </TableCell>\n                          <TableCell> { item.count_rolls } </TableCell>\n                        </TableRow>\n                      ) }\n                      \n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n            </>\n              :\n            null              \n          }\n          \n          { this.state.catItems && this.state.catItems.rec_ras ?\n            <Grid item xs={12}>\n              \n              <Accordion disabled>\n                <AccordionSummary>\n                  <Typography style={{ width: '50%' }}>Роллов: {this.state.catItems.count_pos.count_rolls}</Typography>\n                  <Typography style={{ width: '50%' }}>Пиццы: {this.state.catItems.count_pos.count_pizza}</Typography>\n                </AccordionSummary>\n              </Accordion>\n              \n              { this.state.catItems.rec_ras.map( (item, key) =>\n                <Accordion key={key}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1bh-content\"\n                  >\n                    <Typography style={{ width: '60%' }}>{item.name}</Typography>\n                    <Typography style={{ width: '20%' }}>{item.this_price}</Typography>\n                    <Typography style={{ width: '20%' }}>{item.price_by_items}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    \n                    { item.parent_cat.map( (it, k) =>\n                      <Accordion key={k}>\n                        <AccordionSummary\n                          expandIcon={<ExpandMoreIcon />}\n                          aria-controls=\"panel1bh-content\"\n                        >\n                          <Typography style={{ width: '60%', paddingLeft: 20 }}>{it.name}</Typography>\n                          <Typography style={{ width: '20%', paddingLeft: 20 }}>{it.this_price}</Typography>\n                          <Typography style={{ width: '20%', paddingLeft: 20 }}>{it.price_by_items}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          \n                          <Accordion disabled={true}>\n                            <AccordionSummary>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Товар</Typography>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Товара</Typography>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Заготовок</Typography>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Накладных</Typography>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Сумма</Typography>\n                            </AccordionSummary>\n                          </Accordion>\n                          \n                          { it.items.map( (parent_items, parent_key) =>\n                            <Accordion key={parent_key} disabled={true}>\n                              <AccordionSummary>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.name}</Typography>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_item} {parent_items.ei_name}</Typography>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_pf} {parent_items.ei_name}</Typography>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_bill}</Typography>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.sum}</Typography>\n                              </AccordionSummary>\n                            </Accordion>\n                          ) }\n                          \n                        </AccordionDetails>\n                      </Accordion>\n                    ) }\n                    \n                    \n                  </AccordionDetails>\n                </Accordion>\n              ) }\n              \n              <Accordion disabled>\n                <AccordionSummary>\n                  <Typography style={{ width: '60%', marginRight: -15 }}>Всего:</Typography>\n                  <Typography style={{ width: '40%' }}>{ this.state.catItems.full_sum }</Typography>\n                </AccordionSummary>\n              </Accordion>\n              \n            </Grid>\n              :\n            null              \n          }\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function RasByBill () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <RasByBill_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    borderRadius: 0,\n    width: '100%',\n    height: 150,\n    margin: 0,\n    backgroundColor: '#fff'\n  },\n  avatar2: {\n    borderRadius: 0,\n    width: '100%',\n    height: 130,\n    margin: 0,\n    backgroundColor: '#fff'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  textLink: {\n    color: '#c03'\n  }\n});\n\nclass Reg_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'auth',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      dialogTitle: '',\n      dialogText: '',\n      \n      activeStep: 0,\n      steps: ['Телефон', 'Подтверждение', 'Новый пароль'],\n      \n      phone: '',\n      code: '',\n      pwd: ''\n    };\n  }\n  \n  async componentDidMount(){\n      \n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: '+79879340391',\n        //login: localStorage.getItem('login'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        this.state.history.push(\"/auth\");\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      showReady: this.state.showReady === true ? 1 : 0\n    };\n    \n    let res = await this.getData('get_orders', data);\n    \n    this.setState({\n      read: res.read,\n      onstol: res.onstol,\n      ordersQueue: res.prestol_new\n    })\n  }\n  \n  async nextStep(){\n    if( this.state.activeStep == 0 ){\n      let data = {\n        login: document.getElementById('phone').value\n      }\n      \n      let res = await this.getData('check_phone', data);\n      \n      if( res.st === false ){\n        setTimeout( () => {\n          this.setState({ \n            modalDialog: true,\n            dialogTitle: 'Предупреждение',\n            dialogText: res.text\n          })\n        }, 500 )\n      }else{\n        this.setState({ \n          activeStep: this.state.activeStep+1,\n          phone: data.login\n        })\n      }\n    }else if( this.state.activeStep == 1 ){\n      let data = {\n        login: this.state.phone,\n\t\t\t  code: document.getElementById('code').value\n      }\n      \n      let res = await this.getData('check_code', data);\n      \n      if( res.st === false ){\n        setTimeout( () => {\n          this.setState({ \n            modalDialog: true,\n            dialogTitle: 'Предупреждение',\n            dialogText: res.text\n          })\n        }, 500 )\n      }else{\n        this.setState({ \n          activeStep: this.state.activeStep+1,\n          code: data.code\n        })\n      }\n    }else if( this.state.activeStep == 2 ){\n      let data = {\n        login: this.state.phone,\n        code: this.state.code,\n        pwd: document.getElementById('password').value\n      }\n      \n      let res = await this.getData('save_new_pwd', data);\n      \n      if( res.st === false ){\n        setTimeout( () => {\n          this.setState({ \n            modalDialog: true,\n            dialogTitle: 'Предупреждение',\n            dialogText: res.text\n          })\n        }, 500 )\n      }else{\n        localStorage.setItem('token', res.token)\n      \n        setTimeout( () => {\n          window.location.pathname = '/'\n        }, 300)\n      }\n    }\n  }\n  \n  enterNextStep(event){\n    if( event.charCode == 13 ){\n      this.nextStep();\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{this.state.dialogTitle}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">{this.state.dialogText}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ () => { this.setState({ modalDialog: false }) } } color=\"primary\" autoFocus>Хорошо</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          <Grid item xs={12} sm={6} md={6} lg={4} xl={3}>\n            <div className={this.state.classes.paper}>\n              <Avatar className={this.state.classes.avatar}>\n                <img alt=\"Жако доставка роллов и пиццы\" src=\"../assets/img_other/Favikon.png\" style={{ height: '100%' }} />\n              </Avatar>\n              \n              <Stepper activeStep={this.state.activeStep} alternativeLabel style={{ width: '100%' }}>\n                {this.state.steps.map((label) => (\n                  <Step key={label}>\n                    <StepLabel>{label}</StepLabel>\n                  </Step>\n                ))}\n              </Stepper>\n              <div className={this.state.classes.form} style={{ width: '100%' }}>\n                \n                { this.state.activeStep == 0 ?\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    size=\"small\"\n                    required\n                    fullWidth\n                    id=\"phone\"\n                    label=\"Номер телефона\"\n                    name=\"phone\"\n                    autoComplete=\"phone\"\n                    autoFocus\n                    onKeyPress={ this.enterNextStep.bind(this) }\n                  />  \n                    :\n                  null\n                }\n                \n                { this.state.activeStep == 1 ?\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    size=\"small\"\n                    required\n                    fullWidth\n                    id=\"code\"\n                    label=\"Код из смс\"\n                    name=\"code\"\n                    autoComplete=\"code\"\n                    autoFocus\n                    onKeyPress={ this.enterNextStep.bind(this) }\n                  />  \n                    :\n                  null\n                }\n                \n                { this.state.activeStep == 2 ?\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    size=\"small\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Пароль\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    onKeyPress={ this.enterNextStep.bind(this) }\n                  />\n                    :\n                  null\n                }\n                                  \n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={this.state.classes.submit}\n                  onClick={ this.nextStep.bind(this) }\n                >\n                  Дальше\n                </Button>\n                <Grid container>\n                  <Grid item xs>\n                    <a href=\"/auth\" className={this.state.classes.textLink}>Вернуться к авторизации</a>\n                  </Grid>\n                </Grid>\n                \n                \n              </div>\n              \n              \n            </div>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Reg () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <Reg_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n\nimport TextField from '@mui/material/TextField';\nimport CloseIcon from '@mui/icons-material/Close';\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport Divider from '@mui/material/Divider';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RestoreIcon from '@mui/icons-material/Restore';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ArchiveIcon from '@mui/icons-material/Archive';\nimport Paper from '@mui/material/Paper';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\n\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\n\nimport { MySelect, MyCheckBox, MyTimePicker, MyTextInput, MyDaterange, MyAutocomplite, MyDatePicker } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  \n}));\n\nclass Revizion_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'revizion',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      \n      revList: [],\n      chooseRev: '',\n      \n      items: [],\n      pf: [],\n      all_data: [],\n      chooseTab: 0,\n      \n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      points: data.point_list,\n      point: data.point_list.length == 1 ? data.point_list[0].id : '0',\n      module_name: data.module_info.name,\n\t  all_data: data.get_data_for_new_rev\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      //this.updateData();\n    }, 100 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.getRevList();\n    }, 50 )\n  }\n  \n  changeRev(event){\n    let data = event.target.value;\n    \n    this.setState({\n      chooseRev: data\n    })\n    \n    setTimeout( () => {\n      this.getDataRev();\n    }, 300 )\n  }\n  \n   async search(event){\n\t    \n\t\tlet data = {\n\t\t\tpoint_id: this.state.point,\n\t\t\tshowReady: this.state.showReady === true ? 1 : 0\n\t\t};\n    \n\t\t// let res =  this.getData('get_orders', data);\t\n\t\tlet res2 = this.state;\n\t\t// let res3 = await this.getData('all_items_list', data);\n\t\t// let word = event.target.value;\n   \n\t\tconsole.log('res2');\n\t\tconsole.log(res2);\n\t\t//res2.forEach(element => console.log(element));\n\t\t\n\t\t\n\t\t// data\n\t\t// d.forEach(item => { \n\t\t\t// console.log(item);\n\t\t// })\n  }\n  \n  async updateData(){\n\t  \n    let data = {\n      rev_id\t: this.state.chooseRev,\n      point_id\t: this.state.point,\n    };\n    \n\tconsole.log('data=');\n\tconsole.log(data);\n\t\n\t// to do переписать\n    let res = await this.getData('get_data_rev', data);\n\t\n\t// отрисовка\n\tthis.setState({\n      items: \tres.item,\n      rec: \t\tres.rec,\n      pf: \t\tres.pf\n    })\n\tconsole.log('res=');\n    console.log(res);\n    // this.setState({\n      // read: res.read,\n      // onstol: res.onstol,\n      // ordersQueue: res.prestol_new\n    // })\n  }\n  \n  async getRevList(){\n    let data = {\n      point_id: this.state.point,\n    };\n    \n    let res = await this.getData('get_rev_list', data);\n    \n    this.setState({\n      revList: res,\n      chooseRev: res.length > 0 ? res[0]['id'] : ''\n    })\n    \n    if( res.length > 0 ){\n      setTimeout( () => {\n        this.getDataRev();\n      }, 300 )\n    }\n  }\n  \n  async getDataRev(){\n    let data = {\n      point_id: this.state.point,\n      rev_id: this.state.chooseRev\n    };\n    \n    let res = await this.getData('get_data_rev', data);\n    \n    this.setState({\n      items: res['items'],\n      pf: res['pf'],\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12}>\n            <Link to={\"/revizion/new\"}>Новая ревизия2</Link>\n          </Grid>\n          \n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.revList} value={this.state.chooseRev} func={ this.changeRev.bind(this) } label='Ревизия' />\n          </Grid>\n\t\t  <Grid item xs={12} sm={6}>\n\t\t\t<MyTextInput classes={this.state.classes} func={ this.search.bind(this) } label='Поиск' />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n          </Grid>\n          \n            \n          \n          \n          \n          <Grid item xs={12} sm={12} id=\"revTable\">\n            \n            <Tabs value={this.state.chooseTab} onChange={ (item, key) => { this.setState({ chooseTab: key }) } } textColor=\"primary\" indicatorColor=\"primary\" centered>\n              <Tab label=\"Товары\" {...a11yProps(0)} />\n              <Tab label=\"Заготовки\" {...a11yProps(1)} />\n            </Tabs>\n            \n            <TabPanel value={this.state.chooseTab} index={0}>\n              \n              <TableContainer component={Paper} >\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Товар</TableCell>\n                      <TableCell>Объем</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    { this.state.items.map( (item, key) => (\n                      <TableRow key={key}>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell>{item.value} {item.ei_name}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              \n            </TabPanel>\n            <TabPanel value={this.state.chooseTab} index={1}>\n              \n              <TableContainer component={Paper} >\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Заготовка</TableCell>\n                      <TableCell>Объем</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    { this.state.pf.map( (item, key) => (\n                      <TableRow key={key}>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell>{item.value} {item.ei_name}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              \n            </TabPanel>\n            \n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nclass RevizionNewItem extends React.Component{\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      item: this.props.item,\n      change: this.props.change\n    };\n  }\n  \n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.state.change !== nextState.change ||\n      this.state.change !== nextProps.change\n    );\n  }\n  \n  render(){\n    return (\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          //aria-controls=\"panel1a-content\"\n          //id=\"panel1a-header\"\n        >\n          <Typography style={{ width: '60%' }}>{this.state.item.name}</Typography>\n          <Typography style={{ width: '40%' }}>{this.state.item.value} {this.state.item.ei_name}</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          \n          \n            { this.state.item.counts.map( (it, k) =>\n              <Grid container spacing={3} key={k} style={{ paddingTop: 10, paddingBottom: 10 }}>\n                <Grid item xs={12} sm={6}>\n                  <MySelect data={ this.state.item.size } value={ it.need_pq } func={ this.props.func.bind(this, 'item', this.props.itemKey, 'need_pq', k) } label='Объем упаковки' />\n                </Grid>\n                <Grid item xs={ k == 0 ? 12 : 9 } sm={5}>\n                  <TextField value={ it.value } onChange={ this.props.func.bind(this, 'item', this.props.itemKey, 'value', k) } fullWidth variant=\"outlined\" size=\"small\" label=\"Количество\" />\n                </Grid>\n                { k == 0 ? null :\n                  <Grid item xs={3} sm={1}>\n                    <Button onClick={this.props.clear.bind(this, 'item', this.props.itemKey, k)} variant=\"contained\"> <CloseIcon /> </Button>\n                  </Grid>\n                }\n                \n              </Grid>\n            ) }\n          \n          \n          <Grid item xs={12} sm={6}>\n            <Button variant=\"contained\" onClick={this.props.copy.bind(this, 'item', this.props.itemKey)}>Дублировать</Button>\n          </Grid>\n          \n        </AccordionDetails>\n      </Accordion>\n    )\n  }\n}\n\nclass RevizionNew_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'revizion',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      \n      revList: [],\n      chooseRev: '',\n      \n      storages: [],\n      items: [],\n      rec: [],\n      pf: [],\n      \n      chooseTab: 0,\n      \n      open: false\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      points: data.point_list,\n      point: data.point_list.length == 1 ? data.point_list[0].id : '0',\n      module_name: data.module_info.name\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      //this.updateData();\n    }, 100 )\n  }\n  \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.getDataRev();\n    }, 300 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n\t  \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n  \n  async getDataRev(){\n    let data = {\n      point_id: this.state.point\n    };\n    \n    let res = await this.getData('get_data_for_new_rev', data);\n    \n    this.setState({\n      storages: res['storages'],\n      items: res['items'],\n      rec: res['rec'],\n      pf: res['pf']\n    })\n  }\n  \n  saveData(type, key_item, data, key_data, event){\n    \n    if( type == 'item' ){\n      let items = this.state.items;\n      \n      items[key_item]['counts'][key_data][ [data] ] = event.target.value;\n      \n      let allVal = 0;\n      \n      items[key_item]['counts'].map( (item, key) => {\n        allVal += parseFloat(item.need_pq) * parseFloat(item.value);\n      } )\n      \n      items[key_item]['value'] = allVal;\n      items[key_item]['change'] ++;\n      \n      this.setState({\n        items: items\n      })\n    }\n    \n    \n  }\n  \n  copyData(type, key_item){\n    if( type == 'item' ){\n      let items = this.state.items;\n      \n      items[key_item]['counts'].push({ need_pq: items[key_item]['counts'][0]['need_pq'], value: 0 })\n      items[key_item]['change'] ++;\n      \n      this.setState({\n        items: items\n      })\n    }\n  }\n  \n  clearData(type, key_item, key_data){\n    \n    if( type == 'item' ){\n      let items = this.state.items;\n      let new_counts = [];\n      \n      items[key_item]['counts'].map( (item, key) => {\n        if( key != key_data ){\n          new_counts.push( item )\n        }\n      } )\n      \n      items[key_item]['counts'] = new_counts;\n      \n      let allVal = 0;\n      \n      items[key_item]['counts'].map( (item, key) => {\n        allVal += parseFloat(item.need_pq) * parseFloat(item.value);\n      } )\n      \n      items[key_item]['value'] = allVal;\n      items[key_item]['change'] ++;\n      \n      this.setState({\n        items: items\n      })\n    }\n    \n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          \n          \n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          \n          <Grid item xs={12} sm={12} id=\"revTable\">\n            \n            <Tabs value={this.state.chooseTab} onChange={ (item, key) => { this.setState({ chooseTab: key }) } } textColor=\"primary\" indicatorColor=\"primary\" centered>\n              <Tab label=\"Товары\" {...a11yProps(0)} />\n              <Tab label=\"Заготовки\" {...a11yProps(1)} />\n            </Tabs>\n            \n            <TabPanel value={this.state.chooseTab} index={0}>\n              \n              { this.state.items.map( (item, key) =>\n                <RevizionNewItem key={key} itemKey={key} item={item} change={item.change} func={ this.saveData.bind(this) } copy={ this.copyData.bind(this) } clear={ this.clearData.bind(this) } />\n              ) }\n              \n              \n            </TabPanel>\n            <TabPanel value={this.state.chooseTab} index={1}>\n              \n              \n              \n            </TabPanel>\n            \n          </Grid>\n        </Grid>\n        \n        <React.Fragment >\n          <SwipeableDrawer\n            anchor={'left'}\n            open={ this.state.open }\n            onClose={ () => { this.setState({ open: false }) } }\n            onOpen={ () => { this.setState({ open: true }) } }\n          >\n            <List style={{ width: '100%' }}>\n              { this.state.storages.map( (item, key) =>\n                <ListItem button key={key}>\n                  <ListItemText primary={ item.name } />\n                </ListItem>\n              ) }\n            </List>\n          </SwipeableDrawer>\n        </React.Fragment>\n        \n        { this.state.storages.length == 0 ? null :\n          <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\n            <BottomNavigation\n              showLabels\n              onChange={(event, newValue) => {\n                this.setState({ open: true })\n              }}\n            >\n              <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n            </BottomNavigation>\n          </Paper>\n        }\n      </>\n    )\n  }\n}\n\nexport function Revizion () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <Revizion_ classes={classes} history={history} />\n  );\n}\n\nexport function RevizionNew () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <RevizionNew_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport { NavLink as Link, useParams } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableFooter from '@mui/material/TableFooter';\n\nimport Divider from '@mui/material/Divider';\n\nimport CloseIcon from '@mui/icons-material/Close';\nimport CheckIcon from '@mui/icons-material/Check';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox, MyTimePicker, MyTextInput, MyDaterange, MyAutocomplite } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nimport DatePicker from \"react-multi-date-picker\"\n\nclass MyDatePicker extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <>\n        <Typography>{this.props.label}</Typography>\n        <DatePicker\n          format=\"YYYY-MM-DD\"\n          \n          multiple\n          sort\n          \n          //mask=\"____/__/__\"\n          //multiple={ this.props.multiple && this.props.multiple === true ? true : false }\n          //disableCloseOnSelect={true}\n          //inputFormat=\"yyyy-MM-dd\"\n          style={{ width: '100%' }}\n          label={this.props.label}\n          value={this.props.value}\n          onChange={this.props.func}\n        />\n      </>\n    )\n  }\n}\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nfunction formatDateDot(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [day, month, year].join('.');\n}\n\nfunction formatDateName(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  //if (month.length < 2) \n  //    month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  let m = '';    \n      \n  switch(parseInt(month)){\n\t\tcase 1:{\n\t\t\tm = 'Января';\n\t\t\tbreak;}\n\t\tcase 2:{\n\t\t\tm = 'Февраля';\n\t\t\tbreak;}\n\t\tcase 3:{\n\t\t\tm = 'Марта';\n\t\t\tbreak;}\n\t\tcase 4:{\n\t\t\tm = 'Апреля';\n\t\t\tbreak;}\n\t\tcase 5:{\n\t\t\tm = 'Мая';\n\t\t\tbreak;}\n\t\tcase 6:{\n\t\t\tm = 'Июня';\n\t\t\tbreak;}\t\n\t\tcase 7:{\n\t\t\tm = 'Июля';\n\t\t\tbreak;}\n\t\tcase 8:{\n\t\t\tm = 'Августа';\n\t\t\tbreak;}\n\t\tcase 9:{\n\t\t\tm = 'Сентября';\n\t\t\tbreak;}\n\t\tcase 10:{\n\t\t\tm = 'Октября';\n\t\t\tbreak;}\n\t\tcase 11:{\n\t\t\tm = 'Ноября';\n\t\t\tbreak;}\n\t\tcase 12:{\n\t\t\tm = 'Декабря';\n\t\t\tbreak;}\t\n\t}    \n      \n  return [day, m].join(' ');\n}\n\nclass SiteSale2_new_ extends React.Component {\n  click = false;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'site_sale_2',\n      module_name: '',\n      is_load: false,\n      modalText: '',\n      \n      points: [],\n      point: 0,\n      cities: [],\n      city: 0,\n      \n      modalDialog: false,\n      modalLink: '',\n      \n      where_promo_list: [\n        {id: 1, name: 'Создать'},\n        {id: 2, name: 'Создать и показать'},\n        {id: 3, name: 'Отправить на почту'},\n        {id: 4, name: 'Отправить в смс'},\n        {id: 5, name: 'Рассылка смс'},\n        {id: 6, name: 'Отправить в ЛК (через 8)'},\n        {id: 7, name: 'Создать сертификат(ы)'},\n        {id: 8, name: 'Отправить через бота ВК'},\n      ],\n      promo_action_list: [],\n      sale_list: [\n        {id: 1, name: 'На товары'},\n        {id: 2, name: 'На категории'},\n        {id: 3, name: 'На все меню (кроме допов и закусок)'},\n      ],\n      promo_conditions_list: [\n        {id: 1, name: 'В корзине есть определенные товар(ы)'},\n        {id: 2, name: 'В корзине набрана определенная сумма'},\n      ],\n      promo_sale_list: [],\n      type_sale_list: [\n        {id: 1, name: 'В рублях'},\n        {id: 2, name: 'В процентах'},\n      ],\n      date_promo_list: [\n        {id: 1, name: 'В определенные даты'},\n        {id: 2, name: '14 дней с 10:00 до 21:40'},\n        {id: 3, name: '14 дней с 00:00 до 23:59'},\n      ],\n      type_order_list: [\n        {id: 1, name: 'Все'},\n        {id: 2, name: 'Доставка'},\n        {id: 3, name: 'Самовывоз'},\n        {id: 4, name: 'Зал'},\n      ],\n      where_order_list: [\n        {id: 1, name: 'В городе'},\n        {id: 2, name: 'На точке'}\n      ],\n      \n      promo_prizw_vk: \n    \t\t'Привет!\\r\\n'+\n    \t\t'Поздравляем 🎉\\r\\n'+\n    \t\t'Промокод --promo-- на --position--, действует до --endDate--. Активировать можно при заказе на доставку, самовывоз и в кафе.\\r\\n\\r\\n'+\n\n    \t\t'Обратите внимание, что за подарочную позицию надо будет заплатить 1 руб, это необходимое условие для получения приза. В промокод не входят соевый соус, имбирь и васаби.\\r\\n\\r\\n'+\n\n    \t\t'Заказы принимаем на сайте --site--\\r\\n\\r\\n'+\n\n    \t\t'Режим работы: с 10:00 до 21:30\\r\\n'+\n    \t\t'Адреса наших кафе:\\r\\n'+\n    \t\t'--addrCity--',\n      \n      spamNameSMS: '',\n        \n      auto_text: true,\n      where_promo: 1,\n      promo_name: '',\n      generate_new: false,\n      count_action: 1,\n      promo_action: 1,\n      type_sale: 3,\n      promo_sale: 1,\n      sale_type: 2,\n      promo_conditions: 2,\n      \n      price_start: 0,\n      price_end: 0,\n      date_promo: 1,\n      \n      date_start: formatDate(new Date()),\n      date_end: formatDate(new Date()),\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\n      time_start: '10:00',\n      time_end: '21:30',\n      \n      promo_length: 5,\n      promo_count: 1,\n      \n      day_1: true,\n      day_2: true,\n      day_3: true,\n      day_4: true,\n      day_5: true,\n      day_6: true,\n      day_7: true,\n      \n      type_order: 1,\n      where_order: 1,\n      \n      numberList: '',\n      promo_desc_true: '',\n      promo_desc_false: '',\n      textSMS: '',\n      \n      \n      addItem: null,\n      addItemCount: 1,\n      addItemPrice: 1,\n      addItemAllPrice: 0,\n      \n      itemsAdd: [],\n      itemsAddPrice: [],\n      items: [],\n      cats: [],\n      saleCat: [],\n      saleItem: [],\n      \n      priceItem: null,\n      \n      conditionItems: [],\n      \n      testDate: [],\n      createdPromo: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all_for_new');\n    \n    let date = new Date();\n    let fullDate = '';\n    \n    let Y = date.getFullYear();\n    let M = date.getMonth()+1;\n    let D = date.getDate();\n    \n    fullDate = Y + '-' + ( parseInt(M) > 9 ? M : '0'+M ) + '-' + ( parseInt(D) > 9 ? D : '0'+D );\n    \n    this.setState({\n      points: data.points,\n      cities: data.cities,\n      module_name: data.module_info.name,\n      promo_action_list: data.promo_action_list,\n      promo_sale_list: data.promo_sale_list,\n      \n      date_start: fullDate,\n      date_end: fullDate,\n      \n      items: data.items,\n      cats: data.cats\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();     \n      this.generateTextDescTrue(); \n    }, 300 )\n  }\n  \n  async save(){\n    \n    if( !this.click ){\n      this.click = true;  \n      \n      this.setState({\n        createdPromo: []\n      });\n\n      let count_promo = this.state.promo_sale_list.find( (item) => parseInt(item.id) == parseInt(this.state.promo_sale) )['name'];\n      \n      let conditionItems = [];\n      \n      this.state.conditionItems.map( (item) => {\n        conditionItems.push(item.id)\n      } )\n      \n      \n      let promo_items = [];\n      \n      this.state.saleItem.map( (item) => {\n        promo_items.push(item.id)\n      } )\n      \n      \n      let promo_cat = [];\n      \n      this.state.saleCat.map( (item) => {\n        promo_cat.push(item.id)\n      } )\n      \n      let dateList = [];\n      \n      this.state.testDate.map( (item) => {\n        dateList.push( (new Date(item).toISOString()).split('T')[0] );\n      } )\n      \n      dateList = dateList.join(',')\n      \n      let data = {\n        spamNameSMS: this.state.spamNameSMS,\n        promo_vk_prize: this.state.promo_vk_prize,\n        cert_text: this.state.cert_text,\n        addr: this.state.numberList,\n        where_promo: this.state.where_promo,\n        promo_count: this.state.promo_count,\n        promo_len: this.state.promo_length,\n        promo_name: this.state.promo_name,\n        generate: this.state.generate_new ? 1 : 0,\n        promo_in_count: this.state.count_action,\n        promo_action: this.state.promo_action,\n        promo_type_sale: this.state.type_sale,\n        count_promo: count_promo,\n        promo_type: this.state.sale_type,\n        promo_conditions: this.state.promo_conditions,\n        \n        promo_summ: this.state.price_start,\n        promo_summ_to: this.state.price_end,\n        promo_when: this.state.date_promo,\n        \n        date_start: this.state.date_start,\n        date_end: this.state.date_end,\n        time_start: this.state.time_start,\n        time_end: this.state.time_end,\n        \n        day_1: this.state.day_1 ? 1 : 0,\n        day_2: this.state.day_2 ? 1 : 0,\n        day_3: this.state.day_3 ? 1 : 0,\n        day_4: this.state.day_4 ? 1 : 0,\n        day_5: this.state.day_5 ? 1 : 0,\n        day_6: this.state.day_6 ? 1 : 0,\n        day_7: this.state.day_7 ? 1 : 0,\n        \n        promo_type_order: this.state.type_order,\n        promo_where: this.state.where_order,\n        \n        numberList: this.state.numberList,\n        \n        promo_city: this.state.city,\n        promo_point: this.state.point,\n        \n        about_promo_text: this.state.promo_desc_true,\n        condition_promo_text: this.state.promo_desc_false,\n        textSMS: this.state.textSMS,\n        \n        \n        promo_items: JSON.stringify(promo_items),\n        promo_cat: JSON.stringify(promo_cat),\n        promo_items_add: JSON.stringify(this.state.itemsAdd),\n        promo_items_sale: JSON.stringify(this.state.itemsAddPrice),\n        promo_conditions_items: JSON.stringify(conditionItems),\n        \n        date_between: dateList\n      };\n      \n      let res = await this.getData('save_new_promo', data);\n      \n      console.log( res )\n      \n      this.setState({\n        createdPromo: res.promo_text\n      });\n\n      //создать\n      if( parseInt(this.state.where_promo) == 1 || parseInt(this.state.where_promo) == 8 ){\n        this.setState({\n          modalDialog: true,\n          modalText: 'Создано'\n        })\n      }\n      \n      //создать и показать\n      if( parseInt(this.state.where_promo) == 2 ){\n        this.setState({\n          modalDialog: true,\n          modalText: 'Промокоды: '+res.promo_text.join(', ')\n        })\n      }\n      \n      //почта\n      if( parseInt(this.state.where_promo) == 3 ){\n        this.setState({\n          modalDialog: true,\n          modalText: res.text\n        })\n      }\n      \n      //смс / смс рассылка / ЛК\n      if( parseInt(this.state.where_promo) == 4 || parseInt(this.state.where_promo) == 5 || parseInt(this.state.where_promo) == 6 ){\n        this.setState({\n          modalDialog: true,\n          modalText: res.text\n        })\n      }\n      \n      //сертификаты\n      if( parseInt(this.state.where_promo) == 7 ){\n        this.setState({\n          modalDialog: true,\n          modalText: res.text,\n          modalLink: res.link\n        })\n      }\n      \n      setTimeout( () => {\n        this.click = false;    \n      }, 300 )\n    }\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n        this.click = false;\n      }, 300 )\n    });\n  }\n  \n  changeData(type, event){\n    this.setState({\n      [ type ]: event.target.value\n    })\n    \n    if( type == 'date_promo' && (event.target.value == 2 || event.target.value == 3) ){\n      let thisDay = new Date();\n      let nextDay = new Date();\n      nextDay.setDate(nextDay.getDate() + 14);\n      \n      this.setState({\n        rangeDate: [formatDate(thisDay), formatDate(nextDay)],\n        date_start: formatDate(thisDay),\n        date_end: formatDate(nextDay),\n        \n        time_start: event.target.value == 2 ? '10:00' : '00:00',\n        time_end: event.target.value == 2 ? '21:40' : '23:59',\n      })\n    }\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();   \n      this.generateTextDescTrue();   \n    }, 300 )\n  }\n  \n  changeDataCheck(type, event){\n    this.setState({\n      [ type ]: event.target.checked\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();    \n      this.generateTextDescTrue();  \n    }, 300 )\n  }\n  \n  changeDateRange(data){\n    let dateStart = data[0] ? formatDate(data[0]) : '';\n    let dateEnd = data[1] ? formatDate(data[1]) : '';\n    \n    this.setState({\n      rangeDate: [dateStart, dateEnd],\n      date_start: dateStart,\n      date_end: dateEnd,\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  changeDataData(type, data){\n    this.setState({\n      [ type ]: data\n    });\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  generateTextDescTrue(){\n    \n    if( !this.state.auto_text ){\n      return ;\n    }\n    \n    let promo_action = this.state.promo_action;\n    let textTrue = '';\n    \n    if(parseInt(promo_action) == 1){//скидка\n      var promo_type_sale = this.state.type_sale,\n        count_promo = this.state.promo_sale_list.find( (item) => parseInt(item.id) == parseInt(this.state.promo_sale) )['name'],//размер скидки\n        promo_type = this.state.sale_type; //1 - рубли 2 %\n\n      if(parseInt(promo_type_sale) == 1){//товары\n        var promo_items = this.state.saleItem,\n          items = '';\n\n        promo_items.map(function(item, key){\n          items += item.name+', ';\n        })\n\n        items = items.substring(0, items.length - 2);\n\n        textTrue = 'скидку на '+items+' в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\t\n      if(parseInt(promo_type_sale) == 2){//категории\n        var promo_items = this.state.saleCat,\n          items = '';\n\n        promo_items.map(function(item, key){\n          items += item.name+', ';\n        })\n\n        items = items.substring(0, items.length - 2);\n\n        textTrue = 'скидку на '+items+' в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\n      if(parseInt(promo_type_sale) == 3){//все\n        textTrue = 'скидку на всё меню, кроме напитков, соусов, приправ и палочек, в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\n    }\n    \n    if(parseInt(promo_action) == 2){//добавляет товар\n      var itemText = '';\n\n      this.state.itemsAdd.map( (item, key) => {\n        if(parseInt(item['price']) == 0){\n          itemText += 'бесплатную '+item['name']+' '+item['count']+'шт. '+'за '+item['price']+'руб., ';\n        }else{\n          itemText += item['name']+' '+item['count']+'шт. '+'за '+item['price']+'руб., ';\n        }\n      } )\n      \n      itemText = itemText.substring(0, itemText.length - 2);\n\n      textTrue = this.state.itemsAdd.length == 1 ? 'позицию '+itemText : 'позиции '+itemText;\n    }\t\n    \n    if(parseInt(promo_action) == 3){//товар за цену\n      var itemText = '';\n\n      this.state.itemsAddPrice.map( (item, key) => {\n        itemText += item['name']+' по '+item['price']+'руб., ';\n      } )\n      \n      itemText = itemText.substring(0, itemText.length - 2);\n\n      textTrue = this.state.itemsAddPrice.length-1 == 1 ? 'позицию '+itemText : 'позиции '+itemText;\n    }\n    \n    let textSMS = 'Промокод --promo_name--, действует до '+formatDateName(this.state.date_end)+'. Заказывай на jacofood.ru!'\n    \n    this.setState({\n      promo_desc_true: textTrue,\n      textSMS: textSMS,\n      cert_text: textTrue\n    })\n  }\n  \n  generateTextDescFalse(){\n    \n    if( !this.state.auto_text ){\n      return ;\n    }\n    \n    var dop_text = '';\n    \n    let text = '';\n    \n    console.log( this.state.testDate )\n    \n    if( this.state.testDate.length > 0 ){\n      \n      let dateList = [];\n      \n      this.state.testDate.map( (item) => {\n        dateList.push( (new Date(item).toISOString()).split('T')[0] );\n      } )\n      \n\t\t\ttext = '(кроме ';\n\t\t\t\n\t\t\tdateList.map(function(item){\n\t\t\t\ttext += formatDateName(item) + ', ';\n\t\t\t});\n\t\t\t\n\t\t\ttext = text.slice(0, -1);\n\t\t\ttext = text.slice(0, -1);\n\n      text += ')';\n      \n      console.log( 'text', text )\n\t\t}\n    \n\t\tif( parseInt(this.state.where_order) == 1 ){\n\t\t\t//город\n\t\t\tif( parseInt(this.state.city) != 0 ){\n        let city_name = this.state.cities.find( (item) => parseInt(item.id) == parseInt(this.state.city) )['name'];\n        \n\t\t\t\tdop_text = ' в г. '+city_name;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif( parseInt(this.state.where_order) == 2 ){\n\t\t\t//точка\n\t\t\tif( parseInt(this.state.point) != 0 ){\n        let point_name = this.state.points.find( (item) => parseInt(item.id) == parseInt(this.state.point) )['name'];\n        \n\t\t\t\tdop_text = ' в г. '+point_name;\n\t\t\t}\n\t\t}\n    \n    let dateStart = formatDateDot(this.state.date_start);\n    let dateEnd = formatDateDot(this.state.date_end);\n    \n    let textFalse = 'Промокод действует c '+dateStart+' до '+dateEnd+' с '+this.state.time_start+' до '+this.state.time_end+' '+text+dop_text;\n    \n    this.setState({\n      promo_desc_false: textFalse\n    })\n\t}\n  \n  addItemAdd(){\n    let thisItems = this.state.itemsAdd;\n    \n    let check = thisItems.find( (item) => parseInt(item.item_id) == parseInt(this.state.addItem.id) );\n    \n    if( !check ){\n      let thisItem = this.state.items.find( (item) => parseInt(item.id) == parseInt(this.state.addItem.id) );\n      \n      thisItems.push({\n        item_id: this.state.addItem.id,\n        name: thisItem.name,\n        count: this.state.addItemCount,\n        price: this.state.addItemPrice,\n      })\n      \n      let addItemAllPrice = 0;\n      \n      thisItems.map( (item) => {\n        addItemAllPrice += parseInt(item.price)\n      } )\n      \n      this.setState({\n        itemsAdd: thisItems,\n        addItemAllPrice: addItemAllPrice\n      })\n    }\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  delItemAdd(item){\n    let thisItems = this.state.itemsAdd;\n    \n    let newItems = thisItems.filter( (it) => parseInt(it.item_id) != parseInt(item.item_id) );\n    \n    let addItemAllPrice = 0;\n      \n    newItems.map( (item) => {\n      addItemAllPrice += parseInt(item.price)\n    } )\n    \n    this.setState({\n      itemsAdd: newItems,\n      addItemAllPrice: addItemAllPrice\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  priceItemAdd(){\n    let thisItems = this.state.itemsAddPrice;\n    \n    let check = thisItems.find( (item) => parseInt(item.item_id) == parseInt(this.state.priceItem.id) );\n    \n    if( !check ){\n      let thisItem = this.state.items.find( (item) => parseInt(item.id) == parseInt(this.state.priceItem.id) );\n      \n      thisItems.push({\n        item_id: this.state.priceItem.id,\n        name: thisItem.name,\n        price: this.state.addItemPrice,\n      })\n      \n      this.setState({\n        itemsAddPrice: thisItems\n      })\n    }\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  delItemPrice(item){\n    let thisItems = this.state.itemsAddPrice;\n    \n    let newItems = thisItems.filter( (it) => parseInt(it.item_id) != parseInt(item.item_id) );\n    \n    let addItemAllPrice = 0;\n      \n    newItems.map( (item) => {\n      addItemAllPrice += parseInt(item.price)\n    } )\n    \n    this.setState({\n      itemsAddPrice: newItems\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false, modalLink: '' }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Результат операции</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            <Typography>{this.state.modalText}</Typography>\n\n            <br />\n\n            <Typography>Созданыне промокоды: { this.state.createdPromo.join(', ') }</Typography>\n\n            <br />\n            { this.state.modalLink == '' ? null :\n              <a href={this.state.modalLink} style={{ color: 'red' }}>Скачать</a>\n            }\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={ () => { this.setState({ modalDialog: false }) } }>Хорошо</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            { this.state.generate_new === true ? null :\n              <Grid item xs={12} sm={3}>\n                <MyTextInput classes={this.state.classes} value={this.state.promo_name} func={ this.changeData.bind(this, 'promo_name') } label='Название промокода' />\n              </Grid>\n            }\n            { this.state.generate_new === false ? null :\n              <Grid item xs={12} sm={3}>\n                <MyTextInput classes={this.state.classes} value={this.state.promo_length} func={ this.changeData.bind(this, 'promo_length') } label='Длина промокода' />\n              </Grid>\n            }\n            \n            <Grid item xs={12} sm={3}>\n              <MyCheckBox classes={this.state.classes} value={this.state.generate_new} func={ this.changeDataCheck.bind(this, 'generate_new') } label='Сгенерировать' />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <MyTextInput classes={this.state.classes} value={this.state.count_action} func={ this.changeData.bind(this, 'count_action') } label='Количество активаций' />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <MyTextInput classes={this.state.classes} value={this.state.promo_count} func={ this.changeData.bind(this, 'promo_count') } label='Количество промокодов' />\n            </Grid>\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={3}>\n              <MySelect classes={this.state.classes} data={this.state.promo_action_list} value={this.state.promo_action} func={ this.changeData.bind(this, 'promo_action') } label='Промокод дает:' />\n            </Grid>\n            \n          </Grid>\n          \n          { parseInt(this.state.promo_action) !== 1 ? null :\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n              \n              <Grid item xs={12} sm={3}>\n                <MySelect classes={this.state.classes} data={this.state.sale_list} value={this.state.type_sale} func={ this.changeData.bind(this, 'type_sale') } label='Скидка' />\n              </Grid>\n            \n              { parseInt(this.state.type_sale) !== 1 ? null :\n                <Grid item xs={12} sm={9}>\n                  <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.saleItem} func={ (event, data) => { this.changeDataData('saleItem', data) } } multiple={true} label='Товары' />\n                </Grid>\n              }\n              \n              { parseInt(this.state.type_sale) !== 2 ? null :\n                <Grid item xs={12} sm={9}>\n                  <MyAutocomplite classes={this.state.classes} data={this.state.cats} value={this.state.saleCat} func={ (event, data) => { this.changeDataData('saleCat', data) } } multiple={true} label='Категории' />\n                </Grid>\n              }\n            \n              <Grid item xs={12} sm={3}>\n                <MySelect classes={this.state.classes} data={this.state.promo_sale_list} value={this.state.promo_sale} func={ this.changeData.bind(this, 'promo_sale') } label='Размер скидки' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <MySelect classes={this.state.classes} data={this.state.type_sale_list} value={this.state.sale_type} func={ this.changeData.bind(this, 'sale_type') } label='Какая скидка' />\n              </Grid>\n            \n            </Grid>\n          }\n          \n          { parseInt(this.state.promo_action) !== 2 ? null :\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n              \n              <Grid item xs={12} sm={3}>\n                <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.addItem} func={ (event, data) => { this.changeDataData('addItem', data) } } label='Позиция' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <MyTextInput classes={this.state.classes} value={this.state.addItemCount} func={ this.changeData.bind(this, 'addItemCount') } label='Количество' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <MyTextInput classes={this.state.classes} value={this.state.addItemPrice} func={ this.changeData.bind(this, 'addItemPrice') } label='Цена за все' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <Button variant=\"contained\" onClick={this.addItemAdd.bind(this)}>Добавить</Button>\n              </Grid>\n              \n            </Grid>\n          }\n          \n          { parseInt(this.state.promo_action) !== 2 ? null :\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Позиция</TableCell>\n                      <TableCell>Количество</TableCell>\n                      <TableCell>Цена за все</TableCell>\n                      <TableCell></TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    \n                    { this.state.itemsAdd.map( (item, key) =>\n                      <TableRow key={key}>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell>{item.count}</TableCell>\n                        <TableCell>{item.price}</TableCell>\n                        <TableCell> <CloseIcon onClick={this.delItemAdd.bind(this, item)} style={{ cursor: 'pointer' }} /> </TableCell>\n                      </TableRow>\n                    ) }\n                    \n                    \n                  </TableBody>\n                  \n                  <TableFooter>\n                    <TableRow>\n                      <TableCell></TableCell>\n                      <TableCell></TableCell>\n                      <TableCell>{this.state.addItemAllPrice}</TableCell>\n                      <TableCell></TableCell>\n                    </TableRow>\n                  </TableFooter>\n                  \n                  \n                </Table>\n              </Grid>  \n            </Grid>\n          }\n          \n          { parseInt(this.state.promo_action) !== 3 ? null :\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n              \n              <Grid item xs={12} sm={3}>\n                <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.priceItem} func={ (event, data) => { this.changeDataData('priceItem', data) } } label='Позиция' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <MyTextInput classes={this.state.classes} value={this.state.addItemCount} func={ this.changeData.bind(this, 'addItemCount') } label='Цена за 1 ед' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <Button variant=\"contained\" onClick={this.priceItemAdd.bind(this)}>Добавить</Button>\n              </Grid>\n              \n            </Grid>\n          }\n          \n          { parseInt(this.state.promo_action) !== 3 ? null :\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Позиция</TableCell>\n                      <TableCell>Цена за 1 ед</TableCell>\n                      <TableCell></TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    \n                    { this.state.itemsAddPrice.map( (item, key) =>\n                      <TableRow key={key}>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell>{item.price}</TableCell>\n                        <TableCell> <CloseIcon onClick={this.delItemPrice.bind(this, item)} style={{ cursor: 'pointer' }} /> </TableCell>\n                      </TableRow>\n                    ) }\n                    \n                  </TableBody>\n                </Table>\n              </Grid>  \n            </Grid>\n          }\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.promo_conditions_list} value={this.state.promo_conditions} func={ this.changeData.bind(this, 'promo_conditions') } label='Условие' />\n            </Grid>\n            \n            { parseInt(this.state.promo_conditions) !== 1 ? null :\n              <>\n                <Grid item xs={12} sm={8}>\n                  <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.conditionItems} func={ (event, data) => { this.changeDataData('conditionItems', data) } } multiple={true} label='Товары' />\n                </Grid>\n              </>\n            }\n            \n            { parseInt(this.state.promo_conditions) !== 2 ? null :\n              <>\n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={this.state.price_start} func={ this.changeData.bind(this, 'price_start') } label='Сумма от' />\n                </Grid>\n              \n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={this.state.price_end} func={ this.changeData.bind(this, 'price_end') } label='Сумма до' />\n                </Grid>\n              </>\n            }\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={3}>\n              <MySelect classes={this.state.classes} data={this.state.date_promo_list} value={this.state.date_promo} func={ this.changeData.bind(this, 'date_promo') } label='Когда работает промокод' />\n            </Grid>\n            \n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={6} className=\"MyDaterange\">\n              <MyDaterange startText=\"Дата от\" endText=\"Дата до\" value={this.state.rangeDate} func={ this.changeDateRange.bind(this) } />\n            </Grid>\n           \n            <Grid item xs={12} sm={3}>\n              <MyTimePicker classes={this.state.classes} label=\"Время от\" value={this.state.time_start} func={ this.changeData.bind(this, 'time_start') } />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <MyTimePicker classes={this.state.classes} label=\"Время до\" value={this.state.time_end} func={ this.changeData.bind(this, 'time_end') } />\n            </Grid>\n              \n            \n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            <Grid item xs={12} sm={12}>\n              <MyDatePicker multiple={false} label={'Кроме дат'} value={this.state.testDate} func={ this.changeDataData.bind(this, 'testDate') } />\n            </Grid>\n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ marginTop: 20 }} spacing={3}>\n            \n            <MyCheckBox classes={this.state.classes} value={this.state.day_1} func={ this.changeDataCheck.bind(this, 'day_1') } label='Понедельник' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_2} func={ this.changeDataCheck.bind(this, 'day_2') } label='Вторник' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_3} func={ this.changeDataCheck.bind(this, 'day_3') } label='Среда' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_4} func={ this.changeDataCheck.bind(this, 'day_4') } label='Четверг' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_5} func={ this.changeDataCheck.bind(this, 'day_5') } label='Пятница' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_6} func={ this.changeDataCheck.bind(this, 'day_6') } label='Суббота' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_7} func={ this.changeDataCheck.bind(this, 'day_7') } label='Воскресенье' />\n           \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.type_order_list} value={this.state.type_order} func={ this.changeData.bind(this, 'type_order') } label='Тип заказа' />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.where_order_list} value={this.state.where_order} func={ this.changeData.bind(this, 'where_order') } label='Где работает' />\n            </Grid>\n            { parseInt(this.state.where_order) !== 1 ? null :\n              <Grid item xs={12} sm={4}>\n                <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city} func={ this.changeData.bind(this, 'city') } label='Город' />\n              </Grid>\n            }\n            { parseInt(this.state.where_order) !== 2 ? null :\n              <Grid item xs={12} sm={4}>\n                <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point} func={ this.changeData.bind(this, 'point') } label='Точка' />\n              </Grid>\n            }\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.where_promo_list} value={this.state.where_promo} func={ this.changeData.bind(this, 'where_promo') } label='Что сделать с промокодом' />\n            </Grid>\n            \n            { parseInt(this.state.where_promo) == 1 || parseInt(this.state.where_promo) == 2 ? null :\n              parseInt(this.state.where_promo) == 5 ?\n              \n                <Grid item xs={12} sm={4}>\n                  <span>Список номеров для рассылки</span>\n                  <TextareaAutosize\n                    aria-label=\"empty textarea\"\n                    placeholder=\"\"\n                    minRows={3}\n                    value={this.state.numberList}\n                    onChange={ this.changeData.bind(this, 'numberList') }\n                    label=\"Куда отправить\"\n                    style={{ width: '100%' }}\n                  />\n                </Grid>\n                  :\n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={this.state.numberList} func={ this.changeData.bind(this, 'numberList') } label='Куда отправить' />\n                </Grid>\n            \n            }\n            \n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            { parseInt(this.state.where_promo) !== 8 ? null :\n              <Grid item xs={12} sm={12}>\n                <span>Текст расссылки</span>\n                <TextareaAutosize\n                  aria-label=\"empty textarea\"\n                  placeholder=\"\"\n                  minRows={3}\n                  value={this.state.promo_prizw_vk}\n                  onChange={ this.changeData.bind(this, 'promo_prizw_vk') }\n                  style={{ width: '100%' }}\n                />\n              </Grid>\n            }\n            \n            { parseInt(this.state.where_promo) == 5 ?\n              <Grid item xs={12} sm={12}>\n                <MyTextInput classes={this.state.classes} value={this.state.spamNameSMS} func={ this.changeData.bind(this, 'spamNameSMS') } label='Наименование рассылки' />\n              </Grid>\n                :\n              null\n            }\n            \n            { parseInt(this.state.where_promo) == 4 || parseInt(this.state.where_promo) == 5 ?\n              <Grid item xs={12} sm={12}>\n                <MyTextInput classes={this.state.classes} value={this.state.textSMS} func={ this.changeData.bind(this, 'textSMS') } label='Текст СМС ( --promo_name-- )' />\n              </Grid>\n                :\n              null\n            }\n            \n            { parseInt(this.state.where_promo) == 7 ?\n              <Grid item xs={12} sm={12}>\n                <MyTextInput classes={this.state.classes} value={this.state.cert_text} func={ this.changeData.bind(this, 'cert_text') } label='Текст для описания сертификата' />\n              </Grid>\n                :\n              null\n            }\n            \n            <Grid item xs={12} sm={12}>\n              <MyCheckBox classes={this.state.classes} value={this.state.auto_text} func={ this.changeDataCheck.bind(this, 'auto_text') } label='Авто-текст' />\n            </Grid>\n            \n            <Grid item xs={12} sm={12}>\n              <MyTextInput classes={this.state.classes} value={this.state.promo_desc_true} func={ this.changeData.bind(this, 'promo_desc_true') } label='Описание промокода после активации (Промокод дает: )' />\n            </Grid>\n            \n            <Grid item xs={12} sm={12}>\n              <MyTextInput classes={this.state.classes} value={this.state.promo_desc_false} func={ this.changeData.bind(this, 'promo_desc_false') } label='Условие промокода, когда условия не соблюдены' />\n            </Grid>\n            \n          </Grid>\n          \n          \n          \n          <Grid container direction=\"row\" justifyContent=\"end\" style={{ paddingTop: 50 }} spacing={3}>\n            <Button variant=\"contained\" onClick={this.save.bind(this)}>Сохранить</Button>\n          </Grid>\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nclass SiteSale2_edit_ extends React.Component {\n  click = false;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'site_sale_2',\n      module_name: '',\n      is_load: false,\n      modalText: '',\n      \n      points: [],\n      point: 0,\n      cities: [],\n      city: 0,\n      \n      modalDialog: false,\n      modalLink: '',\n      \n      where_promo_list: [\n        {id: 1, name: 'Создать'},\n        {id: 2, name: 'Создать и показать'},\n        {id: 3, name: 'Отправить на почту'},\n        {id: 4, name: 'Отправить в смс'},\n        {id: 5, name: 'Рассылка смс'},\n        {id: 6, name: 'Отправить в ЛК (через 8)'},\n        {id: 7, name: 'Создать сертификат(ы)'},\n      ],\n      promo_action_list: [],\n      sale_list: [\n        {id: 1, name: 'На товары'},\n        {id: 2, name: 'На категории'},\n        {id: 3, name: 'На все меню (кроме допов и закусок)'},\n      ],\n      promo_conditions_list: [\n        {id: 1, name: 'В корзине есть определенные товар(ы)'},\n        {id: 2, name: 'В корзине набрана определенная сумма'},\n      ],\n      promo_sale_list: [],\n      type_sale_list: [\n        {id: 1, name: 'В рублях'},\n        {id: 2, name: 'В процентах'},\n      ],\n      date_promo_list: [\n        {id: 1, name: 'В определенные даты'},\n        {id: 2, name: '14 дней с 10:00 до 21:40'},\n        {id: 3, name: '14 дней с 00:00 до 23:59'},\n      ],\n      type_order_list: [\n        {id: 1, name: 'Все'},\n        {id: 2, name: 'Доставка'},\n        {id: 3, name: 'Самовывоз'},\n        {id: 4, name: 'Зал'},\n      ],\n      where_order_list: [\n        {id: 1, name: 'В городе'},\n        {id: 2, name: 'На точке'}\n      ],\n      \n      auto_text: false,\n      where_promo: 1,\n      promo_name: '',\n      generate_new: false,\n      count_action: 1,\n      promo_action: 1,\n      type_sale: 3,\n      promo_sale: 1,\n      sale_type: 2,\n      promo_conditions: 2,\n      \n      price_start: 0,\n      price_end: 0,\n      date_promo: 1,\n      \n      date_start: formatDate(new Date()),\n      date_end: formatDate(new Date()),\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\n      time_start: '10:00',\n      time_end: '21:30',\n      \n      promo_length: 5,\n      promo_count: 1,\n      \n      day_1: true,\n      day_2: true,\n      day_3: true,\n      day_4: true,\n      day_5: true,\n      day_6: true,\n      day_7: true,\n      \n      type_order: 1,\n      where_order: 1,\n      \n      numberList: '',\n      promo_desc_true: '',\n      promo_desc_false: '',\n      textSMS: '',\n      \n      \n      addItem: 1,\n      addItemCount: 1,\n      addItemPrice: 1,\n      addItemAllPrice: 0,\n      \n      itemsAdd: [],\n      itemsAddPrice: [],\n      items: [],\n      cats: [],\n      saleCat: [],\n      saleItem: [],\n      \n      priceItem: 1,\n      \n      conditionItems: [],\n      \n      testDate: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = {\n      promo_id: this.props.promoId\n    }\n    \n    let res = await this.getData('get_all_for_edit', data);\n    \n    let items = [];\n    \n    if( res.promo.promo_conditions_items.length > 4 ){\n      res.promo.promo_conditions_items = JSON.parse(res.promo.promo_conditions_items, true);\n      \n      res.promo.promo_conditions_items.map( (item) => {\n        let findItem = res.items.find( (it) => parseInt(it.id) == parseInt(item) );\n        \n        items.push(findItem)\n      } )\n    }\n    \n    setTimeout( () => {\n      \n      console.log( 'conditionItems', items )\n      console.log( 'items', res.items )\n      \n      let limDate = [];\n      \n      res.limit.map( (item) => {\n        limDate.push( new Date(item.date) )\n      } )\n      \n      this.setState({\n        points: res.points,\n        cities: res.cities,\n        module_name: res.module_info.name,\n        promo_action_list: res.promo_action_list,\n        promo_sale_list: res.promo_sale_list,\n        \n        date_start: res.promo.date1,\n        date_end: res.promo.date2,\n        time_start: res.promo.time1,\n        time_end: res.promo.time2,\n        rangeDate: [res.promo.date1, res.promo.date2],\n        \n        items: res.items,\n        cats: res.cats,\n        \n        day_1: parseInt(res.promo.d1) == 1 ? true : false,\n        day_2: parseInt(res.promo.d2) == 1 ? true : false,\n        day_3: parseInt(res.promo.d3) == 1 ? true : false,\n        day_4: parseInt(res.promo.d4) == 1 ? true : false,\n        day_5: parseInt(res.promo.d5) == 1 ? true : false,\n        day_6: parseInt(res.promo.d6) == 1 ? true : false,\n        day_7: parseInt(res.promo.d7) == 1 ? true : false,\n        \n        count_action: res.promo.count,\n        promo_name: res.promo.name,\n        \n        price_start: res.promo.promo_summ,\n        price_end: res.promo.promo_summ_to,\n        \n        conditionItems: items,\n        promo_conditions: items.length > 0 ? 1 : 2,\n        \n        point: res.promo.point_id,\n        city: res.promo.city_id,\n        \n        where_order: parseInt(res.promo.city_id) > 0 ? 1 : parseInt(res.promo.point_id) > 0 ? 2 : 1,\n        \n        type_order: res.promo.type_order,\n        \n        promo_desc_true: res.promo.coment,\n        promo_desc_false: res.promo.condition_text,\n        \n        promo_id: res.promo.id,\n        \n        testDate: limDate\n      })\n    }, 300 )\n    \n    \n    document.title = res.module_info.name;\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();     \n      this.generateTextDescTrue(); \n    }, 300 )\n  }\n  \n  async save(){\n    \n    if( !this.click ){\n      this.click = true;  \n      \n      let conditionItems = [];\n      \n      this.state.conditionItems.map( (item) => {\n        conditionItems.push(item.id)\n      } )\n      \n      \n      let promo_items = [];\n      \n      \n      let promo_cat = [];\n      let dateList = [];\n      \n      this.state.testDate.map( (item) => {\n        dateList.push( (new Date(item).toISOString()).split('T')[0] );\n      } )\n      \n      dateList = dateList.join(',')\n      \n      let data = {\n        promo_id: this.state.promo_id,\n        cert_text: this.state.cert_text,\n        addr: this.state.numberList,\n        where_promo: this.state.where_promo,\n        promo_count: this.state.promo_count,\n        promo_len: this.state.promo_length,\n        promo_name: this.state.promo_name,\n        generate: this.state.generate_new ? 1 : 0,\n        promo_in_count: this.state.count_action,\n        promo_action: this.state.promo_action,\n        promo_type_sale: this.state.type_sale,\n        promo_type: this.state.sale_type,\n        promo_conditions: this.state.promo_conditions,\n        \n        promo_summ: this.state.price_start,\n        promo_summ_to: this.state.price_end,\n        promo_when: this.state.date_promo,\n        \n        date_start: this.state.date_start,\n        date_end: this.state.date_end,\n        time_start: this.state.time_start,\n        time_end: this.state.time_end,\n        \n        day_1: this.state.day_1 ? 1 : 0,\n        day_2: this.state.day_2 ? 1 : 0,\n        day_3: this.state.day_3 ? 1 : 0,\n        day_4: this.state.day_4 ? 1 : 0,\n        day_5: this.state.day_5 ? 1 : 0,\n        day_6: this.state.day_6 ? 1 : 0,\n        day_7: this.state.day_7 ? 1 : 0,\n        \n        promo_type_order: this.state.type_order,\n        promo_where: this.state.where_order,\n        \n        numberList: this.state.numberList,\n        \n        promo_city: this.state.city,\n        promo_point: this.state.point,\n        \n        about_promo_text: this.state.promo_desc_true,\n        condition_promo_text: this.state.promo_desc_false,\n        textSMS: this.state.textSMS,\n        \n        \n        promo_items: JSON.stringify(promo_items),\n        promo_cat: JSON.stringify(promo_cat),\n        promo_items_add: JSON.stringify(this.state.itemsAdd),\n        promo_items_sale: JSON.stringify(this.state.itemsAddPrice),\n        promo_conditions_items: JSON.stringify(conditionItems),\n        \n        date_between: dateList\n      };\n      \n      let res = await this.getData('save_edit_promo', data);\n      \n      console.log( res )\n      \n      this.setState({\n        modalDialog: true,\n        modalText: res.text\n      })\n      \n      setTimeout( () => {\n        this.click = false;    \n      }, 300 )\n    }\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n        \n        this.click = false;    \n      }, 300 )\n    });\n  }\n  \n  changeData(type, event){\n    this.setState({\n      [ type ]: event.target.value\n    })\n    \n    if( type == 'date_promo' && (event.target.value == 2 || event.target.value == 3) ){\n      let thisDay = new Date();\n      let nextDay = new Date();\n      nextDay.setDate(nextDay.getDate() + 14);\n      \n      this.setState({\n        rangeDate: [formatDate(thisDay), formatDate(nextDay)],\n        date_start: formatDate(thisDay),\n        date_end: formatDate(nextDay),\n        \n        time_start: event.target.value == 2 ? '10:00' : '00:00',\n        time_end: event.target.value == 2 ? '21:40' : '23:59',\n      })\n    }\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();   \n      this.generateTextDescTrue();   \n    }, 300 )\n  }\n  \n  changeDataCheck(type, event){\n    this.setState({\n      [ type ]: event.target.checked\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();    \n      this.generateTextDescTrue();  \n    }, 300 )\n  }\n  \n  changeDateRange(data){\n    let dateStart = data[0] ? formatDate(data[0]) : '';\n    let dateEnd = data[1] ? formatDate(data[1]) : '';\n    \n    this.setState({\n      rangeDate: [dateStart, dateEnd],\n      date_start: dateStart,\n      date_end: dateEnd,\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  changeDataData(type, data){\n    this.setState({\n      [ type ]: data\n    });\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  generateTextDescTrue(){\n    \n    if( !this.state.auto_text ){\n      return ;\n    }\n    \n    let promo_action = this.state.promo_action;\n    let textTrue = '';\n    \n    if(parseInt(promo_action) == 1){//скидка\n      var promo_type_sale = this.state.type_sale,\n        count_promo = this.state.promo_sale_list.find( (item) => parseInt(item.id) == parseInt(this.state.promo_sale) )['name'],//размер скидки\n        promo_type = this.state.sale_type; //1 - рубли 2 %\n\n      if(parseInt(promo_type_sale) == 1){//товары\n        var promo_items = this.state.saleItem,\n          items = '';\n\n        promo_items.map(function(item, key){\n          items += item.name+', ';\n        })\n\n        items = items.substring(0, items.length - 2);\n\n        textTrue = 'скидку на '+items+' в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\t\n      if(parseInt(promo_type_sale) == 2){//категории\n        var promo_items = this.state.saleCat,\n          items = '';\n\n        promo_items.map(function(item, key){\n          items += item.name+', ';\n        })\n\n        items = items.substring(0, items.length - 2);\n\n        textTrue = 'скидку на '+items+' в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\n      if(parseInt(promo_type_sale) == 3){//все\n        textTrue = 'скидку на всё меню, кроме напитков, соусов, приправ и палочек, в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\n    }\n    \n    if(parseInt(promo_action) == 2){//добавляет товар\n      var itemText = '';\n\n      this.state.itemsAdd.map( (item, key) => {\n        if(parseInt(item['price']) == 0){\n          itemText += 'бесплатную '+item['name']+' '+item['count']+'шт. '+'за '+item['price']+'руб., ';\n        }else{\n          itemText += item['name']+' '+item['count']+'шт. '+'за '+item['price']+'руб., ';\n        }\n      } )\n      \n      itemText = itemText.substring(0, item.length - 2);\n\n      textTrue = this.state.itemsAdd.length == 1 ? 'позицию '+itemText : 'позиции '+itemText;\n    }\t\n    \n    if(parseInt(promo_action) == 3){//товар за цену\n      var itemText = '';\n\n      this.state.promo_items_sale.map( (item, key) => {\n        itemText += item['name']+' по '+item['price']+'руб., ';\n      } )\n      \n      itemText = itemText.substring(0, itemText.length - 2);\n\n      textTrue = this.state.promo_items_sale.length-1 == 1 ? 'позицию '+itemText : 'позиции '+itemText;\n    }\n    \n    let textSMS = 'Промокод --promo_name--, действует до '+formatDateName(this.state.date_end)+'. Заказывай на jacofood.ru!'\n    \n    this.setState({\n      promo_desc_true: textTrue,\n      textSMS: textSMS,\n      cert_text: textTrue\n    })\n  }\n  \n  generateTextDescFalse(){\n    \n    if( !this.state.auto_text ){\n      return ;\n    }\n    \n    var dop_text = '';\n\t\t\n\t\tif( parseInt(this.state.where_order) == 1 ){\n\t\t\t//город\n\t\t\tif( parseInt(this.state.city) != 0 ){\n        let city_name = this.state.cities.find( (item) => parseInt(item.id) == parseInt(this.state.city) )['name'];\n        \n\t\t\t\tdop_text = ' в г. '+city_name;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif( parseInt(this.state.where_order) == 2 ){\n\t\t\t//точка\n\t\t\tif( parseInt(this.state.point) != 0 ){\n        let point_name = this.state.points.find( (item) => parseInt(item.id) == parseInt(this.state.point) )['name'];\n        \n\t\t\t\tdop_text = ' в г. '+point_name;\n\t\t\t}\n\t\t}\n    \n    let dateStart = formatDateDot(this.state.date_start);\n    let dateEnd = formatDateDot(this.state.date_end);\n    \n    let textFalse = 'Промокод действует c '+dateStart+' до '+dateEnd+' с '+this.state.time_start+' до '+this.state.time_end+dop_text;\n    \n    this.setState({\n      promo_desc_false: textFalse\n    })\n\t}\n  \n  addItemAdd(){\n    let thisItems = this.state.itemsAdd;\n    \n    let check = thisItems.find( (item) => parseInt(item.item_id) == parseInt(this.state.addItem) );\n    \n    if( !check ){\n      let thisItem = this.state.items.find( (item) => parseInt(item.id) == parseInt(this.state.addItem) );\n      \n      thisItems.push({\n        item_id: this.state.addItem,\n        name: thisItem.name,\n        count: this.state.addItemCount,\n        price: this.state.addItemPrice,\n      })\n      \n      let addItemAllPrice = 0;\n      \n      thisItems.map( (item) => {\n        addItemAllPrice += parseInt(item.price)\n      } )\n      \n      this.setState({\n        itemsAdd: thisItems,\n        addItemAllPrice: addItemAllPrice\n      })\n    }\n  }\n  \n  priceItemAdd(){\n    let thisItems = this.state.itemsAddPrice;\n    \n    let check = thisItems.find( (item) => parseInt(item.item_id) == parseInt(this.state.priceItem) );\n    \n    if( !check ){\n      let thisItem = this.state.items.find( (item) => parseInt(item.id) == parseInt(this.state.priceItem) );\n      \n      thisItems.push({\n        item_id: this.state.priceItem,\n        name: thisItem.name,\n        price: this.state.addItemPrice,\n      })\n      \n      this.setState({\n        itemsAddPrice: thisItems\n      })\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false, modalLink: '' }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Результат операции</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            <Typography>{this.state.modalText}</Typography>\n            <br />\n            { this.state.modalLink == '' ? null :\n              <a href={this.state.modalLink} style={{ color: 'red' }}>Скачать</a>\n            }\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={ () => { this.setState({ modalDialog: false }) } }>Хорошо</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={3}>\n              <Typography>Промокод: {this.state.promo_name}</Typography>\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <MyTextInput classes={this.state.classes} value={this.state.count_action} func={ this.changeData.bind(this, 'count_action') } label='Количество активаций' />\n            </Grid>\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.promo_conditions_list} value={this.state.promo_conditions} func={ this.changeData.bind(this, 'promo_conditions') } label='Условие' />\n            </Grid>\n            \n            { parseInt(this.state.promo_conditions) !== 1 ? null :\n              <>\n                <Grid item xs={12} sm={8}>\n                  <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.conditionItems} func={ (event, data) => { this.changeDataData('conditionItems', data) } } multiple={true} label='Товары' />\n                </Grid>\n              </>\n            }\n            \n            { parseInt(this.state.promo_conditions) !== 2 ? null :\n              <>\n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={this.state.price_start} func={ this.changeData.bind(this, 'price_start') } label='Сумма от' />\n                </Grid>\n              \n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={this.state.price_end} func={ this.changeData.bind(this, 'price_end') } label='Сумма до' />\n                </Grid>\n              </>\n            }\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={3}>\n              <MySelect classes={this.state.classes} data={this.state.date_promo_list} value={this.state.date_promo} func={ this.changeData.bind(this, 'date_promo') } label='Когда работает промокод' />\n            </Grid>\n            \n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={6} className=\"MyDaterange\">\n              <MyDaterange startText=\"Дата от\" endText=\"Дата до\" value={this.state.rangeDate} func={ this.changeDateRange.bind(this) } />\n            </Grid>\n           \n            <Grid item xs={12} sm={3}>\n              <MyTimePicker classes={this.state.classes} label=\"Время от\" value={this.state.time_start} func={ this.changeData.bind(this, 'time_start') } />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <MyTimePicker classes={this.state.classes} label=\"Время до\" value={this.state.time_end} func={ this.changeData.bind(this, 'time_end') } />\n            </Grid>\n              \n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            <Grid item xs={12} sm={12}>\n              <MyDatePicker multiple={false} label={'Кроме дат'} value={this.state.testDate} func={ this.changeDataData.bind(this, 'testDate') } />\n            </Grid>\n          </Grid>\n            \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ marginTop: 20 }} spacing={3}>\n            \n            <MyCheckBox classes={this.state.classes} value={this.state.day_1} func={ this.changeDataCheck.bind(this, 'day_1') } label='Понедельник' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_2} func={ this.changeDataCheck.bind(this, 'day_2') } label='Вторник' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_3} func={ this.changeDataCheck.bind(this, 'day_3') } label='Среда' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_4} func={ this.changeDataCheck.bind(this, 'day_4') } label='Четверг' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_5} func={ this.changeDataCheck.bind(this, 'day_5') } label='Пятница' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_6} func={ this.changeDataCheck.bind(this, 'day_6') } label='Суббота' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_7} func={ this.changeDataCheck.bind(this, 'day_7') } label='Воскресенье' />\n           \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.type_order_list} value={this.state.type_order} func={ this.changeData.bind(this, 'type_order') } label='Тип заказа' />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.where_order_list} value={this.state.where_order} func={ this.changeData.bind(this, 'where_order') } label='Где работает' />\n            </Grid>\n            { parseInt(this.state.where_order) !== 1 ? null :\n              <Grid item xs={12} sm={4}>\n                <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city} func={ this.changeData.bind(this, 'city') } label='Город' />\n              </Grid>\n            }\n            { parseInt(this.state.where_order) !== 2 ? null :\n              <Grid item xs={12} sm={4}>\n                <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point} func={ this.changeData.bind(this, 'point') } label='Точка' />\n              </Grid>\n            }\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={12}>\n              <MyTextInput classes={this.state.classes} value={this.state.promo_desc_true} func={ this.changeData.bind(this, 'promo_desc_true') } label='Описание промокода после активации (Промокод дает: )' />\n            </Grid>\n            \n            <Grid item xs={12} sm={12}>\n              <MyTextInput classes={this.state.classes} value={this.state.promo_desc_false} func={ this.changeData.bind(this, 'promo_desc_false') } label='Условие промокода, когда условия не соблюдены' />\n            </Grid>\n            \n          </Grid>\n          \n          \n          \n          <Grid container direction=\"row\" justifyContent=\"end\" style={{ paddingTop: 50 }} spacing={3}>\n            <Button variant=\"contained\" onClick={this.save.bind(this)}>Сохранить</Button>\n          </Grid>\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\n\nclass SiteSale2_ extends React.Component {\n  click = false;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'site_sale_2',\n      module_name: '',\n      is_load: false,\n      modalText: '',\n      \n      modalDialog: false,\n      modalLink: '',\n      \n      city_list: [],\n      city_id: 0,\n      promoName: '',\n      \n      findPromoList: []\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      city_list: data.all_city_list\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n    });\n  }\n  \n  async showPromoList(){\n    let data = {\n      city_id: this.state.city_id,\n      promo_name: this.state.promoName\n    };\n    \n    let res = await this.getData('search_promo', data);\n    \n    console.log( res )\n    \n    this.setState({\n      findPromoList: res\n    })\n  }\n  \n  async delPromo(promo_id){\n    let check = confirm(\"Удалить промокод ?\");\n    \n    if( check ){\n      let data = {\n        promo_id: promo_id\n      };\n      \n      let res = await this.getData('remove_promo', data);\n      \n      setTimeout( () => {\n        this.showPromoList();\n      }, 300 )\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false, modalLink: '' }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Результат операции</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            <Typography>{this.state.modalText}</Typography>\n            <br />\n            { this.state.modalLink == '' ? null :\n              <a href={this.state.modalLink} style={{ color: 'red' }}>Скачать</a>\n            }\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={ () => { this.setState({ modalDialog: false }) } }>Хорошо</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          \n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12}>\n              \n              <Link to={\"/site_sale_2/new\"} style={{ zIndex: 10 }}>\n                <Button variant=\"contained\">Новый промокод</Button>\n              </Link>\n              \n              <Link to={\"/site_sale_2/stat\"} style={{ zIndex: 10, marginLeft: 20 }}>\n                <Button variant=\"contained\">Статистика</Button>\n              </Link>\n\n              <Link to={\"/site_sale_2/stat_list\"} style={{ zIndex: 10, marginLeft: 20 }}>\n                <Button variant=\"contained\">Выписанные промокоды</Button>\n              </Link>\n              \n            </Grid>\n            \n            \n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.city_list} value={this.state.city_id} func={ (event) => { this.setState({city_id: event.target.value}) } } label='Город' />\n            </Grid>\n            \n            <Grid item xs={12} sm={4}>\n              <MyTextInput classes={this.state.classes} value={this.state.promoName} func={ (event) => { this.setState({promoName: event.target.value}) } } label='Промокод' />\n            </Grid>\n            \n            <Grid item xs={12} sm={4}>\n              <Button variant=\"contained\" onClick={this.showPromoList.bind(this)}>Найти</Button>\n            </Grid>\n            \n          </Grid>  \n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            <Grid item xs={12}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Промокод</TableCell>\n                    <TableCell>Город</TableCell>\n                    <TableCell>Было кол-во</TableCell>\n                    <TableCell>Ост. кол-во</TableCell>\n                    <TableCell>Дата окончания</TableCell>\n                    <TableCell>Описание</TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  { this.state.findPromoList.map( (item, key) =>\n                    <TableRow key={key}>\n                      <TableCell>\n                        <Link to={\"/site_sale_2/edit/\"+item.id} style={{ zIndex: 10 }}>\n                          {item.name}    \n                        </Link>\n                      </TableCell>\n                      <TableCell>{ parseInt(item.city_id) == 0 ? 'Все города' : item.city_name }</TableCell>\n                      <TableCell>{item.def_count}</TableCell>\n                      <TableCell>{item.count}</TableCell>\n                      <TableCell>{item.date2}</TableCell>\n                      <TableCell>{item.coment}</TableCell>\n                      <TableCell> <CloseIcon style={{ cursor: 'pointer' }} onClick={this.delPromo.bind(this, item.id)} /> </TableCell>\n                    </TableRow>\n                  ) }\n                  \n                </TableBody>\n              </Table>\n            </Grid>  \n          </Grid>\n          \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nclass SiteSale2_Stat_ extends React.Component {\n  click = false;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'site_sale_2',\n      module_name: '',\n      is_load: false,\n      \n      spam_list: [],\n      spam_id: 0,\n      findPromoList: [],\n      \n      spam_list_data: [],\n      spam_list_data_stat: {\n        true: 0,\n        all: 0,\n        percent: 0\n      },\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_spam_list');\n    \n    console.log( data )\n    \n    this.setState({\n      module_name: data.module_info.name,\n      spam_list: data.spam_list\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n    });\n  }\n  \n  async show(){\n    let data = {\n      spam_id: this.state.spam_id\n    }\n    \n    let res = await this.getData('get_spam_data', data);\n    \n    console.log( res )\n    \n    this.setState({\n      spam_list_data: res.spam_list,\n      spam_list_data_stat: res.stat\n    })\n  }\n  \n  changeSpam(event){\n    this.setState({spam_id: event.target.value})\n    \n    setTimeout( () => {\n      this.show()\n    }, 300 )\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          \n          \n          <Grid container direction=\"row\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.spam_list} value={this.state.spam_id} func={ this.changeSpam.bind(this) } label='Рассылка' />\n            </Grid>\n            \n            <Grid item xs={12} sm={4}>\n              <Button variant=\"contained\" onClick={this.show.bind(this)}>Обновить</Button>\n            </Grid>\n            \n          </Grid>  \n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={6}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Всего</TableCell>\n                    <TableCell>Использовали</TableCell>\n                    <TableCell>%</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  <TableRow>\n                    <TableCell>{this.state.spam_list_data_stat.all}</TableCell>\n                    <TableCell>{this.state.spam_list_data_stat.true}</TableCell>\n                    <TableCell>{this.state.spam_list_data_stat.percent}</TableCell>\n                  </TableRow>\n                  \n                </TableBody>\n              </Table>\n            </Grid>  \n            \n            <Grid item xs={6}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>#</TableCell>\n                    <TableCell>Номер</TableCell>\n                    <TableCell>Ост активаций</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  { this.state.spam_list_data.map( (item, key) =>\n                    <TableRow key={key}>\n                      <TableCell>{key+1}</TableCell>\n                      <TableCell>{item.number}</TableCell>\n                      <TableCell>{item.count}</TableCell>\n                      \n                    </TableRow>\n                  ) }\n                  \n                </TableBody>\n              </Table>\n            </Grid>  \n          </Grid>\n          \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nclass SiteSale2_StatList_ extends React.Component {\n  click = false;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'site_sale_2',\n      module_name: '',\n      is_load: false,\n      \n      date_start: formatDate(new Date()),\n      date_end: formatDate(new Date()),\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\n\n      promo_list: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_spam_list');\n    \n    console.log( data )\n    \n    this.setState({\n      module_name: data.module_info.name,\n      spam_list: data.spam_list\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n    });\n  }\n  \n  async show(){\n    let data = {\n      spam_id: this.state.spam_id\n    }\n    \n    let res = await this.getData('get_spam_data', data);\n    \n    console.log( res )\n    \n    this.setState({\n      spam_list_data: res.spam_list,\n      spam_list_data_stat: res.stat\n    })\n  }\n\n  async getUsers(){\n    let data = {\n      dateStart: this.state.date_start,\n      dateEnd: this.state.date_end,\n    }\n    \n    let res = await this.getData('get_promo_users', data);\n    \n    this.setState({\n      promo_list: res.promo_list\n    })\n  }\n  \n  changeDateRange(data){\n    let dateStart = data[0] ? formatDate(data[0]) : '';\n    let dateEnd = data[1] ? formatDate(data[1]) : '';\n    \n    this.setState({\n      rangeDate: [dateStart, dateEnd],\n      date_start: dateStart,\n      date_end: dateEnd,\n    })\n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          \n          \n          <Grid container direction=\"row\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={6} className=\"MyDaterange\">\n              <MyDaterange startText=\"Дата от\" endText=\"Дата до\" value={this.state.rangeDate} func={ this.changeDateRange.bind(this) } />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <Button variant=\"contained\" onClick={this.getUsers.bind(this)}>Обновить</Button>\n            </Grid>\n\n          </Grid>  \n          \n          <Grid item xs={12} sm={12} style={{ marginTop: 20 }}>\n            \n            { this.state.promo_list.map( (item, key) => \n              <Accordion key={key} style={{ width: '100%' }}>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                >\n                  <Typography>{item.name}</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Table size={'small'} style={{ marginTop: 15 }}>\n                    <TableBody>\n                      { item.promo_list.map( (promo, k) =>\n                        <TableRow key={k} style={{ backgroundColor: parseInt(promo.is_delete) == 1 ? '#c03' : 'white', color: parseInt(promo.is_delete) == 1 ? 'white' : 'black' }}>\n                          <TableCell style={{ color: 'inherit' }}>{k+1}</TableCell>\n                          <TableCell style={{ color: 'inherit', backgroundColor: parseInt(promo.count) == 0 ? 'green' : '#c03' }}>{promo.name}</TableCell>\n                          <TableCell style={{ color: 'inherit' }}>{promo.coment}</TableCell>\n                          <TableCell style={{ color: 'inherit' }}>{ parseInt(promo.count) == 0 ? <CheckIcon /> : <CloseIcon /> }</TableCell>\n                        </TableRow>\n                      ) }\n                    </TableBody>\n                    \n                  </Table>\n                </AccordionDetails>\n              </Accordion>\n            ) }\n            \n          </Grid>\n        \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function SiteSale2_New () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <SiteSale2_new_ classes={classes} history={history} />\n  );\n}\n\nexport function SiteSale2_Edit () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  let { promoId } = useParams();\n  \n  return (\n    <SiteSale2_edit_ promoId={promoId} classes={classes} history={history} />\n  );\n}\n\nexport function SiteSale2 () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <SiteSale2_ classes={classes} history={history} />\n  );\n}\n\nexport function SiteSale2_Stat () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <SiteSale2_Stat_ classes={classes} history={history} />\n  );\n}\n\nexport function SiteSale2_StatList () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <SiteSale2_StatList_ classes={classes} history={history} />\n  );\n}\n\n","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MyAutocomplite } from '../../stores/elements';\n\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\n\nconst queryString = require('query-string');\n\nconst dynamicCellStyle = params => {\n  if( params.colDef.headerName == 'Цена' ){\n    return { borderRight: '1px solid #bababa' };\n  }\n  return null;\n};\n\nclass Tender_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'tender',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      \n      testTable: [],\n      vendors: [],\n      myVendors: [],\n      showVendors: [],\n      \n      params_api: null,\n      params_columnApi: null\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    let table = [];\n    \n    data.items.map( (main_cat, k1) => {\n      \n      table.push({\n        section: 'big-title',\n        item: main_cat.name\n      })\n      \n      main_cat.cats.map( (cat, k2) => {\n        table.push({\n          section: 'big-title',\n          item: cat.name\n        })\n        \n        cat.items.map( (item, k3) => {\n          let tableItem = {};\n          \n          data['vendors'].map( (it, k4) => {\n            \n            let item_price = data.vendor_price.find( (item_price) => parseInt(item_price.vendor_id) == parseInt(it['id']) && parseInt(item_price.item_id) == parseInt(item['id']) );\n            \n            \n            if( item_price ){\n              tableItem[ 'vend_price_'+it['id'] ] = item_price['price'];  \n              tableItem[ 'vend_city_'+it['id'] ] = 'тлт';\n            }else{\n              tableItem[ 'vend_price_'+it['id'] ] = '';  \n              tableItem[ 'vend_city_'+it['id'] ] = '';\n            }\n            \n          } )\n          tableItem.item = item.name;\n          tableItem.section = 'last';\n          \n          let item_ras = data.ras.find( (item_ras) => parseInt(item_ras.item_id) == parseInt(item['id']) );\n          \n          if( item_ras ){\n            tableItem.ras = item_ras.count_pf;\n          }else{\n            tableItem.ras = '';\n          }\n          \n          table.push(tableItem)\n        } )\n      } )\n    } )\n    \n    \n    \n    \n    \n    \n    this.setState({\n      module_name: data.module_info.name,\n      testTable: table,\n      vendors: data['vendors'],\n      showVendors: data['vendors']\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n  \n  onCellClicked(event){\n    console.log( event.data );\n    console.log( event.colDef.field );\n  }\n  \n  onGridReady(params){\n    this.setState({\n      params_api: params.api,\n      params_columnApi: params.columnApi\n    });\n  }\n  \n  async show(){\n    let data = {\n      vendors: this.state.myVendors\n    };\n    \n    let res = await this.getData('get_data', data);\n    \n    let table = [];\n    \n    res.items.map( (main_cat, k1) => {\n      \n      table.push({\n        section: 'big-title',\n        item: main_cat.name\n      })\n      \n      main_cat.cats.map( (cat, k2) => {\n        table.push({\n          section: 'big-title',\n          item: cat.name\n        })\n        \n        cat.items.map( (item, k3) => {\n          let tableItem = {};\n          \n          res['vendors'].map( (it, k4) => {\n            \n            let item_price = res.vendor_price.find( (item_price) => parseInt(item_price.vendor_id) == parseInt(it['id']) && parseInt(item_price.item_id) == parseInt(item['id']) )\n            \n            if( item_price ){\n              tableItem[ 'vend_price_'+it['id'] ] = item_price['price'];  \n              tableItem[ 'vend_city_'+it['id'] ] = 'тлт';\n            }else{\n              tableItem[ 'vend_price_'+it['id'] ] = '';  \n              tableItem[ 'vend_city_'+it['id'] ] = '';\n            }\n            \n          } )\n          tableItem.item = item.name;\n          tableItem.section = 'last';\n          \n          let item_ras = res.ras.find( (item_ras) => parseInt(item_ras.item_id) == parseInt(item['id']) );\n          \n          if( item_ras ){\n            tableItem.ras = item_ras.count_pf;\n          }else{\n            tableItem.ras = '';\n          }\n          \n          table.push(tableItem)\n        } )\n      } )\n    } )\n    \n    \n    \n    \n    \n    \n    this.setState({\n      testTable: table,\n      showVendors: res['vendors']\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Новая категория</DialogTitle>\n          <DialogContent>\n            \n            \n            \n          </DialogContent>\n          <DialogActions>\n            <Button  color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            <MyAutocomplite data={this.state.vendors} multiple={true} value={this.state.myVendors} func={ (event, val) => { this.setState({ myVendors: val }) } } label='Поставщики' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.show.bind(this)}>Показать</Button>\n          </Grid>\n          \n          <Grid item xs={12}>\n            <div className=\"ag-theme-alpine\" style={{height: 600, width: '100%'}}>\n              <AgGridReact\n                  onGridReady={this.onGridReady.bind(this)}\n                  onCellClicked={this.onCellClicked}\n                  rowData={ this.state.testTable }\n                  \n                  >\n                  <AgGridColumn field=\"ras\" width={120} pinned=\"left\"></AgGridColumn>\n                  <AgGridColumn field=\"item\" width={300} pinned=\"left\" cellClassRules={{'cell-span': \"data.section==='big-title'\"}}></AgGridColumn>\n                  <AgGridColumn hide={true}></AgGridColumn>\n                    \n                  { this.state.showVendors.map( (item, key) => \n                    <AgGridColumn key={key} headerName={item.name} resizable={true} width={180}>\n                      <AgGridColumn field={'vend_city_'+item.id} headerName={'Город'} resizable={true} width={90}></AgGridColumn>\n                      <AgGridColumn field={'vend_price_'+item.id} headerName={'Цена'} resizable={true} width={90} cellStyle={dynamicCellStyle}></AgGridColumn>\n                    </AgGridColumn>\n                  ) }\n                  \n                  \n              </AgGridReact>\n            </div>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n          \n          </Grid>    \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Tender () {\n  let history = useHistory();\n  \n  return (\n    <Tender_ history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox, MyTextInput } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nclass VendorItemPrice_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'vendor_item_price',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      \n      vendors: [],\n      vendor: 0,\n      \n      items: [],\n      \n      cities: [],\n      city: -1,\n      allCity: false,\n      isPrioriti: false\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      cities: data.cities\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      console.log( err )\n    });\n  }\n   \n  async changeCity(event){\n    let data = {\n      city: event.target.value\n    }\n    \n    let res = await this.getData('get_vendors', data);\n    \n    this.setState({\n      vendors: res,\n      city: event.target.value,\n      vendor: 0,\n      items: []\n    })\n  }\n  \n  async changeVendor(event){\n    let data = {\n      city: this.state.city,\n      vendor_id: event.target.value,\n    }\n    \n    let res = await this.getData('get_vendor_items', data);\n    \n    this.setState({\n      items: res,\n      vendor: event.target.value,\n    })\n  }\n  \n  update(item_id, data, event){\n    let this_items = this.state.items;\n    \n    \n    \n    this_items.map( (item, key) => {\n      if( parseInt(item.item_id) == parseInt(item_id) ){\n        this_items[key][data] = event.target.value;\n        \n        this_items[key]['price'] = (parseFloat(this_items[key]['full_price']) / parseFloat(this_items[key]['rec_pq'])).toFixed(2);\n      }\n    } )\n    \n    this.setState({\n      items: this_items\n    })\n  }\n  \n  async save(){\n    let data = {\n      vendor_id: this.state.vendor,\n      items: this.state.items,\n      city_id: this.state.city,\n      all_city: this.state.allCity === true ? 1 : 0,\n      is_prioriti: this.state.isPrioriti === true ? 1 : 0,\n    }\n    \n    if( data.all_city == 1 ){\n      if( confirm(\"Точно сохранить на все города поставщика ?\") ){\n        let res = await this.getData('save_price', data);\n      }\n    }else{\n      let res = await this.getData('save_price', data);\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              \n              \n              \n              \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city} func={ this.changeCity.bind(this) } label='Город' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.vendors} value={this.state.vendor} func={ this.changeVendor.bind(this) } label='Поставщик' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MyCheckBox classes={this.state.classes} value={this.state.allCity} func={ (event) => { this.setState({ allCity: event.target.checked }) } } label='На все города поставщика' />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <MyCheckBox classes={this.state.classes} value={this.state.isPrioriti} func={ (event) => { this.setState({ isPrioriti: event.target.checked }) } } label='Приоритетный постащик' />\n          </Grid>\n          \n          <Grid item xs={12}>\n            <Button onClick={this.save.bind(this)} variant=\"contained\">Сохранить</Button>\n          </Grid>\n          \n          \n          <Grid item xs={12}>\n              \n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Позиция</TableCell>\n                    <TableCell></TableCell>\n                    <TableCell>Комментарий</TableCell>\n                    <TableCell>Цена за упаковку</TableCell>\n                    <TableCell>Объем упаковки</TableCell>\n                    <TableCell>Цена за 1 ед.</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  { this.state.items.map( (item, key) => \n                    <TableRow key={key}>\n                      <TableCell>{item.name}</TableCell>\n                      <TableCell>{item.name_for_vendor}</TableCell>\n                      <TableCell>\n                        <MyTextInput label=\"\" value={item.comment} func={ this.update.bind(this, item.item_id, 'comment') } />\n                      </TableCell>\n                      <TableCell>\n                        <MyTextInput label=\"\" value={item.full_price} func={ this.update.bind(this, item.item_id, 'full_price') } />\n                      </TableCell>\n                      <TableCell>\n                        <MySelect classes={this.state.classes} data={item.pqs} value={item.rec_pq} func={ this.update.bind(this, item.item_id, 'rec_pq') } label='' />\n                      </TableCell>\n                      <TableCell>{item.price} / {item.ei_name}</TableCell>\n                    </TableRow>\n                  ) }\n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n          </Grid>\n            \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function VendorItemPrice () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <VendorItemPrice_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport DirectionsCarIcon from '@mui/icons-material/DirectionsCar';\n\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox, MyAutocomplite, MyTextInput } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nclass VendorModule_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'vendor_module',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      modalItems: false,\n      modalVendor: false,\n      modalVendorNew: false,\n      \n      vendors: [],\n      \n      allItems: [],\n      vendor_items: [],\n      openVendor: null,\n      customAdd: 0,\n      \n      vendorCities: [],\n      allCities: [],\n      \n      nds: [\n        { id: -1, name: 'Без НДС' },\n        { id: 10, name: '10% НДС' },\n        { id: 20, name: '20% НДС' },\n      ],\n      nds_: [\n        -1, 10, 20\n      ],\n      \n      cities: [],\n      city: -1\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      vendors: data.vendors,\n      cities: data.cities\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      console.log( err )\n    });\n  }\n   \n  changeNDS(item_id, event){\n    this.state.vendor_items.map( (item, key) => {\n      if( parseInt(item.item_id) == parseInt(item_id) ){\n        item.nds = event.target.value;\n      }\n    } )\n    \n    this.setState({\n      vendor_items: this.state.vendor_items\n    })\n  }\n  \n  async openModalItems(vendor){\n    let data = {\n      vendor_id: vendor.id\n    }\n    \n    let res = await this.getData('get_vendor_items', data);\n    \n    this.setState({\n      modalItems: true,\n      allItems: res.all_items,\n      vendor_items: res.vendor_items,\n      openVendor: vendor\n    })\n  }\n  \n  async openModalVendor(vendor){\n    let data = {\n      vendor_id: vendor.id\n    }\n    \n    let res = await this.getData('get_vendor_info', data);\n    \n    this.setState({\n      modalVendor: true,\n      openVendor: res.vendor,\n      vendorCities: res.vendor_cities,\n      allCities: res.all_cities,\n    })\n  }\n  \n  async openModalVendorNew(){\n    let data = {\n      vendor_id: 0\n    }\n    \n    let res = await this.getData('get_vendor_info', data);\n    \n    this.setState({\n      modalVendorNew: true,\n      openVendor: {\n        addr: \"\",\n        bill_ex: \"0\",\n        email: \"\",\n        email_2: \"\",\n        inn: \"\",\n        min_price: \"\",\n        name: \"\",\n        need_img_bill_ex: \"0\",\n        ogrn: \"\",\n        phone: \"\",\n        text: \"\",\n      },\n      vendorCities: [],\n      allCities: res.all_cities,\n    })\n  }\n  \n  async saveVendorItems(){\n    let data = {\n      vendor_id: this.state.openVendor.id,\n      items: this.state.vendor_items\n    }\n    \n    let check = data.items.filter( (item, key) => !this.state.nds_.includes( parseInt(item.nds) ) );\n    \n    if( check.length > 0 ){\n      alert('У одной или нескольких позиций не заполнен НДС')\n      \n      return ;\n    }\n    \n    let res = await this.getData('save_vendor_items', data);\n    \n    this.setState({\n      modalItems: false,\n      vendor_items: [],\n      openVendor: null\n    })\n  }\n  \n  async saveVendor(){\n    let data = {\n      vendor: this.state.openVendor,\n      vendor_cities: this.state.vendorCities,\n      city: this.state.city\n    }\n    \n    let res = await this.getData('update_vendor', data);\n    \n    this.setState({\n      modalVendor: false,\n      openVendor: null,\n      vendorCities: [],\n      allCities: [],\n      vendors: res.vendors\n    })\n  }\n  \n  async addVendor(){\n    let data = {\n      vendor: this.state.openVendor,\n      vendor_cities: this.state.vendorCities,\n      city: this.state.city\n    }\n    \n    let res = await this.getData('new_vendor', data);\n    \n    if( res.st === false ){\n      alert(res.text);\n      return ;\n    }\n    \n    this.setState({\n      modalVendorNew: false,\n      openVendor: null,\n      vendorCities: [],\n      allCities: [],\n      vendors: res.vendors\n    })\n  }\n  \n  delItem(item_id){\n    let items = this.state.vendor_items;\n    \n    items = items.filter( (item) => parseInt(item.item_id) != parseInt(item_id) );\n    \n    this.setState({\n      vendor_items: items\n    })\n  }\n  \n  addItem(item){\n    let this_items = this.state.vendor_items;\n    let check = this_items.find( (it) => parseInt(it.item_id) == parseInt(item.id) );\n    \n    if( !check ){\n      this_items.push({\n        item_id: item.id,\n        item_name: item.name,\n        nds: -2\n      })\n    }\n    \n    this.setState({\n      vendor_items: this_items\n    })\n  }\n  \n  addItemCustom(){\n    let item = this.state.allItems.find( (item1) => parseInt(item1.id) == parseInt(this.state.customAdd) );\n    \n    this.addItem(item);\n  }\n  \n  testChange(data, event){\n    let vendor = this.state.openVendor;\n    \n    if( data == 'bill_ex' || data == 'need_img_bill_ex' ){\n      vendor[data] = event.target.checked === true ? 1 : 0;\n    }else{\n      vendor[data] = event.target.value;\n    }\n    \n    this.setState({ \n      openVendor: vendor\n    })\n  }\n  \n  async changeCity(event){\n    let data = {\n      city: event.target.value\n    }\n    \n    let res = await this.getData('get_vendors', data);\n    \n    this.setState({\n      vendors: res,\n      city: event.target.value\n    })\n  }\n  \n  changeSort(data, event){\n    this.state.vendor_items.map( (item, key) => {\n      if( parseInt(item.item_id) == parseInt(data) ){\n        this.state.vendor_items[key]['sort'] = event.target.value;\n      }\n    })\n    \n    this.setState({\n      vendor_items: this.state.vendor_items\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              \n              \n              \n              \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Dialog\n          open={this.state.modalItems}\n          fullWidth={true}\n          maxWidth={'md'}\n          onClose={ () => { this.setState({ modalItems: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Товары поставщика {this.state.openVendor ? this.state.openVendor.name : ''}</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <Grid container style={{ paddingTop: 20 }}>\n              \n              <Grid item xs={12} sm={5} style={{ paddingRight: 10 }}>\n                \n                <Table>\n                  <TableBody>\n                    <TableRow style={{ height: 75 }}>\n                      <TableCell>\n                        <MySelect classes={this.state.classes} data={this.state.allItems} value={this.state.customAdd} func={ (event) => { this.setState({ customAdd: event.target.value }) } } />\n                      </TableCell>\n                      <TableCell><AddIcon onClick={this.addItemCustom.bind(this)} style={{ cursor: 'pointer' }} /></TableCell>\n                    </TableRow>\n                    \n                    { this.state.allItems.map( (item, key) => \n                      <TableRow key={key} style={{ height: 75 }}>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell><AddIcon onClick={this.addItem.bind(this, item)} style={{ cursor: 'pointer' }} /></TableCell>\n                      </TableRow>\n                    ) }\n                  </TableBody>\n                </Table>\n                \n              </Grid>\n              <Grid item xs={12} sm={7}>\n                \n                <Table>\n                  <TableBody>\n                    { this.state.vendor_items.map( (item, key) => \n                      <TableRow key={key} style={{ height: 75 }}>\n                        <TableCell>{item.item_name}</TableCell>\n                        <TableCell>\n                          <MyTextInput label=\"\" value={ item.sort } func={ this.changeSort.bind(this, item.item_id) } />\n                        </TableCell>\n                        <TableCell>\n                          <MySelect classes={this.state.classes} data={this.state.nds} value={item.nds} func={ this.changeNDS.bind(this, item.item_id) } />\n                        </TableCell>\n                        <TableCell><CloseIcon onClick={ this.delItem.bind(this, item.item_id) } style={{ cursor: 'pointer' }} /></TableCell>\n                      </TableRow>\n                    ) }\n                  </TableBody>\n                </Table>\n                \n              </Grid>\n              \n            </Grid>\n              \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.saveVendorItems.bind(this)} color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Dialog\n          open={this.state.modalVendor}\n          fullWidth={true}\n          maxWidth={'md'}\n          onClose={ () => { this.setState({ modalVendor: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Поставщик {this.state.openVendor ? this.state.openVendor.name : ''}</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <Grid container spacing={3}>\n              \n              {this.state.openVendor ?\n                <>\n                  <Grid item xs={12} sm={5}>\n                    <MyTextInput label=\"Наименование\" value={ this.state.openVendor.name } func={ this.testChange.bind(this, 'name') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Описание\" value={ this.state.openVendor.text } func={ this.testChange.bind(this, 'text') } />\n                  </Grid>\n                  <Grid item xs={12} sm={3}>\n                    <MyTextInput label=\"Мин. сумма заявки\" value={ this.state.openVendor.min_price } func={ this.testChange.bind(this, 'min_price') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyTextInput label=\"ИНН\" value={ this.state.openVendor.inn } func={ this.testChange.bind(this, 'inn') } disabled={true} />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <MyTextInput label=\"ОГРН\" value={ this.state.openVendor.ogrn } func={ this.testChange.bind(this, 'ogrn') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={8}>\n                    <MyTextInput label=\"Адрес компании\" value={ this.state.openVendor.addr } func={ this.testChange.bind(this, 'addr') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Контактное лицо\" value={ this.state.openVendor.user } func={ this.testChange.bind(this, 'user') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Телефон\" value={ this.state.openVendor.phone } func={ this.testChange.bind(this, 'phone') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Почта\" value={ this.state.openVendor.email } func={ this.testChange.bind(this, 'email') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Доп почта\" value={ this.state.openVendor.email_2 } func={ this.testChange.bind(this, 'email_2') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyCheckBox label=\"Работа по счетам\" value={ parseInt(this.state.openVendor.bill_ex) == 1 ? true : false } func={ this.testChange.bind(this, 'bill_ex') } />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <MyCheckBox label=\"Необходима картинка\" value={ parseInt(this.state.openVendor.need_img_bill_ex) == 1 ? true : false } func={ this.testChange.bind(this, 'need_img_bill_ex') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyAutocomplite label='Города' data={this.state.allCities} value={this.state.vendorCities} func={ (event, value) => { this.setState({ vendorCities: value }) } } />\n                  </Grid>\n                </>\n                  :\n                null\n              }\n            </Grid>\n              \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.saveVendor.bind(this)} color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Dialog\n          open={this.state.modalVendorNew}\n          fullWidth={true}\n          maxWidth={'md'}\n          onClose={ () => { this.setState({ modalVendorNew: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Новый поставщик</DialogTitle>\n          <DialogContent>\n            \n            <Grid container spacing={3}>\n              \n              {this.state.openVendor ?\n                <>\n                  <Grid item xs={12} sm={5}>\n                    <MyTextInput label=\"Наименование\" value={ this.state.openVendor.name } func={ this.testChange.bind(this, 'name') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Описание\" value={ this.state.openVendor.text } func={ this.testChange.bind(this, 'text') } />\n                  </Grid>\n                  <Grid item xs={12} sm={3}>\n                    <MyTextInput label=\"Мин. сумма заявки\" value={ this.state.openVendor.min_price } func={ this.testChange.bind(this, 'min_price') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyTextInput label=\"ИНН\" value={ this.state.openVendor.inn } func={ this.testChange.bind(this, 'inn') } />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <MyTextInput label=\"ОГРН\" value={ this.state.openVendor.ogrn } func={ this.testChange.bind(this, 'ogrn') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={8}>\n                    <MyTextInput label=\"Адрес компании\" value={ this.state.openVendor.addr } func={ this.testChange.bind(this, 'addr') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Контактное лицо\" value={ this.state.openVendor.user } func={ this.testChange.bind(this, 'user') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Телефон\" value={ this.state.openVendor.phone } func={ this.testChange.bind(this, 'phone') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Почта\" value={ this.state.openVendor.email } func={ this.testChange.bind(this, 'email') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Доп почта\" value={ this.state.openVendor.email_2 } func={ this.testChange.bind(this, 'email_2') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyCheckBox label=\"Работа по счетам\" value={ parseInt(this.state.openVendor.bill_ex) == 1 ? true : false } func={ this.testChange.bind(this, 'bill_ex') } />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <MyCheckBox label=\"Необходима картинка\" value={ parseInt(this.state.openVendor.need_img_bill_ex) == 1 ? true : false } func={ this.testChange.bind(this, 'need_img_bill_ex') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyAutocomplite label='Города' data={this.state.allCities} value={this.state.vendorCities} func={ (event, value) => { this.setState({ vendorCities: value }) } } />\n                  </Grid>\n                </>\n                  :\n                null\n              }\n            </Grid>\n              \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.addVendor.bind(this)} color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city} func={ this.changeCity.bind(this) } label='Город' />\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <Button onClick={this.openModalVendorNew.bind(this)} variant=\"contained\">Добавить поставщика</Button>\n          </Grid>\n        \n          <Grid item xs={12}>\n          \n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell component=\"th\">Название</TableCell>\n                    <TableCell component=\"th\">Назначенные товары</TableCell>\n                    <TableCell component=\"th\"><VisibilityIcon /></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  { this.state.vendors.map( (item, key) => \n                    <TableRow key={key}>\n                      <TableCell><Typography onClick={ this.openModalVendor.bind(this, item) } style={{ cursor: 'pointer', width: 'max-content' }}>{item.name}</Typography></TableCell>\n                      <TableCell><DirectionsCarIcon onClick={ this.openModalItems.bind(this, item) } style={{ cursor: 'pointer' }} /></TableCell>\n                      <TableCell>{ parseInt(item.is_show) == 1 ? <VisibilityIcon /> : <VisibilityOffIcon /> }</TableCell>\n                    </TableRow>\n                  ) }\n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n          </Grid>\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function VendorModule () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <VendorModule_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableFooter from '@mui/material/TableFooter';\nimport Paper from '@mui/material/Paper';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddIcon from '@mui/icons-material/Add';\n\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\n\nimport PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { blue } from '@mui/material/colors';\n\nimport HomeWorkIcon from '@mui/icons-material/HomeWork';\nimport SyncAltIcon from '@mui/icons-material/SyncAlt';\n\nimport LooksOneIcon from '@mui/icons-material/LooksOne';\nimport LooksTwoIcon from '@mui/icons-material/LooksTwo';\nimport Looks3Icon from '@mui/icons-material/Looks3';\n\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport CheckIcon from '@mui/icons-material/Check';\n\nimport { MySelect, MyCheckBox, MyTimePicker } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  timePicker: {\n    width: '100%'\n  }\n});\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <List sx={{ pt: 0 }}>\n        \n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AccessTimeIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Сменить часы на месяц\" />\n        </ListItem>\n        \n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <SyncAltIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Сменить смену\" />\n        </ListItem>\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <HomeWorkIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Сменить точку\" />\n        </ListItem>\n        \n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>{children}</Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass HeaderItem extends React.Component {\n  render(){\n    return (\n      <>\n        <TableRow>\n          <TableCell style={{ minWidth: 140, minHeight: 38 }}>Ур. кафе: {this.props.lv_cafe}</TableCell>\n          <TableCell style={{ minWidth: 165, minHeight: 38 }}>Число месяца</TableCell>\n\n          { this.props.kind == 'manager' ? null :\n            <TableCell></TableCell>\n          }\n          \n          {this.props.days.map( (item, key) => \n            <TableCell className=\"min_block\" style={{ backgroundColor: item.day == 'Пт' || item.day == 'Сб' || item.day == 'Вс' ? '#ffe9bd' : '#fff' }} key={key}>{item.date}</TableCell>\n          )}\n          \n          { this.props.kind == 'manager' ? null :\n            <>\n              <TableCell></TableCell>\n              \n              { this.props.dataKey > 0 ? \n                <>\n                  <TableCell style={{ textAlign: 'center' }}></TableCell>\n                  <TableCell style={{ textAlign: 'center' }}></TableCell>\n                </>\n                  :\n                <>\n                  <TableCell style={{ textAlign: 'center', cursor: 'pointer' }} onClick={this.props.changeDopBonus}>{ !this.props.bonus_other ? '+ / -' : parseInt(this.props.bonus_other) == 1 ? <AddIcon style={{ fontSize: 30, color: 'green' }} /> : <CloseIcon style={{ fontSize: 30, color: 'red' }} /> }</TableCell>\n                  <TableCell style={{ textAlign: 'center', cursor: 'pointer' }} onClick={this.props.changeLVDir}>Ур. дира: {this.props.lv_dir}</TableCell>\n                </>\n              }\n                  \n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n            </>\n          }\n\n        </TableRow>\n        <TableRow>\n          <TableCell style={{ minWidth: 140, minHeight: 38 }}>Сотрудник</TableCell>\n          <TableCell style={{ minWidth: 165, minHeight: 38 }}>Должность</TableCell>\n          \n          { this.props.kind == 'manager' ? null :\n            <TableCell></TableCell>\n          }\n          \n          {this.props.days.map( (item, key) => \n            <TableCell className=\"min_block\" style={{ backgroundColor: item.day == 'Пт' || item.day == 'Сб' || item.day == 'Вс' ? '#ffe9bd' : '#fff' }} key={key}>{item.day}</TableCell>\n          )}\n          \n          { this.props.kind == 'manager' ? null :\n            <>\n              <TableCell style={{ textAlign: 'center' }}>За 1ч</TableCell>\n              <TableCell style={{ textAlign: 'center' }}>Командный бонус</TableCell>\n              <TableCell style={{ textAlign: 'center' }}>За часы</TableCell>\n              <TableCell style={{ textAlign: 'center' }}>Ошибки</TableCell>\n              <TableCell style={{ textAlign: 'center' }}>Бонус</TableCell>\n              { this.props.show_zp == 1 || this.props.show_zp == 0 ?\n                <TableCell style={{ textAlign: 'center' }}>Всего</TableCell>\n                  :\n                null\n              }\n              <TableCell style={{ textAlign: 'center' }}>Выдано</TableCell>\n            </>\n          }\n        </TableRow>\n        \n        <TableRow style={{ backgroundColor: '#e5e5e5' }}>\n          <TableCell style={{ textAlign: 'center' }} colSpan={ this.props.days.length + 3 + 7 }>{this.props.item.data}</TableCell>\n        </TableRow>\n      </>\n    )\n  }\n}\n\nclass WorkSchedule_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'work_schedule',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      mounths: [],\n      point: '0',\n      mounth: '0',\n      \n      one: null,\n      two: null,\n      test_one: [],\n      test_two: [],\n      \n      isOpenModalH: false,\n      \n      userInfo: null,\n      \n      hList: [],\n      mList: [],\n      \n      newTimeStart: '10:00',\n      newTimeEnd: '22:00',\n      \n      openNewTimeAdd: false,\n      \n      otherAppList: [],\n      otherApp: '',\n      \n      testVal: '',\n      testOpen: false,\n      \n      mainMenu: false,\n      mainMenuH: false,\n      mainMenuSmena: false,\n      show_bonus: false,\n      mainMenuPrice: false,\n      mainMenuLVDIR: false,\n      mainMenuDopBonus: false,\n\n      show_zp_one: 0,\n      show_zp_two: 0,\n      kind: '',\n\n      myOtherSmens: [],\n      \n      chooseUser: null,\n\n      tabTable: 1,\n\n      lv_cafe: 0,\n      lv_dir: 0,\n      arr_dir_lv: []\n    };\n  }\n  \n  async componentDidMount(){\n    let data = {\n      \n    };\n    \n    let res = await this.getData('get_all', data);\n    \n    let hList = [];\n    let mList = [];\n    \n    for(let h = 0; h <= 23; h ++){\n      hList.push({\n        id: h,\n        name: h\n      })\n    }\n    \n    for(let m = 0; m <= 50; m += 10){\n      mList.push({\n        id: m,\n        name: m\n      })\n    }\n    \n    this.setState({\n      points: res.point_list,\n      point: res.point_list[0].id,\n      \n      mounths: res.mounths,\n      mounth: res.mounths.find( (item) => parseInt( item.is_active ) == 1 )['id'],\n      \n      hList: hList,\n      mList: mList,\n      \n      module_name: res.module_info.name\n    })\n    \n    document.title = res.module_info.name;\n    \n    let arr_dir_lv = [];\n\n    for(let i = 1; i <= 20; i ++){\n      arr_dir_lv.push(i);\n    }\n\n    this.setState({\n      arr_dir_lv: arr_dir_lv\n    })\n\n    setTimeout( () => {\n      this.updateData();\n    }, 100 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      console.log( err )\n    });\n  }\n   \n  changeCheckOrders(event){\n    let data = event.target.checked;\n    \n    this.setState({\n      showReady: data\n    })\n  }\n  \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      mounth: this.state.mounth\n    };\n    \n    let res = await this.getData('get_graph', data);\n    \n    console.log( res )\n    \n    this.setState({\n      one: res.date.one,\n      two: res.date.two,\n      \n      test_one: res.one,\n      test_two: res.two,\n\n      show_zp_one: res.show_zp_one,\n      show_zp_two: res.show_zp_two,\n      kind: res.kind,\n\n      lv_cafe: res.lv_cafe,\n      lv_dir: res.lv_dir\n    })\n  }\n  \n  async openH(item, this_date){\n    console.log( item )\n    \n    let data = {\n      smena_id: item.smena_id,\n      app_id: item.app_id,\n      user_id: item.id,\n      date: this_date,\n      date_start: item.date\n    };\n    \n    let res = await this.getData('get_user_day', data);\n    \n    console.log( res )\n    \n    this.setState({\n      isOpenModalH: true,\n      userInfo: res.h_info,\n      otherAppList: res.other_app,\n      show_bonus: res.show_bonus\n    })\n  }\n  \n  delTime(key_time){\n    let userInfo = this.state.userInfo;\n    \n    userInfo.hours = userInfo.hours.filter( (item, key) => parseInt(key) != parseInt(key_time) );\n    \n    this.setState({\n      userInfo: userInfo\n    })\n  }\n  \n  changeHourse(type, key, event){\n    let userInfo = this.state.userInfo;\n    \n    userInfo.hours[ key ][ [type] ] = event.target.value;\n    \n    this.setState({\n      userInfo: userInfo\n    })\n  }\n  \n  async saveDayHourse(){\n    let data = {\n      date: this.state.userInfo.date,\n      user_id: this.state.userInfo.user_id,\n      smena_id: this.state.userInfo.smena_id,\n      app_id: this.state.userInfo.app_id,\n      hours: this.state.userInfo.hours,\n      new_app: this.state.userInfo.new_app,\n      mentor_id: this.state.userInfo.mentor_id\n    }\n    \n    let res = await this.getData('save_user_day', data);\n    \n    if( res['st'] == true ){\n      this.setState({\n        mainMenu: false,\n        mainMenuH: false,\n        mainMenuSmena: false\n      })\n\n      this.updateData();\n    }else{\n      alert(res['text'])\n    }\n  }\n  \n  addTime(){\n    let userInfo = this.state.userInfo;\n    \n    let check = userInfo.hours.find( (item) => item.time_start == this.state.newTimeStart && item.time_end == this.state.newTimeEnd );\n    \n    if( check ){\n      this.setState({\n        openNewTimeAdd: false\n      })\n      \n      return ;\n    }\n    \n    userInfo.hours.push({\n      time_start: this.state.newTimeStart,\n      time_end: this.state.newTimeEnd\n    })\n    \n    this.setState({\n      userInfo: userInfo,\n      openNewTimeAdd: false\n    })\n  }\n  \n  async fastTime(type){\n    let data = {\n      type: type,\n      user_id: this.state.chooseUser.id,\n      app_id: this.state.chooseUser.app_id,\n      smena_id: this.state.chooseUser.smena_id,\n      date: this.state.mounth\n    }\n    \n    let res = await this.getData('save_fastTime', data);\n    \n    console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        mainMenu: false,\n        mainMenuH: false,\n        mainMenuSmena: false\n      })\n\n      this.updateData();\n    }else{\n      alert(res['text'])\n    }\n  }\n\n  async fastSmena(smena_id){\n    let data = {\n      new_smena_id: smena_id,\n      user_id: this.state.chooseUser.id,\n      app_id: this.state.chooseUser.app_id,\n      smena_id: this.state.chooseUser.smena_id,\n      date: this.state.mounth,\n      part: this.state.tabTable\n    }\n    \n    let res = await this.getData('save_fastSmena', data);\n    \n    console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        mainMenu: false,\n        mainMenuH: false,\n        mainMenuSmena: false\n      })\n\n      this.updateData();\n    }else{\n      alert(res['text'])\n    }\n  }\n\n  async changePriceH(price){\n    let data = {\n      price: price,\n      user_id: this.state.chooseUser.id,\n      app_id: this.state.chooseUser.app_id,\n      smena_id: this.state.chooseUser.smena_id,\n      date: this.state.mounth,\n      part: this.state.tabTable\n    }\n    \n    let res = await this.getData('save_userPriceH', data);\n    \n    console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        mainMenu: false,\n        mainMenuH: false,\n        mainMenuPrice: false\n      })\n\n      this.updateData();\n    }else{\n      alert(res['text'])\n    }\n  }\n\n  changeLVDir(){\n    this.setState({\n      mainMenuLVDIR: true\n    })\n  }\n\n  async newLvDir(LV){\n    let data = {\n      date: this.state.mounth,\n      point_id: this.state.point,\n      dir_lv: LV\n    }\n    \n    let res = await this.getData('save_dir_lv', data);\n    \n    console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        mainMenuLVDIR: false\n      })\n\n      this.updateData();\n    }else{\n      alert(res['text'])\n    }\n  }\n\n  changeDopBonus(){\n    this.setState({\n      mainMenuDopBonus: true\n    })\n  }\n\n  async dop_bonus(type){\n    let data = {\n      date: this.state.mounth,\n      part: this.state.tabTable,\n      point_id: this.state.point,\n      type: type\n    }\n    \n    let res = await this.getData('save_dop_bonus', data);\n    \n    console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        mainMenuDopBonus: false\n      })\n\n      this.updateData();\n    }else{\n      alert(res['text'])\n    }\n  }\n\n  render(){ \n    return (\n      <>\n        <Backdrop open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog onClose={ () => { this.setState({ mainMenu: false }) } } open={this.state.mainMenu}>\n          \n          { !this.state.chooseUser ? null :\n            <DialogTitle>{this.state.chooseUser.full_app_name} {this.state.chooseUser.user_name} {this.state.mounth}</DialogTitle>\n          }\n          \n          <List sx={{ pt: 0 }}>\n            \n            <ListItem button onClick={ () => { this.setState({ mainMenu: false, mainMenuH: true }) } }>\n              <ListItemAvatar>\n                <Avatar>\n                  <AccessTimeIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Сменить часы на месяц\" />\n            </ListItem>\n            \n            <ListItem button onClick={ () => { this.setState({ mainMenu: false, mainMenuSmena: true, myOtherSmens: this.state.chooseUser.other_smens }) } }>\n              <ListItemAvatar>\n                <Avatar>\n                  <SyncAltIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Сменить смену\" />\n            </ListItem>\n            <ListItem button>\n              <ListItemAvatar>\n                <Avatar>\n                  <HomeWorkIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Сменить точку\" />\n            </ListItem>\n            \n          </List>\n        </Dialog>\n        \n        <Dialog onClose={ () => { this.setState({ mainMenuH: false }) } } open={this.state.mainMenuH}>\n          \n          { !this.state.chooseUser ? null :\n            <DialogTitle>{this.state.chooseUser.user_name} {this.state.mounth} Часы</DialogTitle>\n          }\n          \n          <List sx={{ pt: 0 }}>\n            \n            <ListItem button onClick={this.fastTime.bind(this, 1)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <LooksOneIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"С 1 числа 2/2 с 10 до 22 на месяц\" />\n            </ListItem>\n            \n            <ListItem button onClick={this.fastTime.bind(this, 2)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <LooksTwoIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Со 2 числа 2/2 с 10 до 22 на месяц\" />\n            </ListItem>\n            <ListItem button onClick={this.fastTime.bind(this, 3)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <Looks3Icon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"С 3 числа 2/2 с 10 до 22 на месяц\" />\n            </ListItem>\n            <ListItem button onClick={this.fastTime.bind(this, 4)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <Looks3Icon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"С 4 числа 2/2 с 10 до 22 на месяц\" />\n            </ListItem>\n            \n          </List>\n        </Dialog>\n\n        <Dialog onClose={ () => { this.setState({ mainMenuSmena: false }) } } open={this.state.mainMenuSmena}>\n          \n          { !this.state.chooseUser ? null :\n            <DialogTitle>{this.state.chooseUser.user_name} {this.state.mounth} Смена</DialogTitle>\n          }\n          \n          <List sx={{ pt: 0 }}>\n            \n            { this.state.myOtherSmens.map( (item, key) =>\n              <ListItem key={key} button onClick={this.fastSmena.bind(this, item.id)}>\n                <ListItemAvatar>\n                  <Avatar>\n                    <AssessmentIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={item.name} />\n              </ListItem>\n            ) }\n        \n          </List>\n        </Dialog>\n        \n        <Dialog onClose={ () => { this.setState({ mainMenuPrice: false }) } } open={this.state.mainMenuPrice}>\n          \n          { !this.state.chooseUser ? null :\n            <DialogTitle>{this.state.chooseUser.user_name} {this.state.mounth} Часовая ставка</DialogTitle>\n          }\n          \n          { !this.state.chooseUser ? null :\n            <List sx={{ pt: 0 }}>\n              \n              { this.state.chooseUser.price_arr.map( (item, key) =>\n                <ListItem key={key} button onClick={this.changePriceH.bind(this, item)} style={ parseFloat(this.state.chooseUser.price_p_h) == parseFloat(item) ? { backgroundColor: 'green', color: '#fff' } : {} }>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <AssessmentIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary={item} />\n                </ListItem>\n              ) }\n          \n            </List>\n          }\n        </Dialog>\n\n        <Dialog onClose={ () => { this.setState({ mainMenuLVDIR: false }) } } open={this.state.mainMenuLVDIR}>\n          \n          <DialogTitle>{this.state.mounth} Уровень директора</DialogTitle>\n          \n          <List sx={{ pt: 0 }}>\n            \n            { this.state.arr_dir_lv.map( (item, key) =>\n              <ListItem key={key} button style={ parseFloat(this.state.lv_dir) == parseFloat(item) ? { backgroundColor: 'green', color: '#fff' } : {} } onClick={this.newLvDir.bind(this, item)}>\n                <ListItemAvatar>\n                  <Avatar>\n                    <AssessmentIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={item+' уровень'} />\n              </ListItem>\n            ) }\n          </List>\n          \n        </Dialog>\n\n        <Dialog onClose={ () => { this.setState({ mainMenuDopBonus: false }) } } open={this.state.mainMenuDopBonus}>\n          \n          <DialogTitle>{this.state.mounth} Командный бонус</DialogTitle>\n          \n          <List sx={{ pt: 0 }}>\n            \n            <ListItem button>\n              <ListItemAvatar>\n                <Avatar style={{ backgroundColor: 'green' }}>\n                  <CheckIcon style={{ color: '#fff' }} />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={'Выдать'} />\n            </ListItem>\n            <ListItem button>\n              <ListItemAvatar>\n                <Avatar style={{ backgroundColor: 'red' }}>\n                  <CloseIcon style={{ color: '#fff' }} />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={'Отказать'} />\n            </ListItem>\n            \n          </List>\n          \n        </Dialog>\n        \n        { !this.state.userInfo ? null :\n          <Dialog\n            open={this.state.isOpenModalH}\n            onClose={ () => { this.setState({ isOpenModalH: false }) } }\n            scroll='paper'\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n          >\n            <DialogTitle id=\"scroll-dialog-title\">{this.state.userInfo.user.app_name + ' ' + this.state.userInfo.user.user_name + ' ' + this.state.userInfo.date}</DialogTitle>\n            <DialogContent dividers={true}>\n              \n              <Typography style={{ marginBottom: 10 }}>{'Моя нагрузка: ' + this.state.userInfo.user.my_load_h + ' / Средняя нагрузка: ' + this.state.userInfo.user.all_load_h}</Typography>\n              { this.state.show_bonus === false ? null :\n                <Typography style={{ marginBottom: 20 }}>{'Бонус: ' + this.state.userInfo.user.bonus}</Typography>\n              }\n              \n              { this.state.otherAppList.length == 0 ? null :\n                <MySelect data={this.state.otherAppList} value={this.state.userInfo.new_app} func={ (event) => { let userInfo = this.state.userInfo; userInfo.new_app = event.target.value; this.setState({ userInfo: userInfo }) } } label='Кем работает' />\n              }\n              \n              { this.state.userInfo.mentor_list.length == 0 ? null :\n                <MySelect data={this.state.userInfo.mentor_list} value={this.state.userInfo.mentor_id} func={ (event) => { let userInfo = this.state.userInfo; userInfo.mentor_id = event.target.value; this.setState({ userInfo: userInfo }) } } label='Кем работает' />\n              }\n              \n              <Accordion \n                style={{ marginTop: 10 }} \n                expanded={this.state.openNewTimeAdd} \n                onChange={ () => { this.setState({ openNewTimeAdd: !this.state.openNewTimeAdd }) } }>\n                  \n                <AccordionSummary\n                  expandIcon={<AddIcon />}\n                >\n                  <AccessTimeIcon style={{ marginRight: 10 }} />\n                  <Typography>Добавить время</Typography>\n                </AccordionSummary>\n                <AccordionDetails style={{ display: 'flex', flexDirection: 'row' }}>\n                  \n                  <MyTimePicker value={this.state.newTimeStart} func={ (event) => { this.setState({ newTimeStart: event.target.value }) } } classes={this.state.classes} label='Время начала работы' />\n                  <MyTimePicker value={this.state.newTimeEnd} func={ (event) => { this.setState({ newTimeEnd: event.target.value }) } } classes={this.state.classes} label='Время окончания работы' />\n                  \n                  <AddIcon style={{ minWidth: 50, minHeight: 38, cursor: 'pointer' }} onClick={ this.addTime.bind(this) } />\n                  \n                </AccordionDetails>\n              </Accordion>  \n              \n              { this.state.userInfo.hours.map( (item, key) =>\n                <Accordion key={key}>\n                  <AccordionSummary\n                    expandIcon={<CloseIcon onClick={ this.delTime.bind(this, key) } />}\n                  >\n                    <AccessTimeIcon style={{ marginRight: 10 }} />\n                    <Typography>{item.time_start + ' - ' + item.time_end}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails style={{ display: 'flex', flexDirection: 'row' }}>\n                    <MyTimePicker value={item.time_start} func={ this.changeHourse.bind(this, 'time_start', key) } classes={this.state.classes} label='Время начала работы' />\n                    <MyTimePicker value={item.time_end} func={ this.changeHourse.bind(this, 'time_end', key) } classes={this.state.classes} label='Время окончания работы' />\n                  </AccordionDetails>\n                </Accordion>  \n              ) }\n              \n              \n              <Accordion style={{ marginTop: 50 }} disabled>\n                <AccordionSummary>\n                  <Typography>История</Typography>\n                </AccordionSummary>\n              </Accordion>  \n              \n              { this.state.userInfo.hist.map( (item, key) =>\n                <Accordion key={key}>\n                  <AccordionSummary>\n                    <Typography>{item.date + ' - ' + item.user_name}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails style={{ display: 'flex', flexDirection: 'column' }}>\n                    \n                    { item.items.map( (it, k) =>\n                      <Typography key={k}>{it.time_start + ' - ' + it.time_end} {it.app_name == '' ? '' : ' - ' + it.app_name} </Typography>\n                    ) }\n                    \n                  </AccordionDetails>\n                </Accordion>  \n              ) }\n              \n            </DialogContent>\n            <DialogActions style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n              <Button style={{ backgroundColor: 'green', color: '#fff' }} onClick={this.saveDayHourse.bind(this)}>Сохранить</Button>\n              <Button style={{ backgroundColor: 'red', color: '#fff' }} onClick={() => { this.setState({ isOpenModalH: false }) }}>Отмена</Button>\n            </DialogActions>\n          </Dialog>\n        }\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.points} value={this.state.point} func={ (event) => { this.setState({ point: event.target.value }) } } label='Точка' />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.mounths} value={this.state.mounth} func={ (event) => { this.setState({ mounth: event.target.value }) } } label='Месяц' />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n          </Grid>\n          \n            \n              \n          <Box sx={{ width: '100%' }}>\n            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n              <Tabs value={this.state.tabTable} onChange={ (event, data) => { this.setState({ tabTable: data }) } } centered >\n                <Tab label=\"С 1 по 15 числа\" {...a11yProps(0)} />\n                <Tab label=\"С 16 по конец месяца\" {...a11yProps(1)} />\n              </Tabs>\n            </Box>\n            <TabPanel value={this.state.tabTable} index={0}>\n              { !this.state.one ? null :\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\" id=\"table_graph_one\">\n                    \n                    <TableBody>\n                      \n                      { this.state.test_one.map( (item, key) =>\n                        item.row == 'header' ?\n                          <HeaderItem key={key} bonus_other={this.state.one.bonus_other} changeLVDir={this.changeLVDir.bind(this)} changeDopBonus={this.changeDopBonus.bind(this)} kind={this.state.kind} show_zp={this.state.show_zp_one} lv_dir={this.state.lv_dir} lv_cafe={this.state.lv_cafe} dataKey={key} days={this.state.one.days} item={item} />\n                            :\n                          <TableRow key={key}>\n                            <TableCell style={{ minWidth: 140, minHeight: 38, position: 'absolute', backgroundColor: '#fff', marginLeft: '-1px', borderBottom: '2px solid #e5e5e5' }}>{item.data.user_name}</TableCell>\n                            <TableCell style={{ minWidth: 165, minHeight: 38 }}>{item.data.app_name}</TableCell>\n\n                            { this.state.kind == 'manager' ? null :\n                              <TableCell style={{ textAlign: 'center' }}> <SyncAltIcon style={{ cursor: 'pointer' }} onClick={ () => { this.setState({ mainMenu: true, chooseUser: item.data }) } } /> </TableCell>\n                            }\n\n                            { item.data.dates.map( (date, date_k) =>\n                              <TableCell onClick={ this.openH.bind(this, item.data, date.date) } className=\"min_block\" style={{ backgroundColor: date.info ? date.info.color : '#fff', cursor: 'pointer' }} key={date_k}>{date.info ? date.info.hours : ''}</TableCell>\n                            ) }\n                            \n                            { this.state.kind == 'manager' ? null :\n                              <>\n                                <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}} onClick={ () => {this.setState({ mainMenuPrice: true, chooseUser: item.data }) } }>{item.data.price_p_h}</TableCell>\n                                <TableCell style={{textAlign: 'center'}}>{item.data.dop_bonus}</TableCell>\n                                <TableCell style={{textAlign: 'center'}}>{item.data.h_price}</TableCell>\n                                <TableCell style={{textAlign: 'center'}}>{item.data.err_price}</TableCell>\n                                <TableCell style={{textAlign: 'center'}}>{item.data.my_bonus}</TableCell>\n\n                                { this.state.show_zp_one == 1 || this.state.show_zp_one == 0 ?\n                                  <TableCell style={{textAlign: 'center'}}>{ ( parseInt(item.data.dop_bonus) + parseInt(item.data.dir_price_dop) + parseInt(item.data.h_price) + parseInt(item.data.my_bonus) - parseInt(item.data.err_price) )+'' }</TableCell>\n                                    :\n                                  null\n                                }\n\n                                <TableCell style={{textAlign: 'center'}}>{item.data.given}</TableCell>\n                              </>\n                            }\n                          </TableRow>\n                      ) }\n                      \n                      \n                    </TableBody>\n                    \n                    <TableFooter>\n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell></TableCell>\n\n                        { this.state.kind == 'manager' ? null :\n                          <TableCell></TableCell>\n                        }\n                        \n                        {this.state.one.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" style={{ backgroundColor: item.type == 'cur' ? '#98e38d' : '#fff' }} key={key}>{item.res}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>Роллов</TableCell>\n                        \n                        { this.state.kind == 'manager' ? null :\n                          <TableCell></TableCell>\n                        }\n                        \n                        {this.state.one.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_rolls}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>Пиццы</TableCell>\n                        \n                        { this.state.kind == 'manager' ? null :\n                          <TableCell></TableCell>\n                        }\n                        \n                        {this.state.one.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_pizza}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell className=\"min_size\">Заказы готовились больше 40 минут</TableCell>\n                        \n                        { this.state.kind == 'manager' ? null :\n                          <TableCell></TableCell>\n                        }\n                        \n                        {this.state.one.order_stat.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_false}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                    </TableFooter>\n                    \n                    \n                  </Table>\n                </TableContainer>\n              }\n            </TabPanel>\n            <TabPanel value={this.state.tabTable} index={1}>\n              { !this.state.two ? null :\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\" id=\"table_graph_two\">\n                    \n                    <TableBody>\n                      \n                      { this.state.test_two.map( (item, key) =>\n                        item.row == 'header' ?\n                          <HeaderItem bonus_other={this.state.two.bonus_other} changeLVDir={this.changeLVDir.bind(this)} changeDopBonus={this.changeDopBonus.bind(this)} key={key} kind={this.state.kind} show_zp={this.state.show_zp_two} lv_dir={this.state.lv_dir} lv_cafe={this.state.lv_cafe} dataKey={key} days={this.state.two.days} item={item} />\n                            :\n                          <TableRow key={key}>\n                            <TableCell style={{ minWidth: 140, minHeight: 38, position: 'absolute', backgroundColor: '#fff', marginLeft: '-1px', borderBottom: '2px solid #e5e5e5' }}>{item.data.user_name}</TableCell>\n                            <TableCell style={{ minWidth: 165, minHeight: 38 }}>{item.data.app_name}</TableCell>\n\n                            { this.state.kind == 'manager' ? null :\n                              <TableCell style={{ textAlign: 'center' }}> <SyncAltIcon style={{ cursor: 'pointer' }} onClick={ () => { this.setState({ mainMenu: true, chooseUser: item.data }) } } /> </TableCell>\n                            }\n\n                            { item.data.dates.map( (date, date_k) =>\n                              <TableCell onClick={ this.openH.bind(this, item.data, date.date) } className=\"min_block\" style={{ backgroundColor: date.info ? date.info.color : '#fff', cursor: 'pointer' }} key={date_k}>{date.info ? date.info.hours : ''}</TableCell>\n                            ) }\n                            \n                            { this.state.kind == 'manager' ? null :\n                              <>\n                                <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}} onClick={ () => {this.setState({ mainMenuPrice: true, chooseUser: item.data }) } }>{item.data.price_p_h}</TableCell>\n                                <TableCell style={{textAlign: 'center'}}>{item.data.dop_bonus}</TableCell>\n                                <TableCell style={{textAlign: 'center'}}>{item.data.h_price}</TableCell>\n                                <TableCell style={{textAlign: 'center'}}>{item.data.err_price}</TableCell>\n                                <TableCell style={{textAlign: 'center'}}>{item.data.my_bonus}</TableCell>\n                                \n                                { this.state.show_zp_two == 1 || this.state.show_zp_two == 0 ?\n                                  <TableCell style={{textAlign: 'center'}}>{ ( parseInt(item.data.dop_bonus) + parseInt(item.data.dir_price_dop) + parseInt(item.data.h_price) + parseInt(item.data.my_bonus) - parseInt(item.data.err_price) )+'' }</TableCell>\n                                    :\n                                  null\n                                }\n\n                                <TableCell style={{textAlign: 'center'}}>{item.data.given}</TableCell>\n                              </>\n                            }\n                          </TableRow>\n                      ) }\n                      \n                      \n                    </TableBody>\n                    \n                    <TableFooter>\n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell></TableCell>\n                        \n                        { this.state.kind == 'manager' ? null :\n                          <TableCell></TableCell>\n                        }\n                        \n                        {this.state.two.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" style={{ backgroundColor: item.type == 'cur' ? '#98e38d' : '#fff' }} key={key}>{item.res}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>Роллов</TableCell>\n                        \n                        { this.state.kind == 'manager' ? null :\n                          <TableCell></TableCell>\n                        }\n                        \n                        {this.state.two.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_rolls}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>Пиццы</TableCell>\n                        \n                        { this.state.kind == 'manager' ? null :\n                          <TableCell></TableCell>\n                        }\n                        \n                        {this.state.two.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_pizza}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell className=\"min_size\">Заказы готовились больше 40 минут</TableCell>\n                        \n                        { this.state.kind == 'manager' ? null :\n                          <TableCell></TableCell>\n                        }\n                        \n                        {this.state.two.order_stat.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_false}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                    </TableFooter>\n                    \n                    \n                  </Table>\n                </TableContainer>\n              }\n            </TabPanel>\n            \n          </Box>\n          \n          \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function WorkSchedule () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <WorkSchedule_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@mui/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\n\nimport Badge from '@mui/material/Badge';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { useHistory } from \"react-router-dom\";\n\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\n\nimport routes from '../../../server/routes';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n    palette: {\n      primary: {\n        main: '#c03',\n      },\n      def: {\n        main: '#353b48',\n        secondary: '#fff'\n      },\n    },\n});\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    width: '100%',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n});\n\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      \n      module: 'header',\n      \n      open: false,\n      menu: [],\n      full_menu: [],\n      \n      left: false\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      menu: data.info.left_menu,\n      full_menu: data.info.full_menu,\n    })\n  }\n  \n  getData = (method, data = {}) => {\n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      return json;\n    })\n    .catch(err => { \n        console.log( err )\n    });\n  }\n  \n  handleDrawerOpen(){\n    this.setState({\n      open: true\n    })\n  }\n  \n  handleDrawerClose(){\n    this.setState({\n      open: false\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <AppBar className={clsx(this.state.classes.appBar, this.state.open && this.state.classes.appBarShift)}>\n          <Toolbar className={this.state.classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={this.handleDrawerOpen.bind(this)}\n              className={clsx(this.state.classes.menuButton, this.state.open && this.state.classes.menuButtonHidden)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.state.classes.title}>\n              Dashboard\n            </Typography>\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        \n        \n        <React.Fragment >\n          <SwipeableDrawer\n            anchor={'left'}\n            open={ this.state.open }\n            onClose={ () => { this.setState({ open: false }) } }\n            onOpen={ () => { this.setState({ open: true }) } }\n          >\n            <div className={this.state.classes.toolbarIcon}>\n            \n              <Autocomplete\n                size=\"small\"\n                options={this.state.full_menu}\n                getOptionLabel={(option) => option.name}\n                onChange={(event, newValue) => {\n                  if( newValue ){\n                    this.state.history.push(\"/\"+newValue.key_query+\"/\");\n                  }\n                }}\n                style={{ width: 300 }}\n                renderInput={(params) => <TextField {...params} label=\"Поиск\" variant=\"outlined\" />}\n              />\n              \n              <IconButton onClick={this.handleDrawerClose.bind(this)}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            \n            { this.state.menu.map( (item, key) =>\n              <Accordion key={key} >\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography className={this.state.classes.heading}>{ item.parent.name }</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  \n                  <List style={{ width: '100%' }}>\n                  \n                    { item.chaild.map( (it, k) =>\n                      <ListItem button key={k}>\n                        <Link to={\"/\"+it.key_query+\"/\"}>\n                          <ListItemText primary={ it.name } />\n                        </Link>\n                      </ListItem>\n                    ) }\n                  \n                  </List>\n                  \n                </AccordionDetails>\n              </Accordion>\n            ) }\n          </SwipeableDrawer>\n        </React.Fragment>\n        \n        \n        \n      </>\n    )\n  }\n}\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nexport function App () {\n    const classes = useStyles();\n    let history = useHistory();\n    \n    let check_header = true;\n    \n    if( \n      history.location.pathname == '/auth/' || \n      history.location.pathname == '/auth' || \n      history.location.pathname == '/registration/' ||\n      history.location.pathname == '/registration'\n    ){\n      check_header = false;\n    }\n    \n    return (\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          { !check_header ? null :\n            <>\n              <CssBaseline />\n              <Header classes={classes} history={history} />\n            </>\n          }\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Container maxWidth={false} className={classes.container}>\n        \n              <Switch>\n                { routes.map( (item, key) =>\n                  <Route\n                    key={key}\n                    path={item.path}\n                    exact={ item.exact }\n                    component={ item.component }\n                  />\n                ) }\n                \n                <Route\n                  component={ () =>\n                    <Status code={404}>\n                      <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n                        </Grid>\n                      </Grid>\n                    </Status>\n                  }\n                />\n              </Switch>\n        \n            </Container>\n          </main>\n        </div>\n      </ThemeProvider>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.render( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n//ReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n","import React from 'react';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\n\nimport TextField from '@mui/material/TextField';\n\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Stack from '@mui/material/Stack';\n\n//import Grid from '@mui/material/Grid';\nimport ruLocale from \"date-fns/locale/ru\";\n\n/*import DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';*/\n\nimport DateRangePicker from '@mui/lab/DateRangePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\n//import DatePicker from '@mui/lab/DatePicker';\nimport Typography from '@mui/material/Typography';\n\nimport DatePicker from '@mui/lab/DatePicker';\n\nexport class MyDaterange extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={ruLocale} size=\"small\">\n        <DateRangePicker\n          \n          allowSameDateSelection={true}\n          showTodayButton={true}\n          startText={this.props.startText}\n          endText={this.props.endText}\n          value={this.props.value}\n          inputFormat=\"yyyy-MM-dd\"\n          //mask=\"____-__-__\"\n          onChange={this.props.func}\n          renderInput={(startProps, endProps) => (\n            <React.Fragment>\n              <TextField style={{ width: '100%' }} {...startProps} />\n              <TextField style={{ width: '100%' }} {...endProps} />\n            </React.Fragment>\n          )}\n        />\n      </LocalizationProvider>\n    )\n  }\n}\n\nexport class MyAutocomplite extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <Stack spacing={3}>\n        <Autocomplete\n          size=\"small\"\n          disableCloseOnSelect={true}\n          multiple={true}\n          id={ this.props.id ?? null }\n          options={this.props.data}\n          getOptionLabel={(option) => option.name}\n          value={this.props.value}\n          onChange={this.props.func}\n          filterSelectedOptions\n          multiple={ this.props.multiple && this.props.multiple === true ? true : false }\n          isOptionEqualToValue={(option, value) => option.id === value.id}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label={this.props.label}\n              placeholder={this.props.placeholder}\n            />\n          )}\n        />\n      </Stack>\n    )\n  }\n}\n\nexport class MySelect extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <FormControl fullWidth variant=\"outlined\" size=\"small\">\n        <InputLabel>{this.props.label}</InputLabel>\n        <Select\n          value={this.props.value}\n          label={this.props.label}\n          onChange={ this.props.func }\n          multiple={ this.props.multiple && this.props.multiple === true ? true : false }\n        >\n          <MenuItem value=\"\"><em>None</em></MenuItem>\n          { this.props.data.map( (item, key) =>\n            <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n          ) }\n        </Select>\n      </FormControl>\n    )\n  }\n}\n\nexport class MyTextInput extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <TextField \n        label={this.props.label}\n        value={this.props.value}\n        onChange={this.props.func}\n        disabled={ this.props.disabled || this.props.disabled === true ? true : false }\n        variant=\"outlined\" \n        size={'small'} \n        color='primary'\n        style={{ width: '100%' }} \n      />\n    )\n  }\n}\n\nexport class MyTimePicker extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <TextField\n        variant=\"outlined\"\n        size=\"small\"\n        color=\"primary\"\n        label={this.props.label}\n        type=\"time\"\n        value={ this.props.value }\n        className={this.state.classes.timePicker}\n        onChange={this.props.func}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        step={600}\n        inputProps={{\n          step: 600, // 5 min\n        }}\n      />\n    )\n  }\n}\n\nexport class MyDatePicker extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <>\n        <Typography>{this.props.label}</Typography>\n        <DatePicker\n          format=\"YYYY-MM-DD\"\n          \n          multiple\n          sort\n          \n          //mask=\"____/__/__\"\n          //multiple={ this.props.multiple && this.props.multiple === true ? true : false }\n          //disableCloseOnSelect={true}\n          //inputFormat=\"yyyy-MM-dd\"\n          style={{ width: '100%' }}\n          label={this.props.label}\n          value={this.props.value}\n          onChange={this.props.func}\n        />\n      </>\n    )\n  }\n}\n\nexport class MyDatePickerNew extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={ruLocale}>\n        <DatePicker\n          multiple={true}\n          inputFormat=\"yyyy-MM-dd\"\n          label={this.props.label}\n          value={this.props.value}\n          onChange={this.props.func}\n          renderInput={(params) => <TextField variant=\"outlined\" size={'small'} color='primary' style={{ width: '100%' }} {...params} />}\n        />\n      </LocalizationProvider>\n    )\n  }\n}\n\nexport class MyDatePickerTest extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <DatePicker \n        multiple\n        value={this.props.value}\n        onChange={this.props.func}\n      />\n    )\n  }\n}\n\nexport class MyCheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.props.value}\n              onChange={this.props.func}\n              color=\"primary\"\n            />\n          }\n          label={this.props.label}\n        />\n      </FormGroup>\n    )\n  }\n}"],"names":["Home","require","Auth","Reg","LiveOrders","Events","RasByBill","CategoryItems","VendorModule","VendorItemPrice","Tender","Revizion","RevizionNew","WorkSchedule","SiteSale2","SiteSale2_New","SiteSale2_Edit","SiteSale2_Stat","SiteSale2_StatList","DriveMapStatAll","DriverStat","Concenter","module","exports","path","exact","component","title","code","queryString","theme","createTheme","palette","primary","main","useStyles","makeStyles","paper","display","flexDirection","alignItems","avatar","borderRadius","width","height","margin","backgroundColor","avatar2","form","marginTop","spacing","submit","textLink","color","Auth_","props","method","data","setState","is_load","fetch","headers","body","stringify","state","version","login","JSON","then","res","json","st","type","setTimeout","history","push","err","console","log","classes","module_name","modalDialog","dialogTitle","dialogText","point_id","this","point","showReady","getData","read","onstol","ordersQueue","prestol_new","document","getElementById","value","pwd","text","localStorage","setItem","token","window","location","pathname","Backdrop","className","backdrop","open","CircularProgress","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","autoFocus","Grid","container","direction","justifyContent","item","xs","sm","md","lg","xl","Avatar","alt","src","style","noValidate","TextField","variant","size","required","fullWidth","label","name","autoComplete","auth","bind","href","React","useHistory","def","secondary","formControl","selectEmpty","tableCel","textAlign","borderRight","padding","cursor","tableCelHead","customCel","timePicker","CategoryItems_","getItem","modalDialog2","modalDialog3","newMainCatMy","editMainCatMy","newMainNameMy","editMainNameMy","editCat","allCats","allItems","thisValItems","thisDataItems","thisCatId","module_info","cats","items","event","target","cat_id","alert","myVal","filter","parseInt","cat","parent_id","paddingBottom","paddingTop","func","changeCatMain","onChange","changeNameMain","saveCat","val","saveItems","changeCatMainEdit","changeNameMainEdit","saveEditCat","createCat","map","main_cat","main_key","Accordion","key","AccordionSummary","expandIcon","ExpandMore","Menu","marginRight","Typography","AccordionDetails","parent_cat","parent_key","addItems","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","PropTypes","Concenter_","typeDel","modalDialogDel","cities","city_id","point_list","need_point_list","indexTab","orders","ordersRender","showOrder","radiogroup_options","textDel","number","need_points","points","getOrders","index","split","filterNumber","order_id","deltype","find","confirm","order","typeCreate","ans","type_check","check_pos","prompt","isNaN","renderOrders","indexOf","type_order","type_order_addr_new","time_order_name","time_order","delete_reason","date_time_delete","is_preorder","text_time","time_to_client","textTime","promo_name","promo_text","comment","sdacha","sum_order","Table","TableBody","order_items","TableRow","TableCell","count","price","TableFooter","fontWeight","order_items_","ready","is_delete","status_order","ButtonGroup","disableElevation","disableRipple","closeOrder","type_order_","fakeUser","FormControl","RadioGroup","changeAddr","FormControlLabel","control","Radio","onFocus","changeText","delOrder","closeOrderTrue","changeCity","changeDate","changeNumber","btnGetOrders","Tabs","changePoint","Tab","TableHead","dist","type_user","street","home","date_time_order","need_time","give_data_time","close_order","to_time","unix_time_to_client","status","order_price","type_pay","driver","DriveMapStatAll_","drivers","updateData","objectManager","ymaps","ObjectManager","features","options","preset","iconColor","geometry","coordinates","latitude","longitude","point_color","properties","iconCaption","point_text","xy","add","positions","pos","parse","iconContent","geoObjects","removeAll","Map","center","zoom","searchControlProvider","myGeoObject","GeoObject","driver_name","DriverStat_","date_start","date_end","rangeDate","drive_stat_full","drive_stat_date","summ","choose_driver_id","check_cash","stat_drive_date","dateStart","dateEnd","driver_id","changeSumm","saveGivePrice","startText","endText","changeDateRange","TableContainer","Paper","full_sum","full_cash","full_bank","count_cash","count_bank","give_by_date","dop_price","err_summ","my_price","my_orders","my","ost_cash","giveCash","colSpan","unic_users","short_name","order_k","check","it","k","Events_","mounth","mounths","years","calendar","chooseDayHoly","events","chooseEvent","eventPoint1","everyYear1","timeStart2","timeEnd2","expanded","dayEvents","events_hist","this_m","this_y","checked","m","y","full_day","chooseDay","holy","hist","this_events","every_year","time_start","time_end","del_id","changeEvent","changePoint1","changeTimeStart2","changeTimeEnd2","changeEveryYear1","List","ListItem","ListItemText","Close","delEvent","save","changeMounth","changeYear","overflow","m_key","dir","zIndex","drawer","Home_","Live_Orders","changeCheckOrders","preorder","date_time_preorder_","unix_start_stol_or","give_data_time_","close_date_time_order","type_","time_","test_time","stol_sborki","date_time_preorder","time_start_order","time_end_order","RasByBill_","items_cat","item_cat","myItems","start_date","end_date","items_ras","parseFloat","sum","resItems","pf_ras","rec_ras","toFixed","catItems","this_price","count_pos","multiple","changeItems","getItems","getCats","count_item","ei_name","count_pf","ei_name_pf","count_bill","pf_name","count_rolls","price_rolls","disabled","count_pizza","price_by_items","paddingLeft","parent_items","backButton","instructions","marginBottom","Reg_","activeStep","steps","phone","charCode","nextStep","Stepper","alternativeLabel","Step","StepLabel","onKeyPress","enterNextStep","TabPanel","children","other","role","hidden","Box","sx","p","a11yProps","propTypes","Revizion_","revList","chooseRev","pf","all_data","chooseTab","get_data_for_new_rev","getRevList","getDataRev","res2","rev_id","rec","to","changeRev","search","textColor","indicatorColor","centered","RevizionNewItem","change","nextProps","nextState","counts","need_pq","itemKey","clear","copy","RevizionNew_","storages","key_item","key_data","allVal","new_counts","saveData","copyData","clearData","SwipeableDrawer","anchor","onOpen","button","position","bottom","left","right","elevation","BottomNavigation","showLabels","newValue","BottomNavigationAction","icon","Restore","MyDatePicker","format","sort","formatDateDot","formatDateName","SiteSale2_new_","click","modalText","city","modalLink","where_promo_list","promo_action_list","sale_list","promo_conditions_list","promo_sale_list","type_sale_list","date_promo_list","type_order_list","where_order_list","promo_prizw_vk","spamNameSMS","auto_text","where_promo","generate_new","count_action","promo_action","type_sale","promo_sale","sale_type","promo_conditions","price_start","price_end","date_promo","promo_length","promo_count","day_1","day_2","day_3","day_4","day_5","day_6","day_7","where_order","numberList","promo_desc_true","promo_desc_false","textSMS","addItem","addItemCount","addItemPrice","addItemAllPrice","itemsAdd","itemsAddPrice","saleCat","saleItem","priceItem","conditionItems","testDate","createdPromo","Y","M","D","fullDate","generateTextDescFalse","generateTextDescTrue","count_promo","promo_items","promo_cat","dateList","toISOString","promo_vk_prize","cert_text","addr","promo_len","generate","promo_in_count","promo_type_sale","promo_type","promo_summ","promo_summ_to","promo_when","promo_type_order","promo_where","promo_city","promo_point","about_promo_text","condition_promo_text","promo_items_add","promo_items_sale","promo_conditions_items","date_between","link","thisDay","nextDay","setDate","textTrue","substring","itemText","dop_text","slice","textFalse","thisItems","item_id","thisItem","newItems","changeData","changeDataCheck","Divider","changeDataData","addItemAdd","delItemAdd","priceItemAdd","delItemPrice","TextareaAutosize","placeholder","minRows","SiteSale2_edit_","promo_id","promoId","promo","findItem","limDate","limit","date1","date2","time1","time2","d1","d2","d3","d4","d5","d6","d7","coment","condition_text","SiteSale2_","city_list","promoName","findPromoList","all_city_list","showPromoList","marginLeft","city_name","def_count","delPromo","SiteSale2_Stat_","spam_list","spam_id","spam_list_data","spam_list_data_stat","true","all","percent","stat","show","changeSpam","SiteSale2_StatList_","promo_list","getUsers","Check","useParams","dynamicCellStyle","params","colDef","headerName","Tender_","testTable","vendors","myVendors","showVendors","params_api","params_columnApi","table","k1","section","k2","k3","tableItem","k4","item_price","vendor_price","vendor_id","item_ras","ras","field","api","columnApi","AgGridReact","onGridReady","onCellClicked","rowData","AgGridColumn","pinned","cellClassRules","hide","resizable","cellStyle","VendorItemPrice_","vendor","allCity","isPrioriti","this_items","all_city","is_prioriti","changeVendor","name_for_vendor","update","full_price","pqs","rec_pq","VendorModule_","modalItems","modalVendor","modalVendorNew","vendor_items","openVendor","customAdd","vendorCities","allCities","nds","nds_","all_items","vendor_cities","all_cities","bill_ex","email","email_2","inn","min_price","need_img_bill_ex","ogrn","includes","item_name","item1","maxWidth","paddingRight","Add","addItemCustom","changeSort","changeNDS","delItem","saveVendorItems","testChange","user","saveVendor","addVendor","openModalVendorNew","Visibility","openModalVendor","DirectionsCar","openModalItems","is_show","VisibilityOff","HeaderItem","minWidth","minHeight","lv_cafe","kind","days","dataKey","changeDopBonus","bonus_other","fontSize","changeLVDir","lv_dir","show_zp","WorkSchedule_","one","two","test_one","test_two","isOpenModalH","userInfo","hList","mList","newTimeStart","newTimeEnd","openNewTimeAdd","otherAppList","otherApp","testVal","testOpen","mainMenu","mainMenuH","mainMenuSmena","show_bonus","mainMenuPrice","mainMenuLVDIR","mainMenuDopBonus","show_zp_one","show_zp_two","myOtherSmens","chooseUser","tabTable","arr_dir_lv","h","is_active","i","this_date","smena_id","app_id","user_id","h_info","other_app","key_time","hours","new_app","mentor_id","new_smena_id","part","LV","dir_lv","full_app_name","user_name","pt","ListItemAvatar","AccessTime","other_smens","SyncAlt","HomeWork","fastTime","LooksOne","LooksTwo","Looks3","fastSmena","Assessment","price_arr","changePriceH","price_p_h","newLvDir","scroll","app_name","dividers","my_load_h","all_load_h","bonus","mentor_list","addTime","delTime","changeHourse","saveDayHourse","borderBottom","borderColor","row","dates","date_k","openH","info","dop_bonus","h_price","err_price","my_bonus","dir_price_dop","given","order_stat","count_false","root","toolbar","toolbarIcon","mixins","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","fixedHeight","heading","typography","pxToRem","fontWeightRegular","Header","menu","full_menu","left_menu","AppBar","clsx","Toolbar","IconButton","edge","handleDrawerOpen","noWrap","Badge","badgeContent","Notifications","Autocomplete","getOptionLabel","option","key_query","renderInput","handleDrawerClose","ChevronLeft","parent","chaild","Status","render","staticContext","App","check_header","ThemeProvider","CssBaseline","Container","routes","ReactDOM","MyDaterange","dateAdapter","AdapterDateFns","locale","ruLocale","allowSameDateSelection","showTodayButton","inputFormat","startProps","endProps","MyAutocomplite","disableCloseOnSelect","filterSelectedOptions","MySelect","MyTextInput","MyTimePicker","InputLabelProps","shrink","step","inputProps","MyDatePickerNew","MyCheckBox"],"sourceRoot":""}