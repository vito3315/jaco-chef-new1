{"version":3,"file":"main.05036f0d16f0ee6d1727.js","mappings":"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","sources":["webpack://package.json/./server/routes.js","webpack://package.json/./src/components/auth/auth.component.jsx","webpack://package.json/./src/components/category_items/category_items.component.jsx","webpack://package.json/./src/components/drive_map_stat_all/drive_map_stat_all.component.jsx","webpack://package.json/./src/components/events/events.component.jsx","webpack://package.json/./src/components/home/home.component.jsx","webpack://package.json/./src/components/live_orders/live_orders.component.jsx","webpack://package.json/./src/components/ras_by_bill/ras_by_bill.component.jsx","webpack://package.json/./src/components/registration/registration.component.jsx","webpack://package.json/./src/components/revizion/revizion.component.jsx","webpack://package.json/./src/components/site_sale_2/site_sale_2.component.jsx","webpack://package.json/./src/components/tender/tender.component.jsx","webpack://package.json/./src/components/vendor_item_price/vendor_item_price.component.jsx","webpack://package.json/./src/components/vendor_module/vendor_module.component.jsx","webpack://package.json/./src/components/work_schedule/work_schedule.component.jsx","webpack://package.json/./src/components/app/app.component.jsx","webpack://package.json/./src/index.prod.js","webpack://package.json/./src/stores/elements.js"],"sourcesContent":["const { Home } = require( '../src/components/home' );\nconst { Auth } = require( '../src/components/auth' );\nconst { Reg } = require( '../src/components/registration' );\n\nconst { LiveOrders } = require( '../src/components/live_orders' );\nconst { Events } = require( '../src/components/events' );\nconst { RasByBill } = require( '../src/components/ras_by_bill' );\nconst { CategoryItems } = require( '../src/components/category_items' );\nconst { VendorModule } = require( '../src/components/vendor_module' );\nconst { VendorItemPrice } = require( '../src/components/vendor_item_price' );\nconst { Tender } = require( '../src/components/tender' );\nconst { Revizion, RevizionNew } = require( '../src/components/revizion' );\nconst { WorkSchedule } = require( '../src/components/work_schedule' );\nconst { SiteSale2, SiteSale2_New, SiteSale2_Edit, SiteSale2_Stat } = require( '../src/components/site_sale_2' );\nconst { DriveMapStatAll } = require( '../src/components/drive_map_stat_all' );\n\n\nmodule.exports = [\n    {\n        path: '/',\n        exact: true,\n        component: Home,\n        title: 'Главная',\n        code: 200\n    },\n    {\n        path: '/auth',\n        exact: true,\n        component: Auth,\n        title: 'Авторизация',\n        code: 200\n    },\n    {\n        path: '/registration',\n        exact: true,\n        component: Reg,\n        title: 'Регистрация',\n        code: 200\n    },\n    \n    {\n        path: '/live_orders',\n        exact: true,\n        component: LiveOrders,\n        title: 'Оформленные заказы',\n        code: 200\n    },\n    {\n        path: '/events',\n        exact: true,\n        component: Events,\n        title: 'События',\n        code: 200\n    },\n    {\n        path: '/ras_by_bill',\n        exact: true,\n        component: RasByBill,\n        title: 'Расход по накладным',\n        code: 200\n    },\n    {\n        path: '/category_items',\n        exact: true,\n        component: CategoryItems,\n        title: 'Категории товаров',\n        code: 200\n    },\n    {\n        path: '/vendor_module',\n        exact: true,\n        component: VendorModule,\n        title: 'Поставщики',\n        code: 200\n    },\n    {\n        path: '/vendor_item_price',\n        exact: true,\n        component: VendorItemPrice,\n        title: 'Цены на товары поставщика',\n        code: 200\n    },\n    {\n        path: '/tender',\n        exact: true,\n        component: Tender,\n        title: 'Цены на товары поставщика',\n        code: 200\n    },\n    {\n        path: '/revizion',\n        exact: true,\n        component: Revizion,\n        title: 'Ревизия',\n        code: 200\n    },\n    {\n        path: '/revizion/new',\n        exact: true,\n        component: RevizionNew,\n        title: 'Новая ревизия',\n        code: 200\n    },\n    {\n        path: '/work_schedule',\n        exact: true,\n        component: WorkSchedule,\n        title: 'График работы',\n        code: 200\n    },\n    \n    {\n        path: '/site_sale_2',\n        exact: true,\n        component: SiteSale2,\n        title: 'Промокоды маркетолога',\n        code: 200\n    },\n    {\n        path: '/site_sale_2/new',\n        exact: true,\n        component: SiteSale2_New,\n        title: 'Промокоды маркетолога',\n        code: 200\n    },\n    {\n        path: '/site_sale_2/edit/:promoId',\n        exact: true,\n        component: SiteSale2_Edit,\n        title: 'Промокоды маркетолога',\n        code: 200\n    },\n    {\n        path: '/site_sale_2/stat',\n        exact: true,\n        component: SiteSale2_Stat,\n        title: 'Промокоды маркетолога',\n        code: 200\n    },\n    {\n        path: '/drive_map_stat_all',\n        exact: true,\n        component: DriveMapStatAll,\n        title: 'Курьеры на карте',\n        code: 200\n    },\n    \n    \n    \n];","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    borderRadius: 0,\n    width: '100%',\n    height: 150,\n    margin: 0,\n    backgroundColor: '#fff'\n  },\n  avatar2: {\n    borderRadius: 0,\n    width: '100%',\n    height: 130,\n    margin: 0,\n    backgroundColor: '#fff'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  textLink: {\n    color: '#c03'\n  }\n});\n\nclass Auth_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'auth',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      dialogTitle: '',\n      dialogText: ''\n    };\n  }\n  \n  async componentDidMount(){\n      \n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: '+79879340391',\n        //login: localStorage.getItem('login'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        this.state.history.push(\"/auth\");\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      showReady: this.state.showReady === true ? 1 : 0\n    };\n    \n    let res = await this.getData('get_orders', data);\n    \n    this.setState({\n      read: res.read,\n      onstol: res.onstol,\n      ordersQueue: res.prestol_new\n    })\n  }\n  \n  async auth(){\n    let data = {\n      login: document.getElementById('phone').value,\n      pwd: document.getElementById('password').value\n    };\n    \n    let res = await this.getData('auth', data);\n    \n    console.log( res )\n    \n    if( res.st === false ){\n      setTimeout( () => {\n        this.setState({ \n          modalDialog: true,\n          dialogTitle: 'Предупреждение',\n          dialogText: res.text\n        })\n      }, 500 )\n    }else{\n      localStorage.setItem('token', res.token)\n      \n      setTimeout( () => {\n        window.location.pathname = '/'\n      }, 300)\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{this.state.dialogTitle}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">{this.state.dialogText}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ () => { this.setState({ modalDialog: false }) } } color=\"primary\" autoFocus>Хорошо</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          <Grid item xs={12} sm={6} md={6} lg={4} xl={3}>\n            <div className={this.state.classes.paper}>\n              <Avatar className={this.state.classes.avatar}>\n                <img alt=\"Жако доставка роллов и пиццы\" src=\"../assets/img_other/Favikon.png\" style={{ height: '100%' }} />\n              </Avatar>\n              <form className={this.state.classes.form} noValidate>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  size=\"small\"\n                  required\n                  fullWidth\n                  id=\"phone\"\n                  label=\"Номер телефона\"\n                  name=\"phone\"\n                  autoComplete=\"phone\"\n                  autoFocus\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  size=\"small\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Пароль\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                />\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={this.state.classes.submit}\n                  onClick={ this.auth.bind(this) }\n                >\n                  Войти\n                </Button>\n                <Grid container>\n                  <Grid item xs>\n                    <a href=\"/registration\" className={this.state.classes.textLink}>Восстановить пароль</a>\n                  </Grid>\n                </Grid>\n              </form>\n            </div>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Auth () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <Auth_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport MenuIcon from '@mui/icons-material/Menu';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport TextField from '@mui/material/TextField';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyAutocomplite } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    },\n    def: {\n      main: '#353b48',\n      secondary: '#fff'\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nclass CategoryItems_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'category_items',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      modalDialog2: false,\n      modalDialog3: false,\n      \n      newMainCatMy: 0,\n      editMainCatMy: 0,\n      newMainNameMy: '',\n      editMainNameMy: '',\n      \n      editCat: null,\n      \n      allCats: [],\n      allItems: [],\n      \n      thisValItems: [],\n      thisDataItems: [],\n      thisCatId: 0,\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      allCats: data.cats,\n      allItems: data.items,\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  createCat(){\n    this.setState({\n      modalDialog: true,\n      newMainCatMy: 0,\n      newMainNameMy: ''\n    })\n  }\n  \n  changeCatMain(event){\n    let data = event.target.value;\n    \n    this.setState({\n      newMainCatMy: data\n    })\n  }\n  \n  changeCatMainEdit(event){\n    let data = event.target.value;\n    \n    this.setState({\n      editMainCatMy: data\n    })\n  }\n  \n  changeNameMain(event){\n    let data = event.target.value;\n    \n    this.setState({\n      newMainNameMy: data\n    })\n  }\n  \n  changeNameMainEdit(event){\n    let data = event.target.value;\n    \n    this.setState({\n      editMainNameMy: data\n    })\n  }\n  \n  async saveCat(){\n    let data = {\n      name: this.state.newMainNameMy,\n      cat_id: this.state.newMainCatMy\n    };\n    \n    let res = await this.getData('save_cat', data);\n    \n    if( res.st === false ){\n      alert(res.text);\n      return ;\n    }\n    \n    this.setState({\n      allCats: res.cats,\n      modalDialog: false\n    })\n  }\n  \n  addItems(cat_id){\n    \n    let myVal = this.state.allItems.filter( (item) => parseInt(item.cat_id) == parseInt(cat_id) );\n    let data = this.state.allItems.filter( (item) => parseInt(item.cat_id) == 0 );\n    \n    this.setState({\n      modalDialog2: true,\n      thisValItems: myVal,\n      thisDataItems: data,\n      thisCatId: cat_id\n    })\n  }\n  \n  async saveItems(){\n    let data = {\n      cat_id: this.state.thisCatId,\n      items: this.state.thisValItems\n    };\n    \n    let res = await this.getData('save_items_cat', data);\n    \n    this.setState({\n      allCats: res.cats,\n      allItems: res.items,\n      modalDialog2: false,\n      \n      thisValItems: [],\n      thisDataItems: [],\n      thisCatId: 0\n    })\n  }\n  \n  editCat(cat){\n    this.setState({\n      modalDialog3: true,\n      editMainCatMy: cat.parent_id,\n      editMainNameMy: cat.name,\n      editCat: cat\n    })\n  }\n  \n  async saveEditCat(){\n    let data = {\n      name: this.state.editMainNameMy,\n      cat_id: this.state.editMainCatMy,\n      id: this.state.editCat.id\n    };\n    \n    let res = await this.getData('edit_cat', data);\n    \n    if( res.st === false ){\n      alert(res.text);\n      return ;\n    }\n    \n    this.setState({\n      allCats: res.cats,\n      modalDialog: false\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Новая категория</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={12}>\n                <MySelect \n                  classes={this.state.classes} \n                  label=\"Главная категория\" \n                  data={ this.state.allCats.filter( (item) => parseInt(item.parent_id) == -1 || !item.parent_id ) }\n                  value={this.state.newMainCatMy} \n                  func={ this.changeCatMain.bind(this) } />\n              </Grid>  \n              <Grid item xs={12} sm={12}>\n                <TextField label=\"Название категории\" size=\"small\" variant=\"outlined\" style={{ width: '100%' }} color=\"primary\" value={this.state.newMainNameMy} onChange={this.changeNameMain.bind(this)} />\n              </Grid>\n            </Grid>\n            \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ this.saveCat.bind(this) } color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Dialog\n          open={this.state.modalDialog2}\n          onClose={ () => { this.setState({ modalDialog2: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle>Позиции категории</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={12}>\n                <MyAutocomplite \n                  label=\"Выбранные позиции\" \n                  func={ (event, val) => { this.setState({ thisValItems: val }) } }\n                  data={ this.state.thisDataItems } \n                  value={ this.state.thisValItems } />\n              </Grid>\n            </Grid>\n            \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ this.saveItems.bind(this) } color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Dialog\n          open={this.state.modalDialog3}\n          onClose={ () => { this.setState({ modalDialog3: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Редактирование категории</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={12}>\n                <MySelect \n                  classes={this.state.classes} \n                  label=\"Главная категория\" \n                  data={ this.state.allCats.filter( (item) => parseInt(item.parent_id) == -1 || !item.parent_id ) } \n                  value={this.state.editMainCatMy} \n                  func={ this.changeCatMainEdit.bind(this) } \n                />\n              </Grid>  \n              <Grid item xs={12} sm={12}>\n                <TextField \n                  label=\"Название категории\" \n                  size=\"small\" \n                  variant=\"outlined\" \n                  style={{ width: '100%' }} \n                  color=\"primary\" \n                  value={this.state.editMainNameMy} \n                  onChange={ this.changeNameMainEdit.bind(this) }\n                />\n              </Grid>\n            </Grid>\n            \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ this.saveEditCat.bind(this) } color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            <Button onClick={this.createCat.bind(this)}>Создать категорию</Button>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            { this.state.allCats.map( (main_cat, main_key) =>\n              parseInt(main_cat.parent_id) != -1 ? null :\n                <Accordion key={main_key}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                  >\n                    <MenuIcon style={{ marginRight: 10 }} onClick={ this.editCat.bind(this, main_cat) } />\n                    <Typography>{main_cat.name}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    \n                  { this.state.allCats.map( (parent_cat, parent_key) =>\n                    parseInt(main_cat.id) != parseInt(parent_cat.parent_id) ? null :\n                      <Accordion key={main_key+'_'+parent_key}>\n                        <AccordionSummary\n                          expandIcon={<ExpandMoreIcon />}\n                          aria-controls=\"panel1a-content\"\n                        >\n                          <MenuIcon style={{ marginRight: 10 }} onClick={ this.editCat.bind(this, parent_cat) } />\n                          <Typography>{parent_cat.name}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          \n                          { this.state.allItems.filter( (item) => parseInt(item.cat_id) == parseInt(parent_cat.id) ).map( (item, key) =>\n                            <Accordion key={main_key+'_'+parent_key+'_'+key}>\n                              <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                              >\n                                <Typography>{item.name}</Typography>\n                              </AccordionSummary>\n                            </Accordion>\n                          ) }\n                            \n                          <Button onClick={this.addItems.bind(this, parseInt(parent_cat.id))}>Добавить</Button>\n                            \n                        </AccordionDetails>\n                      </Accordion>\n                  )}\n                    \n                  </AccordionDetails>\n                </Accordion>\n            ) }\n          </Grid>\n          \n          \n        \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function CategoryItems () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <CategoryItems_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nclass DriveMapStatAll_ extends React.Component {\n  map = null;\n\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      //classes: this.props.classes,\n      history: this.props.history,\n      module: 'drive_map_stat_all',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      drivers: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      points: data.point_list,\n      point: data.point_list[0].id,\n      module_name: data.module_info.name\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      //this.updateData();\n    }, 100 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n    };\n    \n    let res = await this.getData('get_orders', data);\n    \n    this.getOrders(res.orders, res.home, res.drivers)\n\n    this.setState({\n      drivers: res.drivers\n    })\n\n    console.log( res.drivers )\n  }\n  \n  getOrders(orders, home, drivers){\n    \n      \n      //setTimeout( () => {\n        let objectManager = new ymaps.ObjectManager();\n        \n        if( !this.map ){\n          ymaps.ready(() => {\n            this.map = new ymaps.Map('map', {\n              center: [home.latitude, home.longitude],\n              zoom: 11\n            }, {\n              searchControlProvider: 'yandex#search'\n            })\n            \n            //дом\n            let myGeoObject = new ymaps.GeoObject({\n              geometry: {\n                type: \"Point\",\n                coordinates: [home.latitude, home.longitude]\n              },\n            }, {\n              preset: 'islands#blackDotIcon', \n              iconColor: 'black'\n            })\n            \n            this.map.geoObjects.add(myGeoObject);\n            \n            \n            \n            let json = {\n              \"type\": \"FeatureCollection\",\n              \"features\": []\n            };\n                    \n            orders.map( function(item){\n            \n              json.features.push({\n                type: \"Feature\",\n                id: item.id,\n                options: {\n                  preset: parseInt(item.status_order) == 6 ? 'islands#blueCircleDotIconWithCaption' : 'islands#circleDotIcon', \n                  iconColor: item.point_color ? item.point_color : item.color\n                },\n                properties: {\n                  iconCaption: item.point_text,\n                },\n                geometry: {\n                  type: \"Point\",\n                  coordinates: [item.xy.latitude, item.xy.longitude]\n                },\n              })\n              \n            } )\n            \n            objectManager.add(json);\n\n            drivers.map( function(driver){\n              driver.positions.map( function(pos, key){\n  \n                pos['xy'] = JSON.parse(pos['xy'], true);\n  \n                json.features.push({\n                  type: \"Feature\",\n                  id: pos.id,\n                  options: {\n                    preset: 'islands#stretchyIcon', \n                    iconColor: driver.color,\n                  },\n                  properties: {\n                    iconContent: key\n                  },\n                  geometry: {\n                    type: \"Point\",\n                    coordinates: [pos['xy'][0], pos['xy'][1]],\n                  },\n                })\n  \n  \n              } )\n            } )\n  \n            objectManager.add(json);\n\n            this.map.geoObjects.add(objectManager);\n          });\n        }else{\n          \n          let json = {\n            \"type\": \"FeatureCollection\",\n            \"features\": []\n          };\n                  \n          //дом\n          json.features.push({\n            type: \"Feature\",\n            id: 0,\n            options: {\n              preset: 'islands#blackDotIcon', \n              iconColor: 'black'\n            },\n            geometry: {\n              type: \"Point\",\n              coordinates: [home.latitude, home.longitude]\n            },\n          })\n          \n          \n          orders.map( function(item){\n            \n            json.features.push({\n              type: \"Feature\",\n              id: item.id,\n              options: {\n                preset: parseInt(item.status_order) == 6 ? 'islands#blueCircleDotIconWithCaption' : 'islands#circleDotIcon', \n                iconColor: item.point_color ? item.point_color : item.color\n              },\n              properties: {\n                iconCaption: item.point_text,\n                //iconCaption: parseInt(item.status_order) == 6 ? item.close_time_ : parseInt(item.is_pred) == 1 ? item.need_time : parseInt(item.is_my) == 1 ? item.time_start_mini : '',\n              },\n              geometry: {\n                type: \"Point\",\n                coordinates: [item.xy.latitude, item.xy.longitude]\n              },\n            })\n            \n          } )\n          \n          objectManager.add(json);\n\n          drivers.map( function(driver){\n            driver.positions.map( function(pos, key){\n\n              pos['xy'] = JSON.parse(pos['xy'], true);\n\n              json.features.push({\n                type: \"Feature\",\n                id: pos.id,\n                options: {\n                  preset: 'islands#stretchyIcon', \n                  iconColor: driver.color,\n                },\n                properties: {\n                  iconContent: key\n                },\n                geometry: {\n                  type: \"Point\",\n                  coordinates: [pos['xy'][0], pos['xy'][1]],\n                },\n              })\n\n\n            } )\n          } )\n\n          objectManager.add(json);\n\n          this.map.geoObjects.removeAll()\n          this.map.geoObjects.add(objectManager);\n        }\n        \n        /*objectManager.objects.events.add(['click'], (e) => {\n          let order_id = e.get('objectId');\n          let order = this.state.orders.find( (item) => parseInt(item.id) == parseInt(order_id) );\n          \n          if( order ){\n            this.showOrder(order);\n          }\n        });*/\n        \n      //}, 300 )\n    \n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={6} sm={6}>\n            <MySelect data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          <Grid item xs={6} sm={6}>\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            { this.state.drivers.map( (item, key) =>\n              <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                <div style={{ width: 50, height: 20, backgroundColor: item.color }}></div>\n                <div>{item.driver_name}</div>\n              </div>\n            ) }\n          </Grid>       \n          \n          \n          <Grid item xs={12} sm={12}>\n            <div id=\"map\" name=\"map\" style={{ width: '100%', height: 700, paddingTop: 10 }} />\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function DriveMapStatAll () {\n  let history = useHistory();\n  \n  return (\n    <DriveMapStatAll_ history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox, MyTimePicker } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nclass Events_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'events',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      mounth: '0',\n      mounths: [],\n      years: [],\n      year: '0',\n      \n      calendar: [],\n      modalDialog: false,\n      \n      chooseDayHoly: '',\n      events: [],\n      chooseEvent: 0,\n      \n      eventPoint1: 0,\n      everyYear1: false,\n      timeStart2: '10:00',\n      timeEnd2: '21:30',\n      \n      expanded: '',\n      dayEvents: [],\n      events_hist: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    console.log( data )\n    \n    this.setState({\n      points: data.points,\n      point: data.points[0].id,\n      module_name: data.module_info.name,\n      mounths: data.mounth,\n      mounth: data.this_m,\n      years: data.years,\n      year: data.this_y,\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  changeMounth(event){\n    let data = event.target.value;\n    \n    this.setState({\n      mounth: data\n    })\n    \n    setTimeout( () => {\n      //this.updateData();\n    }, 50 )\n  }\n  \n  changeYear(event){\n    let data = event.target.value;\n    \n    this.setState({\n      year: data\n    })\n  }\n  \n  changeCheckOrders(event){\n    let data = event.target.checked;\n    \n    this.setState({\n      showReady: data\n    })\n  }\n  \n  async updateData(){\n    let data = {\n      m: this.state.mounth,\n      y: this.state.year,\n      point_id: this.state.point\n    };\n    \n    let res = await this.getData('get_calendar', data);\n    \n    console.log( res )\n    \n    this.setState({\n      calendar: res.year,\n    })\n  }\n  \n  async chooseDay(day){\n    \n    if( day.full_day ){\n    \n      this.setState({\n        chooseDay: null,\n        eventPoint1: this.state.point,\n        chooseEvent: 0,\n        everyYear1: false,\n        timeStart2: '10:00',\n        timeEnd2: '21:30',\n        modalDialog: false,\n        events_hist: []\n      })\n      \n      let data = {\n        date: day.full_day,\n        point_id: this.state.point\n      };\n      \n      let res = await this.getData('get_calendar_day', data);\n      \n      console.log( 'res', res )\n      \n      this.setState({\n        chooseDay: day,\n        chooseDayHoly: res.holy,\n        events: res.events,\n        events_hist: res.hist,\n        dayEvents: res.this_events,\n        modalDialog: true\n      })\n    }\n  }\n  \n  changeEvent(event){\n    let data = event.target.value;\n    \n    this.setState({\n      chooseEvent: data\n    })\n  }\n  \n  changePoint1(event){\n    let data = event.target.value;\n    \n    this.setState({\n      eventPoint1: data\n    })\n  }\n  \n  changeEveryYear1(event){\n    let data = event.target.checked;\n    \n    this.setState({\n      everyYear1: data\n    })\n  }\n  \n  changeTimeStart2(event){\n    let data = event.target.value;\n    \n    this.setState({\n      timeStart2: data\n    })\n  }\n  \n  changeTimeEnd2(event){\n    let data = event.target.value;\n    \n    this.setState({\n      timeEnd2: data\n    })\n  }\n  \n  async save(){\n    let data = {\n      date: this.state.chooseDay.full_day,\n      point_id: this.state.eventPoint1,\n      event: this.state.chooseEvent,\n      every_year: this.state.everyYear1 === true ? 1 : 0,\n      \n      time_start: this.state.timeStart2,\n      time_end: this.state.timeEnd2,\n    };\n    \n    let res = await this.getData('save_event', data);\n    \n    console.log( res )\n    \n    if( res.st === false ){\n      alert(res.text)\n    }else{\n      this.setState({\n        chooseDay: null,\n        eventPoint1: this.state.point,\n        chooseEvent: 0,\n        everyYear1: false,\n        timeStart2: '10:00',\n        timeEnd2: '21:30',\n        modalDialog: false\n      })\n      \n      setTimeout( () => {\n        this.updateData();\n      }, 300 )\n    }\n  }\n  \n  handleChange(data){\n    this.setState({\n      expanded: data\n    })\n  }\n  \n  async delEvent(event){\n    console.log( 'delEvent', event )\n    \n    if (confirm('Удалить событие \"'+event.title+' '+event.date+'\" ?')) {\n      let data = {\n        del_id: event.id\n      };\n      \n      let res = await this.getData('del_event', data);\n      \n      this.setState({\n        chooseDay: null,\n        eventPoint1: this.state.point,\n        chooseEvent: 0,\n        everyYear1: false,\n        timeStart2: '10:00',\n        timeEnd2: '21:30',\n        modalDialog: false\n      })\n      \n      setTimeout( () => {\n        this.updateData();\n      }, 300 )\n    } else {\n      \n    }\n    \n\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{this.state.chooseDay ? this.state.chooseDay.full_day : ''}</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            <DialogContentText id=\"alert-dialog-description\">\n              \n              <Grid container spacing={3}>\n                \n                {this.state.chooseDayHoly.length == 0 ? null :\n                  <Grid item xs={12} sm={12}>\n                    <Typography component=\"span\">{this.state.chooseDayHoly}</Typography>\n                  </Grid>\n                }\n                \n                <Grid item xs={12} sm={12}>\n                  <MySelect classes={this.state.classes} data={this.state.events} value={this.state.chooseEvent} func={ this.changeEvent.bind(this) } label='Событие' />\n                </Grid>\n                \n                <Grid item xs={12} sm={12}>\n                  <MySelect classes={this.state.classes} data={this.state.points} value={ this.state.eventPoint1 } func={ this.changePoint1.bind(this) } label='Точка' />\n                </Grid>\n                \n                { parseInt(this.state.chooseEvent) !== 2 ? null :\n                  <>\n                    <Grid item xs={6} sm={6}>\n                      <MyTimePicker classes={this.state.classes} value={ this.state.timeStart2 } func={ this.changeTimeStart2.bind(this) } label='Время начала работы' />\n                    </Grid>\n                    <Grid item xs={6} sm={6}>\n                      <MyTimePicker classes={this.state.classes} value={ this.state.timeEnd2 } func={ this.changeTimeEnd2.bind(this) } label='Время окончания работы' />\n                    </Grid>\n                  </>\n                }\n                \n                <Grid item xs={12} sm={12}>\n                  <MyCheckBox classes={this.state.classes} value={ this.state.everyYear1 } func={ this.changeEveryYear1.bind(this) } label='Каждый год' />\n                </Grid>\n                \n              </Grid>\n              \n              <List component=\"nav\">\n                { this.state.dayEvents.map( (item, key) => \n                  <ListItem key={key}>\n                    <ListItemText primary={item.title} />\n                    { parseInt(item.type) == 4 ? null :\n                      <CloseIcon color=\"primary\" onClick={this.delEvent.bind(this, item)} style={{ cursor: 'pointer' }} />\n                    }\n                  </ListItem>\n                )}\n              </List>\n              \n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography>История</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <List component=\"nav\">\n                    { this.state.events_hist.map( (item, key) => \n                      <ListItem key={key}>\n                        <ListItemText primary={item.title} />\n                      </ListItem>\n                    )}\n                  </List>\n                </AccordionDetails>\n              </Accordion>\n              \n              \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ this.save.bind(this) } color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.mounths} value={this.state.mounth} func={ this.changeMounth.bind(this) } label='Месяц' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.years} value={this.state.year} func={ this.changeYear.bind(this) } label='Год' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n          </Grid>\n        \n          \n          \n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }}>\n            \n            { this.state.calendar.map( (item, key) =>\n            \n              <Grid item xs={12} sm={4} key={key} style={{ padding: 20 }}>\n                <h1 style={{ textAlign: 'center' }}>{ item[0][0].mounth }</h1>\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\" style={{ overflow: 'hidden' }}>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell className={this.state.classes.tableCelHead}>Пн</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Вт</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Ср</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Чт</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Пт</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Сб</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Вс</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      \n                      { item.map( (mounth, m_key) =>\n                        <TableRow key={m_key}>\n                          { mounth.map( (day, k) =>\n                            <TableCell \n                              key={k} \n                              onClick={ this.chooseDay.bind(this, day) } \n                              \n                              style={{ color: day.dir ? 'yellow' : day.holy ? '#c03' : '#000' }}\n                              \n                              className={ day.event ? this.state.classes.customCel : this.state.classes.tableCel }\n                            > { day.day } </TableCell>\n                          ) }\n                        </TableRow>\n                      ) }\n                      \n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n            )}\n            \n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Events () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <Events_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n});\n\nclass Home_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      module: 'home',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      showReady: false,\n      read: [],\n      onstol: [],\n      ordersQueue: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n        console.log( err )\n    });\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          <Grid item xs={12} sm={12} style={{ height: '100vh' }}>\n            \n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Home () {\n  const classes = useStyles();\n  \n  return (\n    <Home_ classes={classes} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nclass Live_Orders extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'live_orders',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      showReady: false,\n      read: [],\n      onstol: [],\n      ordersQueue: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      points: data.point_list,\n      point: data.point_list[0].id,\n      module_name: data.module_info.name\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 100 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  changeCheckOrders(event){\n    let data = event.target.checked;\n    \n    this.setState({\n      showReady: data\n    })\n  }\n  \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      showReady: this.state.showReady === true ? 1 : 0\n    };\n    \n    let res = await this.getData('get_orders', data);\n    \n    this.setState({\n      read: res.read,\n      onstol: res.onstol,\n      ordersQueue: res.prestol_new\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          { this.state.points.length > 0 ?\n            <>\n              <Grid item xs={6} sm={6}>\n                <MySelect data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n              </Grid>\n              <Grid item xs={6} sm={6}>\n                <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <MyCheckBox value={this.state.showReady} func={ this.changeCheckOrders.bind(this) } label='Показывать готовые' />\n              </Grid>\n            </>\n              :\n            null\n          }\n          \n          \n          \n          <Grid item xs={12} sm={12}>\n            \n            <TableContainer component={Paper}>\n              <Table aria-label=\"a dense table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>#</TableCell>\n                    <TableCell>Тип</TableCell>\n                    <TableCell>Время заказа</TableCell>\n                    <TableCell>Время предзакза</TableCell>\n                    \n                    <TableCell>Время выхода на стол</TableCell>\n                    <TableCell>Во сколько собрали</TableCell>\n                    <TableCell>Закрыли</TableCell>\n                    \n                    <TableCell>Приготовили</TableCell>\n                    <TableCell>Отдали</TableCell>\n                    <TableCell>Обещали</TableCell>\n                    \n                    <TableCell>Статус</TableCell>\n                    <TableCell>Стол</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  {this.state.read.map( (item, key) => (\n                    <TableRow key={key}>\n                      <TableCell>{item.id}</TableCell>\n                      <TableCell>{item.type_order}</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? '' : item.date_time_order }</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? item.date_time_preorder_ : '' }</TableCell>\n                      \n                      <TableCell>{item.unix_start_stol_or}</TableCell>\n                      <TableCell>{item.give_data_time_}</TableCell>\n                      <TableCell>{item.close_date_time_order}</TableCell>\n                      \n                      <TableCell style = {{backgroundColor: parseInt(item.type_) == 1 ? '' : item.color}}>{item.time_}</TableCell>\n                      <TableCell style = {{backgroundColor: parseInt(item.type_) != 1 ? '' : item.color}}>{item.test_time}</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\n                      \n                      <TableCell>{item.status}</TableCell>\n                      <TableCell>{item.stol_sborki}</TableCell>\n                    </TableRow>\n                  ))}\n                  \n                  {this.state.onstol.map( (item, key) => (\n                    <TableRow key={key} style = {{backgroundColor: 'yellow'}}>\n                      <TableCell>{item.id}</TableCell>\n                      <TableCell>{item.type_order}</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? '' : item.date_time_order }</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? item.date_time_preorder_ : '' }</TableCell>\n                      \n                      <TableCell>{item.unix_start_stol_or}</TableCell>\n                      <TableCell></TableCell>\n                      <TableCell></TableCell>\n                      \n                      <TableCell></TableCell>\n                      <TableCell></TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\n                      \n                      <TableCell>{item.status}</TableCell>\n                      <TableCell>{item.stol_sborki}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n            <TableContainer component={Paper}>\n              <Table aria-label=\"a dense table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>#</TableCell>\n                    <TableCell>Пред</TableCell>\n                    <TableCell>Время оформления</TableCell>\n                    <TableCell>Время выхода на стол</TableCell>\n                    <TableCell>Время закрытия</TableCell>\n                    <TableCell>Обещали</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  {this.state.ordersQueue.map( (item, key) => (\n                    <TableRow key={key}>\n                      <TableCell>{item.id}</TableCell>\n                      <TableCell>{ parseInt(item.is_preorder) == 1 ? item.date_time_preorder : '' }</TableCell>\n                      <TableCell>{ parseInt(item.is_preorder) == 0 ? item.date_time_order : '' }</TableCell>\n                      \n                      <TableCell>{item.time_start_order}</TableCell>\n                      <TableCell>{item.time_end_order}</TableCell>\n                      \n                      <TableCell>{ parseInt(item.is_preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\n                    </TableRow>\n                  ))}\n                  \n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function LiveOrders () {\n  let history = useHistory();\n  \n  return (\n    <Live_Orders history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyAutocomplite, MyDaterange } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass RasByBill_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'ras_by_bill',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      \n      points: [],\n      point: [],\n      date_start: formatDate(new Date()),\n      date_end: formatDate(new Date()),\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\n      items: [],\n      cats: [],\n      items_cat: [],\n      item_cat: 0,\n      \n      myItems: [],\n      \n      calendar: []\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      points: data.points,\n      \n      items: data.items,\n      cats: data.cats,\n      items_cat: data.items_cat\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n  }\n  \n  changeItems(event, data){\n    this.setState({\n      myItems: data\n    })\n  }\n  \n  async getItems(){\n    let data = {\n      points: this.state.point,\n      items: this.state.myItems,\n      item_cat: this.state.item_cat,\n      start_date: this.state.rangeDate[0],\n      end_date: this.state.rangeDate[1],\n    };\n    \n    let res = await this.getData('get_this_rev', data);\n    \n    let summ = 0;\n    \n    res.items_ras.map( (item, key) => {\n      summ += parseFloat(item.sum);\n    } )\n    \n    this.setState({\n      resItems: {\n        items_ras: res.items_ras,\n        pf_ras: res.pf_ras,\n        rec_ras: res.rec_ras,\n        full_sum: summ.toFixed(2)\n      },\n      catItems: null\n    })\n  }\n  \n  async getCats(){\n    let data = {\n      points: this.state.point,\n      items: this.state.myItems,\n      start_date: this.state.rangeDate[0],\n      end_date: this.state.rangeDate[1],\n    };\n    \n    let res = await this.getData('get_this_rev_cat', data);\n    \n    \n    let summ = 0;\n    \n    res.rec_ras.map( (item, key) => {\n      summ += parseFloat(item.this_price);\n    } )\n    \n    this.setState({\n      catItems: {\n        count_pos: res.count_pos,\n        items_ras: res.items_ras,\n        rec_ras: res.rec_ras,\n        full_sum: summ.toFixed(2)\n      },\n      resItems: null\n    })\n  }\n  \n  changeDateRange(data){\n    let dateStart = data[0] ? formatDate(data[0]) : '';\n    let dateEnd = data[1] ? formatDate(data[1]) : '';\n    \n    this.setState({\n      rangeDate: [dateStart, dateEnd]\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">  </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              \n              \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ () => {} } color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.points} multiple={true} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          \n          <Grid item xs={12} sm={4} className=\"MyDaterange\">\n            <MyDaterange startText=\"Дата от\" endText=\"Дата до\" value={this.state.rangeDate} func={ this.changeDateRange.bind(this) } />\n          </Grid>\n          \n          <Grid item xs={12} sm={5}>\n            <MySelect classes={this.state.classes} data={this.state.items_cat} multiple={false} value={this.state.item_cat} func={ (event) => {this.setState({ item_cat: event.target.value })} } label='Категория товара' />\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            <MyAutocomplite classes={this.state.classes} data={this.state.items} multiple={true} value={this.state.myItems} func={ this.changeItems.bind(this) } label='Заготовки' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.getItems.bind(this)}>Показать заготовки</Button>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.getCats.bind(this)}>Показать категории</Button>\n          </Grid>\n        \n        \n          { this.state.resItems && this.state.resItems.items_ras ?\n              \n            <>\n              <Grid item xs={12}>\n                \n                <h1>Куплено по наклданым</h1>\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Наименование товара</TableCell>\n                        <TableCell>Объем товра</TableCell>\n                        <TableCell>Объем заготовки</TableCell>\n                        <TableCell>Сумма</TableCell>\n                        <TableCell>Кол-во наклданых</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      \n                      { this.state.resItems.items_ras.map( (item, key) =>\n                        <TableRow key={key}>\n                          <TableCell> { item.name } </TableCell>\n                          <TableCell> { item.count_item + ' ' + item.ei_name } </TableCell>\n                          <TableCell> { item.count_pf + ' ' + item.ei_name_pf } </TableCell>\n                          <TableCell> { item.sum } </TableCell>\n                          <TableCell> { item.count_bill } </TableCell>\n                        </TableRow>\n                      ) }\n                      \n                      <TableRow>\n                        <TableCell> Всего: </TableCell>\n                        <TableCell> </TableCell>\n                        <TableCell> </TableCell>\n                        <TableCell> { this.state.resItems.full_sum } </TableCell>\n                        <TableCell> </TableCell>\n                      </TableRow>\n                      \n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n              \n              <Grid item xs={12}>\n                \n                <h1>Расход заготовок (включая рецепты)</h1>\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Наименование заготовки</TableCell>\n                        <TableCell>Объем заготовок</TableCell>\n                        <TableCell>Кол-во роллов</TableCell>\n                        <TableCell>Сумма роллов (примерно)</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      \n                      { this.state.resItems.pf_ras.map( (item, key) =>\n                        <TableRow key={key}>\n                          <TableCell> { item.pf_name } </TableCell>\n                          <TableCell> { item.count_pf + ' ' + item.ei_name } </TableCell>\n                          <TableCell> { item.count_rolls } </TableCell>\n                          <TableCell> { item.price_rolls } </TableCell>\n                        </TableRow>\n                      ) }\n                      \n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n              \n              <Grid item xs={12}>\n                \n                <h1>Расход рецептов</h1>\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Наименование заготовки</TableCell>\n                        <TableCell>Объем заготовок</TableCell>\n                        <TableCell>Кол-во роллов</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      \n                      { this.state.resItems.rec_ras.map( (item, key) =>\n                        <TableRow key={key}>\n                          <TableCell> { item.pf_name } </TableCell>\n                          <TableCell> { item.count_pf + ' ' + item.ei_name } </TableCell>\n                          <TableCell> { item.count_rolls } </TableCell>\n                        </TableRow>\n                      ) }\n                      \n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n            </>\n              :\n            null              \n          }\n          \n          { this.state.catItems && this.state.catItems.rec_ras ?\n            <Grid item xs={12}>\n              \n              <Accordion disabled>\n                <AccordionSummary>\n                  <Typography style={{ width: '50%' }}>Роллов: {this.state.catItems.count_pos.count_rolls}</Typography>\n                  <Typography style={{ width: '50%' }}>Пиццы: {this.state.catItems.count_pos.count_pizza}</Typography>\n                </AccordionSummary>\n              </Accordion>\n              \n              { this.state.catItems.rec_ras.map( (item, key) =>\n                <Accordion key={key}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1bh-content\"\n                  >\n                    <Typography style={{ width: '60%' }}>{item.name}</Typography>\n                    <Typography style={{ width: '20%' }}>{item.this_price}</Typography>\n                    <Typography style={{ width: '20%' }}>{item.price_by_items}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    \n                    { item.parent_cat.map( (it, k) =>\n                      <Accordion key={k}>\n                        <AccordionSummary\n                          expandIcon={<ExpandMoreIcon />}\n                          aria-controls=\"panel1bh-content\"\n                        >\n                          <Typography style={{ width: '60%', paddingLeft: 20 }}>{it.name}</Typography>\n                          <Typography style={{ width: '20%', paddingLeft: 20 }}>{it.this_price}</Typography>\n                          <Typography style={{ width: '20%', paddingLeft: 20 }}>{it.price_by_items}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          \n                          <Accordion disabled={true}>\n                            <AccordionSummary>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Товар</Typography>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Товара</Typography>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Заготовок</Typography>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Накладных</Typography>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Сумма</Typography>\n                            </AccordionSummary>\n                          </Accordion>\n                          \n                          { it.items.map( (parent_items, parent_key) =>\n                            <Accordion key={parent_key} disabled={true}>\n                              <AccordionSummary>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.name}</Typography>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_item} {parent_items.ei_name}</Typography>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_pf} {parent_items.ei_name}</Typography>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_bill}</Typography>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.sum}</Typography>\n                              </AccordionSummary>\n                            </Accordion>\n                          ) }\n                          \n                        </AccordionDetails>\n                      </Accordion>\n                    ) }\n                    \n                    \n                  </AccordionDetails>\n                </Accordion>\n              ) }\n              \n              <Accordion disabled>\n                <AccordionSummary>\n                  <Typography style={{ width: '60%', marginRight: -15 }}>Всего:</Typography>\n                  <Typography style={{ width: '40%' }}>{ this.state.catItems.full_sum }</Typography>\n                </AccordionSummary>\n              </Accordion>\n              \n            </Grid>\n              :\n            null              \n          }\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function RasByBill () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <RasByBill_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    borderRadius: 0,\n    width: '100%',\n    height: 150,\n    margin: 0,\n    backgroundColor: '#fff'\n  },\n  avatar2: {\n    borderRadius: 0,\n    width: '100%',\n    height: 130,\n    margin: 0,\n    backgroundColor: '#fff'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  textLink: {\n    color: '#c03'\n  }\n});\n\nclass Reg_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'auth',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      dialogTitle: '',\n      dialogText: '',\n      \n      activeStep: 0,\n      steps: ['Телефон', 'Подтверждение', 'Новый пароль'],\n      \n      phone: '',\n      code: '',\n      pwd: ''\n    };\n  }\n  \n  async componentDidMount(){\n      \n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: '+79879340391',\n        //login: localStorage.getItem('login'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        this.state.history.push(\"/auth\");\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      showReady: this.state.showReady === true ? 1 : 0\n    };\n    \n    let res = await this.getData('get_orders', data);\n    \n    this.setState({\n      read: res.read,\n      onstol: res.onstol,\n      ordersQueue: res.prestol_new\n    })\n  }\n  \n  async nextStep(){\n    if( this.state.activeStep == 0 ){\n      let data = {\n        login: document.getElementById('phone').value\n      }\n      \n      let res = await this.getData('check_phone', data);\n      \n      if( res.st === false ){\n        setTimeout( () => {\n          this.setState({ \n            modalDialog: true,\n            dialogTitle: 'Предупреждение',\n            dialogText: res.text\n          })\n        }, 500 )\n      }else{\n        this.setState({ \n          activeStep: this.state.activeStep+1,\n          phone: data.login\n        })\n      }\n    }else if( this.state.activeStep == 1 ){\n      let data = {\n        login: this.state.phone,\n\t\t\t  code: document.getElementById('code').value\n      }\n      \n      let res = await this.getData('check_code', data);\n      \n      if( res.st === false ){\n        setTimeout( () => {\n          this.setState({ \n            modalDialog: true,\n            dialogTitle: 'Предупреждение',\n            dialogText: res.text\n          })\n        }, 500 )\n      }else{\n        this.setState({ \n          activeStep: this.state.activeStep+1,\n          code: data.code\n        })\n      }\n    }else if( this.state.activeStep == 2 ){\n      let data = {\n        login: this.state.phone,\n        code: this.state.code,\n        pwd: document.getElementById('password').value\n      }\n      \n      let res = await this.getData('save_new_pwd', data);\n      \n      if( res.st === false ){\n        setTimeout( () => {\n          this.setState({ \n            modalDialog: true,\n            dialogTitle: 'Предупреждение',\n            dialogText: res.text\n          })\n        }, 500 )\n      }else{\n        localStorage.setItem('token', res.token)\n      \n        setTimeout( () => {\n          window.location.pathname = '/'\n        }, 300)\n      }\n    }\n  }\n  \n  enterNextStep(event){\n    if( event.charCode == 13 ){\n      this.nextStep();\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{this.state.dialogTitle}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">{this.state.dialogText}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ () => { this.setState({ modalDialog: false }) } } color=\"primary\" autoFocus>Хорошо</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          <Grid item xs={12} sm={6} md={6} lg={4} xl={3}>\n            <div className={this.state.classes.paper}>\n              <Avatar className={this.state.classes.avatar}>\n                <img alt=\"Жако доставка роллов и пиццы\" src=\"../assets/img_other/Favikon.png\" style={{ height: '100%' }} />\n              </Avatar>\n              \n              <Stepper activeStep={this.state.activeStep} alternativeLabel style={{ width: '100%' }}>\n                {this.state.steps.map((label) => (\n                  <Step key={label}>\n                    <StepLabel>{label}</StepLabel>\n                  </Step>\n                ))}\n              </Stepper>\n              <div className={this.state.classes.form} style={{ width: '100%' }}>\n                \n                { this.state.activeStep == 0 ?\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    size=\"small\"\n                    required\n                    fullWidth\n                    id=\"phone\"\n                    label=\"Номер телефона\"\n                    name=\"phone\"\n                    autoComplete=\"phone\"\n                    autoFocus\n                    onKeyPress={ this.enterNextStep.bind(this) }\n                  />  \n                    :\n                  null\n                }\n                \n                { this.state.activeStep == 1 ?\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    size=\"small\"\n                    required\n                    fullWidth\n                    id=\"code\"\n                    label=\"Код из смс\"\n                    name=\"code\"\n                    autoComplete=\"code\"\n                    autoFocus\n                    onKeyPress={ this.enterNextStep.bind(this) }\n                  />  \n                    :\n                  null\n                }\n                \n                { this.state.activeStep == 2 ?\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    size=\"small\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Пароль\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    onKeyPress={ this.enterNextStep.bind(this) }\n                  />\n                    :\n                  null\n                }\n                                  \n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={this.state.classes.submit}\n                  onClick={ this.nextStep.bind(this) }\n                >\n                  Дальше\n                </Button>\n                <Grid container>\n                  <Grid item xs>\n                    <a href=\"/auth\" className={this.state.classes.textLink}>Вернуться к авторизации</a>\n                  </Grid>\n                </Grid>\n                \n                \n              </div>\n              \n              \n            </div>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Reg () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <Reg_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n\nimport TextField from '@mui/material/TextField';\nimport CloseIcon from '@mui/icons-material/Close';\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport Divider from '@mui/material/Divider';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RestoreIcon from '@mui/icons-material/Restore';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ArchiveIcon from '@mui/icons-material/Archive';\nimport Paper from '@mui/material/Paper';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\n\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\n\nimport { MySelect } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  \n}));\n\nclass Revizion_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'revizion',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      \n      revList: [],\n      chooseRev: '',\n      \n      items: [],\n      pf: [],\n      \n      chooseTab: 0,\n      \n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      points: data.point_list,\n      point: data.point_list.length == 1 ? data.point_list[0].id : '0',\n      module_name: data.module_info.name\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      //this.updateData();\n    }, 100 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.getRevList();\n    }, 50 )\n  }\n  \n  changeRev(event){\n    let data = event.target.value;\n    \n    this.setState({\n      chooseRev: data\n    })\n    \n    setTimeout( () => {\n      this.getDataRev();\n    }, 300 )\n  }\n  \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      showReady: this.state.showReady === true ? 1 : 0\n    };\n    \n    let res = await this.getData('get_orders', data);\n    \n    this.setState({\n      read: res.read,\n      onstol: res.onstol,\n      ordersQueue: res.prestol_new\n    })\n  }\n  \n  async getRevList(){\n    let data = {\n      point_id: this.state.point,\n    };\n    \n    let res = await this.getData('get_rev_list', data);\n    \n    this.setState({\n      revList: res,\n      chooseRev: res.length > 0 ? res[0]['id'] : ''\n    })\n    \n    if( res.length > 0 ){\n      setTimeout( () => {\n        this.getDataRev();\n      }, 300 )\n    }\n  }\n  \n  async getDataRev(){\n    let data = {\n      point_id: this.state.point,\n      rev_id: this.state.chooseRev\n    };\n    \n    let res = await this.getData('get_data_rev', data);\n    \n    this.setState({\n      items: res['items'],\n      pf: res['pf'],\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12}>\n            <Link to={\"/revizion/new\"}>Новая ревизия2</Link>\n          </Grid>\n          \n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.revList} value={this.state.chooseRev} func={ this.changeRev.bind(this) } label='Ревизия' />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n          </Grid>\n          \n            \n          \n          \n          \n          <Grid item xs={12} sm={12} id=\"revTable\">\n            \n            <Tabs value={this.state.chooseTab} onChange={ (item, key) => { this.setState({ chooseTab: key }) } } textColor=\"primary\" indicatorColor=\"primary\" centered>\n              <Tab label=\"Товары\" {...a11yProps(0)} />\n              <Tab label=\"Заготовки\" {...a11yProps(1)} />\n            </Tabs>\n            \n            <TabPanel value={this.state.chooseTab} index={0}>\n              \n              <TableContainer component={Paper} >\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Товар</TableCell>\n                      <TableCell>Объем</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    { this.state.items.map( (item, key) => (\n                      <TableRow key={key}>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell>{item.value} {item.ei_name}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              \n            </TabPanel>\n            <TabPanel value={this.state.chooseTab} index={1}>\n              \n              <TableContainer component={Paper} >\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Заготовка</TableCell>\n                      <TableCell>Объем</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    { this.state.pf.map( (item, key) => (\n                      <TableRow key={key}>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell>{item.value} {item.ei_name}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              \n            </TabPanel>\n            \n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nclass RevizionNewItem extends React.Component{\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      item: this.props.item,\n      change: this.props.change\n    };\n  }\n  \n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.state.change !== nextState.change ||\n      this.state.change !== nextProps.change\n    );\n  }\n  \n  render(){\n    return (\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          //aria-controls=\"panel1a-content\"\n          //id=\"panel1a-header\"\n        >\n          <Typography style={{ width: '60%' }}>{this.state.item.name}</Typography>\n          <Typography style={{ width: '40%' }}>{this.state.item.value} {this.state.item.ei_name}</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          \n          \n            { this.state.item.counts.map( (it, k) =>\n              <Grid container spacing={3} key={k} style={{ paddingTop: 10, paddingBottom: 10 }}>\n                <Grid item xs={12} sm={6}>\n                  <MySelect data={ this.state.item.size } value={ it.need_pq } func={ this.props.func.bind(this, 'item', this.props.itemKey, 'need_pq', k) } label='Объем упаковки' />\n                </Grid>\n                <Grid item xs={ k == 0 ? 12 : 9 } sm={5}>\n                  <TextField value={ it.value } onChange={ this.props.func.bind(this, 'item', this.props.itemKey, 'value', k) } fullWidth variant=\"outlined\" size=\"small\" label=\"Количество\" />\n                </Grid>\n                { k == 0 ? null :\n                  <Grid item xs={3} sm={1}>\n                    <Button onClick={this.props.clear.bind(this, 'item', this.props.itemKey, k)} variant=\"contained\"> <CloseIcon /> </Button>\n                  </Grid>\n                }\n                \n              </Grid>\n            ) }\n          \n          \n          <Grid item xs={12} sm={6}>\n            <Button variant=\"contained\" onClick={this.props.copy.bind(this, 'item', this.props.itemKey)}>Дублировать</Button>\n          </Grid>\n          \n        </AccordionDetails>\n      </Accordion>\n    )\n  }\n}\n\nclass RevizionNew_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'revizion',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      \n      revList: [],\n      chooseRev: '',\n      \n      storages: [],\n      items: [],\n      rec: [],\n      pf: [],\n      \n      chooseTab: 0,\n      \n      open: false\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      points: data.point_list,\n      point: data.point_list.length == 1 ? data.point_list[0].id : '0',\n      module_name: data.module_info.name\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      //this.updateData();\n    }, 100 )\n  }\n  \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.getDataRev();\n    }, 300 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n  \n  async getDataRev(){\n    let data = {\n      point_id: this.state.point\n    };\n    \n    let res = await this.getData('get_data_for_new_rev', data);\n    \n    this.setState({\n      storages: res['storages'],\n      items: res['items'],\n      rec: res['rec'],\n      pf: res['pf']\n    })\n  }\n  \n  saveData(type, key_item, data, key_data, event){\n    \n    if( type == 'item' ){\n      let items = this.state.items;\n      \n      items[key_item]['counts'][key_data][ [data] ] = event.target.value;\n      \n      let allVal = 0;\n      \n      items[key_item]['counts'].map( (item, key) => {\n        allVal += parseFloat(item.need_pq) * parseFloat(item.value);\n      } )\n      \n      items[key_item]['value'] = allVal;\n      items[key_item]['change'] ++;\n      \n      this.setState({\n        items: items\n      })\n    }\n    \n    \n  }\n  \n  copyData(type, key_item){\n    if( type == 'item' ){\n      let items = this.state.items;\n      \n      items[key_item]['counts'].push({ need_pq: items[key_item]['counts'][0]['need_pq'], value: 0 })\n      items[key_item]['change'] ++;\n      \n      this.setState({\n        items: items\n      })\n    }\n  }\n  \n  clearData(type, key_item, key_data){\n    \n    if( type == 'item' ){\n      let items = this.state.items;\n      let new_counts = [];\n      \n      items[key_item]['counts'].map( (item, key) => {\n        if( key != key_data ){\n          new_counts.push( item )\n        }\n      } )\n      \n      items[key_item]['counts'] = new_counts;\n      \n      let allVal = 0;\n      \n      items[key_item]['counts'].map( (item, key) => {\n        allVal += parseFloat(item.need_pq) * parseFloat(item.value);\n      } )\n      \n      items[key_item]['value'] = allVal;\n      items[key_item]['change'] ++;\n      \n      this.setState({\n        items: items\n      })\n    }\n    \n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          \n          \n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          \n          <Grid item xs={12} sm={12} id=\"revTable\">\n            \n            <Tabs value={this.state.chooseTab} onChange={ (item, key) => { this.setState({ chooseTab: key }) } } textColor=\"primary\" indicatorColor=\"primary\" centered>\n              <Tab label=\"Товары\" {...a11yProps(0)} />\n              <Tab label=\"Заготовки\" {...a11yProps(1)} />\n            </Tabs>\n            \n            <TabPanel value={this.state.chooseTab} index={0}>\n              \n              { this.state.items.map( (item, key) =>\n                <RevizionNewItem key={key} itemKey={key} item={item} change={item.change} func={ this.saveData.bind(this) } copy={ this.copyData.bind(this) } clear={ this.clearData.bind(this) } />\n              ) }\n              \n              \n            </TabPanel>\n            <TabPanel value={this.state.chooseTab} index={1}>\n              \n              \n              \n            </TabPanel>\n            \n          </Grid>\n        </Grid>\n        \n        <React.Fragment >\n          <SwipeableDrawer\n            anchor={'left'}\n            open={ this.state.open }\n            onClose={ () => { this.setState({ open: false }) } }\n            onOpen={ () => { this.setState({ open: true }) } }\n          >\n            <List style={{ width: '100%' }}>\n              { this.state.storages.map( (item, key) =>\n                <ListItem button key={key}>\n                  <ListItemText primary={ item.name } />\n                </ListItem>\n              ) }\n            </List>\n          </SwipeableDrawer>\n        </React.Fragment>\n        \n        { this.state.storages.length == 0 ? null :\n          <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\n            <BottomNavigation\n              showLabels\n              onChange={(event, newValue) => {\n                this.setState({ open: true })\n              }}\n            >\n              <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n            </BottomNavigation>\n          </Paper>\n        }\n      </>\n    )\n  }\n}\n\nexport function Revizion () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <Revizion_ classes={classes} history={history} />\n  );\n}\n\nexport function RevizionNew () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <RevizionNew_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport { NavLink as Link, useParams } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableFooter from '@mui/material/TableFooter';\nimport Paper from '@mui/material/Paper';\n\nimport Divider from '@mui/material/Divider';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox, MyTimePicker, MyTextInput, MyDaterange, MyAutocomplite, MyDatePicker } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nfunction formatDateDot(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [day, month, year].join('.');\n}\n\nfunction formatDateName(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  //if (month.length < 2) \n  //    month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  let m = '';    \n      \n  switch(parseInt(month)){\n\t\tcase 1:{\n\t\t\tm = 'Января';\n\t\t\tbreak;}\n\t\tcase 2:{\n\t\t\tm = 'Февраля';\n\t\t\tbreak;}\n\t\tcase 3:{\n\t\t\tm = 'Марта';\n\t\t\tbreak;}\n\t\tcase 4:{\n\t\t\tm = 'Апреля';\n\t\t\tbreak;}\n\t\tcase 5:{\n\t\t\tm = 'Мая';\n\t\t\tbreak;}\n\t\tcase 6:{\n\t\t\tm = 'Июня';\n\t\t\tbreak;}\t\n\t\tcase 7:{\n\t\t\tm = 'Июля';\n\t\t\tbreak;}\n\t\tcase 8:{\n\t\t\tm = 'Августа';\n\t\t\tbreak;}\n\t\tcase 9:{\n\t\t\tm = 'Сентября';\n\t\t\tbreak;}\n\t\tcase 10:{\n\t\t\tm = 'Октября';\n\t\t\tbreak;}\n\t\tcase 11:{\n\t\t\tm = 'Ноября';\n\t\t\tbreak;}\n\t\tcase 12:{\n\t\t\tm = 'Декабря';\n\t\t\tbreak;}\t\n\t}    \n      \n  return [day, m].join(' ');\n}\n\nclass SiteSale2_new_ extends React.Component {\n  click = false;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'site_sale_2',\n      module_name: '',\n      is_load: false,\n      modalText: '',\n      \n      points: [],\n      point: 0,\n      cities: [],\n      city: 0,\n      \n      modalDialog: false,\n      modalLink: '',\n      \n      where_promo_list: [\n        {id: 1, name: 'Создать'},\n        {id: 2, name: 'Создать и показать'},\n        {id: 3, name: 'Отправить на почту'},\n        {id: 4, name: 'Отправить в смс'},\n        {id: 5, name: 'Рассылка смс'},\n        {id: 6, name: 'Отправить в ЛК (через 8)'},\n        {id: 7, name: 'Создать сертификат(ы)'},\n        {id: 8, name: 'Отправить через бота ВК'},\n      ],\n      promo_action_list: [],\n      sale_list: [\n        {id: 1, name: 'На товары'},\n        {id: 2, name: 'На категории'},\n        {id: 3, name: 'На все меню (кроме допов и закусок)'},\n      ],\n      promo_conditions_list: [\n        {id: 1, name: 'В корзине есть определенные товар(ы)'},\n        {id: 2, name: 'В корзине набрана определенная сумма'},\n      ],\n      promo_sale_list: [],\n      type_sale_list: [\n        {id: 1, name: 'В рублях'},\n        {id: 2, name: 'В процентах'},\n      ],\n      date_promo_list: [\n        {id: 1, name: 'В определенные даты'},\n        {id: 2, name: '14 дней с 10:00 до 21:40'},\n        {id: 3, name: '14 дней с 00:00 до 23:59'},\n      ],\n      type_order_list: [\n        {id: 1, name: 'Все'},\n        {id: 2, name: 'Доставка'},\n        {id: 3, name: 'Самовывоз'},\n        {id: 4, name: 'Зал'},\n      ],\n      where_order_list: [\n        {id: 1, name: 'В городе'},\n        {id: 2, name: 'На точке'}\n      ],\n      \n      promo_prizw_vk: \n    \t\t'Привет!\\r\\n'+\n    \t\t'Поздравляем 🎉\\r\\n'+\n    \t\t'Промокод --promo-- на --position--, действует до --endDate--. Активировать можно при заказе на доставку, самовывоз и в кафе.\\r\\n\\r\\n'+\n\n    \t\t'Обратите внимание, что за подарочную позицию надо будет заплатить 1 руб, это необходимое условие для получения приза. В промокод не входят соевый соус, имбирь и васаби.\\r\\n\\r\\n'+\n\n    \t\t'Заказы принимаем на сайте --site--\\r\\n\\r\\n'+\n\n    \t\t'Режим работы: с 10:00 до 21:30\\r\\n'+\n    \t\t'Адреса наших кафе:\\r\\n'+\n    \t\t'--addrCity--',\n      \n      spamNameSMS: '',\n        \n      auto_text: true,\n      where_promo: 1,\n      promo_name: '',\n      generate_new: false,\n      count_action: 1,\n      promo_action: 1,\n      type_sale: 3,\n      promo_sale: 1,\n      sale_type: 2,\n      promo_conditions: 2,\n      \n      price_start: 0,\n      price_end: 0,\n      date_promo: 1,\n      \n      date_start: formatDate(new Date()),\n      date_end: formatDate(new Date()),\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\n      time_start: '10:00',\n      time_end: '21:30',\n      \n      promo_length: 5,\n      promo_count: 1,\n      \n      day_1: true,\n      day_2: true,\n      day_3: true,\n      day_4: true,\n      day_5: true,\n      day_6: true,\n      day_7: true,\n      \n      type_order: 1,\n      where_order: 1,\n      \n      numberList: '',\n      promo_desc_true: '',\n      promo_desc_false: '',\n      textSMS: '',\n      \n      \n      addItem: null,\n      addItemCount: 1,\n      addItemPrice: 1,\n      addItemAllPrice: 0,\n      \n      itemsAdd: [],\n      itemsAddPrice: [],\n      items: [],\n      cats: [],\n      saleCat: [],\n      saleItem: [],\n      \n      priceItem: null,\n      \n      conditionItems: [],\n      \n      testDate: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all_for_new');\n    \n    let date = new Date();\n    let fullDate = '';\n    \n    let Y = date.getFullYear();\n    let M = date.getMonth()+1;\n    let D = date.getDate();\n    \n    fullDate = Y + '-' + ( parseInt(M) > 9 ? M : '0'+M ) + '-' + ( parseInt(D) > 9 ? D : '0'+D );\n    \n    this.setState({\n      points: data.points,\n      cities: data.cities,\n      module_name: data.module_info.name,\n      promo_action_list: data.promo_action_list,\n      promo_sale_list: data.promo_sale_list,\n      \n      date_start: fullDate,\n      date_end: fullDate,\n      \n      items: data.items,\n      cats: data.cats\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();     \n      this.generateTextDescTrue(); \n    }, 300 )\n  }\n  \n  async save(){\n    \n    if( !this.click ){\n      this.click = true;  \n      \n      let count_promo = this.state.promo_sale_list.find( (item) => parseInt(item.id) == parseInt(this.state.promo_sale) )['name'];\n      \n      let conditionItems = [];\n      \n      this.state.conditionItems.map( (item) => {\n        conditionItems.push(item.id)\n      } )\n      \n      \n      let promo_items = [];\n      \n      this.state.saleItem.map( (item) => {\n        promo_items.push(item.id)\n      } )\n      \n      \n      let promo_cat = [];\n      \n      this.state.saleCat.map( (item) => {\n        promo_cat.push(item.id)\n      } )\n      \n      let dateList = [];\n      \n      this.state.testDate.map( (item) => {\n        dateList.push( (new Date(item).toISOString()).split('T')[0] );\n      } )\n      \n      dateList = dateList.join(',')\n      \n      let data = {\n        spamNameSMS: this.state.spamNameSMS,\n        promo_vk_prize: this.state.promo_vk_prize,\n        cert_text: this.state.cert_text,\n        addr: this.state.numberList,\n        where_promo: this.state.where_promo,\n        promo_count: this.state.promo_count,\n        promo_len: this.state.promo_length,\n        promo_name: this.state.promo_name,\n        generate: this.state.generate_new ? 1 : 0,\n        promo_in_count: this.state.count_action,\n        promo_action: this.state.promo_action,\n        promo_type_sale: this.state.type_sale,\n        count_promo: count_promo,\n        promo_type: this.state.sale_type,\n        promo_conditions: this.state.promo_conditions,\n        \n        promo_summ: this.state.price_start,\n        promo_summ_to: this.state.price_end,\n        promo_when: this.state.date_promo,\n        \n        date_start: this.state.date_start,\n        date_end: this.state.date_end,\n        time_start: this.state.time_start,\n        time_end: this.state.time_end,\n        \n        day_1: this.state.day_1 ? 1 : 0,\n        day_2: this.state.day_2 ? 1 : 0,\n        day_3: this.state.day_3 ? 1 : 0,\n        day_4: this.state.day_4 ? 1 : 0,\n        day_5: this.state.day_5 ? 1 : 0,\n        day_6: this.state.day_6 ? 1 : 0,\n        day_7: this.state.day_7 ? 1 : 0,\n        \n        promo_type_order: this.state.type_order,\n        promo_where: this.state.where_order,\n        \n        numberList: this.state.numberList,\n        \n        promo_city: this.state.city,\n        promo_point: this.state.point,\n        \n        about_promo_text: this.state.promo_desc_true,\n        condition_promo_text: this.state.promo_desc_false,\n        textSMS: this.state.textSMS,\n        \n        \n        promo_items: JSON.stringify(promo_items),\n        promo_cat: JSON.stringify(promo_cat),\n        promo_items_add: JSON.stringify(this.state.itemsAdd),\n        promo_items_sale: JSON.stringify(this.state.itemsAddPrice),\n        promo_conditions_items: JSON.stringify(conditionItems),\n        \n        date_between: dateList\n      };\n      \n      let res = await this.getData('save_new_promo', data);\n      \n      console.log( res )\n      \n      //создать\n      if( parseInt(this.state.where_promo) == 1 || parseInt(this.state.where_promo) == 8 ){\n        this.setState({\n          modalDialog: true,\n          modalText: 'Создано'\n        })\n      }\n      \n      //создать и показать\n      if( parseInt(this.state.where_promo) == 2 ){\n        this.setState({\n          modalDialog: true,\n          modalText: 'Промокоды: '+res.promo_text.join(', ')\n        })\n      }\n      \n      //почта\n      if( parseInt(this.state.where_promo) == 3 ){\n        this.setState({\n          modalDialog: true,\n          modalText: res.text\n        })\n      }\n      \n      //смс / смс рассылка / ЛК\n      if( parseInt(this.state.where_promo) == 4 || parseInt(this.state.where_promo) == 5 || parseInt(this.state.where_promo) == 6 ){\n        this.setState({\n          modalDialog: true,\n          modalText: res.text\n        })\n      }\n      \n      //сертификаты\n      if( parseInt(this.state.where_promo) == 7 ){\n        this.setState({\n          modalDialog: true,\n          modalText: res.text,\n          modalLink: res.link\n        })\n      }\n      \n      setTimeout( () => {\n        this.click = false;    \n      }, 300 )\n    }\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n        this.click = false;\n      }, 300 )\n    });\n  }\n  \n  changeData(type, event){\n    this.setState({\n      [ type ]: event.target.value\n    })\n    \n    if( type == 'date_promo' && (event.target.value == 2 || event.target.value == 3) ){\n      let thisDay = new Date();\n      let nextDay = new Date();\n      nextDay.setDate(nextDay.getDate() + 14);\n      \n      this.setState({\n        rangeDate: [formatDate(thisDay), formatDate(nextDay)],\n        date_start: formatDate(thisDay),\n        date_end: formatDate(nextDay),\n        \n        time_start: event.target.value == 2 ? '10:00' : '00:00',\n        time_end: event.target.value == 2 ? '21:40' : '23:59',\n      })\n    }\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();   \n      this.generateTextDescTrue();   \n    }, 300 )\n  }\n  \n  changeDataCheck(type, event){\n    this.setState({\n      [ type ]: event.target.checked\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();    \n      this.generateTextDescTrue();  \n    }, 300 )\n  }\n  \n  changeDateRange(data){\n    let dateStart = data[0] ? formatDate(data[0]) : '';\n    let dateEnd = data[1] ? formatDate(data[1]) : '';\n    \n    this.setState({\n      rangeDate: [dateStart, dateEnd],\n      date_start: dateStart,\n      date_end: dateEnd,\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  changeDataData(type, data){\n    this.setState({\n      [ type ]: data\n    });\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  generateTextDescTrue(){\n    \n    if( !this.state.auto_text ){\n      return ;\n    }\n    \n    let promo_action = this.state.promo_action;\n    let textTrue = '';\n    \n    if(parseInt(promo_action) == 1){//скидка\n      var promo_type_sale = this.state.type_sale,\n        count_promo = this.state.promo_sale_list.find( (item) => parseInt(item.id) == parseInt(this.state.promo_sale) )['name'],//размер скидки\n        promo_type = this.state.sale_type; //1 - рубли 2 %\n\n      if(parseInt(promo_type_sale) == 1){//товары\n        var promo_items = this.state.saleItem,\n          items = '';\n\n        promo_items.map(function(item, key){\n          items += item.name+', ';\n        })\n\n        items = items.substring(0, items.length - 2);\n\n        textTrue = 'скидку на '+items+' в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\t\n      if(parseInt(promo_type_sale) == 2){//категории\n        var promo_items = this.state.saleCat,\n          items = '';\n\n        promo_items.map(function(item, key){\n          items += item.name+', ';\n        })\n\n        items = items.substring(0, items.length - 2);\n\n        textTrue = 'скидку на '+items+' в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\n      if(parseInt(promo_type_sale) == 3){//все\n        textTrue = 'скидку на всё меню, кроме напитков, соусов, приправ и палочек, в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\n    }\n    \n    if(parseInt(promo_action) == 2){//добавляет товар\n      var itemText = '';\n\n      this.state.itemsAdd.map( (item, key) => {\n        if(parseInt(item['price']) == 0){\n          itemText += 'бесплатную '+item['name']+' '+item['count']+'шт. '+'за '+item['price']+'руб., ';\n        }else{\n          itemText += item['name']+' '+item['count']+'шт. '+'за '+item['price']+'руб., ';\n        }\n      } )\n      \n      itemText = itemText.substring(0, itemText.length - 2);\n\n      textTrue = this.state.itemsAdd.length == 1 ? 'позицию '+itemText : 'позиции '+itemText;\n    }\t\n    \n    if(parseInt(promo_action) == 3){//товар за цену\n      var itemText = '';\n\n      this.state.itemsAddPrice.map( (item, key) => {\n        itemText += item['name']+' по '+item['price']+'руб., ';\n      } )\n      \n      itemText = itemText.substring(0, itemText.length - 2);\n\n      textTrue = this.state.itemsAddPrice.length-1 == 1 ? 'позицию '+itemText : 'позиции '+itemText;\n    }\n    \n    let textSMS = 'Промокод --promo_name--, действует до '+formatDateName(this.state.date_end)+'. Заказывай на jacofood.ru!'\n    \n    this.setState({\n      promo_desc_true: textTrue,\n      textSMS: textSMS,\n      cert_text: textTrue\n    })\n  }\n  \n  generateTextDescFalse(){\n    \n    if( !this.state.auto_text ){\n      return ;\n    }\n    \n    var dop_text = '';\n    \n    let text = '';\n    \n    console.log( this.state.testDate )\n    \n    if( this.state.testDate.length > 0 ){\n      \n      let dateList = [];\n      \n      this.state.testDate.map( (item) => {\n        dateList.push( (new Date(item).toISOString()).split('T')[0] );\n      } )\n      \n\t\t\ttext = '(кроме ';\n\t\t\t\n\t\t\tdateList.map(function(item){\n\t\t\t\ttext += formatDateName(item) + ', ';\n\t\t\t});\n\t\t\t\n\t\t\ttext = text.slice(0, -1);\n\t\t\ttext = text.slice(0, -1);\n\n      text += ')';\n      \n      console.log( 'text', text )\n\t\t}\n    \n\t\tif( parseInt(this.state.where_order) == 1 ){\n\t\t\t//город\n\t\t\tif( parseInt(this.state.city) != 0 ){\n        let city_name = this.state.cities.find( (item) => parseInt(item.id) == parseInt(this.state.city) )['name'];\n        \n\t\t\t\tdop_text = ' в г. '+city_name;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif( parseInt(this.state.where_order) == 2 ){\n\t\t\t//точка\n\t\t\tif( parseInt(this.state.point) != 0 ){\n        let point_name = this.state.points.find( (item) => parseInt(item.id) == parseInt(this.state.point) )['name'];\n        \n\t\t\t\tdop_text = ' в г. '+point_name;\n\t\t\t}\n\t\t}\n    \n    let dateStart = formatDateDot(this.state.date_start);\n    let dateEnd = formatDateDot(this.state.date_end);\n    \n    let textFalse = 'Промокод действует c '+dateStart+' до '+dateEnd+' с '+this.state.time_start+' до '+this.state.time_end+' '+text+dop_text;\n    \n    this.setState({\n      promo_desc_false: textFalse\n    })\n\t}\n  \n  addItemAdd(){\n    let thisItems = this.state.itemsAdd;\n    \n    let check = thisItems.find( (item) => parseInt(item.item_id) == parseInt(this.state.addItem.id) );\n    \n    if( !check ){\n      let thisItem = this.state.items.find( (item) => parseInt(item.id) == parseInt(this.state.addItem.id) );\n      \n      thisItems.push({\n        item_id: this.state.addItem.id,\n        name: thisItem.name,\n        count: this.state.addItemCount,\n        price: this.state.addItemPrice,\n      })\n      \n      let addItemAllPrice = 0;\n      \n      thisItems.map( (item) => {\n        addItemAllPrice += parseInt(item.price)\n      } )\n      \n      this.setState({\n        itemsAdd: thisItems,\n        addItemAllPrice: addItemAllPrice\n      })\n    }\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  delItemAdd(item){\n    let thisItems = this.state.itemsAdd;\n    \n    let newItems = thisItems.filter( (it) => parseInt(it.item_id) != parseInt(item.item_id) );\n    \n    let addItemAllPrice = 0;\n      \n    newItems.map( (item) => {\n      addItemAllPrice += parseInt(item.price)\n    } )\n    \n    this.setState({\n      itemsAdd: newItems,\n      addItemAllPrice: addItemAllPrice\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  priceItemAdd(){\n    let thisItems = this.state.itemsAddPrice;\n    \n    let check = thisItems.find( (item) => parseInt(item.item_id) == parseInt(this.state.priceItem.id) );\n    \n    if( !check ){\n      let thisItem = this.state.items.find( (item) => parseInt(item.id) == parseInt(this.state.priceItem.id) );\n      \n      thisItems.push({\n        item_id: this.state.priceItem.id,\n        name: thisItem.name,\n        price: this.state.addItemPrice,\n      })\n      \n      this.setState({\n        itemsAddPrice: thisItems\n      })\n    }\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  delItemPrice(item){\n    let thisItems = this.state.itemsAddPrice;\n    \n    let newItems = thisItems.filter( (it) => parseInt(it.item_id) != parseInt(item.item_id) );\n    \n    let addItemAllPrice = 0;\n      \n    newItems.map( (item) => {\n      addItemAllPrice += parseInt(item.price)\n    } )\n    \n    this.setState({\n      itemsAddPrice: newItems\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false, modalLink: '' }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Результат операции</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            <Typography>{this.state.modalText}</Typography>\n            <br />\n            { this.state.modalLink == '' ? null :\n              <a href={this.state.modalLink} style={{ color: 'red' }}>Скачать</a>\n            }\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={ () => { this.setState({ modalDialog: false }) } }>Хорошо</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            { this.state.generate_new === true ? null :\n              <Grid item xs={12} sm={3}>\n                <MyTextInput classes={this.state.classes} value={this.state.promo_name} func={ this.changeData.bind(this, 'promo_name') } label='Название промокода' />\n              </Grid>\n            }\n            { this.state.generate_new === false ? null :\n              <Grid item xs={12} sm={3}>\n                <MyTextInput classes={this.state.classes} value={this.state.promo_length} func={ this.changeData.bind(this, 'promo_length') } label='Длина промокода' />\n              </Grid>\n            }\n            \n            <Grid item xs={12} sm={3}>\n              <MyCheckBox classes={this.state.classes} value={this.state.generate_new} func={ this.changeDataCheck.bind(this, 'generate_new') } label='Сгенерировать' />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <MyTextInput classes={this.state.classes} value={this.state.count_action} func={ this.changeData.bind(this, 'count_action') } label='Количество активаций' />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <MyTextInput classes={this.state.classes} value={this.state.promo_count} func={ this.changeData.bind(this, 'promo_count') } label='Количество промокодов' />\n            </Grid>\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={3}>\n              <MySelect classes={this.state.classes} data={this.state.promo_action_list} value={this.state.promo_action} func={ this.changeData.bind(this, 'promo_action') } label='Промокод дает:' />\n            </Grid>\n            \n          </Grid>\n          \n          { parseInt(this.state.promo_action) !== 1 ? null :\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n              \n              <Grid item xs={12} sm={3}>\n                <MySelect classes={this.state.classes} data={this.state.sale_list} value={this.state.type_sale} func={ this.changeData.bind(this, 'type_sale') } label='Скидка' />\n              </Grid>\n            \n              { parseInt(this.state.type_sale) !== 1 ? null :\n                <Grid item xs={12} sm={9}>\n                  <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.saleItem} func={ (event, data) => { this.changeDataData('saleItem', data) } } multiple={true} label='Товары' />\n                </Grid>\n              }\n              \n              { parseInt(this.state.type_sale) !== 2 ? null :\n                <Grid item xs={12} sm={9}>\n                  <MyAutocomplite classes={this.state.classes} data={this.state.cats} value={this.state.saleCat} func={ (event, data) => { this.changeDataData('saleCat', data) } } multiple={true} label='Категории' />\n                </Grid>\n              }\n            \n              <Grid item xs={12} sm={3}>\n                <MySelect classes={this.state.classes} data={this.state.promo_sale_list} value={this.state.promo_sale} func={ this.changeData.bind(this, 'promo_sale') } label='Размер скидки' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <MySelect classes={this.state.classes} data={this.state.type_sale_list} value={this.state.sale_type} func={ this.changeData.bind(this, 'sale_type') } label='Какая скидка' />\n              </Grid>\n            \n            </Grid>\n          }\n          \n          { parseInt(this.state.promo_action) !== 2 ? null :\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n              \n              <Grid item xs={12} sm={3}>\n                <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.addItem} func={ (event, data) => { this.changeDataData('addItem', data) } } label='Позиция' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <MyTextInput classes={this.state.classes} value={this.state.addItemCount} func={ this.changeData.bind(this, 'addItemCount') } label='Количество' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <MyTextInput classes={this.state.classes} value={this.state.addItemPrice} func={ this.changeData.bind(this, 'addItemPrice') } label='Цена за все' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <Button variant=\"contained\" onClick={this.addItemAdd.bind(this)}>Добавить</Button>\n              </Grid>\n              \n            </Grid>\n          }\n          \n          { parseInt(this.state.promo_action) !== 2 ? null :\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Позиция</TableCell>\n                      <TableCell>Количество</TableCell>\n                      <TableCell>Цена за все</TableCell>\n                      <TableCell></TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    \n                    { this.state.itemsAdd.map( (item, key) =>\n                      <TableRow key={key}>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell>{item.count}</TableCell>\n                        <TableCell>{item.price}</TableCell>\n                        <TableCell> <CloseIcon onClick={this.delItemAdd.bind(this, item)} style={{ cursor: 'pointer' }} /> </TableCell>\n                      </TableRow>\n                    ) }\n                    \n                    \n                  </TableBody>\n                  \n                  <TableFooter>\n                    <TableRow>\n                      <TableCell></TableCell>\n                      <TableCell></TableCell>\n                      <TableCell>{this.state.addItemAllPrice}</TableCell>\n                      <TableCell></TableCell>\n                    </TableRow>\n                  </TableFooter>\n                  \n                  \n                </Table>\n              </Grid>  \n            </Grid>\n          }\n          \n          { parseInt(this.state.promo_action) !== 3 ? null :\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n              \n              <Grid item xs={12} sm={3}>\n                <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.priceItem} func={ (event, data) => { this.changeDataData('priceItem', data) } } label='Позиция' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <MyTextInput classes={this.state.classes} value={this.state.addItemCount} func={ this.changeData.bind(this, 'addItemCount') } label='Цена за 1 ед' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <Button variant=\"contained\" onClick={this.priceItemAdd.bind(this)}>Добавить</Button>\n              </Grid>\n              \n            </Grid>\n          }\n          \n          { parseInt(this.state.promo_action) !== 3 ? null :\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Позиция</TableCell>\n                      <TableCell>Цена за 1 ед</TableCell>\n                      <TableCell></TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    \n                    { this.state.itemsAddPrice.map( (item, key) =>\n                      <TableRow key={key}>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell>{item.price}</TableCell>\n                        <TableCell> <CloseIcon onClick={this.delItemPrice.bind(this, item)} style={{ cursor: 'pointer' }} /> </TableCell>\n                      </TableRow>\n                    ) }\n                    \n                  </TableBody>\n                </Table>\n              </Grid>  \n            </Grid>\n          }\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.promo_conditions_list} value={this.state.promo_conditions} func={ this.changeData.bind(this, 'promo_conditions') } label='Условие' />\n            </Grid>\n            \n            { parseInt(this.state.promo_conditions) !== 1 ? null :\n              <>\n                <Grid item xs={12} sm={8}>\n                  <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.conditionItems} func={ (event, data) => { this.changeDataData('conditionItems', data) } } multiple={true} label='Товары' />\n                </Grid>\n              </>\n            }\n            \n            { parseInt(this.state.promo_conditions) !== 2 ? null :\n              <>\n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={this.state.price_start} func={ this.changeData.bind(this, 'price_start') } label='Сумма от' />\n                </Grid>\n              \n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={this.state.price_end} func={ this.changeData.bind(this, 'price_end') } label='Сумма до' />\n                </Grid>\n              </>\n            }\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={3}>\n              <MySelect classes={this.state.classes} data={this.state.date_promo_list} value={this.state.date_promo} func={ this.changeData.bind(this, 'date_promo') } label='Когда работает промокод' />\n            </Grid>\n            \n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={6} className=\"MyDaterange\">\n              <MyDaterange startText=\"Дата от\" endText=\"Дата до\" value={this.state.rangeDate} func={ this.changeDateRange.bind(this) } />\n            </Grid>\n           \n            <Grid item xs={12} sm={3}>\n              <MyTimePicker classes={this.state.classes} label=\"Время от\" value={this.state.time_start} func={ this.changeData.bind(this, 'time_start') } />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <MyTimePicker classes={this.state.classes} label=\"Время до\" value={this.state.time_end} func={ this.changeData.bind(this, 'time_end') } />\n            </Grid>\n              \n            \n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            <Grid item xs={12} sm={12}>\n              <MyDatePicker multiple={false} label={'Кроме дат'} value={this.state.testDate} func={ this.changeDataData.bind(this, 'testDate') } />\n            </Grid>\n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ marginTop: 20 }} spacing={3}>\n            \n            <MyCheckBox classes={this.state.classes} value={this.state.day_1} func={ this.changeDataCheck.bind(this, 'day_1') } label='Понедельник' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_2} func={ this.changeDataCheck.bind(this, 'day_2') } label='Вторник' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_3} func={ this.changeDataCheck.bind(this, 'day_3') } label='Среда' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_4} func={ this.changeDataCheck.bind(this, 'day_4') } label='Четверг' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_5} func={ this.changeDataCheck.bind(this, 'day_5') } label='Пятница' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_6} func={ this.changeDataCheck.bind(this, 'day_6') } label='Суббота' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_7} func={ this.changeDataCheck.bind(this, 'day_7') } label='Воскресенье' />\n           \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.type_order_list} value={this.state.type_order} func={ this.changeData.bind(this, 'type_order') } label='Тип заказа' />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.where_order_list} value={this.state.where_order} func={ this.changeData.bind(this, 'where_order') } label='Где работает' />\n            </Grid>\n            { parseInt(this.state.where_order) !== 1 ? null :\n              <Grid item xs={12} sm={4}>\n                <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city} func={ this.changeData.bind(this, 'city') } label='Город' />\n              </Grid>\n            }\n            { parseInt(this.state.where_order) !== 2 ? null :\n              <Grid item xs={12} sm={4}>\n                <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point} func={ this.changeData.bind(this, 'point') } label='Точка' />\n              </Grid>\n            }\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.where_promo_list} value={this.state.where_promo} func={ this.changeData.bind(this, 'where_promo') } label='Что сделать с промокодом' />\n            </Grid>\n            \n            { parseInt(this.state.where_promo) == 1 || parseInt(this.state.where_promo) == 2 ? null :\n              parseInt(this.state.where_promo) == 5 ?\n              \n                <Grid item xs={12} sm={4}>\n                  <span>Список номеров для рассылки</span>\n                  <TextareaAutosize\n                    aria-label=\"empty textarea\"\n                    placeholder=\"\"\n                    minRows={3}\n                    value={this.state.numberList}\n                    onChange={ this.changeData.bind(this, 'numberList') }\n                    label=\"Куда отправить\"\n                    style={{ width: '100%' }}\n                  />\n                </Grid>\n                  :\n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={this.state.numberList} func={ this.changeData.bind(this, 'numberList') } label='Куда отправить' />\n                </Grid>\n            \n            }\n            \n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            { parseInt(this.state.where_promo) !== 8 ? null :\n              <Grid item xs={12} sm={12}>\n                <span>Текст расссылки</span>\n                <TextareaAutosize\n                  aria-label=\"empty textarea\"\n                  placeholder=\"\"\n                  minRows={3}\n                  value={this.state.promo_prizw_vk}\n                  onChange={ this.changeData.bind(this, 'promo_prizw_vk') }\n                  style={{ width: '100%' }}\n                />\n              </Grid>\n            }\n            \n            { parseInt(this.state.where_promo) == 5 ?\n              <Grid item xs={12} sm={12}>\n                <MyTextInput classes={this.state.classes} value={this.state.spamNameSMS} func={ this.changeData.bind(this, 'spamNameSMS') } label='Наименование рассылки' />\n              </Grid>\n                :\n              null\n            }\n            \n            { parseInt(this.state.where_promo) == 4 || parseInt(this.state.where_promo) == 5 ?\n              <Grid item xs={12} sm={12}>\n                <MyTextInput classes={this.state.classes} value={this.state.textSMS} func={ this.changeData.bind(this, 'textSMS') } label='Текст СМС ( --promo_name-- )' />\n              </Grid>\n                :\n              null\n            }\n            \n            { parseInt(this.state.where_promo) == 7 ?\n              <Grid item xs={12} sm={12}>\n                <MyTextInput classes={this.state.classes} value={this.state.cert_text} func={ this.changeData.bind(this, 'cert_text') } label='Текст для описания сертификата' />\n              </Grid>\n                :\n              null\n            }\n            \n            <Grid item xs={12} sm={12}>\n              <MyCheckBox classes={this.state.classes} value={this.state.auto_text} func={ this.changeDataCheck.bind(this, 'auto_text') } label='Авто-текст' />\n            </Grid>\n            \n            <Grid item xs={12} sm={12}>\n              <MyTextInput classes={this.state.classes} value={this.state.promo_desc_true} func={ this.changeData.bind(this, 'promo_desc_true') } label='Описание промокода после активации (Промокод дает: )' />\n            </Grid>\n            \n            <Grid item xs={12} sm={12}>\n              <MyTextInput classes={this.state.classes} value={this.state.promo_desc_false} func={ this.changeData.bind(this, 'promo_desc_false') } label='Условие промокода, когда условия не соблюдены' />\n            </Grid>\n            \n          </Grid>\n          \n          \n          \n          <Grid container direction=\"row\" justifyContent=\"end\" style={{ paddingTop: 50 }} spacing={3}>\n            <Button variant=\"contained\" onClick={this.save.bind(this)}>Сохранить</Button>\n          </Grid>\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nclass SiteSale2_edit_ extends React.Component {\n  click = false;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'site_sale_2',\n      module_name: '',\n      is_load: false,\n      modalText: '',\n      \n      points: [],\n      point: 0,\n      cities: [],\n      city: 0,\n      \n      modalDialog: false,\n      modalLink: '',\n      \n      where_promo_list: [\n        {id: 1, name: 'Создать'},\n        {id: 2, name: 'Создать и показать'},\n        {id: 3, name: 'Отправить на почту'},\n        {id: 4, name: 'Отправить в смс'},\n        {id: 5, name: 'Рассылка смс'},\n        {id: 6, name: 'Отправить в ЛК (через 8)'},\n        {id: 7, name: 'Создать сертификат(ы)'},\n      ],\n      promo_action_list: [],\n      sale_list: [\n        {id: 1, name: 'На товары'},\n        {id: 2, name: 'На категории'},\n        {id: 3, name: 'На все меню (кроме допов и закусок)'},\n      ],\n      promo_conditions_list: [\n        {id: 1, name: 'В корзине есть определенные товар(ы)'},\n        {id: 2, name: 'В корзине набрана определенная сумма'},\n      ],\n      promo_sale_list: [],\n      type_sale_list: [\n        {id: 1, name: 'В рублях'},\n        {id: 2, name: 'В процентах'},\n      ],\n      date_promo_list: [\n        {id: 1, name: 'В определенные даты'},\n        {id: 2, name: '14 дней с 10:00 до 21:40'},\n        {id: 3, name: '14 дней с 00:00 до 23:59'},\n      ],\n      type_order_list: [\n        {id: 1, name: 'Все'},\n        {id: 2, name: 'Доставка'},\n        {id: 3, name: 'Самовывоз'},\n        {id: 4, name: 'Зал'},\n      ],\n      where_order_list: [\n        {id: 1, name: 'В городе'},\n        {id: 2, name: 'На точке'}\n      ],\n      \n      auto_text: false,\n      where_promo: 1,\n      promo_name: '',\n      generate_new: false,\n      count_action: 1,\n      promo_action: 1,\n      type_sale: 3,\n      promo_sale: 1,\n      sale_type: 2,\n      promo_conditions: 2,\n      \n      price_start: 0,\n      price_end: 0,\n      date_promo: 1,\n      \n      date_start: formatDate(new Date()),\n      date_end: formatDate(new Date()),\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\n      time_start: '10:00',\n      time_end: '21:30',\n      \n      promo_length: 5,\n      promo_count: 1,\n      \n      day_1: true,\n      day_2: true,\n      day_3: true,\n      day_4: true,\n      day_5: true,\n      day_6: true,\n      day_7: true,\n      \n      type_order: 1,\n      where_order: 1,\n      \n      numberList: '',\n      promo_desc_true: '',\n      promo_desc_false: '',\n      textSMS: '',\n      \n      \n      addItem: 1,\n      addItemCount: 1,\n      addItemPrice: 1,\n      addItemAllPrice: 0,\n      \n      itemsAdd: [],\n      itemsAddPrice: [],\n      items: [],\n      cats: [],\n      saleCat: [],\n      saleItem: [],\n      \n      priceItem: 1,\n      \n      conditionItems: [],\n      \n      testDate: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = {\n      promo_id: this.props.promoId\n    }\n    \n    let res = await this.getData('get_all_for_edit', data);\n    \n    let items = [];\n    \n    if( res.promo.promo_conditions_items.length > 4 ){\n      res.promo.promo_conditions_items = JSON.parse(res.promo.promo_conditions_items, true);\n      \n      res.promo.promo_conditions_items.map( (item) => {\n        let findItem = res.items.find( (it) => parseInt(it.id) == parseInt(item) );\n        \n        items.push(findItem)\n      } )\n    }\n    \n    setTimeout( () => {\n      \n      console.log( 'conditionItems', items )\n      console.log( 'items', res.items )\n      \n      let limDate = [];\n      \n      res.limit.map( (item) => {\n        limDate.push( new Date(item.date) )\n      } )\n      \n      this.setState({\n        points: res.points,\n        cities: res.cities,\n        module_name: res.module_info.name,\n        promo_action_list: res.promo_action_list,\n        promo_sale_list: res.promo_sale_list,\n        \n        date_start: res.promo.date1,\n        date_end: res.promo.date2,\n        time_start: res.promo.time1,\n        time_end: res.promo.time2,\n        rangeDate: [res.promo.date1, res.promo.date2],\n        \n        items: res.items,\n        cats: res.cats,\n        \n        day_1: parseInt(res.promo.d1) == 1 ? true : false,\n        day_2: parseInt(res.promo.d2) == 1 ? true : false,\n        day_3: parseInt(res.promo.d3) == 1 ? true : false,\n        day_4: parseInt(res.promo.d4) == 1 ? true : false,\n        day_5: parseInt(res.promo.d5) == 1 ? true : false,\n        day_6: parseInt(res.promo.d6) == 1 ? true : false,\n        day_7: parseInt(res.promo.d7) == 1 ? true : false,\n        \n        count_action: res.promo.count,\n        promo_name: res.promo.name,\n        \n        price_start: res.promo.promo_summ,\n        price_end: res.promo.promo_summ_to,\n        \n        conditionItems: items,\n        promo_conditions: items.length > 0 ? 1 : 2,\n        \n        point: res.promo.point_id,\n        city: res.promo.city_id,\n        \n        where_order: parseInt(res.promo.city_id) > 0 ? 1 : parseInt(res.promo.point_id) > 0 ? 2 : 1,\n        \n        type_order: res.promo.type_order,\n        \n        promo_desc_true: res.promo.coment,\n        promo_desc_false: res.promo.condition_text,\n        \n        promo_id: res.promo.id,\n        \n        testDate: limDate\n      })\n    }, 300 )\n    \n    \n    document.title = res.module_info.name;\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();     \n      this.generateTextDescTrue(); \n    }, 300 )\n  }\n  \n  async save(){\n    \n    if( !this.click ){\n      this.click = true;  \n      \n      let conditionItems = [];\n      \n      this.state.conditionItems.map( (item) => {\n        conditionItems.push(item.id)\n      } )\n      \n      \n      let promo_items = [];\n      \n      \n      let promo_cat = [];\n      let dateList = [];\n      \n      this.state.testDate.map( (item) => {\n        dateList.push( (new Date(item).toISOString()).split('T')[0] );\n      } )\n      \n      dateList = dateList.join(',')\n      \n      let data = {\n        promo_id: this.state.promo_id,\n        cert_text: this.state.cert_text,\n        addr: this.state.numberList,\n        where_promo: this.state.where_promo,\n        promo_count: this.state.promo_count,\n        promo_len: this.state.promo_length,\n        promo_name: this.state.promo_name,\n        generate: this.state.generate_new ? 1 : 0,\n        promo_in_count: this.state.count_action,\n        promo_action: this.state.promo_action,\n        promo_type_sale: this.state.type_sale,\n        promo_type: this.state.sale_type,\n        promo_conditions: this.state.promo_conditions,\n        \n        promo_summ: this.state.price_start,\n        promo_summ_to: this.state.price_end,\n        promo_when: this.state.date_promo,\n        \n        date_start: this.state.date_start,\n        date_end: this.state.date_end,\n        time_start: this.state.time_start,\n        time_end: this.state.time_end,\n        \n        day_1: this.state.day_1 ? 1 : 0,\n        day_2: this.state.day_2 ? 1 : 0,\n        day_3: this.state.day_3 ? 1 : 0,\n        day_4: this.state.day_4 ? 1 : 0,\n        day_5: this.state.day_5 ? 1 : 0,\n        day_6: this.state.day_6 ? 1 : 0,\n        day_7: this.state.day_7 ? 1 : 0,\n        \n        promo_type_order: this.state.type_order,\n        promo_where: this.state.where_order,\n        \n        numberList: this.state.numberList,\n        \n        promo_city: this.state.city,\n        promo_point: this.state.point,\n        \n        about_promo_text: this.state.promo_desc_true,\n        condition_promo_text: this.state.promo_desc_false,\n        textSMS: this.state.textSMS,\n        \n        \n        promo_items: JSON.stringify(promo_items),\n        promo_cat: JSON.stringify(promo_cat),\n        promo_items_add: JSON.stringify(this.state.itemsAdd),\n        promo_items_sale: JSON.stringify(this.state.itemsAddPrice),\n        promo_conditions_items: JSON.stringify(conditionItems),\n        \n        date_between: dateList\n      };\n      \n      let res = await this.getData('save_edit_promo', data);\n      \n      console.log( res )\n      \n      this.setState({\n        modalDialog: true,\n        modalText: res.text\n      })\n      \n      setTimeout( () => {\n        this.click = false;    \n      }, 300 )\n    }\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n        \n        this.click = false;    \n      }, 300 )\n    });\n  }\n  \n  changeData(type, event){\n    this.setState({\n      [ type ]: event.target.value\n    })\n    \n    if( type == 'date_promo' && (event.target.value == 2 || event.target.value == 3) ){\n      let thisDay = new Date();\n      let nextDay = new Date();\n      nextDay.setDate(nextDay.getDate() + 14);\n      \n      this.setState({\n        rangeDate: [formatDate(thisDay), formatDate(nextDay)],\n        date_start: formatDate(thisDay),\n        date_end: formatDate(nextDay),\n        \n        time_start: event.target.value == 2 ? '10:00' : '00:00',\n        time_end: event.target.value == 2 ? '21:40' : '23:59',\n      })\n    }\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();   \n      this.generateTextDescTrue();   \n    }, 300 )\n  }\n  \n  changeDataCheck(type, event){\n    this.setState({\n      [ type ]: event.target.checked\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();    \n      this.generateTextDescTrue();  \n    }, 300 )\n  }\n  \n  changeDateRange(data){\n    let dateStart = data[0] ? formatDate(data[0]) : '';\n    let dateEnd = data[1] ? formatDate(data[1]) : '';\n    \n    this.setState({\n      rangeDate: [dateStart, dateEnd],\n      date_start: dateStart,\n      date_end: dateEnd,\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  changeDataData(type, data){\n    this.setState({\n      [ type ]: data\n    });\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  generateTextDescTrue(){\n    \n    if( !this.state.auto_text ){\n      return ;\n    }\n    \n    let promo_action = this.state.promo_action;\n    let textTrue = '';\n    \n    if(parseInt(promo_action) == 1){//скидка\n      var promo_type_sale = this.state.type_sale,\n        count_promo = this.state.promo_sale_list.find( (item) => parseInt(item.id) == parseInt(this.state.promo_sale) )['name'],//размер скидки\n        promo_type = this.state.sale_type; //1 - рубли 2 %\n\n      if(parseInt(promo_type_sale) == 1){//товары\n        var promo_items = this.state.saleItem,\n          items = '';\n\n        promo_items.map(function(item, key){\n          items += item.name+', ';\n        })\n\n        items = items.substring(0, items.length - 2);\n\n        textTrue = 'скидку на '+items+' в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\t\n      if(parseInt(promo_type_sale) == 2){//категории\n        var promo_items = this.state.saleCat,\n          items = '';\n\n        promo_items.map(function(item, key){\n          items += item.name+', ';\n        })\n\n        items = items.substring(0, items.length - 2);\n\n        textTrue = 'скидку на '+items+' в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\n      if(parseInt(promo_type_sale) == 3){//все\n        textTrue = 'скидку на всё меню, кроме напитков, соусов, приправ и палочек, в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\n    }\n    \n    if(parseInt(promo_action) == 2){//добавляет товар\n      var itemText = '';\n\n      this.state.itemsAdd.map( (item, key) => {\n        if(parseInt(item['price']) == 0){\n          itemText += 'бесплатную '+item['name']+' '+item['count']+'шт. '+'за '+item['price']+'руб., ';\n        }else{\n          itemText += item['name']+' '+item['count']+'шт. '+'за '+item['price']+'руб., ';\n        }\n      } )\n      \n      itemText = itemText.substring(0, item.length - 2);\n\n      textTrue = this.state.itemsAdd.length == 1 ? 'позицию '+itemText : 'позиции '+itemText;\n    }\t\n    \n    if(parseInt(promo_action) == 3){//товар за цену\n      var itemText = '';\n\n      this.state.promo_items_sale.map( (item, key) => {\n        itemText += item['name']+' по '+item['price']+'руб., ';\n      } )\n      \n      itemText = itemText.substring(0, itemText.length - 2);\n\n      textTrue = this.state.promo_items_sale.length-1 == 1 ? 'позицию '+itemText : 'позиции '+itemText;\n    }\n    \n    let textSMS = 'Промокод --promo_name--, действует до '+formatDateName(this.state.date_end)+'. Заказывай на jacofood.ru!'\n    \n    this.setState({\n      promo_desc_true: textTrue,\n      textSMS: textSMS,\n      cert_text: textTrue\n    })\n  }\n  \n  generateTextDescFalse(){\n    \n    if( !this.state.auto_text ){\n      return ;\n    }\n    \n    var dop_text = '';\n\t\t\n\t\tif( parseInt(this.state.where_order) == 1 ){\n\t\t\t//город\n\t\t\tif( parseInt(this.state.city) != 0 ){\n        let city_name = this.state.cities.find( (item) => parseInt(item.id) == parseInt(this.state.city) )['name'];\n        \n\t\t\t\tdop_text = ' в г. '+city_name;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif( parseInt(this.state.where_order) == 2 ){\n\t\t\t//точка\n\t\t\tif( parseInt(this.state.point) != 0 ){\n        let point_name = this.state.points.find( (item) => parseInt(item.id) == parseInt(this.state.point) )['name'];\n        \n\t\t\t\tdop_text = ' в г. '+point_name;\n\t\t\t}\n\t\t}\n    \n    let dateStart = formatDateDot(this.state.date_start);\n    let dateEnd = formatDateDot(this.state.date_end);\n    \n    let textFalse = 'Промокод действует c '+dateStart+' до '+dateEnd+' с '+this.state.time_start+' до '+this.state.time_end+dop_text;\n    \n    this.setState({\n      promo_desc_false: textFalse\n    })\n\t}\n  \n  addItemAdd(){\n    let thisItems = this.state.itemsAdd;\n    \n    let check = thisItems.find( (item) => parseInt(item.item_id) == parseInt(this.state.addItem) );\n    \n    if( !check ){\n      let thisItem = this.state.items.find( (item) => parseInt(item.id) == parseInt(this.state.addItem) );\n      \n      thisItems.push({\n        item_id: this.state.addItem,\n        name: thisItem.name,\n        count: this.state.addItemCount,\n        price: this.state.addItemPrice,\n      })\n      \n      let addItemAllPrice = 0;\n      \n      thisItems.map( (item) => {\n        addItemAllPrice += parseInt(item.price)\n      } )\n      \n      this.setState({\n        itemsAdd: thisItems,\n        addItemAllPrice: addItemAllPrice\n      })\n    }\n  }\n  \n  priceItemAdd(){\n    let thisItems = this.state.itemsAddPrice;\n    \n    let check = thisItems.find( (item) => parseInt(item.item_id) == parseInt(this.state.priceItem) );\n    \n    if( !check ){\n      let thisItem = this.state.items.find( (item) => parseInt(item.id) == parseInt(this.state.priceItem) );\n      \n      thisItems.push({\n        item_id: this.state.priceItem,\n        name: thisItem.name,\n        price: this.state.addItemPrice,\n      })\n      \n      this.setState({\n        itemsAddPrice: thisItems\n      })\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false, modalLink: '' }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Результат операции</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            <Typography>{this.state.modalText}</Typography>\n            <br />\n            { this.state.modalLink == '' ? null :\n              <a href={this.state.modalLink} style={{ color: 'red' }}>Скачать</a>\n            }\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={ () => { this.setState({ modalDialog: false }) } }>Хорошо</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={3}>\n              <Typography>Промокод: {this.state.promo_name}</Typography>\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <MyTextInput classes={this.state.classes} value={this.state.count_action} func={ this.changeData.bind(this, 'count_action') } label='Количество активаций' />\n            </Grid>\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.promo_conditions_list} value={this.state.promo_conditions} func={ this.changeData.bind(this, 'promo_conditions') } label='Условие' />\n            </Grid>\n            \n            { parseInt(this.state.promo_conditions) !== 1 ? null :\n              <>\n                <Grid item xs={12} sm={8}>\n                  <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.conditionItems} func={ (event, data) => { this.changeDataData('conditionItems', data) } } multiple={true} label='Товары' />\n                </Grid>\n              </>\n            }\n            \n            { parseInt(this.state.promo_conditions) !== 2 ? null :\n              <>\n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={this.state.price_start} func={ this.changeData.bind(this, 'price_start') } label='Сумма от' />\n                </Grid>\n              \n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={this.state.price_end} func={ this.changeData.bind(this, 'price_end') } label='Сумма до' />\n                </Grid>\n              </>\n            }\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={3}>\n              <MySelect classes={this.state.classes} data={this.state.date_promo_list} value={this.state.date_promo} func={ this.changeData.bind(this, 'date_promo') } label='Когда работает промокод' />\n            </Grid>\n            \n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={6} className=\"MyDaterange\">\n              <MyDaterange startText=\"Дата от\" endText=\"Дата до\" value={this.state.rangeDate} func={ this.changeDateRange.bind(this) } />\n            </Grid>\n           \n            <Grid item xs={12} sm={3}>\n              <MyTimePicker classes={this.state.classes} label=\"Время от\" value={this.state.time_start} func={ this.changeData.bind(this, 'time_start') } />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <MyTimePicker classes={this.state.classes} label=\"Время до\" value={this.state.time_end} func={ this.changeData.bind(this, 'time_end') } />\n            </Grid>\n              \n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            <Grid item xs={12} sm={12}>\n              <MyDatePicker multiple={false} label={'Кроме дат'} value={this.state.testDate} func={ this.changeDataData.bind(this, 'testDate') } />\n            </Grid>\n          </Grid>\n            \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ marginTop: 20 }} spacing={3}>\n            \n            <MyCheckBox classes={this.state.classes} value={this.state.day_1} func={ this.changeDataCheck.bind(this, 'day_1') } label='Понедельник' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_2} func={ this.changeDataCheck.bind(this, 'day_2') } label='Вторник' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_3} func={ this.changeDataCheck.bind(this, 'day_3') } label='Среда' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_4} func={ this.changeDataCheck.bind(this, 'day_4') } label='Четверг' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_5} func={ this.changeDataCheck.bind(this, 'day_5') } label='Пятница' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_6} func={ this.changeDataCheck.bind(this, 'day_6') } label='Суббота' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_7} func={ this.changeDataCheck.bind(this, 'day_7') } label='Воскресенье' />\n           \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.type_order_list} value={this.state.type_order} func={ this.changeData.bind(this, 'type_order') } label='Тип заказа' />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.where_order_list} value={this.state.where_order} func={ this.changeData.bind(this, 'where_order') } label='Где работает' />\n            </Grid>\n            { parseInt(this.state.where_order) !== 1 ? null :\n              <Grid item xs={12} sm={4}>\n                <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city} func={ this.changeData.bind(this, 'city') } label='Город' />\n              </Grid>\n            }\n            { parseInt(this.state.where_order) !== 2 ? null :\n              <Grid item xs={12} sm={4}>\n                <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point} func={ this.changeData.bind(this, 'point') } label='Точка' />\n              </Grid>\n            }\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={12}>\n              <MyTextInput classes={this.state.classes} value={this.state.promo_desc_true} func={ this.changeData.bind(this, 'promo_desc_true') } label='Описание промокода после активации (Промокод дает: )' />\n            </Grid>\n            \n            <Grid item xs={12} sm={12}>\n              <MyTextInput classes={this.state.classes} value={this.state.promo_desc_false} func={ this.changeData.bind(this, 'promo_desc_false') } label='Условие промокода, когда условия не соблюдены' />\n            </Grid>\n            \n          </Grid>\n          \n          \n          \n          <Grid container direction=\"row\" justifyContent=\"end\" style={{ paddingTop: 50 }} spacing={3}>\n            <Button variant=\"contained\" onClick={this.save.bind(this)}>Сохранить</Button>\n          </Grid>\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\n\nclass SiteSale2_ extends React.Component {\n  click = false;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'site_sale_2',\n      module_name: '',\n      is_load: false,\n      modalText: '',\n      \n      modalDialog: false,\n      modalLink: '',\n      \n      city_list: [],\n      city_id: 0,\n      promoName: '',\n      \n      findPromoList: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    console.log( data )\n    \n    this.setState({\n      module_name: data.module_info.name,\n      city_list: data.all_city_list\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n    });\n  }\n  \n  async showPromoList(){\n    let data = {\n      city_id: this.state.city_id,\n      promo_name: this.state.promoName\n    };\n    \n    let res = await this.getData('search_promo', data);\n    \n    console.log( res )\n    \n    this.setState({\n      findPromoList: res\n    })\n  }\n  \n  async delPromo(promo_id){\n    let check = confirm(\"Удалить промокод ?\");\n    \n    if( check ){\n      let data = {\n        promo_id: promo_id\n      };\n      \n      let res = await this.getData('remove_promo', data);\n      \n      setTimeout( () => {\n        this.showPromoList();\n      }, 300 )\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false, modalLink: '' }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Результат операции</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            <Typography>{this.state.modalText}</Typography>\n            <br />\n            { this.state.modalLink == '' ? null :\n              <a href={this.state.modalLink} style={{ color: 'red' }}>Скачать</a>\n            }\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={ () => { this.setState({ modalDialog: false }) } }>Хорошо</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          \n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12}>\n              \n              <Link to={\"/site_sale_2/new\"} style={{ zIndex: 10 }}>\n                <Button variant=\"contained\">Новый промокод</Button>\n              </Link>\n              \n              <Link to={\"/site_sale_2/stat\"} style={{ zIndex: 10, marginLeft: 20 }}>\n                <Button variant=\"contained\">Статистика</Button>\n              </Link>\n              \n            </Grid>\n            \n            \n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.city_list} value={this.state.city_id} func={ (event) => { this.setState({city_id: event.target.value}) } } label='Город' />\n            </Grid>\n            \n            <Grid item xs={12} sm={4}>\n              <MyTextInput classes={this.state.classes} value={this.state.promoName} func={ (event) => { this.setState({promoName: event.target.value}) } } label='Промокод' />\n            </Grid>\n            \n            <Grid item xs={12} sm={4}>\n              <Button variant=\"contained\" onClick={this.showPromoList.bind(this)}>Найти</Button>\n            </Grid>\n            \n          </Grid>  \n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            <Grid item xs={12}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Промокод</TableCell>\n                    <TableCell>Город</TableCell>\n                    <TableCell>Было кол-во</TableCell>\n                    <TableCell>Ост. кол-во</TableCell>\n                    <TableCell>Дата окончания</TableCell>\n                    <TableCell>Описание</TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  { this.state.findPromoList.map( (item, key) =>\n                    <TableRow key={key}>\n                      <TableCell>\n                        <Link to={\"/site_sale_2/edit/\"+item.id} style={{ zIndex: 10 }}>\n                          {item.name}    \n                        </Link>\n                      </TableCell>\n                      <TableCell>{ parseInt(item.city_id) == 0 ? 'Все города' : item.city_name }</TableCell>\n                      <TableCell>{item.def_count}</TableCell>\n                      <TableCell>{item.count}</TableCell>\n                      <TableCell>{item.date2}</TableCell>\n                      <TableCell>{item.coment}</TableCell>\n                      <TableCell> <CloseIcon style={{ cursor: 'pointer' }} onClick={this.delPromo.bind(this, item.id)} /> </TableCell>\n                    </TableRow>\n                  ) }\n                  \n                </TableBody>\n              </Table>\n            </Grid>  \n          </Grid>\n          \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nclass SiteSale2_Stat_ extends React.Component {\n  click = false;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'site_sale_2',\n      module_name: '',\n      is_load: false,\n      \n      spam_list: [],\n      spam_id: 0,\n      findPromoList: [],\n      \n      spam_list_data: [],\n      spam_list_data_stat: {\n        true: 0,\n        all: 0,\n        percent: 0\n      },\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_spam_list');\n    \n    console.log( data )\n    \n    this.setState({\n      module_name: data.module_info.name,\n      spam_list: data.spam_list\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n    });\n  }\n  \n  async show(){\n    let data = {\n      spam_id: this.state.spam_id\n    }\n    \n    let res = await this.getData('get_spam_data', data);\n    \n    console.log( res )\n    \n    this.setState({\n      spam_list_data: res.spam_list,\n      spam_list_data_stat: res.stat\n    })\n  }\n  \n  changeSpam(event){\n    this.setState({spam_id: event.target.value})\n    \n    setTimeout( () => {\n      this.show()\n    }, 300 )\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          \n          \n          <Grid container direction=\"row\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.spam_list} value={this.state.spam_id} func={ this.changeSpam.bind(this) } label='Рассылка' />\n            </Grid>\n            \n            <Grid item xs={12} sm={4}>\n              <Button variant=\"contained\" onClick={this.show.bind(this)}>Обновить</Button>\n            </Grid>\n            \n          </Grid>  \n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={6}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Всего</TableCell>\n                    <TableCell>Использовали</TableCell>\n                    <TableCell>%</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  <TableRow>\n                    <TableCell>{this.state.spam_list_data_stat.all}</TableCell>\n                    <TableCell>{this.state.spam_list_data_stat.true}</TableCell>\n                    <TableCell>{this.state.spam_list_data_stat.percent}</TableCell>\n                  </TableRow>\n                  \n                </TableBody>\n              </Table>\n            </Grid>  \n            \n            <Grid item xs={6}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>#</TableCell>\n                    <TableCell>Номер</TableCell>\n                    <TableCell>Ост активаций</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  { this.state.spam_list_data.map( (item, key) =>\n                    <TableRow key={key}>\n                      <TableCell>{key+1}</TableCell>\n                      <TableCell>{item.number}</TableCell>\n                      <TableCell>{item.count}</TableCell>\n                      \n                    </TableRow>\n                  ) }\n                  \n                </TableBody>\n              </Table>\n            </Grid>  \n          </Grid>\n          \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function SiteSale2_New () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <SiteSale2_new_ classes={classes} history={history} />\n  );\n}\n\nexport function SiteSale2_Edit () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  let { promoId } = useParams();\n  \n  return (\n    <SiteSale2_edit_ promoId={promoId} classes={classes} history={history} />\n  );\n}\n\nexport function SiteSale2 () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <SiteSale2_ classes={classes} history={history} />\n  );\n}\n\nexport function SiteSale2_Stat () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <SiteSale2_Stat_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MyAutocomplite } from '../../stores/elements';\n\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\n\nconst queryString = require('query-string');\n\nconst dynamicCellStyle = params => {\n  if( params.colDef.headerName == 'Цена' ){\n    return { borderRight: '1px solid #bababa' };\n  }\n  return null;\n};\n\nclass Tender_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'tender',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      \n      testTable: [],\n      vendors: [],\n      myVendors: [],\n      showVendors: [],\n      \n      params_api: null,\n      params_columnApi: null\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    let table = [];\n    \n    data.items.map( (main_cat, k1) => {\n      \n      table.push({\n        section: 'big-title',\n        item: main_cat.name\n      })\n      \n      main_cat.cats.map( (cat, k2) => {\n        table.push({\n          section: 'big-title',\n          item: cat.name\n        })\n        \n        cat.items.map( (item, k3) => {\n          let tableItem = {};\n          \n          data['vendors'].map( (it, k4) => {\n            \n            let item_price = data.vendor_price.find( (item_price) => parseInt(item_price.vendor_id) == parseInt(it['id']) && parseInt(item_price.item_id) == parseInt(item['id']) );\n            \n            \n            if( item_price ){\n              tableItem[ 'vend_price_'+it['id'] ] = item_price['price'];  \n              tableItem[ 'vend_city_'+it['id'] ] = 'тлт';\n            }else{\n              tableItem[ 'vend_price_'+it['id'] ] = '';  \n              tableItem[ 'vend_city_'+it['id'] ] = '';\n            }\n            \n          } )\n          tableItem.item = item.name;\n          tableItem.section = 'last';\n          \n          let item_ras = data.ras.find( (item_ras) => parseInt(item_ras.item_id) == parseInt(item['id']) );\n          \n          if( item_ras ){\n            tableItem.ras = item_ras.count_pf;\n          }else{\n            tableItem.ras = '';\n          }\n          \n          table.push(tableItem)\n        } )\n      } )\n    } )\n    \n    \n    \n    \n    \n    \n    this.setState({\n      module_name: data.module_info.name,\n      testTable: table,\n      vendors: data['vendors'],\n      showVendors: data['vendors']\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n  \n  onCellClicked(event){\n    console.log( event.data );\n    console.log( event.colDef.field );\n  }\n  \n  onGridReady(params){\n    this.setState({\n      params_api: params.api,\n      params_columnApi: params.columnApi\n    });\n  }\n  \n  async show(){\n    let data = {\n      vendors: this.state.myVendors\n    };\n    \n    let res = await this.getData('get_data', data);\n    \n    let table = [];\n    \n    res.items.map( (main_cat, k1) => {\n      \n      table.push({\n        section: 'big-title',\n        item: main_cat.name\n      })\n      \n      main_cat.cats.map( (cat, k2) => {\n        table.push({\n          section: 'big-title',\n          item: cat.name\n        })\n        \n        cat.items.map( (item, k3) => {\n          let tableItem = {};\n          \n          res['vendors'].map( (it, k4) => {\n            \n            let item_price = res.vendor_price.find( (item_price) => parseInt(item_price.vendor_id) == parseInt(it['id']) && parseInt(item_price.item_id) == parseInt(item['id']) )\n            \n            if( item_price ){\n              tableItem[ 'vend_price_'+it['id'] ] = item_price['price'];  \n              tableItem[ 'vend_city_'+it['id'] ] = 'тлт';\n            }else{\n              tableItem[ 'vend_price_'+it['id'] ] = '';  \n              tableItem[ 'vend_city_'+it['id'] ] = '';\n            }\n            \n          } )\n          tableItem.item = item.name;\n          tableItem.section = 'last';\n          \n          let item_ras = res.ras.find( (item_ras) => parseInt(item_ras.item_id) == parseInt(item['id']) );\n          \n          if( item_ras ){\n            tableItem.ras = item_ras.count_pf;\n          }else{\n            tableItem.ras = '';\n          }\n          \n          table.push(tableItem)\n        } )\n      } )\n    } )\n    \n    \n    \n    \n    \n    \n    this.setState({\n      testTable: table,\n      showVendors: res['vendors']\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Новая категория</DialogTitle>\n          <DialogContent>\n            \n            \n            \n          </DialogContent>\n          <DialogActions>\n            <Button  color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            <MyAutocomplite data={this.state.vendors} multiple={true} value={this.state.myVendors} func={ (event, val) => { this.setState({ myVendors: val }) } } label='Поставщики' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.show.bind(this)}>Показать</Button>\n          </Grid>\n          \n          <Grid item xs={12}>\n            <div className=\"ag-theme-alpine\" style={{height: 600, width: '100%'}}>\n              <AgGridReact\n                  onGridReady={this.onGridReady.bind(this)}\n                  onCellClicked={this.onCellClicked}\n                  rowData={ this.state.testTable }\n                  \n                  >\n                  <AgGridColumn field=\"ras\" width={120} pinned=\"left\"></AgGridColumn>\n                  <AgGridColumn field=\"item\" width={300} pinned=\"left\" cellClassRules={{'cell-span': \"data.section==='big-title'\"}}></AgGridColumn>\n                  <AgGridColumn hide={true}></AgGridColumn>\n                    \n                  { this.state.showVendors.map( (item, key) => \n                    <AgGridColumn key={key} headerName={item.name} resizable={true} width={180}>\n                      <AgGridColumn field={'vend_city_'+item.id} headerName={'Город'} resizable={true} width={90}></AgGridColumn>\n                      <AgGridColumn field={'vend_price_'+item.id} headerName={'Цена'} resizable={true} width={90} cellStyle={dynamicCellStyle}></AgGridColumn>\n                    </AgGridColumn>\n                  ) }\n                  \n                  \n              </AgGridReact>\n            </div>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n          \n          </Grid>    \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Tender () {\n  let history = useHistory();\n  \n  return (\n    <Tender_ history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox, MyTextInput } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nclass VendorItemPrice_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'vendor_item_price',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      \n      vendors: [],\n      vendor: 0,\n      \n      items: [],\n      \n      cities: [],\n      city: -1,\n      allCity: false,\n      isPrioriti: false\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      cities: data.cities\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      console.log( err )\n    });\n  }\n   \n  async changeCity(event){\n    let data = {\n      city: event.target.value\n    }\n    \n    let res = await this.getData('get_vendors', data);\n    \n    this.setState({\n      vendors: res,\n      city: event.target.value,\n      vendor: 0,\n      items: []\n    })\n  }\n  \n  async changeVendor(event){\n    let data = {\n      city: this.state.city,\n      vendor_id: event.target.value,\n    }\n    \n    let res = await this.getData('get_vendor_items', data);\n    \n    this.setState({\n      items: res,\n      vendor: event.target.value,\n    })\n  }\n  \n  update(item_id, data, event){\n    let this_items = this.state.items;\n    \n    \n    \n    this_items.map( (item, key) => {\n      if( parseInt(item.item_id) == parseInt(item_id) ){\n        this_items[key][data] = event.target.value;\n        \n        this_items[key]['price'] = (parseFloat(this_items[key]['full_price']) / parseFloat(this_items[key]['rec_pq'])).toFixed(2);\n      }\n    } )\n    \n    this.setState({\n      items: this_items\n    })\n  }\n  \n  async save(){\n    let data = {\n      vendor_id: this.state.vendor,\n      items: this.state.items,\n      city_id: this.state.city,\n      all_city: this.state.allCity === true ? 1 : 0,\n      is_prioriti: this.state.isPrioriti === true ? 1 : 0,\n    }\n    \n    if( data.all_city == 1 ){\n      if( confirm(\"Точно сохранить на все города поставщика ?\") ){\n        let res = await this.getData('save_price', data);\n      }\n    }else{\n      let res = await this.getData('save_price', data);\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              \n              \n              \n              \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city} func={ this.changeCity.bind(this) } label='Город' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.vendors} value={this.state.vendor} func={ this.changeVendor.bind(this) } label='Поставщик' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MyCheckBox classes={this.state.classes} value={this.state.allCity} func={ (event) => { this.setState({ allCity: event.target.checked }) } } label='На все города поставщика' />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <MyCheckBox classes={this.state.classes} value={this.state.isPrioriti} func={ (event) => { this.setState({ isPrioriti: event.target.checked }) } } label='Приоритетный постащик' />\n          </Grid>\n          \n          <Grid item xs={12}>\n            <Button onClick={this.save.bind(this)} variant=\"contained\">Сохранить</Button>\n          </Grid>\n          \n          \n          <Grid item xs={12}>\n              \n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Позиция</TableCell>\n                    <TableCell></TableCell>\n                    <TableCell>Комментарий</TableCell>\n                    <TableCell>Цена за упаковку</TableCell>\n                    <TableCell>Объем упаковки</TableCell>\n                    <TableCell>Цена за 1 ед.</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  { this.state.items.map( (item, key) => \n                    <TableRow key={key}>\n                      <TableCell>{item.name}</TableCell>\n                      <TableCell>{item.name_for_vendor}</TableCell>\n                      <TableCell>\n                        <MyTextInput label=\"\" value={item.comment} func={ this.update.bind(this, item.item_id, 'comment') } />\n                      </TableCell>\n                      <TableCell>\n                        <MyTextInput label=\"\" value={item.full_price} func={ this.update.bind(this, item.item_id, 'full_price') } />\n                      </TableCell>\n                      <TableCell>\n                        <MySelect classes={this.state.classes} data={item.pqs} value={item.rec_pq} func={ this.update.bind(this, item.item_id, 'rec_pq') } label='' />\n                      </TableCell>\n                      <TableCell>{item.price} / {item.ei_name}</TableCell>\n                    </TableRow>\n                  ) }\n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n          </Grid>\n            \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function VendorItemPrice () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <VendorItemPrice_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport DirectionsCarIcon from '@mui/icons-material/DirectionsCar';\n\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox, MyAutocomplite, MyTextInput } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nclass VendorModule_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'vendor_module',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      modalItems: false,\n      modalVendor: false,\n      modalVendorNew: false,\n      \n      vendors: [],\n      \n      allItems: [],\n      vendor_items: [],\n      openVendor: null,\n      customAdd: 0,\n      \n      vendorCities: [],\n      allCities: [],\n      \n      nds: [\n        { id: -1, name: 'Без НДС' },\n        { id: 10, name: '10% НДС' },\n        { id: 20, name: '20% НДС' },\n      ],\n      nds_: [\n        -1, 10, 20\n      ],\n      \n      cities: [],\n      city: -1\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      vendors: data.vendors,\n      cities: data.cities\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      console.log( err )\n    });\n  }\n   \n  changeNDS(item_id, event){\n    this.state.vendor_items.map( (item, key) => {\n      if( parseInt(item.item_id) == parseInt(item_id) ){\n        item.nds = event.target.value;\n      }\n    } )\n    \n    this.setState({\n      vendor_items: this.state.vendor_items\n    })\n  }\n  \n  async openModalItems(vendor){\n    let data = {\n      vendor_id: vendor.id\n    }\n    \n    let res = await this.getData('get_vendor_items', data);\n    \n    this.setState({\n      modalItems: true,\n      allItems: res.all_items,\n      vendor_items: res.vendor_items,\n      openVendor: vendor\n    })\n  }\n  \n  async openModalVendor(vendor){\n    let data = {\n      vendor_id: vendor.id\n    }\n    \n    let res = await this.getData('get_vendor_info', data);\n    \n    this.setState({\n      modalVendor: true,\n      openVendor: res.vendor,\n      vendorCities: res.vendor_cities,\n      allCities: res.all_cities,\n    })\n  }\n  \n  async openModalVendorNew(){\n    let data = {\n      vendor_id: 0\n    }\n    \n    let res = await this.getData('get_vendor_info', data);\n    \n    this.setState({\n      modalVendorNew: true,\n      openVendor: {\n        addr: \"\",\n        bill_ex: \"0\",\n        email: \"\",\n        email_2: \"\",\n        inn: \"\",\n        min_price: \"\",\n        name: \"\",\n        need_img_bill_ex: \"0\",\n        ogrn: \"\",\n        phone: \"\",\n        text: \"\",\n      },\n      vendorCities: [],\n      allCities: res.all_cities,\n    })\n  }\n  \n  async saveVendorItems(){\n    let data = {\n      vendor_id: this.state.openVendor.id,\n      items: this.state.vendor_items\n    }\n    \n    let check = data.items.filter( (item, key) => !this.state.nds_.includes( parseInt(item.nds) ) );\n    \n    if( check.length > 0 ){\n      alert('У одной или нескольких позиций не заполнен НДС')\n      \n      return ;\n    }\n    \n    let res = await this.getData('save_vendor_items', data);\n    \n    this.setState({\n      modalItems: false,\n      vendor_items: [],\n      openVendor: null\n    })\n  }\n  \n  async saveVendor(){\n    let data = {\n      vendor: this.state.openVendor,\n      vendor_cities: this.state.vendorCities,\n      city: this.state.city\n    }\n    \n    let res = await this.getData('update_vendor', data);\n    \n    this.setState({\n      modalVendor: false,\n      openVendor: null,\n      vendorCities: [],\n      allCities: [],\n      vendors: res.vendors\n    })\n  }\n  \n  async addVendor(){\n    let data = {\n      vendor: this.state.openVendor,\n      vendor_cities: this.state.vendorCities,\n      city: this.state.city\n    }\n    \n    let res = await this.getData('new_vendor', data);\n    \n    if( res.st === false ){\n      alert(res.text);\n      return ;\n    }\n    \n    this.setState({\n      modalVendorNew: false,\n      openVendor: null,\n      vendorCities: [],\n      allCities: [],\n      vendors: res.vendors\n    })\n  }\n  \n  delItem(item_id){\n    let items = this.state.vendor_items;\n    \n    items = items.filter( (item) => parseInt(item.item_id) != parseInt(item_id) );\n    \n    this.setState({\n      vendor_items: items\n    })\n  }\n  \n  addItem(item){\n    let this_items = this.state.vendor_items;\n    let check = this_items.find( (it) => parseInt(it.item_id) == parseInt(item.id) );\n    \n    if( !check ){\n      this_items.push({\n        item_id: item.id,\n        item_name: item.name,\n        nds: -2\n      })\n    }\n    \n    this.setState({\n      vendor_items: this_items\n    })\n  }\n  \n  addItemCustom(){\n    let item = this.state.allItems.find( (item1) => parseInt(item1.id) == parseInt(this.state.customAdd) );\n    \n    this.addItem(item);\n  }\n  \n  testChange(data, event){\n    let vendor = this.state.openVendor;\n    \n    if( data == 'bill_ex' || data == 'need_img_bill_ex' ){\n      vendor[data] = event.target.checked === true ? 1 : 0;\n    }else{\n      vendor[data] = event.target.value;\n    }\n    \n    this.setState({ \n      openVendor: vendor\n    })\n  }\n  \n  async changeCity(event){\n    let data = {\n      city: event.target.value\n    }\n    \n    let res = await this.getData('get_vendors', data);\n    \n    this.setState({\n      vendors: res,\n      city: event.target.value\n    })\n  }\n  \n  changeSort(data, event){\n    this.state.vendor_items.map( (item, key) => {\n      if( parseInt(item.item_id) == parseInt(data) ){\n        this.state.vendor_items[key]['sort'] = event.target.value;\n      }\n    })\n    \n    this.setState({\n      vendor_items: this.state.vendor_items\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              \n              \n              \n              \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Dialog\n          open={this.state.modalItems}\n          fullWidth={true}\n          maxWidth={'md'}\n          onClose={ () => { this.setState({ modalItems: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Товары поставщика {this.state.openVendor ? this.state.openVendor.name : ''}</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <Grid container style={{ paddingTop: 20 }}>\n              \n              <Grid item xs={12} sm={5} style={{ paddingRight: 10 }}>\n                \n                <Table>\n                  <TableBody>\n                    <TableRow style={{ height: 75 }}>\n                      <TableCell>\n                        <MySelect classes={this.state.classes} data={this.state.allItems} value={this.state.customAdd} func={ (event) => { this.setState({ customAdd: event.target.value }) } } />\n                      </TableCell>\n                      <TableCell><AddIcon onClick={this.addItemCustom.bind(this)} style={{ cursor: 'pointer' }} /></TableCell>\n                    </TableRow>\n                    \n                    { this.state.allItems.map( (item, key) => \n                      <TableRow key={key} style={{ height: 75 }}>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell><AddIcon onClick={this.addItem.bind(this, item)} style={{ cursor: 'pointer' }} /></TableCell>\n                      </TableRow>\n                    ) }\n                  </TableBody>\n                </Table>\n                \n              </Grid>\n              <Grid item xs={12} sm={7}>\n                \n                <Table>\n                  <TableBody>\n                    { this.state.vendor_items.map( (item, key) => \n                      <TableRow key={key} style={{ height: 75 }}>\n                        <TableCell>{item.item_name}</TableCell>\n                        <TableCell>\n                          <MyTextInput label=\"\" value={ item.sort } func={ this.changeSort.bind(this, item.item_id) } />\n                        </TableCell>\n                        <TableCell>\n                          <MySelect classes={this.state.classes} data={this.state.nds} value={item.nds} func={ this.changeNDS.bind(this, item.item_id) } />\n                        </TableCell>\n                        <TableCell><CloseIcon onClick={ this.delItem.bind(this, item.item_id) } style={{ cursor: 'pointer' }} /></TableCell>\n                      </TableRow>\n                    ) }\n                  </TableBody>\n                </Table>\n                \n              </Grid>\n              \n            </Grid>\n              \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.saveVendorItems.bind(this)} color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Dialog\n          open={this.state.modalVendor}\n          fullWidth={true}\n          maxWidth={'md'}\n          onClose={ () => { this.setState({ modalVendor: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Поставщик {this.state.openVendor ? this.state.openVendor.name : ''}</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <Grid container spacing={3}>\n              \n              {this.state.openVendor ?\n                <>\n                  <Grid item xs={12} sm={5}>\n                    <MyTextInput label=\"Наименование\" value={ this.state.openVendor.name } func={ this.testChange.bind(this, 'name') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Описание\" value={ this.state.openVendor.text } func={ this.testChange.bind(this, 'text') } />\n                  </Grid>\n                  <Grid item xs={12} sm={3}>\n                    <MyTextInput label=\"Мин. сумма заявки\" value={ this.state.openVendor.min_price } func={ this.testChange.bind(this, 'min_price') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyTextInput label=\"ИНН\" value={ this.state.openVendor.inn } func={ this.testChange.bind(this, 'inn') } disabled={true} />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <MyTextInput label=\"ОГРН\" value={ this.state.openVendor.ogrn } func={ this.testChange.bind(this, 'ogrn') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={8}>\n                    <MyTextInput label=\"Адрес компании\" value={ this.state.openVendor.addr } func={ this.testChange.bind(this, 'addr') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Контактное лицо\" value={ this.state.openVendor.user } func={ this.testChange.bind(this, 'user') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Телефон\" value={ this.state.openVendor.phone } func={ this.testChange.bind(this, 'phone') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Почта\" value={ this.state.openVendor.email } func={ this.testChange.bind(this, 'email') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Доп почта\" value={ this.state.openVendor.email_2 } func={ this.testChange.bind(this, 'email_2') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyCheckBox label=\"Работа по счетам\" value={ parseInt(this.state.openVendor.bill_ex) == 1 ? true : false } func={ this.testChange.bind(this, 'bill_ex') } />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <MyCheckBox label=\"Необходима картинка\" value={ parseInt(this.state.openVendor.need_img_bill_ex) == 1 ? true : false } func={ this.testChange.bind(this, 'need_img_bill_ex') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyAutocomplite label='Города' data={this.state.allCities} value={this.state.vendorCities} func={ (event, value) => { this.setState({ vendorCities: value }) } } />\n                  </Grid>\n                </>\n                  :\n                null\n              }\n            </Grid>\n              \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.saveVendor.bind(this)} color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Dialog\n          open={this.state.modalVendorNew}\n          fullWidth={true}\n          maxWidth={'md'}\n          onClose={ () => { this.setState({ modalVendorNew: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Новый поставщик</DialogTitle>\n          <DialogContent>\n            \n            <Grid container spacing={3}>\n              \n              {this.state.openVendor ?\n                <>\n                  <Grid item xs={12} sm={5}>\n                    <MyTextInput label=\"Наименование\" value={ this.state.openVendor.name } func={ this.testChange.bind(this, 'name') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Описание\" value={ this.state.openVendor.text } func={ this.testChange.bind(this, 'text') } />\n                  </Grid>\n                  <Grid item xs={12} sm={3}>\n                    <MyTextInput label=\"Мин. сумма заявки\" value={ this.state.openVendor.min_price } func={ this.testChange.bind(this, 'min_price') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyTextInput label=\"ИНН\" value={ this.state.openVendor.inn } func={ this.testChange.bind(this, 'inn') } />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <MyTextInput label=\"ОГРН\" value={ this.state.openVendor.ogrn } func={ this.testChange.bind(this, 'ogrn') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={8}>\n                    <MyTextInput label=\"Адрес компании\" value={ this.state.openVendor.addr } func={ this.testChange.bind(this, 'addr') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Контактное лицо\" value={ this.state.openVendor.user } func={ this.testChange.bind(this, 'user') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Телефон\" value={ this.state.openVendor.phone } func={ this.testChange.bind(this, 'phone') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Почта\" value={ this.state.openVendor.email } func={ this.testChange.bind(this, 'email') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Доп почта\" value={ this.state.openVendor.email_2 } func={ this.testChange.bind(this, 'email_2') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyCheckBox label=\"Работа по счетам\" value={ parseInt(this.state.openVendor.bill_ex) == 1 ? true : false } func={ this.testChange.bind(this, 'bill_ex') } />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <MyCheckBox label=\"Необходима картинка\" value={ parseInt(this.state.openVendor.need_img_bill_ex) == 1 ? true : false } func={ this.testChange.bind(this, 'need_img_bill_ex') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyAutocomplite label='Города' data={this.state.allCities} value={this.state.vendorCities} func={ (event, value) => { this.setState({ vendorCities: value }) } } />\n                  </Grid>\n                </>\n                  :\n                null\n              }\n            </Grid>\n              \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.addVendor.bind(this)} color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city} func={ this.changeCity.bind(this) } label='Город' />\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <Button onClick={this.openModalVendorNew.bind(this)} variant=\"contained\">Добавить поставщика</Button>\n          </Grid>\n        \n          <Grid item xs={12}>\n          \n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell component=\"th\">Название</TableCell>\n                    <TableCell component=\"th\">Назначенные товары</TableCell>\n                    <TableCell component=\"th\"><VisibilityIcon /></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  { this.state.vendors.map( (item, key) => \n                    <TableRow key={key}>\n                      <TableCell><Typography onClick={ this.openModalVendor.bind(this, item) } style={{ cursor: 'pointer', width: 'max-content' }}>{item.name}</Typography></TableCell>\n                      <TableCell><DirectionsCarIcon onClick={ this.openModalItems.bind(this, item) } style={{ cursor: 'pointer' }} /></TableCell>\n                      <TableCell>{ parseInt(item.is_show) == 1 ? <VisibilityIcon /> : <VisibilityOffIcon /> }</TableCell>\n                    </TableRow>\n                  ) }\n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n          </Grid>\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function VendorModule () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <VendorModule_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableFooter from '@mui/material/TableFooter';\nimport Paper from '@mui/material/Paper';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddIcon from '@mui/icons-material/Add';\n\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\n\nimport PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { blue } from '@mui/material/colors';\n\nimport HomeWorkIcon from '@mui/icons-material/HomeWork';\nimport SyncAltIcon from '@mui/icons-material/SyncAlt';\n\nimport LooksOneIcon from '@mui/icons-material/LooksOne';\nimport LooksTwoIcon from '@mui/icons-material/LooksTwo';\nimport Looks3Icon from '@mui/icons-material/Looks3';\n\nimport { MySelect, MyCheckBox, MyTimePicker } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  timePicker: {\n    width: '100%'\n  }\n});\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <List sx={{ pt: 0 }}>\n        \n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AccessTimeIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Сменить часы на месяц\" />\n        </ListItem>\n        \n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <SyncAltIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Сменить смену\" />\n        </ListItem>\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <HomeWorkIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Сменить точку\" />\n        </ListItem>\n        \n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>{children}</Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass HeaderItem extends React.Component {\n  render(){\n    return (\n      <>\n        <TableRow>\n          <TableCell></TableCell>\n          <TableCell>Число месяца</TableCell>\n          <TableCell></TableCell>\n          \n          {this.props.days.map( (item, key) => \n            <TableCell className=\"min_block\" style={{ backgroundColor: item.day == 'Пт' || item.day == 'Сб' || item.day == 'Вс' ? '#ffe9bd' : '#fff' }} key={key}>{item.date}</TableCell>\n          )}\n          \n          <TableCell></TableCell>\n          <TableCell>+ / -</TableCell>\n          <TableCell>Ур дира: 9</TableCell>\n          <TableCell></TableCell>\n          <TableCell></TableCell>\n          <TableCell></TableCell>\n          <TableCell></TableCell>\n\n        </TableRow>\n        <TableRow>\n          <TableCell>Сотрудник</TableCell>\n          <TableCell>Должность</TableCell>\n          <TableCell></TableCell>\n          \n          {this.props.days.map( (item, key) => \n            <TableCell className=\"min_block\" style={{ backgroundColor: item.day == 'Пт' || item.day == 'Сб' || item.day == 'Вс' ? '#ffe9bd' : '#fff' }} key={key}>{item.day}</TableCell>\n          )}\n          \n          <TableCell>За 1ч</TableCell>\n          <TableCell>Командный бонус</TableCell>\n          <TableCell>За часы</TableCell>\n          <TableCell>Ошибки</TableCell>\n          <TableCell>Бонус</TableCell>\n          <TableCell>Всего</TableCell>\n          <TableCell>Выдано</TableCell>\n\n        </TableRow>\n        \n        <TableRow style={{ backgroundColor: '#e5e5e5' }}>\n          <TableCell style={{ textAlign: 'center' }} colSpan={ this.props.days.length + 3 }>{this.props.item.data}</TableCell>\n        </TableRow>\n      </>\n    )\n  }\n}\n\nclass WorkSchedule_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'work_schedule',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      mounths: [],\n      point: '0',\n      mounth: '0',\n      \n      one: null,\n      two: null,\n      test_one: [],\n      test_two: [],\n      \n      isOpenModalH: false,\n      \n      userInfo: null,\n      \n      hList: [],\n      mList: [],\n      \n      newTimeStart: '10:00',\n      newTimeEnd: '22:00',\n      \n      openNewTimeAdd: false,\n      \n      otherAppList: [],\n      otherApp: '',\n      \n      testVal: '',\n      testOpen: false,\n      \n      mainMenu: false,\n      mainMenuH: false,\n      \n      chooseUser: null,\n\n      tabTable: 1\n    };\n  }\n  \n  async componentDidMount(){\n    let data = {\n      \n    };\n    \n    let res = await this.getData('get_all', data);\n    \n    let hList = [];\n    let mList = [];\n    \n    for(let h = 0; h <= 23; h ++){\n      hList.push({\n        id: h,\n        name: h\n      })\n    }\n    \n    for(let m = 0; m <= 50; m += 10){\n      mList.push({\n        id: m,\n        name: m\n      })\n    }\n    \n    this.setState({\n      points: res.point_list,\n      point: res.point_list[0].id,\n      \n      mounths: res.mounths,\n      mounth: res.mounths.find( (item) => parseInt( item.is_active ) == 1 )['id'],\n      \n      hList: hList,\n      mList: mList,\n      \n      module_name: res.module_info.name\n    })\n    \n    document.title = res.module_info.name;\n    \n    setTimeout( () => {\n      //this.updateData();\n    }, 100 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      console.log( err )\n    });\n  }\n   \n  changeCheckOrders(event){\n    let data = event.target.checked;\n    \n    this.setState({\n      showReady: data\n    })\n  }\n  \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      mounth: this.state.mounth\n    };\n    \n    let res = await this.getData('get_graph', data);\n    \n    console.log( res )\n    \n    this.setState({\n      one: res.date.one,\n      two: res.date.two,\n      \n      test_one: res.one,\n      test_two: res.two,\n    })\n  }\n  \n  async openH(item, this_date){\n    console.log( item )\n    \n    let data = {\n      smena_id: item.smena_id,\n      app_id: item.app_id,\n      user_id: item.id,\n      date: this_date,\n      date_start: item.date\n    };\n    \n    let res = await this.getData('get_user_day', data);\n    \n    console.log( res )\n    \n    this.setState({\n      isOpenModalH: true,\n      userInfo: res.h_info,\n      otherAppList: res.other_app\n    })\n  }\n  \n  delTime(key_time){\n    let userInfo = this.state.userInfo;\n    \n    userInfo.hours = userInfo.hours.filter( (item, key) => parseInt(key) != parseInt(key_time) );\n    \n    this.setState({\n      userInfo: userInfo\n    })\n  }\n  \n  changeHourse(type, key, event){\n    let userInfo = this.state.userInfo;\n    \n    userInfo.hours[ key ][ [type] ] = event.target.value;\n    \n    this.setState({\n      userInfo: userInfo\n    })\n  }\n  \n  async saveDayHourse(){\n    let data = {\n      date: this.state.userInfo.date,\n      user_id: this.state.userInfo.user_id,\n      smena_id: this.state.userInfo.smena_id,\n      app_id: this.state.userInfo.app_id,\n      hours: this.state.userInfo.hours,\n      new_app: this.state.userInfo.new_app,\n      mentor_id: this.state.userInfo.mentor_id\n    }\n    \n    let res = await this.getData('save_user_day', data);\n    \n    console.log( res )\n  }\n  \n  addTime(){\n    let userInfo = this.state.userInfo;\n    \n    let check = userInfo.hours.find( (item) => item.time_start == this.state.newTimeStart && item.time_end == this.state.newTimeEnd );\n    \n    if( check ){\n      this.setState({\n        openNewTimeAdd: false\n      })\n      \n      return ;\n    }\n    \n    userInfo.hours.push({\n      time_start: this.state.newTimeStart,\n      time_end: this.state.newTimeEnd\n    })\n    \n    this.setState({\n      userInfo: userInfo,\n      openNewTimeAdd: false\n    })\n  }\n  \n  async fastTime(type){\n    let data = {\n      type: type,\n      user_id: this.state.chooseUser.id,\n      app_id: this.state.chooseUser.app_id,\n      smena_id: this.state.chooseUser.smena_id,\n      date: this.state.mounth\n    }\n    \n    let res = await this.getData('save_fastTime', data);\n    \n    console.log( res );\n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog onClose={ () => { this.setState({ mainMenu: false }) } } open={this.state.mainMenu}>\n          \n          { !this.state.chooseUser ? null :\n            <DialogTitle>{this.state.chooseUser.full_app_name} {this.state.chooseUser.user_name} {this.state.mounth}</DialogTitle>\n          }\n          \n          <List sx={{ pt: 0 }}>\n            \n            <ListItem button onClick={ () => { this.setState({ mainMenu: false, mainMenuH: true }) } }>\n              <ListItemAvatar>\n                <Avatar>\n                  <AccessTimeIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Сменить часы на месяц\" />\n            </ListItem>\n            \n            <ListItem button>\n              <ListItemAvatar>\n                <Avatar>\n                  <SyncAltIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Сменить смену\" />\n            </ListItem>\n            <ListItem button>\n              <ListItemAvatar>\n                <Avatar>\n                  <HomeWorkIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Сменить точку\" />\n            </ListItem>\n            \n          </List>\n        </Dialog>\n        \n        <Dialog onClose={ () => { this.setState({ mainMenuH: false }) } } open={this.state.mainMenuH}>\n          \n          { !this.state.chooseUser ? null :\n            <DialogTitle>{this.state.chooseUser.user_name} {this.state.mounth} Часы</DialogTitle>\n          }\n          \n          <List sx={{ pt: 0 }}>\n            \n            <ListItem button onClick={this.fastTime.bind(this, 1)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <LooksOneIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"С 1 числа 2/2 с 10 до 22 на месяц\" />\n            </ListItem>\n            \n            <ListItem button onClick={this.fastTime.bind(this, 2)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <LooksTwoIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Со 2 числа 2/2 с 10 до 22 на месяц\" />\n            </ListItem>\n            <ListItem button onClick={this.fastTime.bind(this, 3)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <Looks3Icon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"С 3 числа 2/2 с 10 до 22 на месяц\" />\n            </ListItem>\n            <ListItem button onClick={this.fastTime.bind(this, 4)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <Looks3Icon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"С 4 числа 2/2 с 10 до 22 на месяц\" />\n            </ListItem>\n            \n          </List>\n        </Dialog>\n        \n        \n        { !this.state.userInfo ? null :\n          <Dialog\n            open={this.state.isOpenModalH}\n            onClose={ () => { this.setState({ isOpenModalH: false }) } }\n            scroll='paper'\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n          >\n            <DialogTitle id=\"scroll-dialog-title\">{this.state.userInfo.user.app_name + ' ' + this.state.userInfo.user.user_name + ' ' + this.state.userInfo.date}</DialogTitle>\n            <DialogContent dividers={true}>\n              \n              <Typography>{'Моя нагрузка: ' + this.state.userInfo.user.my_load_h + ' / Средняя нагрузка: ' + this.state.userInfo.user.all_load_h}</Typography>\n              <Typography style={{ marginBottom: 10 }}>{'Бонус: ' + this.state.userInfo.user.bonus}</Typography>\n              \n              { this.state.otherAppList.length == 0 ? null :\n                <MySelect data={this.state.otherAppList} value={this.state.userInfo.new_app} func={ (event) => { let userInfo = this.state.userInfo; userInfo.new_app = event.target.value; this.setState({ userInfo: userInfo }) } } label='Кем работает' />\n              }\n              \n              { this.state.userInfo.mentor_list.length == 0 ? null :\n                <MySelect data={this.state.userInfo.mentor_list} value={this.state.userInfo.mentor_id} func={ (event) => { let userInfo = this.state.userInfo; userInfo.mentor_id = event.target.value; this.setState({ userInfo: userInfo }) } } label='Кем работает' />\n              }\n              \n              <Accordion \n                style={{ marginTop: 10 }} \n                expanded={this.state.openNewTimeAdd} \n                onChange={ () => { this.setState({ openNewTimeAdd: !this.state.openNewTimeAdd }) } }>\n                  \n                <AccordionSummary\n                  expandIcon={<AddIcon />}\n                >\n                  <AccessTimeIcon style={{ marginRight: 10 }} />\n                  <Typography>Добавить время</Typography>\n                </AccordionSummary>\n                <AccordionDetails style={{ display: 'flex', flexDirection: 'row' }}>\n                  \n                  <MyTimePicker value={this.state.newTimeStart} func={ (event) => { this.setState({ newTimeStart: event.target.value }) } } classes={this.state.classes} label='Время начала работы' />\n                  <MyTimePicker value={this.state.newTimeEnd} func={ (event) => { this.setState({ newTimeEnd: event.target.value }) } } classes={this.state.classes} label='Время окончания работы' />\n                  \n                  <AddIcon style={{ minWidth: 50, minHeight: 38, cursor: 'pointer' }} onClick={ this.addTime.bind(this) } />\n                  \n                </AccordionDetails>\n              </Accordion>  \n              \n              { this.state.userInfo.hours.map( (item, key) =>\n                <Accordion key={key}>\n                  <AccordionSummary\n                    expandIcon={<CloseIcon onClick={ this.delTime.bind(this, key) } />}\n                  >\n                    <AccessTimeIcon style={{ marginRight: 10 }} />\n                    <Typography>{item.time_start + ' - ' + item.time_end}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails style={{ display: 'flex', flexDirection: 'row' }}>\n                    <MyTimePicker value={item.time_start} func={ this.changeHourse.bind(this, 'time_start', key) } classes={this.state.classes} label='Время начала работы' />\n                    <MyTimePicker value={item.time_end} func={ this.changeHourse.bind(this, 'time_end', key) } classes={this.state.classes} label='Время окончания работы' />\n                  </AccordionDetails>\n                </Accordion>  \n              ) }\n              \n              \n              <Accordion style={{ marginTop: 50 }} disabled>\n                <AccordionSummary>\n                  <Typography>История</Typography>\n                </AccordionSummary>\n              </Accordion>  \n              \n              { this.state.userInfo.hist.map( (item, key) =>\n                <Accordion key={key}>\n                  <AccordionSummary>\n                    <Typography>{item.date + ' - ' + item.user_name}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails style={{ display: 'flex', flexDirection: 'column' }}>\n                    \n                    { item.items.map( (it, k) =>\n                      <Typography key={k}>{it.time_start + ' - ' + it.time_end} {it.app_name == '' ? '' : ' - ' + it.app_name} </Typography>\n                    ) }\n                    \n                  </AccordionDetails>\n                </Accordion>  \n              ) }\n              \n            </DialogContent>\n            <DialogActions style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n              <Button style={{ backgroundColor: 'green', color: '#fff' }} onClick={this.saveDayHourse.bind(this)}>Сохранить</Button>\n              <Button style={{ backgroundColor: 'red', color: '#fff' }} onClick={() => { this.setState({ isOpenModalH: false }) }}>Отмена</Button>\n            </DialogActions>\n          </Dialog>\n        }\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.points} value={this.state.point} func={ (event) => { this.setState({ point: event.target.value }) } } label='Точка' />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.mounths} value={this.state.mounth} func={ (event) => { this.setState({ mounth: event.target.value }) } } label='Месяц' />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n          </Grid>\n          \n            \n              \n          <Box sx={{ width: '100%' }}>\n            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n              <Tabs value={this.state.tabTable} onChange={ (event, data) => { this.setState({ tabTable: data }) } } centered >\n                <Tab label=\"С 1 по 15 числа\" {...a11yProps(0)} />\n                <Tab label=\"С 16 по конец месяца\" {...a11yProps(1)} />\n              </Tabs>\n            </Box>\n            <TabPanel value={this.state.tabTable} index={0}>\n              { !this.state.one ? null :\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\" id=\"table_graph_one\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>Число месяца</TableCell>\n                        <TableCell></TableCell>\n                        \n                        {this.state.one.days.map( (item, key) => \n                          <TableCell className=\"min_block\" style={{ backgroundColor: item.day == 'Пт' || item.day == 'Сб' || item.day == 'Вс' ? '#ffe9bd' : '#fff' }} key={key}>{item.date}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      <TableRow>\n                        <TableCell>Сотрудник</TableCell>\n                        <TableCell>Должность</TableCell>\n                        <TableCell></TableCell>\n                        \n                        {this.state.one.days.map( (item, key) => \n                          <TableCell className=\"min_block\" style={{ backgroundColor: item.day == 'Пт' || item.day == 'Сб' || item.day == 'Вс' ? '#ffe9bd' : '#fff' }} key={key}>{item.day}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      \n                      { this.state.test_one.map( (item, key) =>\n                        item.row == 'header' ?\n                          <TableRow key={key} style={{ backgroundColor: '#e5e5e5' }}>\n                            <TableCell style={{ textAlign: 'center' }} colSpan={ this.state.one.days.length + 3 }>{item.data}</TableCell>\n                          </TableRow>\n                            :\n                          <TableRow key={key}>\n                            <TableCell>{item.data.user_name}</TableCell>\n                            <TableCell>{item.data.app_name}</TableCell>\n                            <TableCell style={{ textAlign: 'center' }}> <SyncAltIcon style={{ cursor: 'pointer' }} onClick={ () => { this.setState({ mainMenu: true, chooseUser: item.data }) } } /> </TableCell>\n                            \n                            { item.data.dates.map( (date, date_k) =>\n                              <TableCell onClick={ this.openH.bind(this, item.data, date.date) } className=\"min_block\" style={{ backgroundColor: date.info ? date.info.color : '#fff' }} key={date_k}>{date.info ? date.info.hours : ''}</TableCell>\n                            ) }\n                            \n                          </TableRow>\n                      ) }\n                      \n                      \n                    </TableBody>\n                    \n                    <TableFooter>\n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell></TableCell>\n                        <TableCell></TableCell>\n                        \n                        {this.state.one.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" style={{ backgroundColor: item.type == 'cur' ? '#98e38d' : '#fff' }} key={key}>{item.res}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>Роллов</TableCell>\n                        <TableCell></TableCell>\n                        \n                        {this.state.one.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_rolls}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>Пиццы</TableCell>\n                        <TableCell></TableCell>\n                        \n                        {this.state.one.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_pizza}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell className=\"min_size\">Заказы готовились больше 40 минут</TableCell>\n                        <TableCell></TableCell>\n                        \n                        {this.state.one.order_stat.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_false}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                    </TableFooter>\n                    \n                    \n                  </Table>\n                </TableContainer>\n              }\n            </TabPanel>\n            <TabPanel value={this.state.tabTable} index={1}>\n              { !this.state.two ? null :\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\" id=\"table_graph_one\">\n                    \n                    <TableBody>\n                      \n                      { this.state.test_two.map( (item, key) =>\n                        item.row == 'header' ?\n                          <HeaderItem key={key} days={this.state.two.days} item={item} />\n                            :\n                          <TableRow key={key}>\n                            <TableCell>{item.data.user_name}</TableCell>\n                            <TableCell>{item.data.app_name}</TableCell>\n                            <TableCell style={{ textAlign: 'center' }}> <SyncAltIcon style={{ cursor: 'pointer' }} onClick={ () => { this.setState({ mainMenu: true, chooseUser: item.data }) } } /> </TableCell>\n                            \n                            { item.data.dates.map( (date, date_k) =>\n                              <TableCell onClick={ this.openH.bind(this, item.data, date.date) } className=\"min_block\" style={{ backgroundColor: date.info ? date.info.color : '#fff' }} key={date_k}>{date.info ? date.info.hours : ''}</TableCell>\n                            ) }\n                            \n                          </TableRow>\n                      ) }\n                      \n                      \n                    </TableBody>\n                    \n                    <TableFooter>\n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell></TableCell>\n                        <TableCell></TableCell>\n                        \n                        {this.state.two.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" style={{ backgroundColor: item.type == 'cur' ? '#98e38d' : '#fff' }} key={key}>{item.res}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>Роллов</TableCell>\n                        <TableCell></TableCell>\n                        \n                        {this.state.two.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_rolls}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>Пиццы</TableCell>\n                        <TableCell></TableCell>\n                        \n                        {this.state.two.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_pizza}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell className=\"min_size\">Заказы готовились больше 40 минут</TableCell>\n                        <TableCell></TableCell>\n                        \n                        {this.state.two.order_stat.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_false}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                    </TableFooter>\n                    \n                    \n                  </Table>\n                </TableContainer>\n              }\n            </TabPanel>\n            \n          </Box>\n          \n          \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function WorkSchedule () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <WorkSchedule_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@mui/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\n\nimport Badge from '@mui/material/Badge';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { useHistory } from \"react-router-dom\";\n\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\n\nimport routes from '../../../server/routes';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n    palette: {\n      primary: {\n        main: '#c03',\n      },\n      def: {\n        main: '#353b48',\n        secondary: '#fff'\n      },\n    },\n});\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    width: '100%',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n});\n\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      \n      module: 'header',\n      \n      open: false,\n      menu: [],\n      full_menu: [],\n      \n      left: false\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      menu: data.info.left_menu,\n      full_menu: data.info.full_menu,\n    })\n  }\n  \n  getData = (method, data = {}) => {\n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      return json;\n    })\n    .catch(err => { \n        console.log( err )\n    });\n  }\n  \n  handleDrawerOpen(){\n    this.setState({\n      open: true\n    })\n  }\n  \n  handleDrawerClose(){\n    this.setState({\n      open: false\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <AppBar className={clsx(this.state.classes.appBar, this.state.open && this.state.classes.appBarShift)}>\n          <Toolbar className={this.state.classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={this.handleDrawerOpen.bind(this)}\n              className={clsx(this.state.classes.menuButton, this.state.open && this.state.classes.menuButtonHidden)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.state.classes.title}>\n              Dashboard\n            </Typography>\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        \n        \n        <React.Fragment >\n          <SwipeableDrawer\n            anchor={'left'}\n            open={ this.state.open }\n            onClose={ () => { this.setState({ open: false }) } }\n            onOpen={ () => { this.setState({ open: true }) } }\n          >\n            <div className={this.state.classes.toolbarIcon}>\n            \n              <Autocomplete\n                size=\"small\"\n                options={this.state.full_menu}\n                getOptionLabel={(option) => option.name}\n                onChange={(event, newValue) => {\n                  if( newValue ){\n                    this.state.history.push(\"/\"+newValue.key_query+\"/\");\n                  }\n                }}\n                style={{ width: 300 }}\n                renderInput={(params) => <TextField {...params} label=\"Поиск\" variant=\"outlined\" />}\n              />\n              \n              <IconButton onClick={this.handleDrawerClose.bind(this)}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            \n            { this.state.menu.map( (item, key) =>\n              <Accordion key={key} >\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography className={this.state.classes.heading}>{ item.parent.name }</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  \n                  <List style={{ width: '100%' }}>\n                  \n                    { item.chaild.map( (it, k) =>\n                      <ListItem button key={k}>\n                        <Link to={\"/\"+it.key_query+\"/\"}>\n                          <ListItemText primary={ it.name } />\n                        </Link>\n                      </ListItem>\n                    ) }\n                  \n                  </List>\n                  \n                </AccordionDetails>\n              </Accordion>\n            ) }\n          </SwipeableDrawer>\n        </React.Fragment>\n        \n        \n        \n      </>\n    )\n  }\n}\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nexport function App () {\n    const classes = useStyles();\n    let history = useHistory();\n    \n    let check_header = true;\n    \n    if( \n      history.location.pathname == '/auth/' || \n      history.location.pathname == '/auth' || \n      history.location.pathname == '/registration/' ||\n      history.location.pathname == '/registration'\n    ){\n      check_header = false;\n    }\n    \n    return (\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          { !check_header ? null :\n            <>\n              <CssBaseline />\n              <Header classes={classes} history={history} />\n            </>\n          }\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Container maxWidth={false} className={classes.container}>\n        \n              <Switch>\n                { routes.map( (item, key) =>\n                  <Route\n                    key={key}\n                    path={item.path}\n                    exact={ item.exact }\n                    component={ item.component }\n                  />\n                ) }\n                \n                <Route\n                  component={ () =>\n                    <Status code={404}>\n                      <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n                        </Grid>\n                      </Grid>\n                    </Status>\n                  }\n                />\n              </Switch>\n        \n            </Container>\n          </main>\n        </div>\n      </ThemeProvider>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.render( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n//ReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n","import React from 'react';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\n\nimport TextField from '@mui/material/TextField';\n\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Stack from '@mui/material/Stack';\n\n//import Grid from '@mui/material/Grid';\nimport ruLocale from \"date-fns/locale/ru\";\n/*import DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';*/\n\nimport DateRangePicker from '@mui/lab/DateRangePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\n//import DatePicker from '@mui/lab/DatePicker';\nimport Typography from '@mui/material/Typography';\n\n\nimport DatePicker from \"react-multi-date-picker\"\n\nexport class MyDaterange extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={ruLocale} size=\"small\">\n        <DateRangePicker\n          \n          allowSameDateSelection={true}\n          showTodayButton={true}\n          startText={this.props.startText}\n          endText={this.props.endText}\n          value={this.props.value}\n          inputFormat=\"yyyy-MM-dd\"\n          //mask=\"____-__-__\"\n          onChange={this.props.func}\n          renderInput={(startProps, endProps) => (\n            <React.Fragment>\n              <TextField style={{ width: '100%' }} {...startProps} />\n              <TextField style={{ width: '100%' }} {...endProps} />\n            </React.Fragment>\n          )}\n        />\n      </LocalizationProvider>\n    )\n  }\n}\n\nexport class MyAutocomplite extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <Stack spacing={3}>\n        <Autocomplete\n          size=\"small\"\n          disableCloseOnSelect={true}\n          multiple={true}\n          id={ this.props.id ?? null }\n          options={this.props.data}\n          getOptionLabel={(option) => option.name}\n          value={this.props.value}\n          onChange={this.props.func}\n          filterSelectedOptions\n          multiple={ this.props.multiple && this.props.multiple === true ? true : false }\n          isOptionEqualToValue={(option, value) => option.id === value.id}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label={this.props.label}\n              placeholder={this.props.placeholder}\n            />\n          )}\n        />\n      </Stack>\n    )\n  }\n}\n\nexport class MySelect extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <FormControl fullWidth variant=\"outlined\" size=\"small\">\n        <InputLabel>{this.props.label}</InputLabel>\n        <Select\n          value={this.props.value}\n          label={this.props.label}\n          onChange={ this.props.func }\n          multiple={ this.props.multiple && this.props.multiple === true ? true : false }\n        >\n          <MenuItem value=\"\"><em>None</em></MenuItem>\n          { this.props.data.map( (item, key) =>\n            <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n          ) }\n        </Select>\n      </FormControl>\n    )\n  }\n}\n\nexport class MyTextInput extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <TextField \n        label={this.props.label}\n        value={this.props.value}\n        onChange={this.props.func}\n        disabled={ this.props.disabled || this.props.disabled === true ? true : false }\n        variant=\"outlined\" \n        size={'small'} \n        color='primary'\n        style={{ width: '100%' }} \n      />\n    )\n  }\n}\n\nexport class MyTimePicker extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <TextField\n        variant=\"outlined\"\n        size=\"small\"\n        color=\"primary\"\n        label={this.props.label}\n        type=\"time\"\n        value={ this.props.value }\n        className={this.state.classes.timePicker}\n        onChange={this.props.func}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        step={600}\n        inputProps={{\n          step: 600, // 5 min\n        }}\n      />\n    )\n  }\n}\n\nexport class MyDatePicker extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <>\n        <Typography>{this.props.label}</Typography>\n        <DatePicker\n          format=\"YYYY-MM-DD\"\n          \n          multiple\n          sort\n          \n          //mask=\"____/__/__\"\n          //multiple={ this.props.multiple && this.props.multiple === true ? true : false }\n          //disableCloseOnSelect={true}\n          //inputFormat=\"yyyy-MM-dd\"\n          style={{ width: '100%' }}\n          label={this.props.label}\n          value={this.props.value}\n          onChange={this.props.func}\n        />\n      </>\n    )\n  }\n}\n\nexport class MyDatePickerTest extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <DatePicker \n        multiple\n        value={this.props.value}\n        onChange={this.props.func}\n      />\n    )\n  }\n}\n\nexport class MyCheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.props.value}\n              onChange={this.props.func}\n              color=\"primary\"\n            />\n          }\n          label={this.props.label}\n        />\n      </FormGroup>\n    )\n  }\n}"],"names":["Home","require","Auth","Reg","LiveOrders","Events","RasByBill","CategoryItems","VendorModule","VendorItemPrice","Tender","Revizion","RevizionNew","WorkSchedule","SiteSale2","SiteSale2_New","SiteSale2_Edit","SiteSale2_Stat","DriveMapStatAll","module","exports","path","exact","component","title","code","queryString","theme","createTheme","palette","primary","main","useStyles","makeStyles","paper","display","flexDirection","alignItems","avatar","borderRadius","width","height","margin","backgroundColor","avatar2","form","marginTop","spacing","submit","textLink","color","Auth_","props","method","data","setState","is_load","fetch","headers","body","stringify","state","version","login","JSON","then","res","json","st","type","setTimeout","history","push","err","console","log","classes","module_name","modalDialog","dialogTitle","dialogText","point_id","this","point","showReady","getData","read","onstol","ordersQueue","prestol_new","document","getElementById","value","pwd","text","localStorage","setItem","token","window","location","pathname","Backdrop","className","backdrop","open","CircularProgress","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","autoFocus","Grid","container","direction","justifyContent","item","xs","sm","md","lg","xl","Avatar","alt","src","style","noValidate","TextField","variant","size","required","fullWidth","label","name","autoComplete","auth","bind","href","React","useHistory","def","secondary","formControl","selectEmpty","tableCel","textAlign","borderRight","padding","cursor","tableCelHead","customCel","timePicker","CategoryItems_","getItem","modalDialog2","modalDialog3","newMainCatMy","editMainCatMy","newMainNameMy","editMainNameMy","editCat","allCats","allItems","thisValItems","thisDataItems","thisCatId","module_info","cats","items","event","target","cat_id","alert","myVal","filter","parseInt","cat","parent_id","paddingBottom","paddingTop","func","changeCatMain","onChange","changeNameMain","saveCat","val","saveItems","changeCatMainEdit","changeNameMainEdit","saveEditCat","createCat","map","main_cat","main_key","Accordion","key","AccordionSummary","expandIcon","ExpandMore","Menu","marginRight","Typography","AccordionDetails","parent_cat","parent_key","addItems","DriveMapStatAll_","points","drivers","point_list","updateData","getOrders","orders","home","objectManager","ymaps","ObjectManager","features","options","preset","iconColor","geometry","coordinates","latitude","longitude","status_order","point_color","properties","iconCaption","point_text","xy","add","driver","positions","pos","parse","iconContent","geoObjects","removeAll","ready","Map","center","zoom","searchControlProvider","myGeoObject","GeoObject","changePoint","driver_name","Events_","mounth","mounths","years","year","calendar","chooseDayHoly","events","chooseEvent","eventPoint1","everyYear1","timeStart2","timeEnd2","expanded","dayEvents","events_hist","this_m","this_y","checked","m","y","day","full_day","chooseDay","date","holy","hist","this_events","every_year","time_start","time_end","confirm","del_id","length","changeEvent","changePoint1","changeTimeStart2","changeTimeEnd2","changeEveryYear1","List","ListItem","ListItemText","Close","delEvent","save","changeMounth","changeYear","TableContainer","Paper","Table","overflow","TableHead","TableRow","TableCell","TableBody","m_key","k","dir","zIndex","drawer","Home_","Live_Orders","changeCheckOrders","type_order","preorder","date_time_order","date_time_preorder_","unix_start_stol_or","give_data_time_","close_date_time_order","type_","time_","test_time","unix_time_to_client","status","stol_sborki","is_preorder","date_time_preorder","time_start_order","time_end_order","formatDate","d","Date","month","getMonth","getDate","getFullYear","join","RasByBill_","date_start","date_end","rangeDate","items_cat","item_cat","myItems","start_date","end_date","summ","items_ras","parseFloat","sum","resItems","pf_ras","rec_ras","full_sum","toFixed","catItems","this_price","count_pos","dateStart","dateEnd","multiple","startText","endText","changeDateRange","changeItems","getItems","getCats","count_item","ei_name","count_pf","ei_name_pf","count_bill","pf_name","count_rolls","price_rolls","disabled","count_pizza","price_by_items","it","paddingLeft","parent_items","backButton","instructions","marginBottom","Reg_","activeStep","steps","phone","charCode","nextStep","Stepper","alternativeLabel","Step","StepLabel","onKeyPress","enterNextStep","TabPanel","children","index","other","role","hidden","Box","sx","p","a11yProps","propTypes","PropTypes","Revizion_","revList","chooseRev","pf","chooseTab","getRevList","getDataRev","rev_id","to","changeRev","Tabs","textColor","indicatorColor","centered","Tab","RevizionNewItem","change","nextProps","nextState","counts","need_pq","itemKey","clear","copy","RevizionNew_","storages","rec","key_item","key_data","allVal","new_counts","saveData","copyData","clearData","SwipeableDrawer","anchor","onOpen","button","position","bottom","left","right","elevation","BottomNavigation","showLabels","newValue","BottomNavigationAction","icon","Restore","formatDateDot","formatDateName","SiteSale2_new_","click","modalText","cities","city","modalLink","where_promo_list","promo_action_list","sale_list","promo_conditions_list","promo_sale_list","type_sale_list","date_promo_list","type_order_list","where_order_list","promo_prizw_vk","spamNameSMS","auto_text","where_promo","promo_name","generate_new","count_action","promo_action","type_sale","promo_sale","sale_type","promo_conditions","price_start","price_end","date_promo","promo_length","promo_count","day_1","day_2","day_3","day_4","day_5","day_6","day_7","where_order","numberList","promo_desc_true","promo_desc_false","textSMS","addItem","addItemCount","addItemPrice","addItemAllPrice","itemsAdd","itemsAddPrice","saleCat","saleItem","priceItem","conditionItems","testDate","Y","M","D","fullDate","generateTextDescFalse","generateTextDescTrue","count_promo","find","promo_items","promo_cat","dateList","toISOString","split","promo_vk_prize","cert_text","addr","promo_len","generate","promo_in_count","promo_type_sale","promo_type","promo_summ","promo_summ_to","promo_when","promo_type_order","promo_where","promo_city","promo_point","about_promo_text","condition_promo_text","promo_items_add","promo_items_sale","promo_conditions_items","date_between","promo_text","link","thisDay","nextDay","setDate","textTrue","substring","itemText","dop_text","slice","textFalse","thisItems","item_id","thisItem","count","price","newItems","changeData","changeDataCheck","Divider","changeDataData","addItemAdd","delItemAdd","TableFooter","priceItemAdd","delItemPrice","TextareaAutosize","placeholder","minRows","SiteSale2_edit_","promo_id","promoId","promo","findItem","limDate","limit","date1","date2","time1","time2","d1","d2","d3","d4","d5","d6","d7","city_id","coment","condition_text","SiteSale2_","city_list","promoName","findPromoList","all_city_list","showPromoList","marginLeft","city_name","def_count","delPromo","SiteSale2_Stat_","spam_list","spam_id","spam_list_data","spam_list_data_stat","true","all","percent","stat","show","changeSpam","number","useParams","dynamicCellStyle","params","colDef","headerName","Tender_","testTable","vendors","myVendors","showVendors","params_api","params_columnApi","table","k1","section","k2","k3","tableItem","k4","item_price","vendor_price","vendor_id","item_ras","ras","field","api","columnApi","AgGridReact","onGridReady","onCellClicked","rowData","AgGridColumn","pinned","cellClassRules","hide","resizable","cellStyle","VendorItemPrice_","vendor","allCity","isPrioriti","this_items","all_city","is_prioriti","changeCity","changeVendor","name_for_vendor","comment","update","full_price","pqs","rec_pq","VendorModule_","modalItems","modalVendor","modalVendorNew","vendor_items","openVendor","customAdd","vendorCities","allCities","nds","nds_","all_items","vendor_cities","all_cities","bill_ex","email","email_2","inn","min_price","need_img_bill_ex","ogrn","includes","item_name","item1","maxWidth","paddingRight","Add","addItemCustom","sort","changeSort","changeNDS","delItem","saveVendorItems","testChange","user","saveVendor","addVendor","openModalVendorNew","Visibility","openModalVendor","DirectionsCar","openModalItems","is_show","VisibilityOff","HeaderItem","days","colSpan","WorkSchedule_","one","two","test_one","test_two","isOpenModalH","userInfo","hList","mList","newTimeStart","newTimeEnd","openNewTimeAdd","otherAppList","otherApp","testVal","testOpen","mainMenu","mainMenuH","chooseUser","tabTable","h","is_active","this_date","smena_id","app_id","user_id","h_info","other_app","key_time","hours","new_app","mentor_id","full_app_name","user_name","pt","ListItemAvatar","AccessTime","SyncAlt","HomeWork","fastTime","LooksOne","LooksTwo","Looks3","scroll","app_name","dividers","my_load_h","all_load_h","bonus","mentor_list","minWidth","minHeight","addTime","delTime","changeHourse","saveDayHourse","borderBottom","borderColor","row","dates","date_k","openH","info","order_stat","count_false","root","toolbar","toolbarIcon","mixins","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","fixedHeight","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","Header","menu","full_menu","left_menu","AppBar","clsx","Toolbar","IconButton","edge","handleDrawerOpen","noWrap","Badge","badgeContent","Notifications","Autocomplete","getOptionLabel","option","key_query","renderInput","handleDrawerClose","ChevronLeft","parent","chaild","Status","render","staticContext","App","check_header","ThemeProvider","CssBaseline","Container","routes","ReactDOM","MyDaterange","dateAdapter","AdapterDateFns","locale","ruLocale","allowSameDateSelection","showTodayButton","inputFormat","startProps","endProps","MyAutocomplite","disableCloseOnSelect","filterSelectedOptions","MySelect","MyTextInput","MyTimePicker","InputLabelProps","shrink","step","inputProps","MyDatePicker","format","MyCheckBox","control"],"sourceRoot":""}