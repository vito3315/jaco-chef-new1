{"version":3,"file":"66.8f118ba059fe4ef7cb75.js","mappings":"4WAiBA,IAAMA,EAAcC,EAAQ,MAGtBC,EAAAA,SAAAA,I,+bACJ,WAAYC,GAAO,4BACjB,cAAMA,IADW,6BAyCT,SAACC,GAAsB,IAAdC,EAAc,uDAAP,CAAC,EAKzB,OAJA,EAAKC,SAAS,CACZC,SAAS,IAGJC,MAAM,wCAAyC,CACpDJ,OAAQ,OACRK,QAAS,CACP,eAAgB,qCAElBC,KAAMV,EAAYW,UAAU,CAC1BP,OAAQA,EACRQ,OAAQ,EAAKC,MAAMD,OACnBE,QAAS,EACTC,MAAOC,aAAaC,QAAQ,SAC5BZ,KAAMa,KAAKP,UAAUN,OAGtBc,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACE,GACL,IAAgB,IAAZA,EAAKC,IAA6B,SAAbD,EAAKE,KAA9B,CAKA,IAAgB,IAAZF,EAAKC,IAA6B,QAAbD,EAAKE,KAW9B,OANAC,YAAW,WACT,EAAKlB,SAAS,CACZC,SAAS,GAEZ,GAAE,KAEIc,EAVLI,OAAOC,SAASC,SAAW,OAH5B,MAFCF,OAAOC,SAASC,SAAW,GAgB9B,IAhCI,OAiCE,SAACC,GACNC,QAAQC,IAAIF,GACZ,EAAKtB,SAAS,CACZC,SAAS,GAEZ,GACJ,IAlFC,EAAKM,MAAQ,CACXD,OAAQ,SACRmB,YAAa,GACbxB,SAAS,EAETyB,OAAQ,GACRC,KAAM,GAENC,UAAW,GACXC,QAAS,GAETC,QAAS,GACTC,OAAQ,GAERC,KAAM,GAENC,QAAS,GACTC,OAAQ,IApBO,CAuBlB,C,qEAED,oGACmBC,KAAKC,QAAQ,WADhC,OACMrC,EADN,OAGEwB,QAAQC,IAAIzB,GAEZoC,KAAKnC,SAAS,CACZyB,YAAa1B,EAAKsC,YAAYC,KAC9BZ,OAAQ3B,EAAK2B,OACbC,KAAM5B,EAAK2B,OAAO,GAAGa,GACrBT,QAAS/B,EAAK+B,QACdG,QAASlC,EAAKiC,OAGhBQ,SAASC,MAAQ1C,EAAKsC,YAAYC,KAbpC,gD,qEA8DA,SAAWI,GACTP,KAAKnC,SAAS,CACZ2B,KAAMe,EAAMC,OAAOC,OAEtB,G,0BAED,SAAaF,EAAOE,GAClBT,KAAKnC,SAAS,CACZ+B,OAAQa,EACRV,OAAQ,IAEX,G,uBAED,SAAUQ,EAAOE,GACfT,KAAKnC,SAAS,CACZkC,OAAQU,EACRb,OAAQ,IAEX,G,+CAED,6FACQhC,EAAO,CACX8C,QAASV,KAAK5B,MAAMoB,KACpBG,QAASK,KAAK5B,MAAMwB,OACpBe,IAAKX,KAAK5B,MAAM2B,QAJpB,SAOoBC,KAAKC,QAAQ,WAAYrC,GAP7C,OAOQe,EAPR,OASEqB,KAAKY,iBAAiBjC,GATxB,gD,2EAaA,SAAiBA,GACf,IAAMgB,EAAUK,KAAK5B,MAAMuB,QAErBkB,EAAQlC,EAAImC,mBAEZC,EAAgBpB,EAAQqB,KAAI,SAACC,GASjC,OARAA,EAAGC,MAAQ,GAEXL,EAAMM,SAAQ,SAACC,GACTA,EAAGC,YAAcJ,EAAGb,IACtBa,EAAGC,MAAMI,KAAKF,EAEjB,IAEMH,CACR,IAIDjB,KAAKnC,SAAS,CACZgC,KAAMlB,EAAIkC,MACVlB,QAASoB,EACTtB,UAAWd,EAAIY,OACfG,QAASf,EAAIY,OAAO,GAAGa,IAE1B,G,0BAED,SAAaG,GACXP,KAAKnC,SAAS,CACZ6B,QAASa,EAAMC,OAAOC,OAEzB,G,oBAED,WAAS,WAIP,OAFArB,QAAQC,IAAI,UAGV,gCACE,gBAACkC,EAAA,EAAD,CAAUC,KAAMxB,KAAK5B,MAAMN,SACzB,gBAAC2D,EAAA,EAAD,CAAkBC,MAAM,aAG1B,gBAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,GAAI,GAC9B,gBAACH,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,0BAAKjC,KAAK5B,MAAMkB,eAIpB,gBAACqC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGK,eAAe,SAASJ,GAAI,GACtD,gBAACH,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAAC,KAAD,CACErE,KAAMoC,KAAK5B,MAAMmB,OACjBkB,MAAOT,KAAK5B,MAAMoB,KAClB2C,KAAMnC,KAAKoC,WAAWC,KAAKrC,MAC3BsC,MAAM,WAIV,gBAACX,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAAC,KAAD,CACEK,MAAM,YACNC,UAAU,EACV3E,KAAMoC,KAAK5B,MAAMuB,QACjBc,MAAOT,KAAK5B,MAAMwB,OAClBuC,KAAMnC,KAAKwC,aAAaH,KAAKrC,SAGjC,gBAAC2B,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAAC,KAAD,CACEK,MAAM,YACNC,UAAU,EACV3E,KAAMoC,KAAK5B,MAAM0B,QACjBW,MAAOT,KAAK5B,MAAM2B,OAClBoC,KAAMnC,KAAKyC,UAAUJ,KAAKrC,SAI9B,gBAAC2B,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAACS,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAO,CAAEC,WAAY,UACrBC,QAAS9C,KAAK+C,aAAaV,KAAKrC,OAHlC,qBAUFA,KAAK5B,MAAMyB,KAAKmD,OAChB,gBAACrB,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,gBAACF,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,gBAACgB,EAAA,EAAD,CAAgBC,GAAI,CAAEC,UAAW,CAAEnB,GAAI,OAAQC,GAAI,OACjD,gBAACmB,EAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,gBAC7B,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,kBACA,gBAACA,EAAA,EAAD,kBACA,gBAACA,EAAA,EAAD,YACA,gBAACA,EAAA,EAAD,iBACA,gBAACA,EAAA,EAAD,eACCxD,KAAK5B,MAAMuB,QAAQqB,KAAI,SAACpB,EAAQ6D,GAAT,OACtB,gBAACD,EAAA,EAAD,CACEC,IAAKA,EACLb,MAAO,CACLC,WAAY,SACZa,SAAU,IACVC,UAAW,UAEbC,QAAS,GAERhE,EAAOO,KAVY,MAgB5B,gBAAC0D,EAAA,EAAD,KACG7D,KAAK5B,MAAMyB,KAAKmB,KAAI,SAACe,EAAM0B,GAAP,OACnB,gBAAC,WAAD,CAAgBA,IAAKA,GACnB,gBAACF,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CACEI,QAAO,UAAK,EAAgC,EAA5B,EAAKxF,MAAMuB,QAAQqD,QACnCE,GAAI,CACFY,gBAAiB,YAGlB/B,EAAK5B,OAIT4B,EAAKlC,KAAKmB,KAAI,SAAC+C,EAAUC,GAAX,OACb,gBAAC,WAAD,CAAgBP,IAAKO,GACnB,gBAACT,EAAA,EAAD,CACEL,GAAI,CAAE,OAAQ,CAAEY,gBAAiB,aAEjC,gBAACN,EAAA,EAAD,KAAYO,EAAS5D,MACrB,gBAACqD,EAAA,EAAD,MACa,IAAZQ,EACC,gBAACR,EAAA,EAAD,CAAWI,QAAS,GAApB,wBAIA,gBAAC,WAAD,CAAgBH,IAAKO,GACnB,gBAACR,EAAA,EAAD,MACA,gBAACA,EAAA,EAAD,MACA,gBAACA,EAAA,EAAD,OAGH,EAAKpF,MAAMuB,QAAQqB,KAAI,SAACpB,EAAQ6D,GAAT,OACtB,gBAAC,WAAD,CAAgBA,IAAKA,GACnB,gBAACD,EAAA,EAAD,CAAWI,QAAS,IAFA,KAOzBG,EAASlD,MAAMG,KAAI,SAACe,EAAMkC,GAAP,OAClB,gBAACV,EAAA,EAAD,CAAUE,IAAKQ,EAAGC,OAAK,GACrB,gBAACV,EAAA,EAAD,CAAWW,UAAU,YAClBpC,EAAK5B,MAER,gBAACqD,EAAA,EAAD,MACA,gBAACA,EAAA,EAAD,MACA,gBAACA,EAAA,EAAD,MACA,gBAACA,EAAA,EAAD,MACC,EAAKpF,MAAMuB,QAAQqB,KAAI,SAACpB,EAAQ6D,GAAT,OACvB,gBAAC,WAAD,CAAgBA,IAAKA,GACpB7D,EAAOsB,MAAMkD,MACZ,SAAChD,GAAD,OAAQA,EAAGiD,UAAYtC,EAAK3B,EAA5B,IAEA,gCACE,gBAACoD,EAAA,EAAD,KACE,gBAAC,KAAD,CACE5F,KAAM,EAAKQ,MAAMqB,UACjBgB,MAAO,EAAKrC,MAAMsB,QAClByC,KAAM,EAAKmC,aAAajC,KAAK,GAC7BC,MAAM,MAGV,gBAACkB,EAAA,EAAD,CACEZ,MAAO,CACLC,WAAY,SACZc,UAAW,WAGZ/D,EAAOsB,MAAMkD,MAAK,SAAChD,GAAD,OAAQA,EAAGiD,UAAYtC,EAAK3B,EAA5B,IAAgCc,QAIvD,gCACE,gBAACsC,EAAA,EAAD,MACA,gBAACA,EAAA,EAAD,OA1BmB,IATR,IAzBT,IAbE,SA7BN,KAyHhC,K,EA3UG/F,CAAgB8G,EAAAA,WA8Uf,SAASC,IACd,OAAO,gBAAC/G,EAAD,KACR,C,iBChWK,IAAIgH,EAAY,EAAQ,KAAR,CAA0FtG,EAAOiC,GAAI,CAAC,QAAS,IAC/HjC,EAAOuG,IAAIC,QAAQF,GACnBtG,EAAOuG,IAAIE,YAAOC,EAAWJ,E","sources":["webpack://package.json/./src/components/tender/tender.component.jsx","webpack://package.json/./src/components/tender/tender.style.scss?9070"],"sourcesContent":["import React from 'react';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableContainer from '@mui/material/TableContainer';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MyAutocomplite, MySelect } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\n\nclass Tender_ extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      module: 'tender',\n      module_name: '',\n      is_load: false,\n\n      cities: [],\n      city: '',\n\n      newCities: [],\n      newCiti: '',\n\n      vendors: [],\n      vendor: [],\n\n      cats: [],\n\n      newCats: [],\n      newCat: '',\n\n    };\n  }\n\n  async componentDidMount() {\n    let data = await this.getData('get_all');\n\n    console.log(data);\n\n    this.setState({\n      module_name: data.module_info.name,\n      cities: data.cities,\n      city: data.cities[0].id,\n      vendors: data.vendors,\n      newCats: data.cats,\n    });\n\n    document.title = data.module_info.name;\n  }\n\n  getData = (method, data = {}) => {\n    this.setState({\n      is_load: true,\n    });\n\n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: queryString.stringify({\n        method: method,\n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify(data),\n      }),\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        if (json.st === false && json.type == 'redir') {\n          window.location.pathname = '/';\n          return;\n        }\n\n        if (json.st === false && json.type == 'auth') {\n          window.location.pathname = '/auth';\n          return;\n        }\n\n        setTimeout(() => {\n          this.setState({\n            is_load: false,\n          });\n        }, 300);\n\n        return json;\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          is_load: false,\n        });\n      });\n  };\n\n  changeCity(event) {\n    this.setState({\n      city: event.target.value,\n    });\n  }\n\n  changeVendor(event, value) {\n    this.setState({\n      vendor: value,\n      newCat: '',\n    });\n  }\n\n  changeCat(event, value) {\n    this.setState({\n      newCat: value,\n      vendor: [],\n    });\n  }\n\n  async getDataTable() {\n    const data = {\n      city_id: this.state.city,\n      vendors: this.state.vendor,\n      cat: this.state.newCat,\n    };\n\n    const res = await this.getData('get_data', data);\n\n    this.getDataTableCell(res);\n\n  }\n\n  getDataTableCell(res) {\n    const vendors = this.state.vendors;\n\n    const items = res.vendor_items_price;\n\n    const vendors_items = vendors.map((el) => {\n      el.price = [];\n\n      items.forEach((it) => {\n        if (it.vendor_id === el.id) {\n          el.price.push(it);\n        }\n      });\n\n      return el;\n    });\n\n   // console.log(vendors_items);\n\n    this.setState({\n      cats: res.items,\n      vendors: vendors_items,\n      newCities: res.cities,\n      newCiti: res.cities[0].id,\n    });\n  }\n\n  changeSelect(event) {\n    this.setState({\n      newCiti: event.target.value,\n    });\n  }\n\n  render() {\n\n    console.log('render')\n\n    return (\n      <>\n        <Backdrop open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n\n        <Grid container spacing={3} mb={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} justifyContent=\"center\" mb={5}>\n          <Grid item xs={12} sm={3}>\n            <MySelect\n              data={this.state.cities}\n              value={this.state.city}\n              func={this.changeCity.bind(this)}\n              label=\"Город\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <MyAutocomplite\n              label=\"Поставщик\"\n              multiple={true}\n              data={this.state.vendors}\n              value={this.state.vendor}\n              func={this.changeVendor.bind(this)}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <MyAutocomplite\n              label=\"Категория\"\n              multiple={false}\n              data={this.state.newCats}\n              value={this.state.newCat}\n              func={this.changeCat.bind(this)}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <Button\n              variant=\"contained\"\n              style={{ whiteSpace: 'nowrap' }}\n              onClick={this.getDataTable.bind(this)}\n            >\n              Обновить данные\n            </Button>\n          </Grid>\n        </Grid>\n\n        {!this.state.cats.length ? null : (\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={12}>\n              <TableContainer sx={{ maxHeight: { xs: 'none', sm: 650 } }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Категория</TableCell>\n                      <TableCell>Параметры</TableCell>\n                      <TableCell>Все</TableCell>\n                      <TableCell>Тольятти</TableCell>\n                      <TableCell>Самара</TableCell>\n                      {this.state.vendors.map((vendor, key) => (\n                        <TableCell\n                          key={key}\n                          style={{\n                            whiteSpace: 'nowrap',\n                            minWidth: 300,\n                            textAlign: 'center'\n                          }}\n                          colSpan={2}\n                        >\n                          {vendor.name}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n\n                  <TableBody>\n                    {this.state.cats.map((item, key) => (\n                      <React.Fragment key={key}>\n                        <TableRow>\n                          <TableCell\n                            colSpan={`${5 + this.state.vendors.length * 2}`}\n                            sx={{\n                              backgroundColor: '#ADD8E6',\n                            }}\n                          >\n                            {item.name}\n                          </TableCell>\n                        </TableRow>\n\n                        {item.cats.map((category, key_cat) => (\n                          <React.Fragment key={key_cat}>\n                            <TableRow\n                              sx={{ '& td': { backgroundColor: '#ADD8E6' } }}\n                            >\n                              <TableCell>{category.name}</TableCell>\n                              <TableCell></TableCell>\n                              {key_cat === 0 ? (\n                                <TableCell colSpan={3}>\n                                  Зафиксированные цены\n                                </TableCell>\n                              ) : (\n                                <React.Fragment key={key_cat}>\n                                  <TableCell></TableCell>\n                                  <TableCell></TableCell>\n                                  <TableCell></TableCell>\n                                </React.Fragment>\n                              )}\n                              {this.state.vendors.map((vendor, key) => (\n                                <React.Fragment key={key}>\n                                  <TableCell colSpan={2}></TableCell>\n                                </React.Fragment>\n                              ))}\n                            </TableRow>\n\n                            {category.items.map((item, k) => (\n                              <TableRow key={k} hover>\n                                <TableCell className=\"td_color\">\n                                  {item.name}\n                                </TableCell>\n                                <TableCell></TableCell>\n                                <TableCell></TableCell>\n                                <TableCell></TableCell>\n                                <TableCell></TableCell>\n                                {this.state.vendors.map((vendor, key) => (\n                                 <React.Fragment key={key}>\n                                 {vendor.price.find(\n                                   (it) => it.item_id === item.id\n                                 ) ? (\n                                   <>\n                                     <TableCell>\n                                       <MySelect\n                                         data={this.state.newCities}\n                                         value={this.state.newCiti}\n                                         func={this.changeSelect.bind(this)}\n                                         label=\"\"\n                                       />\n                                     </TableCell>\n                                     <TableCell\n                                       style={{\n                                         whiteSpace: 'nowrap',\n                                         textAlign: 'center',\n                                       }}\n                                     >\n                                       {vendor.price.find((it) => it.item_id === item.id).price}\n                                     </TableCell>\n                                   </>\n                                 ) : (\n                                   <>\n                                     <TableCell></TableCell>\n                                     <TableCell></TableCell>\n                                   </>\n                                 )}\n                               </React.Fragment>\n                                ))}\n                              </TableRow>\n                            ))}\n                          </React.Fragment>\n                        ))}\n                      </React.Fragment>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Grid>\n          </Grid>\n        )}\n      </>\n    );\n  }\n}\n\nexport function Tender() {\n  return <Tender_ />;\n}\n","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1666897899292\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","Tender_","props","method","data","setState","is_load","fetch","headers","body","stringify","module","state","version","login","localStorage","getItem","JSON","then","res","json","st","type","setTimeout","window","location","pathname","err","console","log","module_name","cities","city","newCities","newCiti","vendors","vendor","cats","newCats","newCat","this","getData","module_info","name","id","document","title","event","target","value","city_id","cat","getDataTableCell","items","vendor_items_price","vendors_items","map","el","price","forEach","it","vendor_id","push","Backdrop","open","CircularProgress","color","Grid","container","spacing","mb","item","xs","sm","justifyContent","func","changeCity","bind","label","multiple","changeVendor","changeCat","Button","variant","style","whiteSpace","onClick","getDataTable","length","TableContainer","sx","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","key","minWidth","textAlign","colSpan","TableBody","backgroundColor","category","key_cat","k","hover","className","find","item_id","changeSelect","React","Tender","cssReload","hot","dispose","accept","undefined"],"sourceRoot":""}