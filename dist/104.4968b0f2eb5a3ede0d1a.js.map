{"version":3,"file":"104.4968b0f2eb5a3ede0d1a.js","mappings":"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","sources":["webpack://package.json/./src/components/promo_items_stat/promo_items_stat.component.jsx","webpack://package.json/./src/components/promo_items_stat/promo_items_stat.style.scss"],"sourcesContent":["import React from 'react';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MyDatePickerNew, MyTextInput, MyAutocomplite } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass PromoItemsStat_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      module: 'promo_items_stat',\n      module_name: '',\n      is_load: false,\n      \n      date_start: formatDate(new Date()),\n      date_end: formatDate(new Date()),\n      point_list: [],\n      choosePoint: [],\n\n      stats: [],\n\n      chooseItem: null,\n      items_list: [],\n      promoName: ''\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      point_list: data.points,\n      stats: data.stats,\n      items_list: data.items\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        window.location.pathname = '/';\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  async getStat() {\n    let data = {\n      choosePoint   : this.state.choosePoint,\n      date_start    : this.state.date_start,\n      date_end      : this.state.date_end,\n      promoName     : this.state.promoName,\n      chooseItem    : this.state.chooseItem,\n    };\n    \n    let res = await this.getData('get_all', data);\n\n    console.log( data )\n    console.log( res )\n\n    this.setState({\n      stats: res.stats\n    })\n  }\n\n  choosePoint(event, data){\n    this.setState({\n      choosePoint: data\n    })\n  }\n\n  chooseData(data, val, val2){\n    this.setState({\n      [data]: data != 'promoName' && data != 'chooseItem' ? formatDate(val) : data == 'chooseItem' ? val2 : val\n    })\n  }\n\n  chooseDataNew(data, val, val2){\n    if( data == 'promoName' ){\n      this.setState({\n        [data]: val.target.value,\n        chooseItem: val.target.value.length > 0 ? null : this.state.chooseItem\n      })\n    }\n\n    if( data == 'chooseItem' ){\n      this.setState({\n        [data]: val2,\n        promoName: val2 ? '' : this.state.promoName\n      })\n    }\n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop open={this.state.is_load} style={{ zIndex: 99 }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={2}>\n            <MyAutocomplite data={this.state.point_list} value={this.state.choosePoint} func={ this.choosePoint.bind(this) } multiple={true} label='Точка' />\n          </Grid>\n\n          <Grid item xs={12} sm={2}>\n            <MyDatePickerNew label={'Дата от'} value={this.state.date_start} func={ this.chooseData.bind(this, 'date_start') } />\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <MyDatePickerNew label={'Дата до'} value={this.state.date_end} func={ this.chooseData.bind(this, 'date_end') } />\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <MyTextInput value={this.state.promoName} func={ this.chooseDataNew.bind(this, 'promoName') } label='Промокод' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MyAutocomplite data={this.state.items_list} value={this.state.chooseItem} func={ this.chooseDataNew.bind(this, 'chooseItem') } multiple={false} label='Товар' />\n          </Grid>\n          \n          \n          \n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.getStat.bind(this)}>Обновить</Button>\n          </Grid>\n          \n          <Grid item xs={12} sm={6}>\n            \n            <Table size={'small'}>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Название</TableCell>\n                  <TableCell>Кол-во</TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {!this.state.stats ? null :\n                  this.state.stats.map((item, key) =>\n                    <TableRow key={key}>\n                      <TableCell style={{ textAlign: 'left' }}>{item.name} </TableCell>\n                      <TableCell style={{ textAlign: 'left' }}>{item.count} </TableCell>\n                    </TableRow>\n                  )\n                }\n              </TableBody>\n            \n            </Table>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function PromoItemsStat() {\n  return (\n    <PromoItemsStat_ />\n  );\n}","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1664264964638\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","PromoItemsStat_","props","method","data","setState","is_load","fetch","headers","body","stringify","module","state","version","login","localStorage","getItem","JSON","then","res","json","st","type","setTimeout","window","location","pathname","err","console","log","module_name","date_start","date_end","point_list","choosePoint","stats","chooseItem","items_list","promoName","this","getData","module_info","name","points","items","document","title","event","val","val2","target","value","Backdrop","open","style","zIndex","CircularProgress","color","Grid","container","spacing","item","xs","sm","func","bind","multiple","label","chooseData","chooseDataNew","Button","variant","onClick","getStat","Table","size","TableHead","TableRow","TableCell","TableBody","map","key","textAlign","count","React","PromoItemsStat","cssReload","id","hot","dispose","accept","undefined"],"sourceRoot":""}