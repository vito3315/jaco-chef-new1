{"version":3,"file":"main.3ff9b0efad7120a49132.js","mappings":"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","sources":["webpack://package.json/./server/routes.js","webpack://package.json/./src/components/auth/auth.component.jsx","webpack://package.json/./src/components/category_items/category_items.component.jsx","webpack://package.json/./src/components/events/events.component.jsx","webpack://package.json/./src/components/home/home.component.jsx","webpack://package.json/./src/components/live_orders/live_orders.component.jsx","webpack://package.json/./src/components/ras_by_bill/ras_by_bill.component.jsx","webpack://package.json/./src/components/registration/registration.component.jsx","webpack://package.json/./src/components/revizion/revizion.component.jsx","webpack://package.json/./src/components/site_sale_2/site_sale_2.component.jsx","webpack://package.json/./src/components/tender/tender.component.jsx","webpack://package.json/./src/components/vendor_item_price/vendor_item_price.component.jsx","webpack://package.json/./src/components/vendor_module/vendor_module.component.jsx","webpack://package.json/./src/components/work_schedule/work_schedule.component.jsx","webpack://package.json/./src/components/app/app.component.jsx","webpack://package.json/./src/index.prod.js","webpack://package.json/./src/stores/elements.js"],"sourcesContent":["const { Home } = require( '../src/components/home' );\r\nconst { Auth } = require( '../src/components/auth' );\r\nconst { Reg } = require( '../src/components/registration' );\r\n\r\nconst { LiveOrders } = require( '../src/components/live_orders' );\r\nconst { Events } = require( '../src/components/events' );\r\nconst { RasByBill } = require( '../src/components/ras_by_bill' );\r\nconst { CategoryItems } = require( '../src/components/category_items' );\r\nconst { VendorModule } = require( '../src/components/vendor_module' );\r\nconst { VendorItemPrice } = require( '../src/components/vendor_item_price' );\r\nconst { Tender } = require( '../src/components/tender' );\r\nconst { Revizion, RevizionNew } = require( '../src/components/revizion' );\r\nconst { WorkSchedule } = require( '../src/components/work_schedule' );\r\nconst { SiteSale2, SiteSale2_New, SiteSale2_Edit, SiteSale2_Stat } = require( '../src/components/site_sale_2' );\r\n\r\n\r\nmodule.exports = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        component: Home,\r\n        title: 'Главная',\r\n        code: 200\r\n    },\r\n    {\r\n        path: '/auth',\r\n        exact: true,\r\n        component: Auth,\r\n        title: 'Авторизация',\r\n        code: 200\r\n    },\r\n    {\r\n        path: '/registration',\r\n        exact: true,\r\n        component: Reg,\r\n        title: 'Регистрация',\r\n        code: 200\r\n    },\r\n    \r\n    {\r\n        path: '/live_orders',\r\n        exact: true,\r\n        component: LiveOrders,\r\n        title: 'Оформленные заказы',\r\n        code: 200\r\n    },\r\n    {\r\n        path: '/events',\r\n        exact: true,\r\n        component: Events,\r\n        title: 'События',\r\n        code: 200\r\n    },\r\n    {\r\n        path: '/ras_by_bill',\r\n        exact: true,\r\n        component: RasByBill,\r\n        title: 'Расход по накладным',\r\n        code: 200\r\n    },\r\n    {\r\n        path: '/category_items',\r\n        exact: true,\r\n        component: CategoryItems,\r\n        title: 'Категории товаров',\r\n        code: 200\r\n    },\r\n    {\r\n        path: '/vendor_module',\r\n        exact: true,\r\n        component: VendorModule,\r\n        title: 'Поставщики',\r\n        code: 200\r\n    },\r\n    {\r\n        path: '/vendor_item_price',\r\n        exact: true,\r\n        component: VendorItemPrice,\r\n        title: 'Цены на товары поставщика',\r\n        code: 200\r\n    },\r\n    {\r\n        path: '/tender',\r\n        exact: true,\r\n        component: Tender,\r\n        title: 'Цены на товары поставщика',\r\n        code: 200\r\n    },\r\n    {\r\n        path: '/revizion',\r\n        exact: true,\r\n        component: Revizion,\r\n        title: 'Ревизия',\r\n        code: 200\r\n    },\r\n    {\r\n        path: '/revizion/new',\r\n        exact: true,\r\n        component: RevizionNew,\r\n        title: 'Новая ревизия',\r\n        code: 200\r\n    },\r\n    {\r\n        path: '/work_schedule',\r\n        exact: true,\r\n        component: WorkSchedule,\r\n        title: 'График работы',\r\n        code: 200\r\n    },\r\n    \r\n    {\r\n        path: '/site_sale_2',\r\n        exact: true,\r\n        component: SiteSale2,\r\n        title: 'Промокоды маркетолога',\r\n        code: 200\r\n    },\r\n    {\r\n        path: '/site_sale_2/new',\r\n        exact: true,\r\n        component: SiteSale2_New,\r\n        title: 'Промокоды маркетолога',\r\n        code: 200\r\n    },\r\n    {\r\n        path: '/site_sale_2/edit/:promoId',\r\n        exact: true,\r\n        component: SiteSale2_Edit,\r\n        title: 'Промокоды маркетолога',\r\n        code: 200\r\n    },\r\n    {\r\n        path: '/site_sale_2/stat',\r\n        exact: true,\r\n        component: SiteSale2_Stat,\r\n        title: 'Промокоды маркетолога',\r\n        code: 200\r\n    },\r\n    \r\n    \r\n    \r\n];","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport { createTheme } from '@mui/material/styles';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#c03',\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    borderRadius: 0,\r\n    width: '100%',\r\n    height: 150,\r\n    margin: 0,\r\n    backgroundColor: '#fff'\r\n  },\r\n  avatar2: {\r\n    borderRadius: 0,\r\n    width: '100%',\r\n    height: 130,\r\n    margin: 0,\r\n    backgroundColor: '#fff'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textLink: {\r\n    color: '#c03'\r\n  }\r\n});\r\n\r\nclass Auth_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      module: 'auth',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      modalDialog: false,\r\n      dialogTitle: '',\r\n      dialogText: ''\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n      \r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: '+79879340391',\r\n        //login: localStorage.getItem('login'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        this.state.history.push(\"/auth\");\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n    });\r\n  }\r\n   \r\n  async updateData(){\r\n    let data = {\r\n      point_id: this.state.point,\r\n      showReady: this.state.showReady === true ? 1 : 0\r\n    };\r\n    \r\n    let res = await this.getData('get_orders', data);\r\n    \r\n    this.setState({\r\n      read: res.read,\r\n      onstol: res.onstol,\r\n      ordersQueue: res.prestol_new\r\n    })\r\n  }\r\n  \r\n  async auth(){\r\n    let data = {\r\n      login: document.getElementById('phone').value,\r\n      pwd: document.getElementById('password').value\r\n    };\r\n    \r\n    let res = await this.getData('auth', data);\r\n    \r\n    console.log( res )\r\n    \r\n    if( res.st === false ){\r\n      setTimeout( () => {\r\n        this.setState({ \r\n          modalDialog: true,\r\n          dialogTitle: 'Предупреждение',\r\n          dialogText: res.text\r\n        })\r\n      }, 500 )\r\n    }else{\r\n      localStorage.setItem('token', res.token)\r\n      \r\n      setTimeout( () => {\r\n        window.location.pathname = '/'\r\n      }, 300)\r\n    }\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Dialog\r\n          open={this.state.modalDialog}\r\n          onClose={ () => { this.setState({ modalDialog: false }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{this.state.dialogTitle}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">{this.state.dialogText}</DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={ () => { this.setState({ modalDialog: false }) } } color=\"primary\" autoFocus>Хорошо</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        <Grid container spacing={3} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n          <Grid item xs={12} sm={6} md={6} lg={4} xl={3}>\r\n            <div className={this.state.classes.paper}>\r\n              <Avatar className={this.state.classes.avatar}>\r\n                <img alt=\"Жако доставка роллов и пиццы\" src=\"../assets/img_other/Favikon.png\" style={{ height: '100%' }} />\r\n              </Avatar>\r\n              <form className={this.state.classes.form} noValidate>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  size=\"small\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"phone\"\r\n                  label=\"Номер телефона\"\r\n                  name=\"phone\"\r\n                  autoComplete=\"phone\"\r\n                  autoFocus\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  size=\"small\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Пароль\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                />\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={this.state.classes.submit}\r\n                  onClick={ this.auth.bind(this) }\r\n                >\r\n                  Войти\r\n                </Button>\r\n                <Grid container>\r\n                  <Grid item xs>\r\n                    <a href=\"/registration\" className={this.state.classes.textLink}>Восстановить пароль</a>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function Auth () {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  \r\n  return (\r\n    <Auth_ classes={classes} history={history} />\r\n  );\r\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { MySelect, MyAutocomplite } from '../../stores/elements';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#c03',\r\n    },\r\n    def: {\r\n      main: '#353b48',\r\n      secondary: '#fff'\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  formControl: {\r\n    //margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  tableCel: {\r\n    textAlign: 'center',\r\n    borderRight: '1px solid #e5e5e5',\r\n    padding: 15,\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: \"#e5e5e5\",\r\n    },\r\n  },\r\n  tableCelHead: {\r\n    textAlign: 'center',\r\n    padding: 15\r\n  },\r\n  customCel: {\r\n    backgroundColor: \"#bababa\",\r\n    textAlign: 'center',\r\n    borderRight: '1px solid #e5e5e5',\r\n    padding: 15,\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: \"#e5e5e5\",\r\n    },\r\n  },\r\n  timePicker: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nclass CategoryItems_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      module: 'category_items',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      modalDialog: false,\r\n      modalDialog2: false,\r\n      modalDialog3: false,\r\n      \r\n      newMainCatMy: 0,\r\n      editMainCatMy: 0,\r\n      newMainNameMy: '',\r\n      editMainNameMy: '',\r\n      \r\n      editCat: null,\r\n      \r\n      allCats: [],\r\n      allItems: [],\r\n      \r\n      thisValItems: [],\r\n      thisDataItems: [],\r\n      thisCatId: 0,\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    let data = await this.getData('get_all');\r\n    \r\n    this.setState({\r\n      module_name: data.module_info.name,\r\n      allCats: data.cats,\r\n      allItems: data.items,\r\n    })\r\n    \r\n    document.title = data.module_info.name;\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n      this.setState({\r\n        is_load: false\r\n      })\r\n    });\r\n  }\r\n   \r\n  createCat(){\r\n    this.setState({\r\n      modalDialog: true,\r\n      newMainCatMy: 0,\r\n      newMainNameMy: ''\r\n    })\r\n  }\r\n  \r\n  changeCatMain(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      newMainCatMy: data\r\n    })\r\n  }\r\n  \r\n  changeCatMainEdit(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      editMainCatMy: data\r\n    })\r\n  }\r\n  \r\n  changeNameMain(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      newMainNameMy: data\r\n    })\r\n  }\r\n  \r\n  changeNameMainEdit(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      editMainNameMy: data\r\n    })\r\n  }\r\n  \r\n  async saveCat(){\r\n    let data = {\r\n      name: this.state.newMainNameMy,\r\n      cat_id: this.state.newMainCatMy\r\n    };\r\n    \r\n    let res = await this.getData('save_cat', data);\r\n    \r\n    if( res.st === false ){\r\n      alert(res.text);\r\n      return ;\r\n    }\r\n    \r\n    this.setState({\r\n      allCats: res.cats,\r\n      modalDialog: false\r\n    })\r\n  }\r\n  \r\n  addItems(cat_id){\r\n    \r\n    let myVal = this.state.allItems.filter( (item) => parseInt(item.cat_id) == parseInt(cat_id) );\r\n    let data = this.state.allItems.filter( (item) => parseInt(item.cat_id) == 0 );\r\n    \r\n    this.setState({\r\n      modalDialog2: true,\r\n      thisValItems: myVal,\r\n      thisDataItems: data,\r\n      thisCatId: cat_id\r\n    })\r\n  }\r\n  \r\n  async saveItems(){\r\n    let data = {\r\n      cat_id: this.state.thisCatId,\r\n      items: this.state.thisValItems\r\n    };\r\n    \r\n    let res = await this.getData('save_items_cat', data);\r\n    \r\n    this.setState({\r\n      allCats: res.cats,\r\n      allItems: res.items,\r\n      modalDialog2: false,\r\n      \r\n      thisValItems: [],\r\n      thisDataItems: [],\r\n      thisCatId: 0\r\n    })\r\n  }\r\n  \r\n  editCat(cat){\r\n    this.setState({\r\n      modalDialog3: true,\r\n      editMainCatMy: cat.parent_id,\r\n      editMainNameMy: cat.name,\r\n      editCat: cat\r\n    })\r\n  }\r\n  \r\n  async saveEditCat(){\r\n    let data = {\r\n      name: this.state.editMainNameMy,\r\n      cat_id: this.state.editMainCatMy,\r\n      id: this.state.editCat.id\r\n    };\r\n    \r\n    let res = await this.getData('edit_cat', data);\r\n    \r\n    if( res.st === false ){\r\n      alert(res.text);\r\n      return ;\r\n    }\r\n    \r\n    this.setState({\r\n      allCats: res.cats,\r\n      modalDialog: false\r\n    })\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Dialog\r\n          open={this.state.modalDialog}\r\n          onClose={ () => { this.setState({ modalDialog: false }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">Новая категория</DialogTitle>\r\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\r\n            \r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={12}>\r\n                <MySelect \r\n                  classes={this.state.classes} \r\n                  label=\"Главная категория\" \r\n                  data={ this.state.allCats.filter( (item) => parseInt(item.parent_id) == -1 || !item.parent_id ) }\r\n                  value={this.state.newMainCatMy} \r\n                  func={ this.changeCatMain.bind(this) } />\r\n              </Grid>  \r\n              <Grid item xs={12} sm={12}>\r\n                <TextField label=\"Название категории\" size=\"small\" variant=\"outlined\" style={{ width: '100%' }} color=\"primary\" value={this.state.newMainNameMy} onChange={this.changeNameMain.bind(this)} />\r\n              </Grid>\r\n            </Grid>\r\n            \r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={ this.saveCat.bind(this) } color=\"primary\">Сохранить</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        <Dialog\r\n          open={this.state.modalDialog2}\r\n          onClose={ () => { this.setState({ modalDialog2: false }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle>Позиции категории</DialogTitle>\r\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\r\n            \r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={12}>\r\n                <MyAutocomplite \r\n                  label=\"Выбранные позиции\" \r\n                  func={ (event, val) => { this.setState({ thisValItems: val }) } }\r\n                  data={ this.state.thisDataItems } \r\n                  value={ this.state.thisValItems } />\r\n              </Grid>\r\n            </Grid>\r\n            \r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={ this.saveItems.bind(this) } color=\"primary\">Сохранить</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        <Dialog\r\n          open={this.state.modalDialog3}\r\n          onClose={ () => { this.setState({ modalDialog3: false }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">Редактирование категории</DialogTitle>\r\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\r\n            \r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={12}>\r\n                <MySelect \r\n                  classes={this.state.classes} \r\n                  label=\"Главная категория\" \r\n                  data={ this.state.allCats.filter( (item) => parseInt(item.parent_id) == -1 || !item.parent_id ) } \r\n                  value={this.state.editMainCatMy} \r\n                  func={ this.changeCatMainEdit.bind(this) } \r\n                />\r\n              </Grid>  \r\n              <Grid item xs={12} sm={12}>\r\n                <TextField \r\n                  label=\"Название категории\" \r\n                  size=\"small\" \r\n                  variant=\"outlined\" \r\n                  style={{ width: '100%' }} \r\n                  color=\"primary\" \r\n                  value={this.state.editMainNameMy} \r\n                  onChange={ this.changeNameMainEdit.bind(this) }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            \r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={ this.saveEditCat.bind(this) } color=\"primary\">Сохранить</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={12}>\r\n            <Button onClick={this.createCat.bind(this)}>Создать категорию</Button>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={12}>\r\n            { this.state.allCats.map( (main_cat, main_key) =>\r\n              parseInt(main_cat.parent_id) != -1 ? null :\r\n                <Accordion key={main_key}>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                  >\r\n                    <MenuIcon style={{ marginRight: 10 }} onClick={ this.editCat.bind(this, main_cat) } />\r\n                    <Typography>{main_cat.name}</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    \r\n                  { this.state.allCats.map( (parent_cat, parent_key) =>\r\n                    parseInt(main_cat.id) != parseInt(parent_cat.parent_id) ? null :\r\n                      <Accordion key={main_key+'_'+parent_key}>\r\n                        <AccordionSummary\r\n                          expandIcon={<ExpandMoreIcon />}\r\n                          aria-controls=\"panel1a-content\"\r\n                        >\r\n                          <MenuIcon style={{ marginRight: 10 }} onClick={ this.editCat.bind(this, parent_cat) } />\r\n                          <Typography>{parent_cat.name}</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                          \r\n                          { this.state.allItems.filter( (item) => parseInt(item.cat_id) == parseInt(parent_cat.id) ).map( (item, key) =>\r\n                            <Accordion key={main_key+'_'+parent_key+'_'+key}>\r\n                              <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1a-content\"\r\n                              >\r\n                                <Typography>{item.name}</Typography>\r\n                              </AccordionSummary>\r\n                            </Accordion>\r\n                          ) }\r\n                            \r\n                          <Button onClick={this.addItems.bind(this, parseInt(parent_cat.id))}>Добавить</Button>\r\n                            \r\n                        </AccordionDetails>\r\n                      </Accordion>\r\n                  )}\r\n                    \r\n                  </AccordionDetails>\r\n                </Accordion>\r\n            ) }\r\n          </Grid>\r\n          \r\n          \r\n        \r\n          \r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function CategoryItems () {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  \r\n  return (\r\n    <CategoryItems_ classes={classes} history={history} />\r\n  );\r\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport { createTheme } from '@mui/material/styles';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { MySelect, MyCheckBox, MyTimePicker } from '../../stores/elements';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#c03',\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  formControl: {\r\n    //margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  tableCel: {\r\n    textAlign: 'center',\r\n    borderRight: '1px solid #e5e5e5',\r\n    padding: 15,\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: \"#e5e5e5\",\r\n    },\r\n  },\r\n  tableCelHead: {\r\n    textAlign: 'center',\r\n    padding: 15\r\n  },\r\n  customCel: {\r\n    backgroundColor: \"#bababa\",\r\n    textAlign: 'center',\r\n    borderRight: '1px solid #e5e5e5',\r\n    padding: 15,\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: \"#e5e5e5\",\r\n    },\r\n  },\r\n  timePicker: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nclass Events_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      module: 'events',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      points: [],\r\n      point: '0',\r\n      mounth: '0',\r\n      mounths: [],\r\n      years: [],\r\n      year: '0',\r\n      \r\n      calendar: [],\r\n      modalDialog: false,\r\n      \r\n      chooseDayHoly: '',\r\n      events: [],\r\n      chooseEvent: 0,\r\n      \r\n      eventPoint1: 0,\r\n      everyYear1: false,\r\n      timeStart2: '10:00',\r\n      timeEnd2: '21:30',\r\n      \r\n      expanded: '',\r\n      dayEvents: [],\r\n      events_hist: []\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    \r\n    let data = await this.getData('get_all');\r\n    \r\n    console.log( data )\r\n    \r\n    this.setState({\r\n      points: data.points,\r\n      point: data.points[0].id,\r\n      module_name: data.module_info.name,\r\n      mounths: data.mounth,\r\n      mounth: data.this_m,\r\n      years: data.years,\r\n      year: data.this_y,\r\n    })\r\n    \r\n    document.title = data.module_info.name;\r\n    \r\n    setTimeout( () => {\r\n      this.updateData();\r\n    }, 50 )\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n    });\r\n  }\r\n   \r\n  changePoint(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      point: data\r\n    })\r\n    \r\n    setTimeout( () => {\r\n      this.updateData();\r\n    }, 50 )\r\n  }\r\n  \r\n  changeMounth(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      mounth: data\r\n    })\r\n    \r\n    setTimeout( () => {\r\n      //this.updateData();\r\n    }, 50 )\r\n  }\r\n  \r\n  changeYear(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      year: data\r\n    })\r\n  }\r\n  \r\n  changeCheckOrders(event){\r\n    let data = event.target.checked;\r\n    \r\n    this.setState({\r\n      showReady: data\r\n    })\r\n  }\r\n  \r\n  async updateData(){\r\n    let data = {\r\n      m: this.state.mounth,\r\n      y: this.state.year,\r\n      point_id: this.state.point\r\n    };\r\n    \r\n    let res = await this.getData('get_calendar', data);\r\n    \r\n    console.log( res )\r\n    \r\n    this.setState({\r\n      calendar: res.year,\r\n    })\r\n  }\r\n  \r\n  async chooseDay(day){\r\n    \r\n    if( day.full_day ){\r\n    \r\n      this.setState({\r\n        chooseDay: null,\r\n        eventPoint1: this.state.point,\r\n        chooseEvent: 0,\r\n        everyYear1: false,\r\n        timeStart2: '10:00',\r\n        timeEnd2: '21:30',\r\n        modalDialog: false,\r\n        events_hist: []\r\n      })\r\n      \r\n      let data = {\r\n        date: day.full_day,\r\n        point_id: this.state.point\r\n      };\r\n      \r\n      let res = await this.getData('get_calendar_day', data);\r\n      \r\n      console.log( 'res', res )\r\n      \r\n      this.setState({\r\n        chooseDay: day,\r\n        chooseDayHoly: res.holy,\r\n        events: res.events,\r\n        events_hist: res.hist,\r\n        dayEvents: res.this_events,\r\n        modalDialog: true\r\n      })\r\n    }\r\n  }\r\n  \r\n  changeEvent(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      chooseEvent: data\r\n    })\r\n  }\r\n  \r\n  changePoint1(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      eventPoint1: data\r\n    })\r\n  }\r\n  \r\n  changeEveryYear1(event){\r\n    let data = event.target.checked;\r\n    \r\n    this.setState({\r\n      everyYear1: data\r\n    })\r\n  }\r\n  \r\n  changeTimeStart2(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      timeStart2: data\r\n    })\r\n  }\r\n  \r\n  changeTimeEnd2(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      timeEnd2: data\r\n    })\r\n  }\r\n  \r\n  async save(){\r\n    let data = {\r\n      date: this.state.chooseDay.full_day,\r\n      point_id: this.state.eventPoint1,\r\n      event: this.state.chooseEvent,\r\n      every_year: this.state.everyYear1 === true ? 1 : 0,\r\n      \r\n      time_start: this.state.timeStart2,\r\n      time_end: this.state.timeEnd2,\r\n    };\r\n    \r\n    let res = await this.getData('save_event', data);\r\n    \r\n    console.log( res )\r\n    \r\n    if( res.st === false ){\r\n      alert(res.text)\r\n    }else{\r\n      this.setState({\r\n        chooseDay: null,\r\n        eventPoint1: this.state.point,\r\n        chooseEvent: 0,\r\n        everyYear1: false,\r\n        timeStart2: '10:00',\r\n        timeEnd2: '21:30',\r\n        modalDialog: false\r\n      })\r\n      \r\n      setTimeout( () => {\r\n        this.updateData();\r\n      }, 300 )\r\n    }\r\n  }\r\n  \r\n  handleChange(data){\r\n    this.setState({\r\n      expanded: data\r\n    })\r\n  }\r\n  \r\n  async delEvent(event){\r\n    console.log( 'delEvent', event )\r\n    \r\n    if (confirm('Удалить событие \"'+event.title+' '+event.date+'\" ?')) {\r\n      let data = {\r\n        del_id: event.id\r\n      };\r\n      \r\n      let res = await this.getData('del_event', data);\r\n      \r\n      this.setState({\r\n        chooseDay: null,\r\n        eventPoint1: this.state.point,\r\n        chooseEvent: 0,\r\n        everyYear1: false,\r\n        timeStart2: '10:00',\r\n        timeEnd2: '21:30',\r\n        modalDialog: false\r\n      })\r\n      \r\n      setTimeout( () => {\r\n        this.updateData();\r\n      }, 300 )\r\n    } else {\r\n      \r\n    }\r\n    \r\n\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Dialog\r\n          open={this.state.modalDialog}\r\n          onClose={ () => { this.setState({ modalDialog: false }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{this.state.chooseDay ? this.state.chooseDay.full_day : ''}</DialogTitle>\r\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              \r\n              <Grid container spacing={3}>\r\n                \r\n                {this.state.chooseDayHoly.length == 0 ? null :\r\n                  <Grid item xs={12} sm={12}>\r\n                    <Typography component=\"span\">{this.state.chooseDayHoly}</Typography>\r\n                  </Grid>\r\n                }\r\n                \r\n                <Grid item xs={12} sm={12}>\r\n                  <MySelect classes={this.state.classes} data={this.state.events} value={this.state.chooseEvent} func={ this.changeEvent.bind(this) } label='Событие' />\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} sm={12}>\r\n                  <MySelect classes={this.state.classes} data={this.state.points} value={ this.state.eventPoint1 } func={ this.changePoint1.bind(this) } label='Точка' />\r\n                </Grid>\r\n                \r\n                { parseInt(this.state.chooseEvent) !== 2 ? null :\r\n                  <>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <MyTimePicker classes={this.state.classes} value={ this.state.timeStart2 } func={ this.changeTimeStart2.bind(this) } label='Время начала работы' />\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <MyTimePicker classes={this.state.classes} value={ this.state.timeEnd2 } func={ this.changeTimeEnd2.bind(this) } label='Время окончания работы' />\r\n                    </Grid>\r\n                  </>\r\n                }\r\n                \r\n                <Grid item xs={12} sm={12}>\r\n                  <MyCheckBox classes={this.state.classes} value={ this.state.everyYear1 } func={ this.changeEveryYear1.bind(this) } label='Каждый год' />\r\n                </Grid>\r\n                \r\n              </Grid>\r\n              \r\n              <List component=\"nav\">\r\n                { this.state.dayEvents.map( (item, key) => \r\n                  <ListItem key={key}>\r\n                    <ListItemText primary={item.title} />\r\n                    { parseInt(item.type) == 4 ? null :\r\n                      <CloseIcon color=\"primary\" onClick={this.delEvent.bind(this, item)} style={{ cursor: 'pointer' }} />\r\n                    }\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n              \r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography>История</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <List component=\"nav\">\r\n                    { this.state.events_hist.map( (item, key) => \r\n                      <ListItem key={key}>\r\n                        <ListItemText primary={item.title} />\r\n                      </ListItem>\r\n                    )}\r\n                  </List>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              \r\n              \r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={ this.save.bind(this) } color=\"primary\">Сохранить</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={3}>\r\n            <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <MySelect classes={this.state.classes} data={this.state.mounths} value={this.state.mounth} func={ this.changeMounth.bind(this) } label='Месяц' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <MySelect classes={this.state.classes} data={this.state.years} value={this.state.year} func={ this.changeYear.bind(this) } label='Год' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\r\n          </Grid>\r\n        \r\n          \r\n          \r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }}>\r\n            \r\n            { this.state.calendar.map( (item, key) =>\r\n            \r\n              <Grid item xs={12} sm={4} key={key} style={{ padding: 20 }}>\r\n                <h1 style={{ textAlign: 'center' }}>{ item[0][0].mounth }</h1>\r\n                <TableContainer component={Paper}>\r\n                  <Table aria-label=\"a dense table\" style={{ overflow: 'hidden' }}>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell className={this.state.classes.tableCelHead}>Пн</TableCell>\r\n                        <TableCell className={this.state.classes.tableCelHead}>Вт</TableCell>\r\n                        <TableCell className={this.state.classes.tableCelHead}>Ср</TableCell>\r\n                        <TableCell className={this.state.classes.tableCelHead}>Чт</TableCell>\r\n                        <TableCell className={this.state.classes.tableCelHead}>Пт</TableCell>\r\n                        <TableCell className={this.state.classes.tableCelHead}>Сб</TableCell>\r\n                        <TableCell className={this.state.classes.tableCelHead}>Вс</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      \r\n                      { item.map( (mounth, m_key) =>\r\n                        <TableRow key={m_key}>\r\n                          { mounth.map( (day, k) =>\r\n                            <TableCell \r\n                              key={k} \r\n                              onClick={ this.chooseDay.bind(this, day) } \r\n                              \r\n                              style={{ color: day.dir ? 'yellow' : day.holy ? '#c03' : '#000' }}\r\n                              \r\n                              className={ day.event ? this.state.classes.customCel : this.state.classes.tableCel }\r\n                            > { day.day } </TableCell>\r\n                          ) }\r\n                        </TableRow>\r\n                      ) }\r\n                      \r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n            )}\r\n            \r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function Events () {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  \r\n  return (\r\n    <Events_ classes={classes} history={history} />\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { createTheme } from '@mui/material/styles';\r\n\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#c03',\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  formControl: {\r\n    //margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n});\r\n\r\nclass Home_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      module: 'home',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      points: [],\r\n      point: '0',\r\n      showReady: false,\r\n      read: [],\r\n      onstol: [],\r\n      ordersQueue: []\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    \r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n        console.log( err )\r\n    });\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} style={{ height: '100vh' }}>\r\n            \r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function Home () {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Home_ classes={classes} />\r\n  );\r\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { MySelect, MyCheckBox } from '../../stores/elements';\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass Live_Orders extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      module: 'live_orders',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      points: [],\r\n      point: '0',\r\n      showReady: false,\r\n      read: [],\r\n      onstol: [],\r\n      ordersQueue: []\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    \r\n    let data = await this.getData('get_all');\r\n    \r\n    this.setState({\r\n      points: data.point_list,\r\n      point: data.point_list[0].id,\r\n      module_name: data.module_info.name\r\n    })\r\n    \r\n    document.title = data.module_info.name;\r\n    \r\n    setTimeout( () => {\r\n      this.updateData();\r\n    }, 100 )\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n    });\r\n  }\r\n   \r\n  changePoint(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      point: data\r\n    })\r\n    \r\n    setTimeout( () => {\r\n      this.updateData();\r\n    }, 50 )\r\n  }\r\n  \r\n  changeCheckOrders(event){\r\n    let data = event.target.checked;\r\n    \r\n    this.setState({\r\n      showReady: data\r\n    })\r\n  }\r\n  \r\n  async updateData(){\r\n    let data = {\r\n      point_id: this.state.point,\r\n      showReady: this.state.showReady === true ? 1 : 0\r\n    };\r\n    \r\n    let res = await this.getData('get_orders', data);\r\n    \r\n    this.setState({\r\n      read: res.read,\r\n      onstol: res.onstol,\r\n      ordersQueue: res.prestol_new\r\n    })\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          { this.state.points.length > 0 ?\r\n            <>\r\n              <Grid item xs={6} sm={6}>\r\n                <MySelect data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\r\n              </Grid>\r\n              <Grid item xs={6} sm={6}>\r\n                <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <MyCheckBox value={this.state.showReady} func={ this.changeCheckOrders.bind(this) } label='Показывать готовые' />\r\n              </Grid>\r\n            </>\r\n              :\r\n            null\r\n          }\r\n          \r\n          \r\n          \r\n          <Grid item xs={12} sm={12}>\r\n            \r\n            <TableContainer component={Paper}>\r\n              <Table aria-label=\"a dense table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>#</TableCell>\r\n                    <TableCell>Тип</TableCell>\r\n                    <TableCell>Время заказа</TableCell>\r\n                    <TableCell>Время предзакза</TableCell>\r\n                    \r\n                    <TableCell>Время выхода на стол</TableCell>\r\n                    <TableCell>Во сколько собрали</TableCell>\r\n                    <TableCell>Закрыли</TableCell>\r\n                    \r\n                    <TableCell>Приготовили</TableCell>\r\n                    <TableCell>Отдали</TableCell>\r\n                    <TableCell>Обещали</TableCell>\r\n                    \r\n                    <TableCell>Статус</TableCell>\r\n                    <TableCell>Стол</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  \r\n                  {this.state.read.map( (item, key) => (\r\n                    <TableRow key={key}>\r\n                      <TableCell>{item.id}</TableCell>\r\n                      <TableCell>{item.type_order}</TableCell>\r\n                      <TableCell>{ parseInt(item.preorder) == 1 ? '' : item.date_time_order }</TableCell>\r\n                      <TableCell>{ parseInt(item.preorder) == 1 ? item.date_time_preorder_ : '' }</TableCell>\r\n                      \r\n                      <TableCell>{item.unix_start_stol_or}</TableCell>\r\n                      <TableCell>{item.give_data_time_}</TableCell>\r\n                      <TableCell>{item.close_date_time_order}</TableCell>\r\n                      \r\n                      <TableCell style = {{backgroundColor: parseInt(item.type_) == 1 ? '' : item.color}}>{item.time_}</TableCell>\r\n                      <TableCell style = {{backgroundColor: parseInt(item.type_) != 1 ? '' : item.color}}>{item.test_time}</TableCell>\r\n                      <TableCell>{ parseInt(item.preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\r\n                      \r\n                      <TableCell>{item.status}</TableCell>\r\n                      <TableCell>{item.stol_sborki}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                  \r\n                  {this.state.onstol.map( (item, key) => (\r\n                    <TableRow key={key} style = {{backgroundColor: 'yellow'}}>\r\n                      <TableCell>{item.id}</TableCell>\r\n                      <TableCell>{item.type_order}</TableCell>\r\n                      <TableCell>{ parseInt(item.preorder) == 1 ? '' : item.date_time_order }</TableCell>\r\n                      <TableCell>{ parseInt(item.preorder) == 1 ? item.date_time_preorder_ : '' }</TableCell>\r\n                      \r\n                      <TableCell>{item.unix_start_stol_or}</TableCell>\r\n                      <TableCell></TableCell>\r\n                      <TableCell></TableCell>\r\n                      \r\n                      <TableCell></TableCell>\r\n                      <TableCell></TableCell>\r\n                      <TableCell>{ parseInt(item.preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\r\n                      \r\n                      <TableCell>{item.status}</TableCell>\r\n                      <TableCell>{item.stol_sborki}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            \r\n            <TableContainer component={Paper}>\r\n              <Table aria-label=\"a dense table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>#</TableCell>\r\n                    <TableCell>Пред</TableCell>\r\n                    <TableCell>Время оформления</TableCell>\r\n                    <TableCell>Время выхода на стол</TableCell>\r\n                    <TableCell>Время закрытия</TableCell>\r\n                    <TableCell>Обещали</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  \r\n                  {this.state.ordersQueue.map( (item, key) => (\r\n                    <TableRow key={key}>\r\n                      <TableCell>{item.id}</TableCell>\r\n                      <TableCell>{ parseInt(item.is_preorder) == 1 ? item.date_time_preorder : '' }</TableCell>\r\n                      <TableCell>{ parseInt(item.is_preorder) == 0 ? item.date_time_order : '' }</TableCell>\r\n                      \r\n                      <TableCell>{item.time_start_order}</TableCell>\r\n                      <TableCell>{item.time_end_order}</TableCell>\r\n                      \r\n                      <TableCell>{ parseInt(item.is_preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                  \r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            \r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function LiveOrders () {\r\n  let history = useHistory();\r\n  \r\n  return (\r\n    <Live_Orders history={history} />\r\n  );\r\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport { createTheme } from '@mui/material/styles';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { MySelect, MyAutocomplite, MyDaterange } from '../../stores/elements';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#c03',\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  formControl: {\r\n    //margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  tableCel: {\r\n    textAlign: 'center',\r\n    borderRight: '1px solid #e5e5e5',\r\n    padding: 15,\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: \"#e5e5e5\",\r\n    },\r\n  },\r\n  tableCelHead: {\r\n    textAlign: 'center',\r\n    padding: 15\r\n  },\r\n  customCel: {\r\n    backgroundColor: \"#bababa\",\r\n    textAlign: 'center',\r\n    borderRight: '1px solid #e5e5e5',\r\n    padding: 15,\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: \"#e5e5e5\",\r\n    },\r\n  },\r\n  timePicker: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nfunction formatDate(date) {\r\n  var d = new Date(date),\r\n      month = '' + (d.getMonth() + 1),\r\n      day = '' + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n  if (month.length < 2) \r\n      month = '0' + month;\r\n  if (day.length < 2) \r\n      day = '0' + day;\r\n\r\n  return [year, month, day].join('-');\r\n}\r\n\r\nclass RasByBill_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      module: 'ras_by_bill',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      modalDialog: false,\r\n      \r\n      points: [],\r\n      point: [],\r\n      date_start: formatDate(new Date()),\r\n      date_end: formatDate(new Date()),\r\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\r\n      items: [],\r\n      cats: [],\r\n      items_cat: [],\r\n      item_cat: 0,\r\n      \r\n      myItems: [],\r\n      \r\n      calendar: []\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    let data = await this.getData('get_all');\r\n    \r\n    this.setState({\r\n      module_name: data.module_info.name,\r\n      points: data.points,\r\n      \r\n      items: data.items,\r\n      cats: data.cats,\r\n      items_cat: data.items_cat\r\n    })\r\n    \r\n    document.title = data.module_info.name;\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n      this.setState({\r\n        is_load: false\r\n      })\r\n    });\r\n  }\r\n   \r\n  changePoint(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      point: data\r\n    })\r\n  }\r\n  \r\n  changeItems(event, data){\r\n    this.setState({\r\n      myItems: data\r\n    })\r\n  }\r\n  \r\n  async getItems(){\r\n    let data = {\r\n      points: this.state.point,\r\n      items: this.state.myItems,\r\n      item_cat: this.state.item_cat,\r\n      start_date: this.state.rangeDate[0],\r\n      end_date: this.state.rangeDate[1],\r\n    };\r\n    \r\n    let res = await this.getData('get_this_rev', data);\r\n    \r\n    let summ = 0;\r\n    \r\n    res.items_ras.map( (item, key) => {\r\n      summ += parseFloat(item.sum);\r\n    } )\r\n    \r\n    this.setState({\r\n      resItems: {\r\n        items_ras: res.items_ras,\r\n        pf_ras: res.pf_ras,\r\n        rec_ras: res.rec_ras,\r\n        full_sum: summ.toFixed(2)\r\n      },\r\n      catItems: null\r\n    })\r\n  }\r\n  \r\n  async getCats(){\r\n    let data = {\r\n      points: this.state.point,\r\n      items: this.state.myItems,\r\n      start_date: this.state.rangeDate[0],\r\n      end_date: this.state.rangeDate[1],\r\n    };\r\n    \r\n    let res = await this.getData('get_this_rev_cat', data);\r\n    \r\n    \r\n    let summ = 0;\r\n    \r\n    res.rec_ras.map( (item, key) => {\r\n      summ += parseFloat(item.this_price);\r\n    } )\r\n    \r\n    this.setState({\r\n      catItems: {\r\n        count_pos: res.count_pos,\r\n        items_ras: res.items_ras,\r\n        rec_ras: res.rec_ras,\r\n        full_sum: summ.toFixed(2)\r\n      },\r\n      resItems: null\r\n    })\r\n  }\r\n  \r\n  changeDateRange(data){\r\n    let dateStart = data[0] ? formatDate(data[0]) : '';\r\n    let dateEnd = data[1] ? formatDate(data[1]) : '';\r\n    \r\n    this.setState({\r\n      rangeDate: [dateStart, dateEnd]\r\n    })\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Dialog\r\n          open={this.state.modalDialog}\r\n          onClose={ () => { this.setState({ modalDialog: false }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">  </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              \r\n              \r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={ () => {} } color=\"primary\">Сохранить</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={3}>\r\n            <MySelect classes={this.state.classes} data={this.state.points} multiple={true} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={4} className=\"MyDaterange\">\r\n            <MyDaterange startText=\"Дата от\" endText=\"Дата до\" value={this.state.rangeDate} func={ this.changeDateRange.bind(this) } />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={5}>\r\n            <MySelect classes={this.state.classes} data={this.state.items_cat} multiple={false} value={this.state.item_cat} func={ (event) => {this.setState({ item_cat: event.target.value })} } label='Категория товара' />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={12}>\r\n            <MyAutocomplite classes={this.state.classes} data={this.state.items} multiple={true} value={this.state.myItems} func={ this.changeItems.bind(this) } label='Заготовки' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Button variant=\"contained\" onClick={this.getItems.bind(this)}>Показать заготовки</Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Button variant=\"contained\" onClick={this.getCats.bind(this)}>Показать категории</Button>\r\n          </Grid>\r\n        \r\n        \r\n          { this.state.resItems && this.state.resItems.items_ras ?\r\n              \r\n            <>\r\n              <Grid item xs={12}>\r\n                \r\n                <h1>Куплено по наклданым</h1>\r\n                <TableContainer component={Paper}>\r\n                  <Table aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Наименование товара</TableCell>\r\n                        <TableCell>Объем товра</TableCell>\r\n                        <TableCell>Объем заготовки</TableCell>\r\n                        <TableCell>Сумма</TableCell>\r\n                        <TableCell>Кол-во наклданых</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      \r\n                      { this.state.resItems.items_ras.map( (item, key) =>\r\n                        <TableRow key={key}>\r\n                          <TableCell> { item.name } </TableCell>\r\n                          <TableCell> { item.count_item + ' ' + item.ei_name } </TableCell>\r\n                          <TableCell> { item.count_pf + ' ' + item.ei_name_pf } </TableCell>\r\n                          <TableCell> { item.sum } </TableCell>\r\n                          <TableCell> { item.count_bill } </TableCell>\r\n                        </TableRow>\r\n                      ) }\r\n                      \r\n                      <TableRow>\r\n                        <TableCell> Всего: </TableCell>\r\n                        <TableCell> </TableCell>\r\n                        <TableCell> </TableCell>\r\n                        <TableCell> { this.state.resItems.full_sum } </TableCell>\r\n                        <TableCell> </TableCell>\r\n                      </TableRow>\r\n                      \r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12}>\r\n                \r\n                <h1>Расход заготовок (включая рецепты)</h1>\r\n                <TableContainer component={Paper}>\r\n                  <Table aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Наименование заготовки</TableCell>\r\n                        <TableCell>Объем заготовок</TableCell>\r\n                        <TableCell>Кол-во роллов</TableCell>\r\n                        <TableCell>Сумма роллов (примерно)</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      \r\n                      { this.state.resItems.pf_ras.map( (item, key) =>\r\n                        <TableRow key={key}>\r\n                          <TableCell> { item.pf_name } </TableCell>\r\n                          <TableCell> { item.count_pf + ' ' + item.ei_name } </TableCell>\r\n                          <TableCell> { item.count_rolls } </TableCell>\r\n                          <TableCell> { item.price_rolls } </TableCell>\r\n                        </TableRow>\r\n                      ) }\r\n                      \r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12}>\r\n                \r\n                <h1>Расход рецептов</h1>\r\n                <TableContainer component={Paper}>\r\n                  <Table aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Наименование заготовки</TableCell>\r\n                        <TableCell>Объем заготовок</TableCell>\r\n                        <TableCell>Кол-во роллов</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      \r\n                      { this.state.resItems.rec_ras.map( (item, key) =>\r\n                        <TableRow key={key}>\r\n                          <TableCell> { item.pf_name } </TableCell>\r\n                          <TableCell> { item.count_pf + ' ' + item.ei_name } </TableCell>\r\n                          <TableCell> { item.count_rolls } </TableCell>\r\n                        </TableRow>\r\n                      ) }\r\n                      \r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n            </>\r\n              :\r\n            null              \r\n          }\r\n          \r\n          { this.state.catItems && this.state.catItems.rec_ras ?\r\n            <Grid item xs={12}>\r\n              \r\n              <Accordion disabled>\r\n                <AccordionSummary>\r\n                  <Typography style={{ width: '50%' }}>Роллов: {this.state.catItems.count_pos.count_rolls}</Typography>\r\n                  <Typography style={{ width: '50%' }}>Пиццы: {this.state.catItems.count_pos.count_pizza}</Typography>\r\n                </AccordionSummary>\r\n              </Accordion>\r\n              \r\n              { this.state.catItems.rec_ras.map( (item, key) =>\r\n                <Accordion key={key}>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                  >\r\n                    <Typography style={{ width: '60%' }}>{item.name}</Typography>\r\n                    <Typography style={{ width: '20%' }}>{item.this_price}</Typography>\r\n                    <Typography style={{ width: '20%' }}>{item.price_by_items}</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    \r\n                    { item.parent_cat.map( (it, k) =>\r\n                      <Accordion key={k}>\r\n                        <AccordionSummary\r\n                          expandIcon={<ExpandMoreIcon />}\r\n                          aria-controls=\"panel1bh-content\"\r\n                        >\r\n                          <Typography style={{ width: '60%', paddingLeft: 20 }}>{it.name}</Typography>\r\n                          <Typography style={{ width: '20%', paddingLeft: 20 }}>{it.this_price}</Typography>\r\n                          <Typography style={{ width: '20%', paddingLeft: 20 }}>{it.price_by_items}</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                          \r\n                          <Accordion disabled={true}>\r\n                            <AccordionSummary>\r\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Товар</Typography>\r\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Товара</Typography>\r\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Заготовок</Typography>\r\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Накладных</Typography>\r\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Сумма</Typography>\r\n                            </AccordionSummary>\r\n                          </Accordion>\r\n                          \r\n                          { it.items.map( (parent_items, parent_key) =>\r\n                            <Accordion key={parent_key} disabled={true}>\r\n                              <AccordionSummary>\r\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.name}</Typography>\r\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_item} {parent_items.ei_name}</Typography>\r\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_pf} {parent_items.ei_name}</Typography>\r\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_bill}</Typography>\r\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.sum}</Typography>\r\n                              </AccordionSummary>\r\n                            </Accordion>\r\n                          ) }\r\n                          \r\n                        </AccordionDetails>\r\n                      </Accordion>\r\n                    ) }\r\n                    \r\n                    \r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              ) }\r\n              \r\n              <Accordion disabled>\r\n                <AccordionSummary>\r\n                  <Typography style={{ width: '60%', marginRight: -15 }}>Всего:</Typography>\r\n                  <Typography style={{ width: '40%' }}>{ this.state.catItems.full_sum }</Typography>\r\n                </AccordionSummary>\r\n              </Accordion>\r\n              \r\n            </Grid>\r\n              :\r\n            null              \r\n          }\r\n          \r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function RasByBill () {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  \r\n  return (\r\n    <RasByBill_ classes={classes} history={history} />\r\n  );\r\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport { createTheme } from '@mui/material/styles';\r\n\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#c03',\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    borderRadius: 0,\r\n    width: '100%',\r\n    height: 150,\r\n    margin: 0,\r\n    backgroundColor: '#fff'\r\n  },\r\n  avatar2: {\r\n    borderRadius: 0,\r\n    width: '100%',\r\n    height: 130,\r\n    margin: 0,\r\n    backgroundColor: '#fff'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  textLink: {\r\n    color: '#c03'\r\n  }\r\n});\r\n\r\nclass Reg_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      module: 'auth',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      modalDialog: false,\r\n      dialogTitle: '',\r\n      dialogText: '',\r\n      \r\n      activeStep: 0,\r\n      steps: ['Телефон', 'Подтверждение', 'Новый пароль'],\r\n      \r\n      phone: '',\r\n      code: '',\r\n      pwd: ''\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n      \r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: '+79879340391',\r\n        //login: localStorage.getItem('login'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        this.state.history.push(\"/auth\");\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n    });\r\n  }\r\n   \r\n  async updateData(){\r\n    let data = {\r\n      point_id: this.state.point,\r\n      showReady: this.state.showReady === true ? 1 : 0\r\n    };\r\n    \r\n    let res = await this.getData('get_orders', data);\r\n    \r\n    this.setState({\r\n      read: res.read,\r\n      onstol: res.onstol,\r\n      ordersQueue: res.prestol_new\r\n    })\r\n  }\r\n  \r\n  async nextStep(){\r\n    if( this.state.activeStep == 0 ){\r\n      let data = {\r\n        login: document.getElementById('phone').value\r\n      }\r\n      \r\n      let res = await this.getData('check_phone', data);\r\n      \r\n      if( res.st === false ){\r\n        setTimeout( () => {\r\n          this.setState({ \r\n            modalDialog: true,\r\n            dialogTitle: 'Предупреждение',\r\n            dialogText: res.text\r\n          })\r\n        }, 500 )\r\n      }else{\r\n        this.setState({ \r\n          activeStep: this.state.activeStep+1,\r\n          phone: data.login\r\n        })\r\n      }\r\n    }else if( this.state.activeStep == 1 ){\r\n      let data = {\r\n        login: this.state.phone,\r\n\t\t\t  code: document.getElementById('code').value\r\n      }\r\n      \r\n      let res = await this.getData('check_code', data);\r\n      \r\n      if( res.st === false ){\r\n        setTimeout( () => {\r\n          this.setState({ \r\n            modalDialog: true,\r\n            dialogTitle: 'Предупреждение',\r\n            dialogText: res.text\r\n          })\r\n        }, 500 )\r\n      }else{\r\n        this.setState({ \r\n          activeStep: this.state.activeStep+1,\r\n          code: data.code\r\n        })\r\n      }\r\n    }else if( this.state.activeStep == 2 ){\r\n      let data = {\r\n        login: this.state.phone,\r\n        code: this.state.code,\r\n        pwd: document.getElementById('password').value\r\n      }\r\n      \r\n      let res = await this.getData('save_new_pwd', data);\r\n      \r\n      if( res.st === false ){\r\n        setTimeout( () => {\r\n          this.setState({ \r\n            modalDialog: true,\r\n            dialogTitle: 'Предупреждение',\r\n            dialogText: res.text\r\n          })\r\n        }, 500 )\r\n      }else{\r\n        localStorage.setItem('token', res.token)\r\n      \r\n        setTimeout( () => {\r\n          window.location.pathname = '/'\r\n        }, 300)\r\n      }\r\n    }\r\n  }\r\n  \r\n  enterNextStep(event){\r\n    if( event.charCode == 13 ){\r\n      this.nextStep();\r\n    }\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Dialog\r\n          open={this.state.modalDialog}\r\n          onClose={ () => { this.setState({ modalDialog: false }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{this.state.dialogTitle}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">{this.state.dialogText}</DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={ () => { this.setState({ modalDialog: false }) } } color=\"primary\" autoFocus>Хорошо</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        <Grid container spacing={3} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n          <Grid item xs={12} sm={6} md={6} lg={4} xl={3}>\r\n            <div className={this.state.classes.paper}>\r\n              <Avatar className={this.state.classes.avatar}>\r\n                <img alt=\"Жако доставка роллов и пиццы\" src=\"../assets/img_other/Favikon.png\" style={{ height: '100%' }} />\r\n              </Avatar>\r\n              \r\n              <Stepper activeStep={this.state.activeStep} alternativeLabel style={{ width: '100%' }}>\r\n                {this.state.steps.map((label) => (\r\n                  <Step key={label}>\r\n                    <StepLabel>{label}</StepLabel>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n              <div className={this.state.classes.form} style={{ width: '100%' }}>\r\n                \r\n                { this.state.activeStep == 0 ?\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    size=\"small\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"phone\"\r\n                    label=\"Номер телефона\"\r\n                    name=\"phone\"\r\n                    autoComplete=\"phone\"\r\n                    autoFocus\r\n                    onKeyPress={ this.enterNextStep.bind(this) }\r\n                  />  \r\n                    :\r\n                  null\r\n                }\r\n                \r\n                { this.state.activeStep == 1 ?\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    size=\"small\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"code\"\r\n                    label=\"Код из смс\"\r\n                    name=\"code\"\r\n                    autoComplete=\"code\"\r\n                    autoFocus\r\n                    onKeyPress={ this.enterNextStep.bind(this) }\r\n                  />  \r\n                    :\r\n                  null\r\n                }\r\n                \r\n                { this.state.activeStep == 2 ?\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    size=\"small\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Пароль\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    onKeyPress={ this.enterNextStep.bind(this) }\r\n                  />\r\n                    :\r\n                  null\r\n                }\r\n                                  \r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={this.state.classes.submit}\r\n                  onClick={ this.nextStep.bind(this) }\r\n                >\r\n                  Дальше\r\n                </Button>\r\n                <Grid container>\r\n                  <Grid item xs>\r\n                    <a href=\"/auth\" className={this.state.classes.textLink}>Вернуться к авторизации</a>\r\n                  </Grid>\r\n                </Grid>\r\n                \r\n                \r\n              </div>\r\n              \r\n              \r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function Reg () {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  \r\n  return (\r\n    <Reg_ classes={classes} history={history} />\r\n  );\r\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport Typography from '@mui/material/Typography';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport Divider from '@mui/material/Divider';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\n\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport RestoreIcon from '@mui/icons-material/Restore';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ArchiveIcon from '@mui/icons-material/Archive';\r\nimport Paper from '@mui/material/Paper';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\n\r\nimport { MySelect } from '../../stores/elements';\r\n\r\nconst queryString = require('query-string');\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n}));\r\n\r\nclass Revizion_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      module: 'revizion',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      points: [],\r\n      point: '0',\r\n      \r\n      revList: [],\r\n      chooseRev: '',\r\n      \r\n      items: [],\r\n      pf: [],\r\n      \r\n      chooseTab: 0,\r\n      \r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    \r\n    let data = await this.getData('get_all');\r\n    \r\n    this.setState({\r\n      points: data.point_list,\r\n      point: data.point_list.length == 1 ? data.point_list[0].id : '0',\r\n      module_name: data.module_info.name\r\n    })\r\n    \r\n    document.title = data.module_info.name;\r\n    \r\n    setTimeout( () => {\r\n      //this.updateData();\r\n    }, 100 )\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n    });\r\n  }\r\n   \r\n  changePoint(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      point: data\r\n    })\r\n    \r\n    setTimeout( () => {\r\n      this.getRevList();\r\n    }, 50 )\r\n  }\r\n  \r\n  changeRev(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      chooseRev: data\r\n    })\r\n    \r\n    setTimeout( () => {\r\n      this.getDataRev();\r\n    }, 300 )\r\n  }\r\n  \r\n  async updateData(){\r\n    let data = {\r\n      point_id: this.state.point,\r\n      showReady: this.state.showReady === true ? 1 : 0\r\n    };\r\n    \r\n    let res = await this.getData('get_orders', data);\r\n    \r\n    this.setState({\r\n      read: res.read,\r\n      onstol: res.onstol,\r\n      ordersQueue: res.prestol_new\r\n    })\r\n  }\r\n  \r\n  async getRevList(){\r\n    let data = {\r\n      point_id: this.state.point,\r\n    };\r\n    \r\n    let res = await this.getData('get_rev_list', data);\r\n    \r\n    this.setState({\r\n      revList: res,\r\n      chooseRev: res.length > 0 ? res[0]['id'] : ''\r\n    })\r\n    \r\n    if( res.length > 0 ){\r\n      setTimeout( () => {\r\n        this.getDataRev();\r\n      }, 300 )\r\n    }\r\n  }\r\n  \r\n  async getDataRev(){\r\n    let data = {\r\n      point_id: this.state.point,\r\n      rev_id: this.state.chooseRev\r\n    };\r\n    \r\n    let res = await this.getData('get_data_rev', data);\r\n    \r\n    this.setState({\r\n      items: res['items'],\r\n      pf: res['pf'],\r\n    })\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Link to={\"/revizion/new\"}>Новая ревизия2</Link>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={6}>\r\n            <MySelect data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <MySelect data={this.state.revList} value={this.state.chooseRev} func={ this.changeRev.bind(this) } label='Ревизия' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\r\n          </Grid>\r\n          \r\n            \r\n          \r\n          \r\n          \r\n          <Grid item xs={12} sm={12} id=\"revTable\">\r\n            \r\n            <Tabs value={this.state.chooseTab} onChange={ (item, key) => { this.setState({ chooseTab: key }) } } textColor=\"primary\" indicatorColor=\"primary\" centered>\r\n              <Tab label=\"Товары\" {...a11yProps(0)} />\r\n              <Tab label=\"Заготовки\" {...a11yProps(1)} />\r\n            </Tabs>\r\n            \r\n            <TabPanel value={this.state.chooseTab} index={0}>\r\n              \r\n              <TableContainer component={Paper} >\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Товар</TableCell>\r\n                      <TableCell>Объем</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    { this.state.items.map( (item, key) => (\r\n                      <TableRow key={key}>\r\n                        <TableCell>{item.name}</TableCell>\r\n                        <TableCell>{item.value} {item.ei_name}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              \r\n            </TabPanel>\r\n            <TabPanel value={this.state.chooseTab} index={1}>\r\n              \r\n              <TableContainer component={Paper} >\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Заготовка</TableCell>\r\n                      <TableCell>Объем</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    { this.state.pf.map( (item, key) => (\r\n                      <TableRow key={key}>\r\n                        <TableCell>{item.name}</TableCell>\r\n                        <TableCell>{item.value} {item.ei_name}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              \r\n            </TabPanel>\r\n            \r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nclass RevizionNewItem extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      item: this.props.item,\r\n      change: this.props.change\r\n    };\r\n  }\r\n  \r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      this.state.change !== nextState.change ||\r\n      this.state.change !== nextProps.change\r\n    );\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          //aria-controls=\"panel1a-content\"\r\n          //id=\"panel1a-header\"\r\n        >\r\n          <Typography style={{ width: '60%' }}>{this.state.item.name}</Typography>\r\n          <Typography style={{ width: '40%' }}>{this.state.item.value} {this.state.item.ei_name}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          \r\n          \r\n            { this.state.item.counts.map( (it, k) =>\r\n              <Grid container spacing={3} key={k} style={{ paddingTop: 10, paddingBottom: 10 }}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <MySelect data={ this.state.item.size } value={ it.need_pq } func={ this.props.func.bind(this, 'item', this.props.itemKey, 'need_pq', k) } label='Объем упаковки' />\r\n                </Grid>\r\n                <Grid item xs={ k == 0 ? 12 : 9 } sm={5}>\r\n                  <TextField value={ it.value } onChange={ this.props.func.bind(this, 'item', this.props.itemKey, 'value', k) } fullWidth variant=\"outlined\" size=\"small\" label=\"Количество\" />\r\n                </Grid>\r\n                { k == 0 ? null :\r\n                  <Grid item xs={3} sm={1}>\r\n                    <Button onClick={this.props.clear.bind(this, 'item', this.props.itemKey, k)} variant=\"contained\"> <CloseIcon /> </Button>\r\n                  </Grid>\r\n                }\r\n                \r\n              </Grid>\r\n            ) }\r\n          \r\n          \r\n          <Grid item xs={12} sm={6}>\r\n            <Button variant=\"contained\" onClick={this.props.copy.bind(this, 'item', this.props.itemKey)}>Дублировать</Button>\r\n          </Grid>\r\n          \r\n        </AccordionDetails>\r\n      </Accordion>\r\n    )\r\n  }\r\n}\r\n\r\nclass RevizionNew_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      module: 'revizion',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      points: [],\r\n      point: '0',\r\n      \r\n      revList: [],\r\n      chooseRev: '',\r\n      \r\n      storages: [],\r\n      items: [],\r\n      rec: [],\r\n      pf: [],\r\n      \r\n      chooseTab: 0,\r\n      \r\n      open: false\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    \r\n    let data = await this.getData('get_all');\r\n    \r\n    this.setState({\r\n      points: data.point_list,\r\n      point: data.point_list.length == 1 ? data.point_list[0].id : '0',\r\n      module_name: data.module_info.name\r\n    })\r\n    \r\n    document.title = data.module_info.name;\r\n    \r\n    setTimeout( () => {\r\n      //this.updateData();\r\n    }, 100 )\r\n  }\r\n  \r\n  changePoint(event){\r\n    let data = event.target.value;\r\n    \r\n    this.setState({\r\n      point: data\r\n    })\r\n    \r\n    setTimeout( () => {\r\n      this.getDataRev();\r\n    }, 300 )\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n    });\r\n  }\r\n  \r\n  async getDataRev(){\r\n    let data = {\r\n      point_id: this.state.point\r\n    };\r\n    \r\n    let res = await this.getData('get_data_for_new_rev', data);\r\n    \r\n    this.setState({\r\n      storages: res['storages'],\r\n      items: res['items'],\r\n      rec: res['rec'],\r\n      pf: res['pf']\r\n    })\r\n  }\r\n  \r\n  saveData(type, key_item, data, key_data, event){\r\n    \r\n    if( type == 'item' ){\r\n      let items = this.state.items;\r\n      \r\n      items[key_item]['counts'][key_data][ [data] ] = event.target.value;\r\n      \r\n      let allVal = 0;\r\n      \r\n      items[key_item]['counts'].map( (item, key) => {\r\n        allVal += parseFloat(item.need_pq) * parseFloat(item.value);\r\n      } )\r\n      \r\n      items[key_item]['value'] = allVal;\r\n      items[key_item]['change'] ++;\r\n      \r\n      this.setState({\r\n        items: items\r\n      })\r\n    }\r\n    \r\n    \r\n  }\r\n  \r\n  copyData(type, key_item){\r\n    if( type == 'item' ){\r\n      let items = this.state.items;\r\n      \r\n      items[key_item]['counts'].push({ need_pq: items[key_item]['counts'][0]['need_pq'], value: 0 })\r\n      items[key_item]['change'] ++;\r\n      \r\n      this.setState({\r\n        items: items\r\n      })\r\n    }\r\n  }\r\n  \r\n  clearData(type, key_item, key_data){\r\n    \r\n    if( type == 'item' ){\r\n      let items = this.state.items;\r\n      let new_counts = [];\r\n      \r\n      items[key_item]['counts'].map( (item, key) => {\r\n        if( key != key_data ){\r\n          new_counts.push( item )\r\n        }\r\n      } )\r\n      \r\n      items[key_item]['counts'] = new_counts;\r\n      \r\n      let allVal = 0;\r\n      \r\n      items[key_item]['counts'].map( (item, key) => {\r\n        allVal += parseFloat(item.need_pq) * parseFloat(item.value);\r\n      } )\r\n      \r\n      items[key_item]['value'] = allVal;\r\n      items[key_item]['change'] ++;\r\n      \r\n      this.setState({\r\n        items: items\r\n      })\r\n    }\r\n    \r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          \r\n          \r\n          \r\n          <Grid item xs={12} sm={6}>\r\n            <MySelect data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={12} id=\"revTable\">\r\n            \r\n            <Tabs value={this.state.chooseTab} onChange={ (item, key) => { this.setState({ chooseTab: key }) } } textColor=\"primary\" indicatorColor=\"primary\" centered>\r\n              <Tab label=\"Товары\" {...a11yProps(0)} />\r\n              <Tab label=\"Заготовки\" {...a11yProps(1)} />\r\n            </Tabs>\r\n            \r\n            <TabPanel value={this.state.chooseTab} index={0}>\r\n              \r\n              { this.state.items.map( (item, key) =>\r\n                <RevizionNewItem key={key} itemKey={key} item={item} change={item.change} func={ this.saveData.bind(this) } copy={ this.copyData.bind(this) } clear={ this.clearData.bind(this) } />\r\n              ) }\r\n              \r\n              \r\n            </TabPanel>\r\n            <TabPanel value={this.state.chooseTab} index={1}>\r\n              \r\n              \r\n              \r\n            </TabPanel>\r\n            \r\n          </Grid>\r\n        </Grid>\r\n        \r\n        <React.Fragment >\r\n          <SwipeableDrawer\r\n            anchor={'left'}\r\n            open={ this.state.open }\r\n            onClose={ () => { this.setState({ open: false }) } }\r\n            onOpen={ () => { this.setState({ open: true }) } }\r\n          >\r\n            <List style={{ width: '100%' }}>\r\n              { this.state.storages.map( (item, key) =>\r\n                <ListItem button key={key}>\r\n                  <ListItemText primary={ item.name } />\r\n                </ListItem>\r\n              ) }\r\n            </List>\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n        \r\n        { this.state.storages.length == 0 ? null :\r\n          <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\r\n            <BottomNavigation\r\n              showLabels\r\n              onChange={(event, newValue) => {\r\n                this.setState({ open: true })\r\n              }}\r\n            >\r\n              <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\r\n            </BottomNavigation>\r\n          </Paper>\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function Revizion () {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  \r\n  return (\r\n    <Revizion_ classes={classes} history={history} />\r\n  );\r\n}\r\n\r\nexport function RevizionNew () {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  \r\n  return (\r\n    <RevizionNew_ classes={classes} history={history} />\r\n  );\r\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport { createTheme } from '@mui/material/styles';\r\n\r\nimport { NavLink as Link, useParams } from 'react-router-dom';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableFooter from '@mui/material/TableFooter';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport Divider from '@mui/material/Divider';\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { MySelect, MyCheckBox, MyTimePicker, MyTextInput, MyDaterange, MyAutocomplite, MyDatePicker } from '../../stores/elements';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#c03',\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  formControl: {\r\n    //margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  tableCel: {\r\n    textAlign: 'center',\r\n    borderRight: '1px solid #e5e5e5',\r\n    padding: 15,\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: \"#e5e5e5\",\r\n    },\r\n  },\r\n  tableCelHead: {\r\n    textAlign: 'center',\r\n    padding: 15\r\n  },\r\n  customCel: {\r\n    backgroundColor: \"#bababa\",\r\n    textAlign: 'center',\r\n    borderRight: '1px solid #e5e5e5',\r\n    padding: 15,\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: \"#e5e5e5\",\r\n    },\r\n  },\r\n  timePicker: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nfunction formatDate(date) {\r\n  var d = new Date(date),\r\n      month = '' + (d.getMonth() + 1),\r\n      day = '' + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n  if (month.length < 2) \r\n      month = '0' + month;\r\n  if (day.length < 2) \r\n      day = '0' + day;\r\n\r\n  return [year, month, day].join('-');\r\n}\r\n\r\nfunction formatDateDot(date) {\r\n  var d = new Date(date),\r\n      month = '' + (d.getMonth() + 1),\r\n      day = '' + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n  if (month.length < 2) \r\n      month = '0' + month;\r\n  if (day.length < 2) \r\n      day = '0' + day;\r\n\r\n  return [day, month, year].join('.');\r\n}\r\n\r\nfunction formatDateName(date) {\r\n  var d = new Date(date),\r\n      month = '' + (d.getMonth() + 1),\r\n      day = '' + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n  //if (month.length < 2) \r\n  //    month = '0' + month;\r\n  if (day.length < 2) \r\n      day = '0' + day;\r\n\r\n  let m = '';    \r\n      \r\n  switch(parseInt(month)){\r\n\t\tcase 1:{\r\n\t\t\tm = 'Января';\r\n\t\t\tbreak;}\r\n\t\tcase 2:{\r\n\t\t\tm = 'Февраля';\r\n\t\t\tbreak;}\r\n\t\tcase 3:{\r\n\t\t\tm = 'Марта';\r\n\t\t\tbreak;}\r\n\t\tcase 4:{\r\n\t\t\tm = 'Апреля';\r\n\t\t\tbreak;}\r\n\t\tcase 5:{\r\n\t\t\tm = 'Мая';\r\n\t\t\tbreak;}\r\n\t\tcase 6:{\r\n\t\t\tm = 'Июня';\r\n\t\t\tbreak;}\t\r\n\t\tcase 7:{\r\n\t\t\tm = 'Июля';\r\n\t\t\tbreak;}\r\n\t\tcase 8:{\r\n\t\t\tm = 'Августа';\r\n\t\t\tbreak;}\r\n\t\tcase 9:{\r\n\t\t\tm = 'Сентября';\r\n\t\t\tbreak;}\r\n\t\tcase 10:{\r\n\t\t\tm = 'Октября';\r\n\t\t\tbreak;}\r\n\t\tcase 11:{\r\n\t\t\tm = 'Ноября';\r\n\t\t\tbreak;}\r\n\t\tcase 12:{\r\n\t\t\tm = 'Декабря';\r\n\t\t\tbreak;}\t\r\n\t}    \r\n      \r\n  return [day, m].join(' ');\r\n}\r\n\r\nclass SiteSale2_new_ extends React.Component {\r\n  click = false;\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      module: 'site_sale_2',\r\n      module_name: '',\r\n      is_load: false,\r\n      modalText: '',\r\n      \r\n      points: [],\r\n      point: 0,\r\n      cities: [],\r\n      city: 0,\r\n      \r\n      modalDialog: false,\r\n      modalLink: '',\r\n      \r\n      where_promo_list: [\r\n        {id: 1, name: 'Создать'},\r\n        {id: 2, name: 'Создать и показать'},\r\n        {id: 3, name: 'Отправить на почту'},\r\n        {id: 4, name: 'Отправить в смс'},\r\n        {id: 5, name: 'Рассылка смс'},\r\n        {id: 6, name: 'Отправить в ЛК (через 8)'},\r\n        {id: 7, name: 'Создать сертификат(ы)'},\r\n        {id: 8, name: 'Отправить через бота ВК'},\r\n      ],\r\n      promo_action_list: [],\r\n      sale_list: [\r\n        {id: 1, name: 'На товары'},\r\n        {id: 2, name: 'На категории'},\r\n        {id: 3, name: 'На все меню (кроме допов и закусок)'},\r\n      ],\r\n      promo_conditions_list: [\r\n        {id: 1, name: 'В корзине есть определенные товар(ы)'},\r\n        {id: 2, name: 'В корзине набрана определенная сумма'},\r\n      ],\r\n      promo_sale_list: [],\r\n      type_sale_list: [\r\n        {id: 1, name: 'В рублях'},\r\n        {id: 2, name: 'В процентах'},\r\n      ],\r\n      date_promo_list: [\r\n        {id: 1, name: 'В определенные даты'},\r\n        {id: 2, name: '14 дней с 10:00 до 21:40'},\r\n        {id: 3, name: '14 дней с 00:00 до 23:59'},\r\n      ],\r\n      type_order_list: [\r\n        {id: 1, name: 'Все'},\r\n        {id: 2, name: 'Доставка'},\r\n        {id: 3, name: 'Самовывоз'},\r\n        {id: 4, name: 'Зал'},\r\n      ],\r\n      where_order_list: [\r\n        {id: 1, name: 'В городе'},\r\n        {id: 2, name: 'На точке'}\r\n      ],\r\n      \r\n      promo_prizw_vk: \r\n    \t\t'Привет!\\r\\n'+\r\n    \t\t'Поздравляем 🎉\\r\\n'+\r\n    \t\t'Промокод --promo-- на --position--, действует до --endDate--. Активировать можно при заказе на доставку, самовывоз и в кафе.\\r\\n\\r\\n'+\r\n\r\n    \t\t'Обратите внимание, что за подарочную позицию надо будет заплатить 1 руб, это необходимое условие для получения приза. В промокод не входят соевый соус, имбирь и васаби.\\r\\n\\r\\n'+\r\n\r\n    \t\t'Заказы принимаем на сайте --site--\\r\\n\\r\\n'+\r\n\r\n    \t\t'Режим работы: с 10:00 до 21:30\\r\\n'+\r\n    \t\t'Адреса наших кафе:\\r\\n'+\r\n    \t\t'--addrCity--',\r\n      \r\n      spamNameSMS: '',\r\n        \r\n      auto_text: true,\r\n      where_promo: 1,\r\n      promo_name: '',\r\n      generate_new: false,\r\n      count_action: 1,\r\n      promo_action: 1,\r\n      type_sale: 3,\r\n      promo_sale: 1,\r\n      sale_type: 2,\r\n      promo_conditions: 2,\r\n      \r\n      price_start: 0,\r\n      price_end: 0,\r\n      date_promo: 1,\r\n      \r\n      date_start: formatDate(new Date()),\r\n      date_end: formatDate(new Date()),\r\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\r\n      time_start: '10:00',\r\n      time_end: '21:30',\r\n      \r\n      promo_length: 5,\r\n      promo_count: 1,\r\n      \r\n      day_1: true,\r\n      day_2: true,\r\n      day_3: true,\r\n      day_4: true,\r\n      day_5: true,\r\n      day_6: true,\r\n      day_7: true,\r\n      \r\n      type_order: 1,\r\n      where_order: 1,\r\n      \r\n      numberList: '',\r\n      promo_desc_true: '',\r\n      promo_desc_false: '',\r\n      textSMS: '',\r\n      \r\n      \r\n      addItem: null,\r\n      addItemCount: 1,\r\n      addItemPrice: 1,\r\n      addItemAllPrice: 0,\r\n      \r\n      itemsAdd: [],\r\n      itemsAddPrice: [],\r\n      items: [],\r\n      cats: [],\r\n      saleCat: [],\r\n      saleItem: [],\r\n      \r\n      priceItem: null,\r\n      \r\n      conditionItems: [],\r\n      \r\n      testDate: []\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    \r\n    let data = await this.getData('get_all_for_new');\r\n    \r\n    let date = new Date();\r\n    let fullDate = '';\r\n    \r\n    let Y = date.getFullYear();\r\n    let M = date.getMonth()+1;\r\n    let D = date.getDate();\r\n    \r\n    fullDate = Y + '-' + ( parseInt(M) > 9 ? M : '0'+M ) + '-' + ( parseInt(D) > 9 ? D : '0'+D );\r\n    \r\n    this.setState({\r\n      points: data.points,\r\n      cities: data.cities,\r\n      module_name: data.module_info.name,\r\n      promo_action_list: data.promo_action_list,\r\n      promo_sale_list: data.promo_sale_list,\r\n      \r\n      date_start: fullDate,\r\n      date_end: fullDate,\r\n      \r\n      items: data.items,\r\n      cats: data.cats\r\n    })\r\n    \r\n    document.title = data.module_info.name;\r\n    \r\n    setTimeout( () => {\r\n      this.generateTextDescFalse();     \r\n      this.generateTextDescTrue(); \r\n    }, 300 )\r\n  }\r\n  \r\n  async save(){\r\n    \r\n    if( !this.click ){\r\n      this.click = true;  \r\n      \r\n      let count_promo = this.state.promo_sale_list.find( (item) => parseInt(item.id) == parseInt(this.state.promo_sale) )['name'];\r\n      \r\n      let conditionItems = [];\r\n      \r\n      this.state.conditionItems.map( (item) => {\r\n        conditionItems.push(item.id)\r\n      } )\r\n      \r\n      \r\n      let promo_items = [];\r\n      \r\n      this.state.saleItem.map( (item) => {\r\n        promo_items.push(item.id)\r\n      } )\r\n      \r\n      \r\n      let promo_cat = [];\r\n      \r\n      this.state.saleCat.map( (item) => {\r\n        promo_cat.push(item.id)\r\n      } )\r\n      \r\n      let dateList = [];\r\n      \r\n      this.state.testDate.map( (item) => {\r\n        dateList.push( (new Date(item).toISOString()).split('T')[0] );\r\n      } )\r\n      \r\n      dateList = dateList.join(',')\r\n      \r\n      let data = {\r\n        spamNameSMS: this.state.spamNameSMS,\r\n        promo_vk_prize: this.state.promo_vk_prize,\r\n        cert_text: this.state.cert_text,\r\n        addr: this.state.numberList,\r\n        where_promo: this.state.where_promo,\r\n        promo_count: this.state.promo_count,\r\n        promo_len: this.state.promo_length,\r\n        promo_name: this.state.promo_name,\r\n        generate: this.state.generate_new ? 1 : 0,\r\n        promo_in_count: this.state.count_action,\r\n        promo_action: this.state.promo_action,\r\n        promo_type_sale: this.state.type_sale,\r\n        count_promo: count_promo,\r\n        promo_type: this.state.sale_type,\r\n        promo_conditions: this.state.promo_conditions,\r\n        \r\n        promo_summ: this.state.price_start,\r\n        promo_summ_to: this.state.price_end,\r\n        promo_when: this.state.date_promo,\r\n        \r\n        date_start: this.state.date_start,\r\n        date_end: this.state.date_end,\r\n        time_start: this.state.time_start,\r\n        time_end: this.state.time_end,\r\n        \r\n        day_1: this.state.day_1 ? 1 : 0,\r\n        day_2: this.state.day_2 ? 1 : 0,\r\n        day_3: this.state.day_3 ? 1 : 0,\r\n        day_4: this.state.day_4 ? 1 : 0,\r\n        day_5: this.state.day_5 ? 1 : 0,\r\n        day_6: this.state.day_6 ? 1 : 0,\r\n        day_7: this.state.day_7 ? 1 : 0,\r\n        \r\n        promo_type_order: this.state.type_order,\r\n        promo_where: this.state.where_order,\r\n        \r\n        numberList: this.state.numberList,\r\n        \r\n        promo_city: this.state.city,\r\n        promo_point: this.state.point,\r\n        \r\n        about_promo_text: this.state.promo_desc_true,\r\n        condition_promo_text: this.state.promo_desc_false,\r\n        textSMS: this.state.textSMS,\r\n        \r\n        \r\n        promo_items: JSON.stringify(promo_items),\r\n        promo_cat: JSON.stringify(promo_cat),\r\n        promo_items_add: JSON.stringify(this.state.itemsAdd),\r\n        promo_items_sale: JSON.stringify(this.state.itemsAddPrice),\r\n        promo_conditions_items: JSON.stringify(conditionItems),\r\n        \r\n        date_between: dateList\r\n      };\r\n      \r\n      let res = await this.getData('save_new_promo', data);\r\n      \r\n      console.log( res )\r\n      \r\n      //создать\r\n      if( parseInt(this.state.where_promo) == 1 || parseInt(this.state.where_promo) == 8 ){\r\n        this.setState({\r\n          modalDialog: true,\r\n          modalText: 'Создано'\r\n        })\r\n      }\r\n      \r\n      //создать и показать\r\n      if( parseInt(this.state.where_promo) == 2 ){\r\n        this.setState({\r\n          modalDialog: true,\r\n          modalText: 'Промокоды: '+res.promo_text.join(', ')\r\n        })\r\n      }\r\n      \r\n      //почта\r\n      if( parseInt(this.state.where_promo) == 3 ){\r\n        this.setState({\r\n          modalDialog: true,\r\n          modalText: res.text\r\n        })\r\n      }\r\n      \r\n      //смс / смс рассылка / ЛК\r\n      if( parseInt(this.state.where_promo) == 4 || parseInt(this.state.where_promo) == 5 || parseInt(this.state.where_promo) == 6 ){\r\n        this.setState({\r\n          modalDialog: true,\r\n          modalText: res.text\r\n        })\r\n      }\r\n      \r\n      //сертификаты\r\n      if( parseInt(this.state.where_promo) == 7 ){\r\n        this.setState({\r\n          modalDialog: true,\r\n          modalText: res.text,\r\n          modalLink: res.link\r\n        })\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.click = false;    \r\n      }, 300 )\r\n    }\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n        this.click = false;\r\n      }, 300 )\r\n    });\r\n  }\r\n  \r\n  changeData(type, event){\r\n    this.setState({\r\n      [ type ]: event.target.value\r\n    })\r\n    \r\n    if( type == 'date_promo' && (event.target.value == 2 || event.target.value == 3) ){\r\n      let thisDay = new Date();\r\n      let nextDay = new Date();\r\n      nextDay.setDate(nextDay.getDate() + 14);\r\n      \r\n      this.setState({\r\n        rangeDate: [formatDate(thisDay), formatDate(nextDay)],\r\n        date_start: formatDate(thisDay),\r\n        date_end: formatDate(nextDay),\r\n        \r\n        time_start: event.target.value == 2 ? '10:00' : '00:00',\r\n        time_end: event.target.value == 2 ? '21:40' : '23:59',\r\n      })\r\n    }\r\n    \r\n    setTimeout( () => {\r\n      this.generateTextDescFalse();   \r\n      this.generateTextDescTrue();   \r\n    }, 300 )\r\n  }\r\n  \r\n  changeDataCheck(type, event){\r\n    this.setState({\r\n      [ type ]: event.target.checked\r\n    })\r\n    \r\n    setTimeout( () => {\r\n      this.generateTextDescFalse();    \r\n      this.generateTextDescTrue();  \r\n    }, 300 )\r\n  }\r\n  \r\n  changeDateRange(data){\r\n    let dateStart = data[0] ? formatDate(data[0]) : '';\r\n    let dateEnd = data[1] ? formatDate(data[1]) : '';\r\n    \r\n    this.setState({\r\n      rangeDate: [dateStart, dateEnd],\r\n      date_start: dateStart,\r\n      date_end: dateEnd,\r\n    })\r\n    \r\n    setTimeout( () => {\r\n      this.generateTextDescFalse();  \r\n      this.generateTextDescTrue();    \r\n    }, 300 )\r\n  }\r\n  \r\n  changeDataData(type, data){\r\n    this.setState({\r\n      [ type ]: data\r\n    });\r\n    \r\n    setTimeout( () => {\r\n      this.generateTextDescFalse();  \r\n      this.generateTextDescTrue();    \r\n    }, 300 )\r\n  }\r\n  \r\n  generateTextDescTrue(){\r\n    \r\n    if( !this.state.auto_text ){\r\n      return ;\r\n    }\r\n    \r\n    let promo_action = this.state.promo_action;\r\n    let textTrue = '';\r\n    \r\n    if(parseInt(promo_action) == 1){//скидка\r\n      var promo_type_sale = this.state.type_sale,\r\n        count_promo = this.state.promo_sale_list.find( (item) => parseInt(item.id) == parseInt(this.state.promo_sale) )['name'],//размер скидки\r\n        promo_type = this.state.sale_type; //1 - рубли 2 %\r\n\r\n      if(parseInt(promo_type_sale) == 1){//товары\r\n        var promo_items = this.state.saleItem,\r\n          items = '';\r\n\r\n        promo_items.map(function(item, key){\r\n          items += item.name+', ';\r\n        })\r\n\r\n        items = items.substring(0, items.length - 2);\r\n\r\n        textTrue = 'скидку на '+items+' в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\r\n      }\t\r\n      if(parseInt(promo_type_sale) == 2){//категории\r\n        var promo_items = this.state.saleCat,\r\n          items = '';\r\n\r\n        promo_items.map(function(item, key){\r\n          items += item.name+', ';\r\n        })\r\n\r\n        items = items.substring(0, items.length - 2);\r\n\r\n        textTrue = 'скидку на '+items+' в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\r\n      }\r\n      if(parseInt(promo_type_sale) == 3){//все\r\n        textTrue = 'скидку на всё меню, кроме напитков, соусов, приправ и палочек, в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\r\n      }\r\n    }\r\n    \r\n    if(parseInt(promo_action) == 2){//добавляет товар\r\n      var itemText = '';\r\n\r\n      this.state.itemsAdd.map( (item, key) => {\r\n        if(parseInt(item['price']) == 0){\r\n          itemText += 'бесплатную '+item['name']+' '+item['count']+'шт. '+'за '+item['price']+'руб., ';\r\n        }else{\r\n          itemText += item['name']+' '+item['count']+'шт. '+'за '+item['price']+'руб., ';\r\n        }\r\n      } )\r\n      \r\n      itemText = itemText.substring(0, itemText.length - 2);\r\n\r\n      textTrue = this.state.itemsAdd.length == 1 ? 'позицию '+itemText : 'позиции '+itemText;\r\n    }\t\r\n    \r\n    if(parseInt(promo_action) == 3){//товар за цену\r\n      var itemText = '';\r\n\r\n      this.state.itemsAddPrice.map( (item, key) => {\r\n        itemText += item['name']+' по '+item['price']+'руб., ';\r\n      } )\r\n      \r\n      itemText = itemText.substring(0, itemText.length - 2);\r\n\r\n      textTrue = this.state.itemsAddPrice.length-1 == 1 ? 'позицию '+itemText : 'позиции '+itemText;\r\n    }\r\n    \r\n    let textSMS = 'Промокод --promo_name--, действует до '+formatDateName(this.state.date_end)+'. Заказывай на jacofood.ru!'\r\n    \r\n    this.setState({\r\n      promo_desc_true: textTrue,\r\n      textSMS: textSMS,\r\n      cert_text: textTrue\r\n    })\r\n  }\r\n  \r\n  generateTextDescFalse(){\r\n    \r\n    if( !this.state.auto_text ){\r\n      return ;\r\n    }\r\n    \r\n    var dop_text = '';\r\n    \r\n    let text = '';\r\n    \r\n    console.log( this.state.testDate )\r\n    \r\n    if( this.state.testDate.length > 0 ){\r\n      \r\n      let dateList = [];\r\n      \r\n      this.state.testDate.map( (item) => {\r\n        dateList.push( (new Date(item).toISOString()).split('T')[0] );\r\n      } )\r\n      \r\n\t\t\ttext = '(кроме ';\r\n\t\t\t\r\n\t\t\tdateList.map(function(item){\r\n\t\t\t\ttext += formatDateName(item) + ', ';\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\ttext = text.slice(0, -1);\r\n\t\t\ttext = text.slice(0, -1);\r\n\r\n      text += ')';\r\n      \r\n      console.log( 'text', text )\r\n\t\t}\r\n    \r\n\t\tif( parseInt(this.state.where_order) == 1 ){\r\n\t\t\t//город\r\n\t\t\tif( parseInt(this.state.city) != 0 ){\r\n        let city_name = this.state.cities.find( (item) => parseInt(item.id) == parseInt(this.state.city) )['name'];\r\n        \r\n\t\t\t\tdop_text = ' в г. '+city_name;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif( parseInt(this.state.where_order) == 2 ){\r\n\t\t\t//точка\r\n\t\t\tif( parseInt(this.state.point) != 0 ){\r\n        let point_name = this.state.points.find( (item) => parseInt(item.id) == parseInt(this.state.point) )['name'];\r\n        \r\n\t\t\t\tdop_text = ' в г. '+point_name;\r\n\t\t\t}\r\n\t\t}\r\n    \r\n    let dateStart = formatDateDot(this.state.date_start);\r\n    let dateEnd = formatDateDot(this.state.date_end);\r\n    \r\n    let textFalse = 'Промокод действует c '+dateStart+' до '+dateEnd+' с '+this.state.time_start+' до '+this.state.time_end+' '+text+dop_text;\r\n    \r\n    this.setState({\r\n      promo_desc_false: textFalse\r\n    })\r\n\t}\r\n  \r\n  addItemAdd(){\r\n    let thisItems = this.state.itemsAdd;\r\n    \r\n    let check = thisItems.find( (item) => parseInt(item.item_id) == parseInt(this.state.addItem.id) );\r\n    \r\n    if( !check ){\r\n      let thisItem = this.state.items.find( (item) => parseInt(item.id) == parseInt(this.state.addItem.id) );\r\n      \r\n      thisItems.push({\r\n        item_id: this.state.addItem.id,\r\n        name: thisItem.name,\r\n        count: this.state.addItemCount,\r\n        price: this.state.addItemPrice,\r\n      })\r\n      \r\n      let addItemAllPrice = 0;\r\n      \r\n      thisItems.map( (item) => {\r\n        addItemAllPrice += parseInt(item.price)\r\n      } )\r\n      \r\n      this.setState({\r\n        itemsAdd: thisItems,\r\n        addItemAllPrice: addItemAllPrice\r\n      })\r\n    }\r\n    \r\n    setTimeout( () => {\r\n      this.generateTextDescFalse();  \r\n      this.generateTextDescTrue();    \r\n    }, 300 )\r\n  }\r\n  \r\n  delItemAdd(item){\r\n    let thisItems = this.state.itemsAdd;\r\n    \r\n    let newItems = thisItems.filter( (it) => parseInt(it.item_id) != parseInt(item.item_id) );\r\n    \r\n    let addItemAllPrice = 0;\r\n      \r\n    newItems.map( (item) => {\r\n      addItemAllPrice += parseInt(item.price)\r\n    } )\r\n    \r\n    this.setState({\r\n      itemsAdd: newItems,\r\n      addItemAllPrice: addItemAllPrice\r\n    })\r\n    \r\n    setTimeout( () => {\r\n      this.generateTextDescFalse();  \r\n      this.generateTextDescTrue();    \r\n    }, 300 )\r\n  }\r\n  \r\n  priceItemAdd(){\r\n    let thisItems = this.state.itemsAddPrice;\r\n    \r\n    let check = thisItems.find( (item) => parseInt(item.item_id) == parseInt(this.state.priceItem.id) );\r\n    \r\n    if( !check ){\r\n      let thisItem = this.state.items.find( (item) => parseInt(item.id) == parseInt(this.state.priceItem.id) );\r\n      \r\n      thisItems.push({\r\n        item_id: this.state.priceItem.id,\r\n        name: thisItem.name,\r\n        price: this.state.addItemPrice,\r\n      })\r\n      \r\n      this.setState({\r\n        itemsAddPrice: thisItems\r\n      })\r\n    }\r\n    \r\n    setTimeout( () => {\r\n      this.generateTextDescFalse();  \r\n      this.generateTextDescTrue();    \r\n    }, 300 )\r\n  }\r\n  \r\n  delItemPrice(item){\r\n    let thisItems = this.state.itemsAddPrice;\r\n    \r\n    let newItems = thisItems.filter( (it) => parseInt(it.item_id) != parseInt(item.item_id) );\r\n    \r\n    let addItemAllPrice = 0;\r\n      \r\n    newItems.map( (item) => {\r\n      addItemAllPrice += parseInt(item.price)\r\n    } )\r\n    \r\n    this.setState({\r\n      itemsAddPrice: newItems\r\n    })\r\n    \r\n    setTimeout( () => {\r\n      this.generateTextDescFalse();  \r\n      this.generateTextDescTrue();    \r\n    }, 300 )\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Dialog\r\n          open={this.state.modalDialog}\r\n          onClose={ () => { this.setState({ modalDialog: false, modalLink: '' }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">Результат операции</DialogTitle>\r\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\r\n            <Typography>{this.state.modalText}</Typography>\r\n            <br />\r\n            { this.state.modalLink == '' ? null :\r\n              <a href={this.state.modalLink} style={{ color: 'red' }}>Скачать</a>\r\n            }\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color=\"primary\" onClick={ () => { this.setState({ modalDialog: false }) } }>Хорошо</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        <Grid container>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            { this.state.generate_new === true ? null :\r\n              <Grid item xs={12} sm={3}>\r\n                <MyTextInput classes={this.state.classes} value={this.state.promo_name} func={ this.changeData.bind(this, 'promo_name') } label='Название промокода' />\r\n              </Grid>\r\n            }\r\n            { this.state.generate_new === false ? null :\r\n              <Grid item xs={12} sm={3}>\r\n                <MyTextInput classes={this.state.classes} value={this.state.promo_length} func={ this.changeData.bind(this, 'promo_length') } label='Длина промокода' />\r\n              </Grid>\r\n            }\r\n            \r\n            <Grid item xs={12} sm={3}>\r\n              <MyCheckBox classes={this.state.classes} value={this.state.generate_new} func={ this.changeDataCheck.bind(this, 'generate_new') } label='Сгенерировать' />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={3}>\r\n              <MyTextInput classes={this.state.classes} value={this.state.count_action} func={ this.changeData.bind(this, 'count_action') } label='Количество активаций' />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={3}>\r\n              <MyTextInput classes={this.state.classes} value={this.state.promo_count} func={ this.changeData.bind(this, 'promo_count') } label='Количество промокодов' />\r\n            </Grid>\r\n            \r\n          </Grid>\r\n          \r\n          <Divider style={{ width: '100%', marginTop: 20 }} />\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            <Grid item xs={12} sm={3}>\r\n              <MySelect classes={this.state.classes} data={this.state.promo_action_list} value={this.state.promo_action} func={ this.changeData.bind(this, 'promo_action') } label='Промокод дает:' />\r\n            </Grid>\r\n            \r\n          </Grid>\r\n          \r\n          { parseInt(this.state.promo_action) !== 1 ? null :\r\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n              \r\n              <Grid item xs={12} sm={3}>\r\n                <MySelect classes={this.state.classes} data={this.state.sale_list} value={this.state.type_sale} func={ this.changeData.bind(this, 'type_sale') } label='Скидка' />\r\n              </Grid>\r\n            \r\n              { parseInt(this.state.type_sale) !== 1 ? null :\r\n                <Grid item xs={12} sm={9}>\r\n                  <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.saleItem} func={ (event, data) => { this.changeDataData('saleItem', data) } } multiple={true} label='Товары' />\r\n                </Grid>\r\n              }\r\n              \r\n              { parseInt(this.state.type_sale) !== 2 ? null :\r\n                <Grid item xs={12} sm={9}>\r\n                  <MyAutocomplite classes={this.state.classes} data={this.state.cats} value={this.state.saleCat} func={ (event, data) => { this.changeDataData('saleCat', data) } } multiple={true} label='Категории' />\r\n                </Grid>\r\n              }\r\n            \r\n              <Grid item xs={12} sm={3}>\r\n                <MySelect classes={this.state.classes} data={this.state.promo_sale_list} value={this.state.promo_sale} func={ this.changeData.bind(this, 'promo_sale') } label='Размер скидки' />\r\n              </Grid>\r\n            \r\n              <Grid item xs={12} sm={3}>\r\n                <MySelect classes={this.state.classes} data={this.state.type_sale_list} value={this.state.sale_type} func={ this.changeData.bind(this, 'sale_type') } label='Какая скидка' />\r\n              </Grid>\r\n            \r\n            </Grid>\r\n          }\r\n          \r\n          { parseInt(this.state.promo_action) !== 2 ? null :\r\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n              \r\n              <Grid item xs={12} sm={3}>\r\n                <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.addItem} func={ (event, data) => { this.changeDataData('addItem', data) } } label='Позиция' />\r\n              </Grid>\r\n            \r\n              <Grid item xs={12} sm={3}>\r\n                <MyTextInput classes={this.state.classes} value={this.state.addItemCount} func={ this.changeData.bind(this, 'addItemCount') } label='Количество' />\r\n              </Grid>\r\n            \r\n              <Grid item xs={12} sm={3}>\r\n                <MyTextInput classes={this.state.classes} value={this.state.addItemPrice} func={ this.changeData.bind(this, 'addItemPrice') } label='Цена за все' />\r\n              </Grid>\r\n            \r\n              <Grid item xs={12} sm={3}>\r\n                <Button variant=\"contained\" onClick={this.addItemAdd.bind(this)}>Добавить</Button>\r\n              </Grid>\r\n              \r\n            </Grid>\r\n          }\r\n          \r\n          { parseInt(this.state.promo_action) !== 2 ? null :\r\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Позиция</TableCell>\r\n                      <TableCell>Количество</TableCell>\r\n                      <TableCell>Цена за все</TableCell>\r\n                      <TableCell></TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    \r\n                    { this.state.itemsAdd.map( (item, key) =>\r\n                      <TableRow key={key}>\r\n                        <TableCell>{item.name}</TableCell>\r\n                        <TableCell>{item.count}</TableCell>\r\n                        <TableCell>{item.price}</TableCell>\r\n                        <TableCell> <CloseIcon onClick={this.delItemAdd.bind(this, item)} style={{ cursor: 'pointer' }} /> </TableCell>\r\n                      </TableRow>\r\n                    ) }\r\n                    \r\n                    \r\n                  </TableBody>\r\n                  \r\n                  <TableFooter>\r\n                    <TableRow>\r\n                      <TableCell></TableCell>\r\n                      <TableCell></TableCell>\r\n                      <TableCell>{this.state.addItemAllPrice}</TableCell>\r\n                      <TableCell></TableCell>\r\n                    </TableRow>\r\n                  </TableFooter>\r\n                  \r\n                  \r\n                </Table>\r\n              </Grid>  \r\n            </Grid>\r\n          }\r\n          \r\n          { parseInt(this.state.promo_action) !== 3 ? null :\r\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n              \r\n              <Grid item xs={12} sm={3}>\r\n                <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.priceItem} func={ (event, data) => { this.changeDataData('priceItem', data) } } label='Позиция' />\r\n              </Grid>\r\n            \r\n              <Grid item xs={12} sm={3}>\r\n                <MyTextInput classes={this.state.classes} value={this.state.addItemCount} func={ this.changeData.bind(this, 'addItemCount') } label='Цена за 1 ед' />\r\n              </Grid>\r\n            \r\n              <Grid item xs={12} sm={3}>\r\n                <Button variant=\"contained\" onClick={this.priceItemAdd.bind(this)}>Добавить</Button>\r\n              </Grid>\r\n              \r\n            </Grid>\r\n          }\r\n          \r\n          { parseInt(this.state.promo_action) !== 3 ? null :\r\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Позиция</TableCell>\r\n                      <TableCell>Цена за 1 ед</TableCell>\r\n                      <TableCell></TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    \r\n                    { this.state.itemsAddPrice.map( (item, key) =>\r\n                      <TableRow key={key}>\r\n                        <TableCell>{item.name}</TableCell>\r\n                        <TableCell>{item.price}</TableCell>\r\n                        <TableCell> <CloseIcon onClick={this.delItemPrice.bind(this, item)} style={{ cursor: 'pointer' }} /> </TableCell>\r\n                      </TableRow>\r\n                    ) }\r\n                    \r\n                  </TableBody>\r\n                </Table>\r\n              </Grid>  \r\n            </Grid>\r\n          }\r\n          \r\n          <Divider style={{ width: '100%', marginTop: 20 }} />\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            <Grid item xs={12} sm={4}>\r\n              <MySelect classes={this.state.classes} data={this.state.promo_conditions_list} value={this.state.promo_conditions} func={ this.changeData.bind(this, 'promo_conditions') } label='Условие' />\r\n            </Grid>\r\n            \r\n            { parseInt(this.state.promo_conditions) !== 1 ? null :\r\n              <>\r\n                <Grid item xs={12} sm={8}>\r\n                  <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.conditionItems} func={ (event, data) => { this.changeDataData('conditionItems', data) } } multiple={true} label='Товары' />\r\n                </Grid>\r\n              </>\r\n            }\r\n            \r\n            { parseInt(this.state.promo_conditions) !== 2 ? null :\r\n              <>\r\n                <Grid item xs={12} sm={4}>\r\n                  <MyTextInput classes={this.state.classes} value={this.state.price_start} func={ this.changeData.bind(this, 'price_start') } label='Сумма от' />\r\n                </Grid>\r\n              \r\n                <Grid item xs={12} sm={4}>\r\n                  <MyTextInput classes={this.state.classes} value={this.state.price_end} func={ this.changeData.bind(this, 'price_end') } label='Сумма до' />\r\n                </Grid>\r\n              </>\r\n            }\r\n            \r\n          </Grid>\r\n          \r\n          <Divider style={{ width: '100%', marginTop: 20 }} />\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            <Grid item xs={12} sm={3}>\r\n              <MySelect classes={this.state.classes} data={this.state.date_promo_list} value={this.state.date_promo} func={ this.changeData.bind(this, 'date_promo') } label='Когда работает промокод' />\r\n            </Grid>\r\n            \r\n          </Grid>\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            <Grid item xs={12} sm={6} className=\"MyDaterange\">\r\n              <MyDaterange startText=\"Дата от\" endText=\"Дата до\" value={this.state.rangeDate} func={ this.changeDateRange.bind(this) } />\r\n            </Grid>\r\n           \r\n            <Grid item xs={12} sm={3}>\r\n              <MyTimePicker classes={this.state.classes} label=\"Время от\" value={this.state.time_start} func={ this.changeData.bind(this, 'time_start') } />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={3}>\r\n              <MyTimePicker classes={this.state.classes} label=\"Время до\" value={this.state.time_end} func={ this.changeData.bind(this, 'time_end') } />\r\n            </Grid>\r\n              \r\n            \r\n          </Grid>\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            <Grid item xs={12} sm={12}>\r\n              <MyDatePicker multiple={false} label={'Кроме дат'} value={this.state.testDate} func={ this.changeDataData.bind(this, 'testDate') } />\r\n            </Grid>\r\n          </Grid>\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ marginTop: 20 }} spacing={3}>\r\n            \r\n            <MyCheckBox classes={this.state.classes} value={this.state.day_1} func={ this.changeDataCheck.bind(this, 'day_1') } label='Понедельник' />\r\n          \r\n            <MyCheckBox classes={this.state.classes} value={this.state.day_2} func={ this.changeDataCheck.bind(this, 'day_2') } label='Вторник' />\r\n          \r\n            <MyCheckBox classes={this.state.classes} value={this.state.day_3} func={ this.changeDataCheck.bind(this, 'day_3') } label='Среда' />\r\n          \r\n            <MyCheckBox classes={this.state.classes} value={this.state.day_4} func={ this.changeDataCheck.bind(this, 'day_4') } label='Четверг' />\r\n          \r\n            <MyCheckBox classes={this.state.classes} value={this.state.day_5} func={ this.changeDataCheck.bind(this, 'day_5') } label='Пятница' />\r\n          \r\n            <MyCheckBox classes={this.state.classes} value={this.state.day_6} func={ this.changeDataCheck.bind(this, 'day_6') } label='Суббота' />\r\n          \r\n            <MyCheckBox classes={this.state.classes} value={this.state.day_7} func={ this.changeDataCheck.bind(this, 'day_7') } label='Воскресенье' />\r\n           \r\n          </Grid>\r\n          \r\n          <Divider style={{ width: '100%', marginTop: 20 }} />\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            <Grid item xs={12} sm={4}>\r\n              <MySelect classes={this.state.classes} data={this.state.type_order_list} value={this.state.type_order} func={ this.changeData.bind(this, 'type_order') } label='Тип заказа' />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <MySelect classes={this.state.classes} data={this.state.where_order_list} value={this.state.where_order} func={ this.changeData.bind(this, 'where_order') } label='Где работает' />\r\n            </Grid>\r\n            { parseInt(this.state.where_order) !== 1 ? null :\r\n              <Grid item xs={12} sm={4}>\r\n                <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city} func={ this.changeData.bind(this, 'city') } label='Город' />\r\n              </Grid>\r\n            }\r\n            { parseInt(this.state.where_order) !== 2 ? null :\r\n              <Grid item xs={12} sm={4}>\r\n                <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point} func={ this.changeData.bind(this, 'point') } label='Точка' />\r\n              </Grid>\r\n            }\r\n            \r\n          </Grid>\r\n          \r\n          <Divider style={{ width: '100%', marginTop: 20 }} />\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            <Grid item xs={12} sm={4}>\r\n              <MySelect classes={this.state.classes} data={this.state.where_promo_list} value={this.state.where_promo} func={ this.changeData.bind(this, 'where_promo') } label='Что сделать с промокодом' />\r\n            </Grid>\r\n            \r\n            { parseInt(this.state.where_promo) == 1 || parseInt(this.state.where_promo) == 2 ? null :\r\n              parseInt(this.state.where_promo) == 5 ?\r\n              \r\n                <Grid item xs={12} sm={4}>\r\n                  <span>Список номеров для рассылки</span>\r\n                  <TextareaAutosize\r\n                    aria-label=\"empty textarea\"\r\n                    placeholder=\"\"\r\n                    minRows={3}\r\n                    value={this.state.numberList}\r\n                    onChange={ this.changeData.bind(this, 'numberList') }\r\n                    label=\"Куда отправить\"\r\n                    style={{ width: '100%' }}\r\n                  />\r\n                </Grid>\r\n                  :\r\n                <Grid item xs={12} sm={4}>\r\n                  <MyTextInput classes={this.state.classes} value={this.state.numberList} func={ this.changeData.bind(this, 'numberList') } label='Куда отправить' />\r\n                </Grid>\r\n            \r\n            }\r\n            \r\n            \r\n          </Grid>\r\n          \r\n          <Divider style={{ width: '100%', marginTop: 20 }} />\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            { parseInt(this.state.where_promo) !== 8 ? null :\r\n              <Grid item xs={12} sm={12}>\r\n                <span>Текст расссылки</span>\r\n                <TextareaAutosize\r\n                  aria-label=\"empty textarea\"\r\n                  placeholder=\"\"\r\n                  minRows={3}\r\n                  value={this.state.promo_prizw_vk}\r\n                  onChange={ this.changeData.bind(this, 'promo_prizw_vk') }\r\n                  style={{ width: '100%' }}\r\n                />\r\n              </Grid>\r\n            }\r\n            \r\n            { parseInt(this.state.where_promo) == 5 ?\r\n              <Grid item xs={12} sm={12}>\r\n                <MyTextInput classes={this.state.classes} value={this.state.spamNameSMS} func={ this.changeData.bind(this, 'spamNameSMS') } label='Наименование рассылки' />\r\n              </Grid>\r\n                :\r\n              null\r\n            }\r\n            \r\n            { parseInt(this.state.where_promo) == 4 || parseInt(this.state.where_promo) == 5 ?\r\n              <Grid item xs={12} sm={12}>\r\n                <MyTextInput classes={this.state.classes} value={this.state.textSMS} func={ this.changeData.bind(this, 'textSMS') } label='Текст СМС ( --promo_name-- )' />\r\n              </Grid>\r\n                :\r\n              null\r\n            }\r\n            \r\n            { parseInt(this.state.where_promo) == 7 ?\r\n              <Grid item xs={12} sm={12}>\r\n                <MyTextInput classes={this.state.classes} value={this.state.cert_text} func={ this.changeData.bind(this, 'cert_text') } label='Текст для описания сертификата' />\r\n              </Grid>\r\n                :\r\n              null\r\n            }\r\n            \r\n            <Grid item xs={12} sm={12}>\r\n              <MyCheckBox classes={this.state.classes} value={this.state.auto_text} func={ this.changeDataCheck.bind(this, 'auto_text') } label='Авто-текст' />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={12}>\r\n              <MyTextInput classes={this.state.classes} value={this.state.promo_desc_true} func={ this.changeData.bind(this, 'promo_desc_true') } label='Описание промокода после активации (Промокод дает: )' />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={12}>\r\n              <MyTextInput classes={this.state.classes} value={this.state.promo_desc_false} func={ this.changeData.bind(this, 'promo_desc_false') } label='Условие промокода, когда условия не соблюдены' />\r\n            </Grid>\r\n            \r\n          </Grid>\r\n          \r\n          \r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"end\" style={{ paddingTop: 50 }} spacing={3}>\r\n            <Button variant=\"contained\" onClick={this.save.bind(this)}>Сохранить</Button>\r\n          </Grid>\r\n          \r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nclass SiteSale2_edit_ extends React.Component {\r\n  click = false;\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      module: 'site_sale_2',\r\n      module_name: '',\r\n      is_load: false,\r\n      modalText: '',\r\n      \r\n      points: [],\r\n      point: 0,\r\n      cities: [],\r\n      city: 0,\r\n      \r\n      modalDialog: false,\r\n      modalLink: '',\r\n      \r\n      where_promo_list: [\r\n        {id: 1, name: 'Создать'},\r\n        {id: 2, name: 'Создать и показать'},\r\n        {id: 3, name: 'Отправить на почту'},\r\n        {id: 4, name: 'Отправить в смс'},\r\n        {id: 5, name: 'Рассылка смс'},\r\n        {id: 6, name: 'Отправить в ЛК (через 8)'},\r\n        {id: 7, name: 'Создать сертификат(ы)'},\r\n      ],\r\n      promo_action_list: [],\r\n      sale_list: [\r\n        {id: 1, name: 'На товары'},\r\n        {id: 2, name: 'На категории'},\r\n        {id: 3, name: 'На все меню (кроме допов и закусок)'},\r\n      ],\r\n      promo_conditions_list: [\r\n        {id: 1, name: 'В корзине есть определенные товар(ы)'},\r\n        {id: 2, name: 'В корзине набрана определенная сумма'},\r\n      ],\r\n      promo_sale_list: [],\r\n      type_sale_list: [\r\n        {id: 1, name: 'В рублях'},\r\n        {id: 2, name: 'В процентах'},\r\n      ],\r\n      date_promo_list: [\r\n        {id: 1, name: 'В определенные даты'},\r\n        {id: 2, name: '14 дней с 10:00 до 21:40'},\r\n        {id: 3, name: '14 дней с 00:00 до 23:59'},\r\n      ],\r\n      type_order_list: [\r\n        {id: 1, name: 'Все'},\r\n        {id: 2, name: 'Доставка'},\r\n        {id: 3, name: 'Самовывоз'},\r\n        {id: 4, name: 'Зал'},\r\n      ],\r\n      where_order_list: [\r\n        {id: 1, name: 'В городе'},\r\n        {id: 2, name: 'На точке'}\r\n      ],\r\n      \r\n      auto_text: false,\r\n      where_promo: 1,\r\n      promo_name: '',\r\n      generate_new: false,\r\n      count_action: 1,\r\n      promo_action: 1,\r\n      type_sale: 3,\r\n      promo_sale: 1,\r\n      sale_type: 2,\r\n      promo_conditions: 2,\r\n      \r\n      price_start: 0,\r\n      price_end: 0,\r\n      date_promo: 1,\r\n      \r\n      date_start: formatDate(new Date()),\r\n      date_end: formatDate(new Date()),\r\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\r\n      time_start: '10:00',\r\n      time_end: '21:30',\r\n      \r\n      promo_length: 5,\r\n      promo_count: 1,\r\n      \r\n      day_1: true,\r\n      day_2: true,\r\n      day_3: true,\r\n      day_4: true,\r\n      day_5: true,\r\n      day_6: true,\r\n      day_7: true,\r\n      \r\n      type_order: 1,\r\n      where_order: 1,\r\n      \r\n      numberList: '',\r\n      promo_desc_true: '',\r\n      promo_desc_false: '',\r\n      textSMS: '',\r\n      \r\n      \r\n      addItem: 1,\r\n      addItemCount: 1,\r\n      addItemPrice: 1,\r\n      addItemAllPrice: 0,\r\n      \r\n      itemsAdd: [],\r\n      itemsAddPrice: [],\r\n      items: [],\r\n      cats: [],\r\n      saleCat: [],\r\n      saleItem: [],\r\n      \r\n      priceItem: 1,\r\n      \r\n      conditionItems: [],\r\n      \r\n      testDate: []\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    \r\n    let data = {\r\n      promo_id: this.props.promoId\r\n    }\r\n    \r\n    let res = await this.getData('get_all_for_edit', data);\r\n    \r\n    let items = [];\r\n    \r\n    if( res.promo.promo_conditions_items.length > 4 ){\r\n      res.promo.promo_conditions_items = JSON.parse(res.promo.promo_conditions_items, true);\r\n      \r\n      res.promo.promo_conditions_items.map( (item) => {\r\n        let findItem = res.items.find( (it) => parseInt(it.id) == parseInt(item) );\r\n        \r\n        items.push(findItem)\r\n      } )\r\n    }\r\n    \r\n    setTimeout( () => {\r\n      \r\n      console.log( 'conditionItems', items )\r\n      console.log( 'items', res.items )\r\n      \r\n      let limDate = [];\r\n      \r\n      res.limit.map( (item) => {\r\n        limDate.push( new Date(item.date) )\r\n      } )\r\n      \r\n      this.setState({\r\n        points: res.points,\r\n        cities: res.cities,\r\n        module_name: res.module_info.name,\r\n        promo_action_list: res.promo_action_list,\r\n        promo_sale_list: res.promo_sale_list,\r\n        \r\n        date_start: res.promo.date1,\r\n        date_end: res.promo.date2,\r\n        time_start: res.promo.time1,\r\n        time_end: res.promo.time2,\r\n        rangeDate: [res.promo.date1, res.promo.date2],\r\n        \r\n        items: res.items,\r\n        cats: res.cats,\r\n        \r\n        day_1: parseInt(res.promo.d1) == 1 ? true : false,\r\n        day_2: parseInt(res.promo.d2) == 1 ? true : false,\r\n        day_3: parseInt(res.promo.d3) == 1 ? true : false,\r\n        day_4: parseInt(res.promo.d4) == 1 ? true : false,\r\n        day_5: parseInt(res.promo.d5) == 1 ? true : false,\r\n        day_6: parseInt(res.promo.d6) == 1 ? true : false,\r\n        day_7: parseInt(res.promo.d7) == 1 ? true : false,\r\n        \r\n        count_action: res.promo.count,\r\n        promo_name: res.promo.name,\r\n        \r\n        price_start: res.promo.promo_summ,\r\n        price_end: res.promo.promo_summ_to,\r\n        \r\n        conditionItems: items,\r\n        promo_conditions: items.length > 0 ? 1 : 2,\r\n        \r\n        point: res.promo.point_id,\r\n        city: res.promo.city_id,\r\n        \r\n        where_order: parseInt(res.promo.city_id) > 0 ? 1 : parseInt(res.promo.point_id) > 0 ? 2 : 1,\r\n        \r\n        type_order: res.promo.type_order,\r\n        \r\n        promo_desc_true: res.promo.coment,\r\n        promo_desc_false: res.promo.condition_text,\r\n        \r\n        promo_id: res.promo.id,\r\n        \r\n        testDate: limDate\r\n      })\r\n    }, 300 )\r\n    \r\n    \r\n    document.title = res.module_info.name;\r\n    \r\n    setTimeout( () => {\r\n      this.generateTextDescFalse();     \r\n      this.generateTextDescTrue(); \r\n    }, 300 )\r\n  }\r\n  \r\n  async save(){\r\n    \r\n    if( !this.click ){\r\n      this.click = true;  \r\n      \r\n      let conditionItems = [];\r\n      \r\n      this.state.conditionItems.map( (item) => {\r\n        conditionItems.push(item.id)\r\n      } )\r\n      \r\n      \r\n      let promo_items = [];\r\n      \r\n      \r\n      let promo_cat = [];\r\n      let dateList = [];\r\n      \r\n      this.state.testDate.map( (item) => {\r\n        dateList.push( (new Date(item).toISOString()).split('T')[0] );\r\n      } )\r\n      \r\n      dateList = dateList.join(',')\r\n      \r\n      let data = {\r\n        promo_id: this.state.promo_id,\r\n        cert_text: this.state.cert_text,\r\n        addr: this.state.numberList,\r\n        where_promo: this.state.where_promo,\r\n        promo_count: this.state.promo_count,\r\n        promo_len: this.state.promo_length,\r\n        promo_name: this.state.promo_name,\r\n        generate: this.state.generate_new ? 1 : 0,\r\n        promo_in_count: this.state.count_action,\r\n        promo_action: this.state.promo_action,\r\n        promo_type_sale: this.state.type_sale,\r\n        promo_type: this.state.sale_type,\r\n        promo_conditions: this.state.promo_conditions,\r\n        \r\n        promo_summ: this.state.price_start,\r\n        promo_summ_to: this.state.price_end,\r\n        promo_when: this.state.date_promo,\r\n        \r\n        date_start: this.state.date_start,\r\n        date_end: this.state.date_end,\r\n        time_start: this.state.time_start,\r\n        time_end: this.state.time_end,\r\n        \r\n        day_1: this.state.day_1 ? 1 : 0,\r\n        day_2: this.state.day_2 ? 1 : 0,\r\n        day_3: this.state.day_3 ? 1 : 0,\r\n        day_4: this.state.day_4 ? 1 : 0,\r\n        day_5: this.state.day_5 ? 1 : 0,\r\n        day_6: this.state.day_6 ? 1 : 0,\r\n        day_7: this.state.day_7 ? 1 : 0,\r\n        \r\n        promo_type_order: this.state.type_order,\r\n        promo_where: this.state.where_order,\r\n        \r\n        numberList: this.state.numberList,\r\n        \r\n        promo_city: this.state.city,\r\n        promo_point: this.state.point,\r\n        \r\n        about_promo_text: this.state.promo_desc_true,\r\n        condition_promo_text: this.state.promo_desc_false,\r\n        textSMS: this.state.textSMS,\r\n        \r\n        \r\n        promo_items: JSON.stringify(promo_items),\r\n        promo_cat: JSON.stringify(promo_cat),\r\n        promo_items_add: JSON.stringify(this.state.itemsAdd),\r\n        promo_items_sale: JSON.stringify(this.state.itemsAddPrice),\r\n        promo_conditions_items: JSON.stringify(conditionItems),\r\n        \r\n        date_between: dateList\r\n      };\r\n      \r\n      let res = await this.getData('save_edit_promo', data);\r\n      \r\n      console.log( res )\r\n      \r\n      this.setState({\r\n        modalDialog: true,\r\n        modalText: res.text\r\n      })\r\n      \r\n      setTimeout( () => {\r\n        this.click = false;    \r\n      }, 300 )\r\n    }\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n        \r\n        this.click = false;    \r\n      }, 300 )\r\n    });\r\n  }\r\n  \r\n  changeData(type, event){\r\n    this.setState({\r\n      [ type ]: event.target.value\r\n    })\r\n    \r\n    if( type == 'date_promo' && (event.target.value == 2 || event.target.value == 3) ){\r\n      let thisDay = new Date();\r\n      let nextDay = new Date();\r\n      nextDay.setDate(nextDay.getDate() + 14);\r\n      \r\n      this.setState({\r\n        rangeDate: [formatDate(thisDay), formatDate(nextDay)],\r\n        date_start: formatDate(thisDay),\r\n        date_end: formatDate(nextDay),\r\n        \r\n        time_start: event.target.value == 2 ? '10:00' : '00:00',\r\n        time_end: event.target.value == 2 ? '21:40' : '23:59',\r\n      })\r\n    }\r\n    \r\n    setTimeout( () => {\r\n      this.generateTextDescFalse();   \r\n      this.generateTextDescTrue();   \r\n    }, 300 )\r\n  }\r\n  \r\n  changeDataCheck(type, event){\r\n    this.setState({\r\n      [ type ]: event.target.checked\r\n    })\r\n    \r\n    setTimeout( () => {\r\n      this.generateTextDescFalse();    \r\n      this.generateTextDescTrue();  \r\n    }, 300 )\r\n  }\r\n  \r\n  changeDateRange(data){\r\n    let dateStart = data[0] ? formatDate(data[0]) : '';\r\n    let dateEnd = data[1] ? formatDate(data[1]) : '';\r\n    \r\n    this.setState({\r\n      rangeDate: [dateStart, dateEnd],\r\n      date_start: dateStart,\r\n      date_end: dateEnd,\r\n    })\r\n    \r\n    setTimeout( () => {\r\n      this.generateTextDescFalse();  \r\n      this.generateTextDescTrue();    \r\n    }, 300 )\r\n  }\r\n  \r\n  changeDataData(type, data){\r\n    this.setState({\r\n      [ type ]: data\r\n    });\r\n    \r\n    setTimeout( () => {\r\n      this.generateTextDescFalse();  \r\n      this.generateTextDescTrue();    \r\n    }, 300 )\r\n  }\r\n  \r\n  generateTextDescTrue(){\r\n    \r\n    if( !this.state.auto_text ){\r\n      return ;\r\n    }\r\n    \r\n    let promo_action = this.state.promo_action;\r\n    let textTrue = '';\r\n    \r\n    if(parseInt(promo_action) == 1){//скидка\r\n      var promo_type_sale = this.state.type_sale,\r\n        count_promo = this.state.promo_sale_list.find( (item) => parseInt(item.id) == parseInt(this.state.promo_sale) )['name'],//размер скидки\r\n        promo_type = this.state.sale_type; //1 - рубли 2 %\r\n\r\n      if(parseInt(promo_type_sale) == 1){//товары\r\n        var promo_items = this.state.saleItem,\r\n          items = '';\r\n\r\n        promo_items.map(function(item, key){\r\n          items += item.name+', ';\r\n        })\r\n\r\n        items = items.substring(0, items.length - 2);\r\n\r\n        textTrue = 'скидку на '+items+' в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\r\n      }\t\r\n      if(parseInt(promo_type_sale) == 2){//категории\r\n        var promo_items = this.state.saleCat,\r\n          items = '';\r\n\r\n        promo_items.map(function(item, key){\r\n          items += item.name+', ';\r\n        })\r\n\r\n        items = items.substring(0, items.length - 2);\r\n\r\n        textTrue = 'скидку на '+items+' в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\r\n      }\r\n      if(parseInt(promo_type_sale) == 3){//все\r\n        textTrue = 'скидку на всё меню, кроме напитков, соусов, приправ и палочек, в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\r\n      }\r\n    }\r\n    \r\n    if(parseInt(promo_action) == 2){//добавляет товар\r\n      var itemText = '';\r\n\r\n      this.state.itemsAdd.map( (item, key) => {\r\n        if(parseInt(item['price']) == 0){\r\n          itemText += 'бесплатную '+item['name']+' '+item['count']+'шт. '+'за '+item['price']+'руб., ';\r\n        }else{\r\n          itemText += item['name']+' '+item['count']+'шт. '+'за '+item['price']+'руб., ';\r\n        }\r\n      } )\r\n      \r\n      itemText = itemText.substring(0, item.length - 2);\r\n\r\n      textTrue = this.state.itemsAdd.length == 1 ? 'позицию '+itemText : 'позиции '+itemText;\r\n    }\t\r\n    \r\n    if(parseInt(promo_action) == 3){//товар за цену\r\n      var itemText = '';\r\n\r\n      this.state.promo_items_sale.map( (item, key) => {\r\n        itemText += item['name']+' по '+item['price']+'руб., ';\r\n      } )\r\n      \r\n      itemText = itemText.substring(0, itemText.length - 2);\r\n\r\n      textTrue = this.state.promo_items_sale.length-1 == 1 ? 'позицию '+itemText : 'позиции '+itemText;\r\n    }\r\n    \r\n    let textSMS = 'Промокод --promo_name--, действует до '+formatDateName(this.state.date_end)+'. Заказывай на jacofood.ru!'\r\n    \r\n    this.setState({\r\n      promo_desc_true: textTrue,\r\n      textSMS: textSMS,\r\n      cert_text: textTrue\r\n    })\r\n  }\r\n  \r\n  generateTextDescFalse(){\r\n    \r\n    if( !this.state.auto_text ){\r\n      return ;\r\n    }\r\n    \r\n    var dop_text = '';\r\n\t\t\r\n\t\tif( parseInt(this.state.where_order) == 1 ){\r\n\t\t\t//город\r\n\t\t\tif( parseInt(this.state.city) != 0 ){\r\n        let city_name = this.state.cities.find( (item) => parseInt(item.id) == parseInt(this.state.city) )['name'];\r\n        \r\n\t\t\t\tdop_text = ' в г. '+city_name;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif( parseInt(this.state.where_order) == 2 ){\r\n\t\t\t//точка\r\n\t\t\tif( parseInt(this.state.point) != 0 ){\r\n        let point_name = this.state.points.find( (item) => parseInt(item.id) == parseInt(this.state.point) )['name'];\r\n        \r\n\t\t\t\tdop_text = ' в г. '+point_name;\r\n\t\t\t}\r\n\t\t}\r\n    \r\n    let dateStart = formatDateDot(this.state.date_start);\r\n    let dateEnd = formatDateDot(this.state.date_end);\r\n    \r\n    let textFalse = 'Промокод действует c '+dateStart+' до '+dateEnd+' с '+this.state.time_start+' до '+this.state.time_end+dop_text;\r\n    \r\n    this.setState({\r\n      promo_desc_false: textFalse\r\n    })\r\n\t}\r\n  \r\n  addItemAdd(){\r\n    let thisItems = this.state.itemsAdd;\r\n    \r\n    let check = thisItems.find( (item) => parseInt(item.item_id) == parseInt(this.state.addItem) );\r\n    \r\n    if( !check ){\r\n      let thisItem = this.state.items.find( (item) => parseInt(item.id) == parseInt(this.state.addItem) );\r\n      \r\n      thisItems.push({\r\n        item_id: this.state.addItem,\r\n        name: thisItem.name,\r\n        count: this.state.addItemCount,\r\n        price: this.state.addItemPrice,\r\n      })\r\n      \r\n      let addItemAllPrice = 0;\r\n      \r\n      thisItems.map( (item) => {\r\n        addItemAllPrice += parseInt(item.price)\r\n      } )\r\n      \r\n      this.setState({\r\n        itemsAdd: thisItems,\r\n        addItemAllPrice: addItemAllPrice\r\n      })\r\n    }\r\n  }\r\n  \r\n  priceItemAdd(){\r\n    let thisItems = this.state.itemsAddPrice;\r\n    \r\n    let check = thisItems.find( (item) => parseInt(item.item_id) == parseInt(this.state.priceItem) );\r\n    \r\n    if( !check ){\r\n      let thisItem = this.state.items.find( (item) => parseInt(item.id) == parseInt(this.state.priceItem) );\r\n      \r\n      thisItems.push({\r\n        item_id: this.state.priceItem,\r\n        name: thisItem.name,\r\n        price: this.state.addItemPrice,\r\n      })\r\n      \r\n      this.setState({\r\n        itemsAddPrice: thisItems\r\n      })\r\n    }\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Dialog\r\n          open={this.state.modalDialog}\r\n          onClose={ () => { this.setState({ modalDialog: false, modalLink: '' }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">Результат операции</DialogTitle>\r\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\r\n            <Typography>{this.state.modalText}</Typography>\r\n            <br />\r\n            { this.state.modalLink == '' ? null :\r\n              <a href={this.state.modalLink} style={{ color: 'red' }}>Скачать</a>\r\n            }\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color=\"primary\" onClick={ () => { this.setState({ modalDialog: false }) } }>Хорошо</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        <Grid container>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            <Grid item xs={12} sm={3}>\r\n              <Typography>Промокод: {this.state.promo_name}</Typography>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={3}>\r\n              <MyTextInput classes={this.state.classes} value={this.state.count_action} func={ this.changeData.bind(this, 'count_action') } label='Количество активаций' />\r\n            </Grid>\r\n            \r\n          </Grid>\r\n          \r\n          <Divider style={{ width: '100%', marginTop: 20 }} />\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            <Grid item xs={12} sm={4}>\r\n              <MySelect classes={this.state.classes} data={this.state.promo_conditions_list} value={this.state.promo_conditions} func={ this.changeData.bind(this, 'promo_conditions') } label='Условие' />\r\n            </Grid>\r\n            \r\n            { parseInt(this.state.promo_conditions) !== 1 ? null :\r\n              <>\r\n                <Grid item xs={12} sm={8}>\r\n                  <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.conditionItems} func={ (event, data) => { this.changeDataData('conditionItems', data) } } multiple={true} label='Товары' />\r\n                </Grid>\r\n              </>\r\n            }\r\n            \r\n            { parseInt(this.state.promo_conditions) !== 2 ? null :\r\n              <>\r\n                <Grid item xs={12} sm={4}>\r\n                  <MyTextInput classes={this.state.classes} value={this.state.price_start} func={ this.changeData.bind(this, 'price_start') } label='Сумма от' />\r\n                </Grid>\r\n              \r\n                <Grid item xs={12} sm={4}>\r\n                  <MyTextInput classes={this.state.classes} value={this.state.price_end} func={ this.changeData.bind(this, 'price_end') } label='Сумма до' />\r\n                </Grid>\r\n              </>\r\n            }\r\n            \r\n          </Grid>\r\n          \r\n          <Divider style={{ width: '100%', marginTop: 20 }} />\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            <Grid item xs={12} sm={3}>\r\n              <MySelect classes={this.state.classes} data={this.state.date_promo_list} value={this.state.date_promo} func={ this.changeData.bind(this, 'date_promo') } label='Когда работает промокод' />\r\n            </Grid>\r\n            \r\n          </Grid>\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            <Grid item xs={12} sm={6} className=\"MyDaterange\">\r\n              <MyDaterange startText=\"Дата от\" endText=\"Дата до\" value={this.state.rangeDate} func={ this.changeDateRange.bind(this) } />\r\n            </Grid>\r\n           \r\n            <Grid item xs={12} sm={3}>\r\n              <MyTimePicker classes={this.state.classes} label=\"Время от\" value={this.state.time_start} func={ this.changeData.bind(this, 'time_start') } />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={3}>\r\n              <MyTimePicker classes={this.state.classes} label=\"Время до\" value={this.state.time_end} func={ this.changeData.bind(this, 'time_end') } />\r\n            </Grid>\r\n              \r\n          </Grid>\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            <Grid item xs={12} sm={12}>\r\n              <MyDatePicker multiple={false} label={'Кроме дат'} value={this.state.testDate} func={ this.changeDataData.bind(this, 'testDate') } />\r\n            </Grid>\r\n          </Grid>\r\n            \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ marginTop: 20 }} spacing={3}>\r\n            \r\n            <MyCheckBox classes={this.state.classes} value={this.state.day_1} func={ this.changeDataCheck.bind(this, 'day_1') } label='Понедельник' />\r\n          \r\n            <MyCheckBox classes={this.state.classes} value={this.state.day_2} func={ this.changeDataCheck.bind(this, 'day_2') } label='Вторник' />\r\n          \r\n            <MyCheckBox classes={this.state.classes} value={this.state.day_3} func={ this.changeDataCheck.bind(this, 'day_3') } label='Среда' />\r\n          \r\n            <MyCheckBox classes={this.state.classes} value={this.state.day_4} func={ this.changeDataCheck.bind(this, 'day_4') } label='Четверг' />\r\n          \r\n            <MyCheckBox classes={this.state.classes} value={this.state.day_5} func={ this.changeDataCheck.bind(this, 'day_5') } label='Пятница' />\r\n          \r\n            <MyCheckBox classes={this.state.classes} value={this.state.day_6} func={ this.changeDataCheck.bind(this, 'day_6') } label='Суббота' />\r\n          \r\n            <MyCheckBox classes={this.state.classes} value={this.state.day_7} func={ this.changeDataCheck.bind(this, 'day_7') } label='Воскресенье' />\r\n           \r\n          </Grid>\r\n          \r\n          <Divider style={{ width: '100%', marginTop: 20 }} />\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            <Grid item xs={12} sm={4}>\r\n              <MySelect classes={this.state.classes} data={this.state.type_order_list} value={this.state.type_order} func={ this.changeData.bind(this, 'type_order') } label='Тип заказа' />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <MySelect classes={this.state.classes} data={this.state.where_order_list} value={this.state.where_order} func={ this.changeData.bind(this, 'where_order') } label='Где работает' />\r\n            </Grid>\r\n            { parseInt(this.state.where_order) !== 1 ? null :\r\n              <Grid item xs={12} sm={4}>\r\n                <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city} func={ this.changeData.bind(this, 'city') } label='Город' />\r\n              </Grid>\r\n            }\r\n            { parseInt(this.state.where_order) !== 2 ? null :\r\n              <Grid item xs={12} sm={4}>\r\n                <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point} func={ this.changeData.bind(this, 'point') } label='Точка' />\r\n              </Grid>\r\n            }\r\n            \r\n          </Grid>\r\n          \r\n          <Divider style={{ width: '100%', marginTop: 20 }} />\r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            <Grid item xs={12} sm={12}>\r\n              <MyTextInput classes={this.state.classes} value={this.state.promo_desc_true} func={ this.changeData.bind(this, 'promo_desc_true') } label='Описание промокода после активации (Промокод дает: )' />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={12}>\r\n              <MyTextInput classes={this.state.classes} value={this.state.promo_desc_false} func={ this.changeData.bind(this, 'promo_desc_false') } label='Условие промокода, когда условия не соблюдены' />\r\n            </Grid>\r\n            \r\n          </Grid>\r\n          \r\n          \r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"end\" style={{ paddingTop: 50 }} spacing={3}>\r\n            <Button variant=\"contained\" onClick={this.save.bind(this)}>Сохранить</Button>\r\n          </Grid>\r\n          \r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass SiteSale2_ extends React.Component {\r\n  click = false;\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      module: 'site_sale_2',\r\n      module_name: '',\r\n      is_load: false,\r\n      modalText: '',\r\n      \r\n      modalDialog: false,\r\n      modalLink: '',\r\n      \r\n      city_list: [],\r\n      city_id: 0,\r\n      promoName: '',\r\n      \r\n      findPromoList: []\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    \r\n    let data = await this.getData('get_all');\r\n    \r\n    console.log( data )\r\n    \r\n    this.setState({\r\n      module_name: data.module_info.name,\r\n      city_list: data.all_city_list\r\n    })\r\n    \r\n    document.title = data.module_info.name;\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n    });\r\n  }\r\n  \r\n  async showPromoList(){\r\n    let data = {\r\n      city_id: this.state.city_id,\r\n      promo_name: this.state.promoName\r\n    };\r\n    \r\n    let res = await this.getData('search_promo', data);\r\n    \r\n    console.log( res )\r\n    \r\n    this.setState({\r\n      findPromoList: res\r\n    })\r\n  }\r\n  \r\n  async delPromo(promo_id){\r\n    let check = confirm(\"Удалить промокод ?\");\r\n    \r\n    if( check ){\r\n      let data = {\r\n        promo_id: promo_id\r\n      };\r\n      \r\n      let res = await this.getData('remove_promo', data);\r\n      \r\n      setTimeout( () => {\r\n        this.showPromoList();\r\n      }, 300 )\r\n    }\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Dialog\r\n          open={this.state.modalDialog}\r\n          onClose={ () => { this.setState({ modalDialog: false, modalLink: '' }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">Результат операции</DialogTitle>\r\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\r\n            <Typography>{this.state.modalText}</Typography>\r\n            <br />\r\n            { this.state.modalLink == '' ? null :\r\n              <a href={this.state.modalLink} style={{ color: 'red' }}>Скачать</a>\r\n            }\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color=\"primary\" onClick={ () => { this.setState({ modalDialog: false }) } }>Хорошо</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        <Grid container>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          \r\n          \r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            <Grid item xs={12}>\r\n              \r\n              <Link to={\"/site_sale_2/new\"} style={{ zIndex: 10 }}>\r\n                <Button variant=\"contained\">Новый промокод</Button>\r\n              </Link>\r\n              \r\n              <Link to={\"/site_sale_2/stat\"} style={{ zIndex: 10, marginLeft: 20 }}>\r\n                <Button variant=\"contained\">Статистика</Button>\r\n              </Link>\r\n              \r\n            </Grid>\r\n            \r\n            \r\n            \r\n            <Grid item xs={12} sm={4}>\r\n              <MySelect classes={this.state.classes} data={this.state.city_list} value={this.state.city_id} func={ (event) => { this.setState({city_id: event.target.value}) } } label='Город' />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={4}>\r\n              <MyTextInput classes={this.state.classes} value={this.state.promoName} func={ (event) => { this.setState({promoName: event.target.value}) } } label='Промокод' />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={4}>\r\n              <Button variant=\"contained\" onClick={this.showPromoList.bind(this)}>Найти</Button>\r\n            </Grid>\r\n            \r\n          </Grid>  \r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Промокод</TableCell>\r\n                    <TableCell>Город</TableCell>\r\n                    <TableCell>Было кол-во</TableCell>\r\n                    <TableCell>Ост. кол-во</TableCell>\r\n                    <TableCell>Дата окончания</TableCell>\r\n                    <TableCell>Описание</TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  \r\n                  { this.state.findPromoList.map( (item, key) =>\r\n                    <TableRow key={key}>\r\n                      <TableCell>\r\n                        <Link to={\"/site_sale_2/edit/\"+item.id} style={{ zIndex: 10 }}>\r\n                          {item.name}    \r\n                        </Link>\r\n                      </TableCell>\r\n                      <TableCell>{ parseInt(item.city_id) == 0 ? 'Все города' : item.city_name }</TableCell>\r\n                      <TableCell>{item.def_count}</TableCell>\r\n                      <TableCell>{item.count}</TableCell>\r\n                      <TableCell>{item.date2}</TableCell>\r\n                      <TableCell>{item.coment}</TableCell>\r\n                      <TableCell> <CloseIcon style={{ cursor: 'pointer' }} onClick={this.delPromo.bind(this, item.id)} /> </TableCell>\r\n                    </TableRow>\r\n                  ) }\r\n                  \r\n                </TableBody>\r\n              </Table>\r\n            </Grid>  \r\n          </Grid>\r\n          \r\n          \r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nclass SiteSale2_Stat_ extends React.Component {\r\n  click = false;\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      module: 'site_sale_2',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      spam_list: [],\r\n      spam_id: 0,\r\n      findPromoList: [],\r\n      \r\n      spam_list_data: [],\r\n      spam_list_data_stat: {\r\n        true: 0,\r\n        all: 0,\r\n        percent: 0\r\n      },\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    \r\n    let data = await this.getData('get_spam_list');\r\n    \r\n    console.log( data )\r\n    \r\n    this.setState({\r\n      module_name: data.module_info.name,\r\n      spam_list: data.spam_list\r\n    })\r\n    \r\n    document.title = data.module_info.name;\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n    });\r\n  }\r\n  \r\n  async show(){\r\n    let data = {\r\n      spam_id: this.state.spam_id\r\n    }\r\n    \r\n    let res = await this.getData('get_spam_data', data);\r\n    \r\n    console.log( res )\r\n    \r\n    this.setState({\r\n      spam_list_data: res.spam_list,\r\n      spam_list_data_stat: res.stat\r\n    })\r\n  }\r\n  \r\n  changeSpam(event){\r\n    this.setState({spam_id: event.target.value})\r\n    \r\n    setTimeout( () => {\r\n      this.show()\r\n    }, 300 )\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Grid container>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          \r\n          \r\n          \r\n          <Grid container direction=\"row\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            <Grid item xs={12} sm={4}>\r\n              <MySelect classes={this.state.classes} data={this.state.spam_list} value={this.state.spam_id} func={ this.changeSpam.bind(this) } label='Рассылка' />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={4}>\r\n              <Button variant=\"contained\" onClick={this.show.bind(this)}>Обновить</Button>\r\n            </Grid>\r\n            \r\n          </Grid>  \r\n          \r\n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\r\n            \r\n            <Grid item xs={6}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Всего</TableCell>\r\n                    <TableCell>Использовали</TableCell>\r\n                    <TableCell>%</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  \r\n                  <TableRow>\r\n                    <TableCell>{this.state.spam_list_data_stat.all}</TableCell>\r\n                    <TableCell>{this.state.spam_list_data_stat.true}</TableCell>\r\n                    <TableCell>{this.state.spam_list_data_stat.percent}</TableCell>\r\n                  </TableRow>\r\n                  \r\n                </TableBody>\r\n              </Table>\r\n            </Grid>  \r\n            \r\n            <Grid item xs={6}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>#</TableCell>\r\n                    <TableCell>Номер</TableCell>\r\n                    <TableCell>Ост активаций</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  \r\n                  { this.state.spam_list_data.map( (item, key) =>\r\n                    <TableRow key={key}>\r\n                      <TableCell>{key+1}</TableCell>\r\n                      <TableCell>{item.number}</TableCell>\r\n                      <TableCell>{item.count}</TableCell>\r\n                      \r\n                    </TableRow>\r\n                  ) }\r\n                  \r\n                </TableBody>\r\n              </Table>\r\n            </Grid>  \r\n          </Grid>\r\n          \r\n          \r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function SiteSale2_New () {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  \r\n  return (\r\n    <SiteSale2_new_ classes={classes} history={history} />\r\n  );\r\n}\r\n\r\nexport function SiteSale2_Edit () {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  \r\n  let { promoId } = useParams();\r\n  \r\n  return (\r\n    <SiteSale2_edit_ promoId={promoId} classes={classes} history={history} />\r\n  );\r\n}\r\n\r\nexport function SiteSale2 () {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  \r\n  return (\r\n    <SiteSale2_ classes={classes} history={history} />\r\n  );\r\n}\r\n\r\nexport function SiteSale2_Stat () {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  \r\n  return (\r\n    <SiteSale2_Stat_ classes={classes} history={history} />\r\n  );\r\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { MyAutocomplite } from '../../stores/elements';\r\n\r\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst dynamicCellStyle = params => {\r\n  if( params.colDef.headerName == 'Цена' ){\r\n    return { borderRight: '1px solid #bababa' };\r\n  }\r\n  return null;\r\n};\r\n\r\nclass Tender_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      module: 'tender',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      modalDialog: false,\r\n      \r\n      testTable: [],\r\n      vendors: [],\r\n      myVendors: [],\r\n      showVendors: [],\r\n      \r\n      params_api: null,\r\n      params_columnApi: null\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    let data = await this.getData('get_all');\r\n    \r\n    let table = [];\r\n    \r\n    data.items.map( (main_cat, k1) => {\r\n      \r\n      table.push({\r\n        section: 'big-title',\r\n        item: main_cat.name\r\n      })\r\n      \r\n      main_cat.cats.map( (cat, k2) => {\r\n        table.push({\r\n          section: 'big-title',\r\n          item: cat.name\r\n        })\r\n        \r\n        cat.items.map( (item, k3) => {\r\n          let tableItem = {};\r\n          \r\n          data['vendors'].map( (it, k4) => {\r\n            \r\n            let item_price = data.vendor_price.find( (item_price) => parseInt(item_price.vendor_id) == parseInt(it['id']) && parseInt(item_price.item_id) == parseInt(item['id']) );\r\n            \r\n            \r\n            if( item_price ){\r\n              tableItem[ 'vend_price_'+it['id'] ] = item_price['price'];  \r\n              tableItem[ 'vend_city_'+it['id'] ] = 'тлт';\r\n            }else{\r\n              tableItem[ 'vend_price_'+it['id'] ] = '';  \r\n              tableItem[ 'vend_city_'+it['id'] ] = '';\r\n            }\r\n            \r\n          } )\r\n          tableItem.item = item.name;\r\n          tableItem.section = 'last';\r\n          \r\n          let item_ras = data.ras.find( (item_ras) => parseInt(item_ras.item_id) == parseInt(item['id']) );\r\n          \r\n          if( item_ras ){\r\n            tableItem.ras = item_ras.count_pf;\r\n          }else{\r\n            tableItem.ras = '';\r\n          }\r\n          \r\n          table.push(tableItem)\r\n        } )\r\n      } )\r\n    } )\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    this.setState({\r\n      module_name: data.module_info.name,\r\n      testTable: table,\r\n      vendors: data['vendors'],\r\n      showVendors: data['vendors']\r\n    })\r\n    \r\n    document.title = data.module_info.name;\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n      this.setState({\r\n        is_load: false\r\n      })\r\n    });\r\n  }\r\n  \r\n  onCellClicked(event){\r\n    console.log( event.data );\r\n    console.log( event.colDef.field );\r\n  }\r\n  \r\n  onGridReady(params){\r\n    this.setState({\r\n      params_api: params.api,\r\n      params_columnApi: params.columnApi\r\n    });\r\n  }\r\n  \r\n  async show(){\r\n    let data = {\r\n      vendors: this.state.myVendors\r\n    };\r\n    \r\n    let res = await this.getData('get_data', data);\r\n    \r\n    let table = [];\r\n    \r\n    res.items.map( (main_cat, k1) => {\r\n      \r\n      table.push({\r\n        section: 'big-title',\r\n        item: main_cat.name\r\n      })\r\n      \r\n      main_cat.cats.map( (cat, k2) => {\r\n        table.push({\r\n          section: 'big-title',\r\n          item: cat.name\r\n        })\r\n        \r\n        cat.items.map( (item, k3) => {\r\n          let tableItem = {};\r\n          \r\n          res['vendors'].map( (it, k4) => {\r\n            \r\n            let item_price = res.vendor_price.find( (item_price) => parseInt(item_price.vendor_id) == parseInt(it['id']) && parseInt(item_price.item_id) == parseInt(item['id']) )\r\n            \r\n            if( item_price ){\r\n              tableItem[ 'vend_price_'+it['id'] ] = item_price['price'];  \r\n              tableItem[ 'vend_city_'+it['id'] ] = 'тлт';\r\n            }else{\r\n              tableItem[ 'vend_price_'+it['id'] ] = '';  \r\n              tableItem[ 'vend_city_'+it['id'] ] = '';\r\n            }\r\n            \r\n          } )\r\n          tableItem.item = item.name;\r\n          tableItem.section = 'last';\r\n          \r\n          let item_ras = res.ras.find( (item_ras) => parseInt(item_ras.item_id) == parseInt(item['id']) );\r\n          \r\n          if( item_ras ){\r\n            tableItem.ras = item_ras.count_pf;\r\n          }else{\r\n            tableItem.ras = '';\r\n          }\r\n          \r\n          table.push(tableItem)\r\n        } )\r\n      } )\r\n    } )\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    this.setState({\r\n      testTable: table,\r\n      showVendors: res['vendors']\r\n    })\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Dialog\r\n          open={this.state.modalDialog}\r\n          onClose={ () => { this.setState({ modalDialog: false }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">Новая категория</DialogTitle>\r\n          <DialogContent>\r\n            \r\n            \r\n            \r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button  color=\"primary\">Сохранить</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={12}>\r\n            <MyAutocomplite data={this.state.vendors} multiple={true} value={this.state.myVendors} func={ (event, val) => { this.setState({ myVendors: val }) } } label='Поставщики' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Button variant=\"contained\" onClick={this.show.bind(this)}>Показать</Button>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <div className=\"ag-theme-alpine\" style={{height: 600, width: '100%'}}>\r\n              <AgGridReact\r\n                  onGridReady={this.onGridReady.bind(this)}\r\n                  onCellClicked={this.onCellClicked}\r\n                  rowData={ this.state.testTable }\r\n                  \r\n                  >\r\n                  <AgGridColumn field=\"ras\" width={120} pinned=\"left\"></AgGridColumn>\r\n                  <AgGridColumn field=\"item\" width={300} pinned=\"left\" cellClassRules={{'cell-span': \"data.section==='big-title'\"}}></AgGridColumn>\r\n                  <AgGridColumn hide={true}></AgGridColumn>\r\n                    \r\n                  { this.state.showVendors.map( (item, key) => \r\n                    <AgGridColumn key={key} headerName={item.name} resizable={true} width={180}>\r\n                      <AgGridColumn field={'vend_city_'+item.id} headerName={'Город'} resizable={true} width={90}></AgGridColumn>\r\n                      <AgGridColumn field={'vend_price_'+item.id} headerName={'Цена'} resizable={true} width={90} cellStyle={dynamicCellStyle}></AgGridColumn>\r\n                    </AgGridColumn>\r\n                  ) }\r\n                  \r\n                  \r\n              </AgGridReact>\r\n            </div>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={12}>\r\n          \r\n          </Grid>    \r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function Tender () {\r\n  let history = useHistory();\r\n  \r\n  return (\r\n    <Tender_ history={history} />\r\n  );\r\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport { createTheme } from '@mui/material/styles';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { MySelect, MyCheckBox, MyTextInput } from '../../stores/elements';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#c03',\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  formControl: {\r\n    //margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  tableCel: {\r\n    textAlign: 'center',\r\n    borderRight: '1px solid #e5e5e5',\r\n    padding: 15,\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: \"#e5e5e5\",\r\n    },\r\n  },\r\n  tableCelHead: {\r\n    textAlign: 'center',\r\n    padding: 15\r\n  },\r\n  customCel: {\r\n    backgroundColor: \"#bababa\",\r\n    textAlign: 'center',\r\n    borderRight: '1px solid #e5e5e5',\r\n    padding: 15,\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: \"#e5e5e5\",\r\n    },\r\n  },\r\n  timePicker: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nclass VendorItemPrice_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      module: 'vendor_item_price',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      modalDialog: false,\r\n      \r\n      vendors: [],\r\n      vendor: 0,\r\n      \r\n      items: [],\r\n      \r\n      cities: [],\r\n      city: -1,\r\n      allCity: false,\r\n      isPrioriti: false\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    \r\n    let data = await this.getData('get_all');\r\n    \r\n    this.setState({\r\n      module_name: data.module_info.name,\r\n      cities: data.cities\r\n    })\r\n    \r\n    document.title = data.module_info.name;\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      console.log( err )\r\n    });\r\n  }\r\n   \r\n  async changeCity(event){\r\n    let data = {\r\n      city: event.target.value\r\n    }\r\n    \r\n    let res = await this.getData('get_vendors', data);\r\n    \r\n    this.setState({\r\n      vendors: res,\r\n      city: event.target.value,\r\n      vendor: 0,\r\n      items: []\r\n    })\r\n  }\r\n  \r\n  async changeVendor(event){\r\n    let data = {\r\n      city: this.state.city,\r\n      vendor_id: event.target.value,\r\n    }\r\n    \r\n    let res = await this.getData('get_vendor_items', data);\r\n    \r\n    this.setState({\r\n      items: res,\r\n      vendor: event.target.value,\r\n    })\r\n  }\r\n  \r\n  update(item_id, data, event){\r\n    let this_items = this.state.items;\r\n    \r\n    \r\n    \r\n    this_items.map( (item, key) => {\r\n      if( parseInt(item.item_id) == parseInt(item_id) ){\r\n        this_items[key][data] = event.target.value;\r\n        \r\n        this_items[key]['price'] = (parseFloat(this_items[key]['full_price']) / parseFloat(this_items[key]['rec_pq'])).toFixed(2);\r\n      }\r\n    } )\r\n    \r\n    this.setState({\r\n      items: this_items\r\n    })\r\n  }\r\n  \r\n  async save(){\r\n    let data = {\r\n      vendor_id: this.state.vendor,\r\n      items: this.state.items,\r\n      city_id: this.state.city,\r\n      all_city: this.state.allCity === true ? 1 : 0,\r\n      is_prioriti: this.state.isPrioriti === true ? 1 : 0,\r\n    }\r\n    \r\n    if( data.all_city == 1 ){\r\n      if( confirm(\"Точно сохранить на все города поставщика ?\") ){\r\n        let res = await this.getData('save_price', data);\r\n      }\r\n    }else{\r\n      let res = await this.getData('save_price', data);\r\n    }\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Dialog\r\n          open={this.state.modalDialog}\r\n          onClose={ () => { this.setState({ modalDialog: false }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              \r\n              \r\n              \r\n              \r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color=\"primary\">Сохранить</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={3}>\r\n            <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city} func={ this.changeCity.bind(this) } label='Город' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <MySelect classes={this.state.classes} data={this.state.vendors} value={this.state.vendor} func={ this.changeVendor.bind(this) } label='Поставщик' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <MyCheckBox classes={this.state.classes} value={this.state.allCity} func={ (event) => { this.setState({ allCity: event.target.checked }) } } label='На все города поставщика' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <MyCheckBox classes={this.state.classes} value={this.state.isPrioriti} func={ (event) => { this.setState({ isPrioriti: event.target.checked }) } } label='Приоритетный постащик' />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Button onClick={this.save.bind(this)} variant=\"contained\">Сохранить</Button>\r\n          </Grid>\r\n          \r\n          \r\n          <Grid item xs={12}>\r\n              \r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Позиция</TableCell>\r\n                    <TableCell></TableCell>\r\n                    <TableCell>Комментарий</TableCell>\r\n                    <TableCell>Цена за упаковку</TableCell>\r\n                    <TableCell>Объем упаковки</TableCell>\r\n                    <TableCell>Цена за 1 ед.</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  { this.state.items.map( (item, key) => \r\n                    <TableRow key={key}>\r\n                      <TableCell>{item.name}</TableCell>\r\n                      <TableCell>{item.name_for_vendor}</TableCell>\r\n                      <TableCell>\r\n                        <MyTextInput label=\"\" value={item.comment} func={ this.update.bind(this, item.item_id, 'comment') } />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <MyTextInput label=\"\" value={item.full_price} func={ this.update.bind(this, item.item_id, 'full_price') } />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <MySelect classes={this.state.classes} data={item.pqs} value={item.rec_pq} func={ this.update.bind(this, item.item_id, 'rec_pq') } label='' />\r\n                      </TableCell>\r\n                      <TableCell>{item.price} / {item.ei_name}</TableCell>\r\n                    </TableRow>\r\n                  ) }\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            \r\n          </Grid>\r\n            \r\n          \r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function VendorItemPrice () {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  \r\n  return (\r\n    <VendorItemPrice_ classes={classes} history={history} />\r\n  );\r\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport { createTheme } from '@mui/material/styles';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport DirectionsCarIcon from '@mui/icons-material/DirectionsCar';\r\n\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { MySelect, MyCheckBox, MyAutocomplite, MyTextInput } from '../../stores/elements';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#c03',\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  formControl: {\r\n    //margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  tableCel: {\r\n    textAlign: 'center',\r\n    borderRight: '1px solid #e5e5e5',\r\n    padding: 15,\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: \"#e5e5e5\",\r\n    },\r\n  },\r\n  tableCelHead: {\r\n    textAlign: 'center',\r\n    padding: 15\r\n  },\r\n  customCel: {\r\n    backgroundColor: \"#bababa\",\r\n    textAlign: 'center',\r\n    borderRight: '1px solid #e5e5e5',\r\n    padding: 15,\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: \"#e5e5e5\",\r\n    },\r\n  },\r\n  timePicker: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nclass VendorModule_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      module: 'vendor_module',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      modalDialog: false,\r\n      modalItems: false,\r\n      modalVendor: false,\r\n      modalVendorNew: false,\r\n      \r\n      vendors: [],\r\n      \r\n      allItems: [],\r\n      vendor_items: [],\r\n      openVendor: null,\r\n      customAdd: 0,\r\n      \r\n      vendorCities: [],\r\n      allCities: [],\r\n      \r\n      nds: [\r\n        { id: -1, name: 'Без НДС' },\r\n        { id: 10, name: '10% НДС' },\r\n        { id: 20, name: '20% НДС' },\r\n      ],\r\n      nds_: [\r\n        -1, 10, 20\r\n      ],\r\n      \r\n      cities: [],\r\n      city: -1\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    \r\n    let data = await this.getData('get_all');\r\n    \r\n    this.setState({\r\n      module_name: data.module_info.name,\r\n      vendors: data.vendors,\r\n      cities: data.cities\r\n    })\r\n    \r\n    document.title = data.module_info.name;\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      console.log( err )\r\n    });\r\n  }\r\n   \r\n  changeNDS(item_id, event){\r\n    this.state.vendor_items.map( (item, key) => {\r\n      if( parseInt(item.item_id) == parseInt(item_id) ){\r\n        item.nds = event.target.value;\r\n      }\r\n    } )\r\n    \r\n    this.setState({\r\n      vendor_items: this.state.vendor_items\r\n    })\r\n  }\r\n  \r\n  async openModalItems(vendor){\r\n    let data = {\r\n      vendor_id: vendor.id\r\n    }\r\n    \r\n    let res = await this.getData('get_vendor_items', data);\r\n    \r\n    this.setState({\r\n      modalItems: true,\r\n      allItems: res.all_items,\r\n      vendor_items: res.vendor_items,\r\n      openVendor: vendor\r\n    })\r\n  }\r\n  \r\n  async openModalVendor(vendor){\r\n    let data = {\r\n      vendor_id: vendor.id\r\n    }\r\n    \r\n    let res = await this.getData('get_vendor_info', data);\r\n    \r\n    this.setState({\r\n      modalVendor: true,\r\n      openVendor: res.vendor,\r\n      vendorCities: res.vendor_cities,\r\n      allCities: res.all_cities,\r\n    })\r\n  }\r\n  \r\n  async openModalVendorNew(){\r\n    let data = {\r\n      vendor_id: 0\r\n    }\r\n    \r\n    let res = await this.getData('get_vendor_info', data);\r\n    \r\n    this.setState({\r\n      modalVendorNew: true,\r\n      openVendor: {\r\n        addr: \"\",\r\n        bill_ex: \"0\",\r\n        email: \"\",\r\n        email_2: \"\",\r\n        inn: \"\",\r\n        min_price: \"\",\r\n        name: \"\",\r\n        need_img_bill_ex: \"0\",\r\n        ogrn: \"\",\r\n        phone: \"\",\r\n        text: \"\",\r\n      },\r\n      vendorCities: [],\r\n      allCities: res.all_cities,\r\n    })\r\n  }\r\n  \r\n  async saveVendorItems(){\r\n    let data = {\r\n      vendor_id: this.state.openVendor.id,\r\n      items: this.state.vendor_items\r\n    }\r\n    \r\n    let check = data.items.filter( (item, key) => !this.state.nds_.includes( parseInt(item.nds) ) );\r\n    \r\n    if( check.length > 0 ){\r\n      alert('У одной или нескольких позиций не заполнен НДС')\r\n      \r\n      return ;\r\n    }\r\n    \r\n    let res = await this.getData('save_vendor_items', data);\r\n    \r\n    this.setState({\r\n      modalItems: false,\r\n      vendor_items: [],\r\n      openVendor: null\r\n    })\r\n  }\r\n  \r\n  async saveVendor(){\r\n    let data = {\r\n      vendor: this.state.openVendor,\r\n      vendor_cities: this.state.vendorCities,\r\n      city: this.state.city\r\n    }\r\n    \r\n    let res = await this.getData('update_vendor', data);\r\n    \r\n    this.setState({\r\n      modalVendor: false,\r\n      openVendor: null,\r\n      vendorCities: [],\r\n      allCities: [],\r\n      vendors: res.vendors\r\n    })\r\n  }\r\n  \r\n  async addVendor(){\r\n    let data = {\r\n      vendor: this.state.openVendor,\r\n      vendor_cities: this.state.vendorCities,\r\n      city: this.state.city\r\n    }\r\n    \r\n    let res = await this.getData('new_vendor', data);\r\n    \r\n    if( res.st === false ){\r\n      alert(res.text);\r\n      return ;\r\n    }\r\n    \r\n    this.setState({\r\n      modalVendorNew: false,\r\n      openVendor: null,\r\n      vendorCities: [],\r\n      allCities: [],\r\n      vendors: res.vendors\r\n    })\r\n  }\r\n  \r\n  delItem(item_id){\r\n    let items = this.state.vendor_items;\r\n    \r\n    items = items.filter( (item) => parseInt(item.item_id) != parseInt(item_id) );\r\n    \r\n    this.setState({\r\n      vendor_items: items\r\n    })\r\n  }\r\n  \r\n  addItem(item){\r\n    let this_items = this.state.vendor_items;\r\n    let check = this_items.find( (it) => parseInt(it.item_id) == parseInt(item.id) );\r\n    \r\n    if( !check ){\r\n      this_items.push({\r\n        item_id: item.id,\r\n        item_name: item.name,\r\n        nds: -2\r\n      })\r\n    }\r\n    \r\n    this.setState({\r\n      vendor_items: this_items\r\n    })\r\n  }\r\n  \r\n  addItemCustom(){\r\n    let item = this.state.allItems.find( (item1) => parseInt(item1.id) == parseInt(this.state.customAdd) );\r\n    \r\n    this.addItem(item);\r\n  }\r\n  \r\n  testChange(data, event){\r\n    let vendor = this.state.openVendor;\r\n    \r\n    if( data == 'bill_ex' || data == 'need_img_bill_ex' ){\r\n      vendor[data] = event.target.checked === true ? 1 : 0;\r\n    }else{\r\n      vendor[data] = event.target.value;\r\n    }\r\n    \r\n    this.setState({ \r\n      openVendor: vendor\r\n    })\r\n  }\r\n  \r\n  async changeCity(event){\r\n    let data = {\r\n      city: event.target.value\r\n    }\r\n    \r\n    let res = await this.getData('get_vendors', data);\r\n    \r\n    this.setState({\r\n      vendors: res,\r\n      city: event.target.value\r\n    })\r\n  }\r\n  \r\n  changeSort(data, event){\r\n    this.state.vendor_items.map( (item, key) => {\r\n      if( parseInt(item.item_id) == parseInt(data) ){\r\n        this.state.vendor_items[key]['sort'] = event.target.value;\r\n      }\r\n    })\r\n    \r\n    this.setState({\r\n      vendor_items: this.state.vendor_items\r\n    })\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Dialog\r\n          open={this.state.modalDialog}\r\n          onClose={ () => { this.setState({ modalDialog: false }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              \r\n              \r\n              \r\n              \r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color=\"primary\">Сохранить</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        <Dialog\r\n          open={this.state.modalItems}\r\n          fullWidth={true}\r\n          maxWidth={'md'}\r\n          onClose={ () => { this.setState({ modalItems: false }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">Товары поставщика {this.state.openVendor ? this.state.openVendor.name : ''}</DialogTitle>\r\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\r\n            \r\n            <Grid container style={{ paddingTop: 20 }}>\r\n              \r\n              <Grid item xs={12} sm={5} style={{ paddingRight: 10 }}>\r\n                \r\n                <Table>\r\n                  <TableBody>\r\n                    <TableRow style={{ height: 75 }}>\r\n                      <TableCell>\r\n                        <MySelect classes={this.state.classes} data={this.state.allItems} value={this.state.customAdd} func={ (event) => { this.setState({ customAdd: event.target.value }) } } />\r\n                      </TableCell>\r\n                      <TableCell><AddIcon onClick={this.addItemCustom.bind(this)} style={{ cursor: 'pointer' }} /></TableCell>\r\n                    </TableRow>\r\n                    \r\n                    { this.state.allItems.map( (item, key) => \r\n                      <TableRow key={key} style={{ height: 75 }}>\r\n                        <TableCell>{item.name}</TableCell>\r\n                        <TableCell><AddIcon onClick={this.addItem.bind(this, item)} style={{ cursor: 'pointer' }} /></TableCell>\r\n                      </TableRow>\r\n                    ) }\r\n                  </TableBody>\r\n                </Table>\r\n                \r\n              </Grid>\r\n              <Grid item xs={12} sm={7}>\r\n                \r\n                <Table>\r\n                  <TableBody>\r\n                    { this.state.vendor_items.map( (item, key) => \r\n                      <TableRow key={key} style={{ height: 75 }}>\r\n                        <TableCell>{item.item_name}</TableCell>\r\n                        <TableCell>\r\n                          <MyTextInput label=\"\" value={ item.sort } func={ this.changeSort.bind(this, item.item_id) } />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <MySelect classes={this.state.classes} data={this.state.nds} value={item.nds} func={ this.changeNDS.bind(this, item.item_id) } />\r\n                        </TableCell>\r\n                        <TableCell><CloseIcon onClick={ this.delItem.bind(this, item.item_id) } style={{ cursor: 'pointer' }} /></TableCell>\r\n                      </TableRow>\r\n                    ) }\r\n                  </TableBody>\r\n                </Table>\r\n                \r\n              </Grid>\r\n              \r\n            </Grid>\r\n              \r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.saveVendorItems.bind(this)} color=\"primary\">Сохранить</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        <Dialog\r\n          open={this.state.modalVendor}\r\n          fullWidth={true}\r\n          maxWidth={'md'}\r\n          onClose={ () => { this.setState({ modalVendor: false }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">Поставщик {this.state.openVendor ? this.state.openVendor.name : ''}</DialogTitle>\r\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\r\n            \r\n            <Grid container spacing={3}>\r\n              \r\n              {this.state.openVendor ?\r\n                <>\r\n                  <Grid item xs={12} sm={5}>\r\n                    <MyTextInput label=\"Наименование\" value={ this.state.openVendor.name } func={ this.testChange.bind(this, 'name') } />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <MyTextInput label=\"Описание\" value={ this.state.openVendor.text } func={ this.testChange.bind(this, 'text') } />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={3}>\r\n                    <MyTextInput label=\"Мин. сумма заявки\" value={ this.state.openVendor.min_price } func={ this.testChange.bind(this, 'min_price') } />\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyTextInput label=\"ИНН\" value={ this.state.openVendor.inn } func={ this.testChange.bind(this, 'inn') } disabled={true} />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyTextInput label=\"ОГРН\" value={ this.state.openVendor.ogrn } func={ this.testChange.bind(this, 'ogrn') } />\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} sm={8}>\r\n                    <MyTextInput label=\"Адрес компании\" value={ this.state.openVendor.addr } func={ this.testChange.bind(this, 'addr') } />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <MyTextInput label=\"Контактное лицо\" value={ this.state.openVendor.user } func={ this.testChange.bind(this, 'user') } />\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} sm={4}>\r\n                    <MyTextInput label=\"Телефон\" value={ this.state.openVendor.phone } func={ this.testChange.bind(this, 'phone') } />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <MyTextInput label=\"Почта\" value={ this.state.openVendor.email } func={ this.testChange.bind(this, 'email') } />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <MyTextInput label=\"Доп почта\" value={ this.state.openVendor.email_2 } func={ this.testChange.bind(this, 'email_2') } />\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyCheckBox label=\"Работа по счетам\" value={ parseInt(this.state.openVendor.bill_ex) == 1 ? true : false } func={ this.testChange.bind(this, 'bill_ex') } />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyCheckBox label=\"Необходима картинка\" value={ parseInt(this.state.openVendor.need_img_bill_ex) == 1 ? true : false } func={ this.testChange.bind(this, 'need_img_bill_ex') } />\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyAutocomplite label='Города' data={this.state.allCities} value={this.state.vendorCities} func={ (event, value) => { this.setState({ vendorCities: value }) } } />\r\n                  </Grid>\r\n                </>\r\n                  :\r\n                null\r\n              }\r\n            </Grid>\r\n              \r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.saveVendor.bind(this)} color=\"primary\">Сохранить</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        <Dialog\r\n          open={this.state.modalVendorNew}\r\n          fullWidth={true}\r\n          maxWidth={'md'}\r\n          onClose={ () => { this.setState({ modalVendorNew: false }) } }\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">Новый поставщик</DialogTitle>\r\n          <DialogContent>\r\n            \r\n            <Grid container spacing={3}>\r\n              \r\n              {this.state.openVendor ?\r\n                <>\r\n                  <Grid item xs={12} sm={5}>\r\n                    <MyTextInput label=\"Наименование\" value={ this.state.openVendor.name } func={ this.testChange.bind(this, 'name') } />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <MyTextInput label=\"Описание\" value={ this.state.openVendor.text } func={ this.testChange.bind(this, 'text') } />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={3}>\r\n                    <MyTextInput label=\"Мин. сумма заявки\" value={ this.state.openVendor.min_price } func={ this.testChange.bind(this, 'min_price') } />\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyTextInput label=\"ИНН\" value={ this.state.openVendor.inn } func={ this.testChange.bind(this, 'inn') } />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyTextInput label=\"ОГРН\" value={ this.state.openVendor.ogrn } func={ this.testChange.bind(this, 'ogrn') } />\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} sm={8}>\r\n                    <MyTextInput label=\"Адрес компании\" value={ this.state.openVendor.addr } func={ this.testChange.bind(this, 'addr') } />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <MyTextInput label=\"Контактное лицо\" value={ this.state.openVendor.user } func={ this.testChange.bind(this, 'user') } />\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} sm={4}>\r\n                    <MyTextInput label=\"Телефон\" value={ this.state.openVendor.phone } func={ this.testChange.bind(this, 'phone') } />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <MyTextInput label=\"Почта\" value={ this.state.openVendor.email } func={ this.testChange.bind(this, 'email') } />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <MyTextInput label=\"Доп почта\" value={ this.state.openVendor.email_2 } func={ this.testChange.bind(this, 'email_2') } />\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyCheckBox label=\"Работа по счетам\" value={ parseInt(this.state.openVendor.bill_ex) == 1 ? true : false } func={ this.testChange.bind(this, 'bill_ex') } />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyCheckBox label=\"Необходима картинка\" value={ parseInt(this.state.openVendor.need_img_bill_ex) == 1 ? true : false } func={ this.testChange.bind(this, 'need_img_bill_ex') } />\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyAutocomplite label='Города' data={this.state.allCities} value={this.state.vendorCities} func={ (event, value) => { this.setState({ vendorCities: value }) } } />\r\n                  </Grid>\r\n                </>\r\n                  :\r\n                null\r\n              }\r\n            </Grid>\r\n              \r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.addVendor.bind(this)} color=\"primary\">Сохранить</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={3}>\r\n            <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city} func={ this.changeCity.bind(this) } label='Город' />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={3}>\r\n            <Button onClick={this.openModalVendorNew.bind(this)} variant=\"contained\">Добавить поставщика</Button>\r\n          </Grid>\r\n        \r\n          <Grid item xs={12}>\r\n          \r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell component=\"th\">Название</TableCell>\r\n                    <TableCell component=\"th\">Назначенные товары</TableCell>\r\n                    <TableCell component=\"th\"><VisibilityIcon /></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  { this.state.vendors.map( (item, key) => \r\n                    <TableRow key={key}>\r\n                      <TableCell><Typography onClick={ this.openModalVendor.bind(this, item) } style={{ cursor: 'pointer', width: 'max-content' }}>{item.name}</Typography></TableCell>\r\n                      <TableCell><DirectionsCarIcon onClick={ this.openModalItems.bind(this, item) } style={{ cursor: 'pointer' }} /></TableCell>\r\n                      <TableCell>{ parseInt(item.is_show) == 1 ? <VisibilityIcon /> : <VisibilityOffIcon /> }</TableCell>\r\n                    </TableRow>\r\n                  ) }\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            \r\n          </Grid>\r\n          \r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function VendorModule () {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  \r\n  return (\r\n    <VendorModule_ classes={classes} history={history} />\r\n  );\r\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport { createTheme } from '@mui/material/styles';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableFooter from '@mui/material/TableFooter';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport Typography from '@mui/material/Typography';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nimport { MySelect, MyCheckBox, MyTimePicker } from '../../stores/elements';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#c03',\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  timePicker: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nclass WorkSchedule_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      module: 'work_schedule',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      points: [],\r\n      mounths: [],\r\n      point: '0',\r\n      mounth: '0',\r\n      \r\n      one: null,\r\n      two: null,\r\n      test_one: [],\r\n      \r\n      isOpenModalH: false,\r\n      \r\n      userInfo: null,\r\n      \r\n      hList: [],\r\n      mList: [],\r\n      \r\n      newTimeStart: '10:00',\r\n      newTimeEnd: '22:00',\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    let data = {\r\n      \r\n    };\r\n    \r\n    let res = await this.getData('get_all', data);\r\n    \r\n    let hList = [];\r\n    let mList = [];\r\n    \r\n    for(let h = 0; h <= 23; h ++){\r\n      hList.push({\r\n        id: h,\r\n        name: h\r\n      })\r\n    }\r\n    \r\n    for(let m = 0; m <= 50; m += 10){\r\n      mList.push({\r\n        id: m,\r\n        name: m\r\n      })\r\n    }\r\n    \r\n    this.setState({\r\n      points: res.point_list,\r\n      point: res.point_list[0].id,\r\n      \r\n      mounths: res.mounths,\r\n      mounth: res.mounths.find( (item) => parseInt( item.is_active ) == 1 )['id'],\r\n      \r\n      hList: hList,\r\n      mList: mList,\r\n      \r\n      module_name: res.module_info.name\r\n    })\r\n    \r\n    document.title = res.module_info.name;\r\n    \r\n    setTimeout( () => {\r\n      //this.updateData();\r\n    }, 100 )\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n    });\r\n  }\r\n   \r\n  changeCheckOrders(event){\r\n    let data = event.target.checked;\r\n    \r\n    this.setState({\r\n      showReady: data\r\n    })\r\n  }\r\n  \r\n  async updateData(){\r\n    let data = {\r\n      point_id: this.state.point,\r\n    };\r\n    \r\n    let res = await this.getData('get_graph', data);\r\n    \r\n    console.log( res )\r\n    \r\n    this.setState({\r\n      one: res.date.one,\r\n      two: res.date.two,\r\n      \r\n      test_one: res.one\r\n    })\r\n  }\r\n  \r\n  async openH(item, this_date){\r\n    console.log( item )\r\n    \r\n    let data = {\r\n      smena_id: item.smena_id,\r\n      app_id: item.app_id,\r\n      user_id: item.id,\r\n      date: this_date,\r\n      date_start: item.date\r\n    };\r\n    \r\n    let res = await this.getData('get_user_day', data);\r\n    \r\n    console.log( res )\r\n    \r\n    this.setState({\r\n      isOpenModalH: true,\r\n      userInfo: res.h_info,\r\n    })\r\n  }\r\n  \r\n  delTime(key_time){\r\n    let userInfo = this.state.userInfo;\r\n    \r\n    userInfo.hours = userInfo.hours.filter( (item, key) => parseInt(key) != parseInt(key_time) );\r\n    \r\n    this.setState({\r\n      userInfo: userInfo\r\n    })\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        { !this.state.userInfo ? null :\r\n          <Dialog\r\n            open={this.state.isOpenModalH}\r\n            onClose={ () => { this.setState({ isOpenModalH: false }) } }\r\n            scroll='paper'\r\n            aria-labelledby=\"scroll-dialog-title\"\r\n            aria-describedby=\"scroll-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"scroll-dialog-title\">{this.state.userInfo.user.app_name + ' ' + this.state.userInfo.user.user_name + ' ' + this.state.userInfo.date}</DialogTitle>\r\n            <DialogContent dividers={true}>\r\n              \r\n              <Typography>{'Моя нагрузка: ' + this.state.userInfo.user.my_load_h + ' / Средняя нагрузка: ' + this.state.userInfo.user.all_load_h}</Typography>\r\n              <Typography>{'Бонус: ' + this.state.userInfo.user.bonus}</Typography>\r\n              \r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<AddIcon />}\r\n                >\r\n                  <AccessTimeIcon style={{ marginRight: 10 }} />\r\n                  <Typography>Добавить время</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails style={{ display: 'flex', flexDirection: 'row' }}>\r\n                  \r\n                  <MyTimePicker value={this.state.newTimeStart} func={ (event) => { this.setState({ newTimeStart: event.target.value }) } } classes={this.state.classes} label='Время начала работы' />\r\n                  <MyTimePicker value={this.state.newTimeEnd} func={ (event) => { this.setState({ newTimeEnd: event.target.value }) } } classes={this.state.classes} label='Время окончания работы' />\r\n                  \r\n                </AccordionDetails>\r\n              </Accordion>  \r\n              \r\n              { this.state.userInfo.hours.map( (item, key) =>\r\n                <Accordion key={key}>\r\n                  <AccordionSummary\r\n                    expandIcon={<CloseIcon onClick={ this.delTime.bind(this, key) } />}\r\n                  >\r\n                    <AccessTimeIcon style={{ marginRight: 10 }} />\r\n                    <Typography>{item.time_start + ' - ' + item.time_end}</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <Typography>\r\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\r\n                      malesuada lacus ex, sit amet blandit leo lobortis eget.\r\n                    </Typography>\r\n                  </AccordionDetails>\r\n                </Accordion>  \r\n              ) }\r\n              \r\n              \r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => { this.setState({ isOpenModalH: false }) }}>Cancel</Button>\r\n              <Button onClick={() => { this.setState({ isOpenModalH: false }) }}>Subscribe</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        }\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={6}>\r\n            <MySelect data={this.state.points} value={this.state.point} func={ (event) => { this.setState({ point: event.target.value }) } } label='Точка' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <MySelect data={this.state.mounths} value={this.state.mounth} func={ (event) => { this.setState({ mounth: event.target.value }) } } label='Месяц' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\r\n          </Grid>\r\n          \r\n            \r\n              \r\n          \r\n          \r\n          \r\n          <Grid item xs={12} sm={12}>\r\n            \r\n            { !this.state.one ? null :\r\n              <TableContainer component={Paper}>\r\n                <Table aria-label=\"a dense table\" id=\"table_graph_one\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell></TableCell>\r\n                      <TableCell>Число месяца</TableCell>\r\n                      <TableCell></TableCell>\r\n                      \r\n                      {this.state.one.days.map( (item, key) => \r\n                        <TableCell className=\"min_block\" style={{ backgroundColor: item.day == 'Пт' || item.day == 'Сб' || item.day == 'Вс' ? '#ffe9bd' : '#fff' }} key={key}>{item.date}</TableCell>\r\n                      )}\r\n                      \r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell>Сотрудник</TableCell>\r\n                      <TableCell>Должность</TableCell>\r\n                      <TableCell></TableCell>\r\n                      \r\n                      {this.state.one.days.map( (item, key) => \r\n                        <TableCell className=\"min_block\" style={{ backgroundColor: item.day == 'Пт' || item.day == 'Сб' || item.day == 'Вс' ? '#ffe9bd' : '#fff' }} key={key}>{item.day}</TableCell>\r\n                      )}\r\n                      \r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    \r\n                    { this.state.test_one.map( (item, key) =>\r\n                      item.row == 'header' ?\r\n                        <TableRow key={key} style={{ backgroundColor: '#e5e5e5' }}>\r\n                          <TableCell style={{ textAlign: 'center' }} colSpan={ this.state.one.days.length + 3 }>{item.data}</TableCell>\r\n                        </TableRow>\r\n                          :\r\n                        <TableRow key={key}>\r\n                          <TableCell>{item.data.user_name}</TableCell>\r\n                          <TableCell>{item.data.app_name}</TableCell>\r\n                          <TableCell></TableCell>\r\n                          \r\n                          { item.data.dates.map( (date, date_k) =>\r\n                            <TableCell onClick={ this.openH.bind(this, item.data, date.date) } className=\"min_block\" style={{ backgroundColor: date.info ? date.info.color : '#fff' }} key={date_k}>{date.info ? date.info.hours : ''}</TableCell>\r\n                          ) }\r\n                          \r\n                        </TableRow>\r\n                    ) }\r\n                    \r\n                    \r\n                  </TableBody>\r\n                  \r\n                  <TableFooter>\r\n                    <TableRow>\r\n                      <TableCell></TableCell>\r\n                      <TableCell></TableCell>\r\n                      <TableCell></TableCell>\r\n                      \r\n                      {this.state.one.bonus.map( (item, key) => \r\n                        <TableCell className=\"min_block min_size\" style={{ backgroundColor: item.type == 'cur' ? '#98e38d' : '#fff' }} key={key}>{item.res}</TableCell>\r\n                      )}\r\n                      \r\n                    </TableRow>\r\n                    \r\n                    <TableRow>\r\n                      <TableCell></TableCell>\r\n                      <TableCell>Роллов</TableCell>\r\n                      <TableCell></TableCell>\r\n                      \r\n                      {this.state.one.bonus.map( (item, key) => \r\n                        <TableCell className=\"min_block min_size\" key={key}>{item.count_rolls}</TableCell>\r\n                      )}\r\n                      \r\n                    </TableRow>\r\n                    \r\n                    <TableRow>\r\n                      <TableCell></TableCell>\r\n                      <TableCell>Пиццы</TableCell>\r\n                      <TableCell></TableCell>\r\n                      \r\n                      {this.state.one.bonus.map( (item, key) => \r\n                        <TableCell className=\"min_block min_size\" key={key}>{item.count_pizza}</TableCell>\r\n                      )}\r\n                      \r\n                    </TableRow>\r\n                    \r\n                    <TableRow>\r\n                      <TableCell></TableCell>\r\n                      <TableCell className=\"min_size\">Заказы готовились больше 40 минут</TableCell>\r\n                      <TableCell></TableCell>\r\n                      \r\n                      {this.state.one.order_stat.map( (item, key) => \r\n                        <TableCell className=\"min_block min_size\" key={key}>{item.count_false}</TableCell>\r\n                      )}\r\n                      \r\n                    </TableRow>\r\n                    \r\n                  </TableFooter>\r\n                  \r\n                  \r\n                </Table>\r\n              </TableContainer>\r\n            }\r\n            \r\n            \r\n            \r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function WorkSchedule () {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  \r\n  return (\r\n    <WorkSchedule_ classes={classes} history={history} />\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@mui/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\n\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport Badge from '@mui/material/Badge';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\n\r\nimport routes from '../../../server/routes';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#c03',\r\n      },\r\n      def: {\r\n        main: '#353b48',\r\n        secondary: '#fff'\r\n      },\r\n    },\r\n});\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n});\r\n\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n      history: this.props.history,\r\n      \r\n      module: 'header',\r\n      \r\n      open: false,\r\n      menu: [],\r\n      full_menu: [],\r\n      \r\n      left: false\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    \r\n    let data = await this.getData('get_all');\r\n    \r\n    this.setState({\r\n      menu: data.info.left_menu,\r\n      full_menu: data.info.full_menu,\r\n    })\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      console.log( json )\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        this.state.history.push(\"/\");\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n        console.log( err )\r\n    });\r\n  }\r\n  \r\n  handleDrawerOpen(){\r\n    this.setState({\r\n      open: true\r\n    })\r\n  }\r\n  \r\n  handleDrawerClose(){\r\n    this.setState({\r\n      open: false\r\n    })\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <AppBar className={clsx(this.state.classes.appBar, this.state.open && this.state.classes.appBarShift)}>\r\n          <Toolbar className={this.state.classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={this.handleDrawerOpen.bind(this)}\r\n              className={clsx(this.state.classes.menuButton, this.state.open && this.state.classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.state.classes.title}>\r\n              Dashboard\r\n            </Typography>\r\n            <IconButton color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        \r\n        \r\n        <React.Fragment >\r\n          <SwipeableDrawer\r\n            anchor={'left'}\r\n            open={ this.state.open }\r\n            onClose={ () => { this.setState({ open: false }) } }\r\n            onOpen={ () => { this.setState({ open: true }) } }\r\n          >\r\n            <div className={this.state.classes.toolbarIcon}>\r\n            \r\n              <Autocomplete\r\n                size=\"small\"\r\n                options={this.state.full_menu}\r\n                getOptionLabel={(option) => option.name}\r\n                onChange={(event, newValue) => {\r\n                  if( newValue ){\r\n                    this.state.history.push(\"/\"+newValue.key_query+\"/\");\r\n                  }\r\n                }}\r\n                style={{ width: 300 }}\r\n                renderInput={(params) => <TextField {...params} label=\"Поиск\" variant=\"outlined\" />}\r\n              />\r\n              \r\n              <IconButton onClick={this.handleDrawerClose.bind(this)}>\r\n                <ChevronLeftIcon />\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            \r\n            { this.state.menu.map( (item, key) =>\r\n              <Accordion key={key} >\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography className={this.state.classes.heading}>{ item.parent.name }</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  \r\n                  <List style={{ width: '100%' }}>\r\n                  \r\n                    { item.chaild.map( (it, k) =>\r\n                      <ListItem button key={k}>\r\n                        <Link to={\"/\"+it.key_query+\"/\"}>\r\n                          <ListItemText primary={ it.name } />\r\n                        </Link>\r\n                      </ListItem>\r\n                    ) }\r\n                  \r\n                  </List>\r\n                  \r\n                </AccordionDetails>\r\n              </Accordion>\r\n            ) }\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n        \r\n        \r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nfunction Status({ code, children }) {\r\n  return (\r\n    <Route\r\n      render={({ staticContext }) => {\r\n        if (staticContext) staticContext.status = code;\r\n        return children;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport function NotFound() {\r\n  return (\r\n    <Status code={404}>\r\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\r\n            </Grid>\r\n            \r\n        </Grid>\r\n    </Status>\r\n  );\r\n}\r\n\r\nexport function App () {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    \r\n    let check_header = true;\r\n    \r\n    if( \r\n      history.location.pathname == '/auth/' || \r\n      history.location.pathname == '/auth' || \r\n      history.location.pathname == '/registration/' ||\r\n      history.location.pathname == '/registration'\r\n    ){\r\n      check_header = false;\r\n    }\r\n    \r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <div className={classes.root}>\r\n          { !check_header ? null :\r\n            <>\r\n              <CssBaseline />\r\n              <Header classes={classes} history={history} />\r\n            </>\r\n          }\r\n          <main className={classes.content}>\r\n            <div className={classes.appBarSpacer} />\r\n            <Container maxWidth={false} className={classes.container}>\r\n        \r\n              <Switch>\r\n                { routes.map( (item, key) =>\r\n                  <Route\r\n                    key={key}\r\n                    path={item.path}\r\n                    exact={ item.exact }\r\n                    component={ item.component }\r\n                  />\r\n                ) }\r\n                \r\n                <Route\r\n                  component={ () =>\r\n                    <Status code={404}>\r\n                      <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\r\n                        <Grid item xs={12}>\r\n                          <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Status>\r\n                  }\r\n                />\r\n              </Switch>\r\n        \r\n            </Container>\r\n          </main>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n// import App components\r\nimport { App } from './components/app';\r\n\r\n// compile App component in `#app` HTML element\r\nReactDOM.render( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\r\n//ReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\r\n","import React from 'react';\r\n\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\n\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n//import Grid from '@mui/material/Grid';\r\nimport ruLocale from \"date-fns/locale/ru\";\r\n/*import DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';*/\r\n\r\nimport DateRangePicker from '@mui/lab/DateRangePicker';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\n//import DatePicker from '@mui/lab/DatePicker';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\nimport DatePicker from \"react-multi-date-picker\"\r\n\r\nexport class MyDaterange extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n    };\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={ruLocale} size=\"small\">\r\n        <DateRangePicker\r\n          \r\n          allowSameDateSelection={true}\r\n          showTodayButton={true}\r\n          startText={this.props.startText}\r\n          endText={this.props.endText}\r\n          value={this.props.value}\r\n          inputFormat=\"yyyy-MM-dd\"\r\n          //mask=\"____-__-__\"\r\n          onChange={this.props.func}\r\n          renderInput={(startProps, endProps) => (\r\n            <React.Fragment>\r\n              <TextField style={{ width: '100%' }} {...startProps} />\r\n              <TextField style={{ width: '100%' }} {...endProps} />\r\n            </React.Fragment>\r\n          )}\r\n        />\r\n      </LocalizationProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport class MyAutocomplite extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n    };\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <Stack spacing={3}>\r\n        <Autocomplete\r\n          size=\"small\"\r\n          disableCloseOnSelect={true}\r\n          multiple={true}\r\n          id={ this.props.id ?? null }\r\n          options={this.props.data}\r\n          getOptionLabel={(option) => option.name}\r\n          value={this.props.value}\r\n          onChange={this.props.func}\r\n          filterSelectedOptions\r\n          multiple={ this.props.multiple && this.props.multiple === true ? true : false }\r\n          isOptionEqualToValue={(option, value) => option.id === value.id}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label={this.props.label}\r\n              placeholder={this.props.placeholder}\r\n            />\r\n          )}\r\n        />\r\n      </Stack>\r\n    )\r\n  }\r\n}\r\n\r\nexport class MySelect extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n    };\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n        <InputLabel>{this.props.label}</InputLabel>\r\n        <Select\r\n          value={this.props.value}\r\n          label={this.props.label}\r\n          onChange={ this.props.func }\r\n          multiple={ this.props.multiple && this.props.multiple === true ? true : false }\r\n        >\r\n          <MenuItem value=\"\"><em>None</em></MenuItem>\r\n          { this.props.data.map( (item, key) =>\r\n            <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\r\n          ) }\r\n        </Select>\r\n      </FormControl>\r\n    )\r\n  }\r\n}\r\n\r\nexport class MyTextInput extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n    };\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <TextField \r\n        label={this.props.label}\r\n        value={this.props.value}\r\n        onChange={this.props.func}\r\n        disabled={ this.props.disabled || this.props.disabled === true ? true : false }\r\n        variant=\"outlined\" \r\n        size={'small'} \r\n        color='primary'\r\n        style={{ width: '100%' }} \r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport class MyTimePicker extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n    };\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <TextField\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        color=\"primary\"\r\n        label={this.props.label}\r\n        type=\"time\"\r\n        value={ this.props.value }\r\n        className={this.state.classes.timePicker}\r\n        onChange={this.props.func}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        step={600}\r\n        inputProps={{\r\n          step: 600, // 5 min\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport class MyDatePicker extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n    };\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <>\r\n        <Typography>{this.props.label}</Typography>\r\n        <DatePicker\r\n          format=\"YYYY-MM-DD\"\r\n          \r\n          multiple\r\n          sort\r\n          \r\n          //mask=\"____/__/__\"\r\n          //multiple={ this.props.multiple && this.props.multiple === true ? true : false }\r\n          //disableCloseOnSelect={true}\r\n          //inputFormat=\"yyyy-MM-dd\"\r\n          style={{ width: '100%' }}\r\n          label={this.props.label}\r\n          value={this.props.value}\r\n          onChange={this.props.func}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport class MyDatePickerTest extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n    };\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <DatePicker \r\n        multiple\r\n        value={this.props.value}\r\n        onChange={this.props.func}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport class MyCheckBox extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      classes: this.props.classes,\r\n    };\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <FormGroup row>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={this.props.value}\r\n              onChange={this.props.func}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label={this.props.label}\r\n        />\r\n      </FormGroup>\r\n    )\r\n  }\r\n}"],"names":["Home","require","Auth","Reg","LiveOrders","Events","RasByBill","CategoryItems","VendorModule","VendorItemPrice","Tender","Revizion","RevizionNew","WorkSchedule","SiteSale2","SiteSale2_New","SiteSale2_Edit","SiteSale2_Stat","module","exports","path","exact","component","title","code","queryString","theme","createTheme","palette","primary","main","useStyles","makeStyles","paper","display","flexDirection","alignItems","avatar","borderRadius","width","height","margin","backgroundColor","avatar2","form","marginTop","spacing","submit","textLink","color","Auth_","props","method","data","setState","is_load","fetch","headers","body","stringify","state","version","login","JSON","then","res","json","st","type","setTimeout","history","push","err","console","log","classes","module_name","modalDialog","dialogTitle","dialogText","point_id","this","point","showReady","getData","read","onstol","ordersQueue","prestol_new","document","getElementById","value","pwd","text","localStorage","setItem","token","window","location","pathname","Backdrop","className","backdrop","open","CircularProgress","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","autoFocus","Grid","container","direction","justifyContent","item","xs","sm","md","lg","xl","Avatar","alt","src","style","noValidate","TextField","variant","size","required","fullWidth","label","name","autoComplete","auth","bind","href","React","useHistory","def","secondary","formControl","selectEmpty","tableCel","textAlign","borderRight","padding","cursor","tableCelHead","customCel","timePicker","CategoryItems_","getItem","modalDialog2","modalDialog3","newMainCatMy","editMainCatMy","newMainNameMy","editMainNameMy","editCat","allCats","allItems","thisValItems","thisDataItems","thisCatId","module_info","cats","items","event","target","cat_id","alert","myVal","filter","parseInt","cat","parent_id","paddingBottom","paddingTop","func","changeCatMain","onChange","changeNameMain","saveCat","val","saveItems","changeCatMainEdit","changeNameMainEdit","saveEditCat","createCat","map","main_cat","main_key","Accordion","key","AccordionSummary","expandIcon","ExpandMore","Menu","marginRight","Typography","AccordionDetails","parent_cat","parent_key","addItems","Events_","points","mounth","mounths","years","year","calendar","chooseDayHoly","events","chooseEvent","eventPoint1","everyYear1","timeStart2","timeEnd2","expanded","dayEvents","events_hist","this_m","this_y","updateData","checked","m","y","day","full_day","chooseDay","date","holy","hist","this_events","every_year","time_start","time_end","confirm","del_id","length","changeEvent","changePoint1","changeTimeStart2","changeTimeEnd2","changeEveryYear1","List","ListItem","ListItemText","Close","delEvent","save","changePoint","changeMounth","changeYear","TableContainer","Paper","Table","overflow","TableHead","TableRow","TableCell","TableBody","m_key","k","dir","zIndex","drawer","Home_","Live_Orders","point_list","changeCheckOrders","type_order","preorder","date_time_order","date_time_preorder_","unix_start_stol_or","give_data_time_","close_date_time_order","type_","time_","test_time","unix_time_to_client","status","stol_sborki","is_preorder","date_time_preorder","time_start_order","time_end_order","formatDate","d","Date","month","getMonth","getDate","getFullYear","join","RasByBill_","date_start","date_end","rangeDate","items_cat","item_cat","myItems","start_date","end_date","summ","items_ras","parseFloat","sum","resItems","pf_ras","rec_ras","full_sum","toFixed","catItems","this_price","count_pos","dateStart","dateEnd","multiple","startText","endText","changeDateRange","changeItems","getItems","getCats","count_item","ei_name","count_pf","ei_name_pf","count_bill","pf_name","count_rolls","price_rolls","disabled","count_pizza","price_by_items","it","paddingLeft","parent_items","backButton","instructions","marginBottom","Reg_","activeStep","steps","phone","charCode","nextStep","Stepper","alternativeLabel","Step","StepLabel","onKeyPress","enterNextStep","TabPanel","children","index","other","role","hidden","Box","sx","p","a11yProps","propTypes","PropTypes","Revizion_","revList","chooseRev","pf","chooseTab","getRevList","getDataRev","rev_id","to","changeRev","Tabs","textColor","indicatorColor","centered","Tab","RevizionNewItem","change","nextProps","nextState","counts","need_pq","itemKey","clear","copy","RevizionNew_","storages","rec","key_item","key_data","allVal","new_counts","saveData","copyData","clearData","SwipeableDrawer","anchor","onOpen","button","position","bottom","left","right","elevation","BottomNavigation","showLabels","newValue","BottomNavigationAction","icon","Restore","formatDateDot","formatDateName","SiteSale2_new_","click","modalText","cities","city","modalLink","where_promo_list","promo_action_list","sale_list","promo_conditions_list","promo_sale_list","type_sale_list","date_promo_list","type_order_list","where_order_list","promo_prizw_vk","spamNameSMS","auto_text","where_promo","promo_name","generate_new","count_action","promo_action","type_sale","promo_sale","sale_type","promo_conditions","price_start","price_end","date_promo","promo_length","promo_count","day_1","day_2","day_3","day_4","day_5","day_6","day_7","where_order","numberList","promo_desc_true","promo_desc_false","textSMS","addItem","addItemCount","addItemPrice","addItemAllPrice","itemsAdd","itemsAddPrice","saleCat","saleItem","priceItem","conditionItems","testDate","Y","M","D","fullDate","generateTextDescFalse","generateTextDescTrue","count_promo","find","promo_items","promo_cat","dateList","toISOString","split","promo_vk_prize","cert_text","addr","promo_len","generate","promo_in_count","promo_type_sale","promo_type","promo_summ","promo_summ_to","promo_when","promo_type_order","promo_where","promo_city","promo_point","about_promo_text","condition_promo_text","promo_items_add","promo_items_sale","promo_conditions_items","date_between","promo_text","link","thisDay","nextDay","setDate","textTrue","substring","itemText","dop_text","slice","textFalse","thisItems","item_id","thisItem","count","price","newItems","changeData","changeDataCheck","Divider","changeDataData","addItemAdd","delItemAdd","TableFooter","priceItemAdd","delItemPrice","TextareaAutosize","placeholder","minRows","SiteSale2_edit_","promo_id","promoId","promo","parse","findItem","limDate","limit","date1","date2","time1","time2","d1","d2","d3","d4","d5","d6","d7","city_id","coment","condition_text","SiteSale2_","city_list","promoName","findPromoList","all_city_list","showPromoList","marginLeft","city_name","def_count","delPromo","SiteSale2_Stat_","spam_list","spam_id","spam_list_data","spam_list_data_stat","true","all","percent","stat","show","changeSpam","number","useParams","dynamicCellStyle","params","colDef","headerName","Tender_","testTable","vendors","myVendors","showVendors","params_api","params_columnApi","table","k1","section","k2","k3","tableItem","k4","item_price","vendor_price","vendor_id","item_ras","ras","field","api","columnApi","AgGridReact","onGridReady","onCellClicked","rowData","AgGridColumn","pinned","cellClassRules","hide","resizable","cellStyle","VendorItemPrice_","vendor","allCity","isPrioriti","this_items","all_city","is_prioriti","changeCity","changeVendor","name_for_vendor","comment","update","full_price","pqs","rec_pq","VendorModule_","modalItems","modalVendor","modalVendorNew","vendor_items","openVendor","customAdd","vendorCities","allCities","nds","nds_","all_items","vendor_cities","all_cities","bill_ex","email","email_2","inn","min_price","need_img_bill_ex","ogrn","includes","item_name","item1","maxWidth","paddingRight","Add","addItemCustom","sort","changeSort","changeNDS","delItem","saveVendorItems","testChange","user","saveVendor","addVendor","openModalVendorNew","Visibility","openModalVendor","DirectionsCar","openModalItems","is_show","VisibilityOff","WorkSchedule_","one","two","test_one","isOpenModalH","userInfo","hList","mList","newTimeStart","newTimeEnd","h","is_active","this_date","smena_id","app_id","user_id","h_info","key_time","hours","scroll","app_name","user_name","dividers","my_load_h","all_load_h","bonus","AccessTime","delTime","days","row","colSpan","dates","date_k","openH","info","order_stat","count_false","root","toolbar","toolbarIcon","mixins","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","fixedHeight","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","Header","menu","full_menu","left_menu","AppBar","clsx","Toolbar","IconButton","edge","handleDrawerOpen","noWrap","Badge","badgeContent","Notifications","Autocomplete","options","getOptionLabel","option","key_query","renderInput","handleDrawerClose","ChevronLeft","parent","chaild","Status","render","staticContext","App","check_header","ThemeProvider","CssBaseline","Container","routes","ReactDOM","MyDaterange","dateAdapter","AdapterDateFns","locale","ruLocale","allowSameDateSelection","showTodayButton","inputFormat","startProps","endProps","MyAutocomplite","disableCloseOnSelect","filterSelectedOptions","MySelect","MyTextInput","MyTimePicker","InputLabelProps","shrink","step","inputProps","MyDatePicker","format","MyCheckBox","control"],"sourceRoot":""}