{"version":3,"file":"66.122f067360a46cef17f6.js","mappings":"oyBAiBA,IAAMA,EAAcC,EAAQ,MAEtBC,EAAU,+FAuCb,OAvCa,8BAYd,WACE,MAAgCC,KAAKC,MAA7BC,EAAM,EAANA,OAAQC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAEnBC,EAAY,WAgBhB,MAdyB,KAArBF,EAAMG,cACRD,GAAa,eAGXF,EAAMA,OAASA,EAAMI,YACvBF,GAAa,iBAGXF,EAAMA,OAASA,EAAMK,YACvBH,GAAa,iBAGfI,QAAQC,IAAI,UAGV,gBAACC,EAAA,EAAS,CACRN,UAAWA,EACXO,QAASZ,KAAKC,MAAMY,YAAYC,KAAKd,KAAME,EAAOa,GAAIX,EAAKW,GAAIZ,EAAMA,QAEpEA,EAAMA,MAGb,KAAC,EAvCa,CAASa,EAAAA,WA0CnBC,EAAO,6BAgMV,EA3EA,EA5EA,EAhBA,EAzBU,OACX,WAAYhB,GAAO,MAuBf,OAvBe,eACjB,cAAMA,IAAO,6BAyCL,SAACiB,GAAsB,IAAdC,EAAO,UAAH,6CAAG,CAAC,EAKzB,OAJA,EAAKC,SAAS,CACZC,SAAS,IAGJC,MAAM,wCAAyC,CACpDJ,OAAQ,OACRK,QAAS,CACP,eAAgB,qCAElBC,KAAM3B,EAAY4B,UAAU,CAC1BP,OAAQA,EACRQ,OAAQ,EAAKC,MAAMD,OACnBE,QAAS,EACTC,MAAOC,aAAaC,QAAQ,SAC5BZ,KAAMa,KAAKP,UAAUN,OAGtBc,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACE,GACL,IAAgB,IAAZA,EAAKC,IAA6B,SAAbD,EAAKE,KAA9B,CAKA,IAAgB,IAAZF,EAAKC,IAA6B,QAAbD,EAAKE,KAW9B,OANAC,YAAW,WACT,EAAKlB,SAAS,CACZC,SAAS,GAEb,GAAG,KAEIc,EAVLI,OAAOC,SAASC,SAAW,OAH7B,MAFEF,OAAOC,SAASC,SAAW,GAgB/B,IAAE,OACK,SAACC,GACNjC,QAAQC,IAAIgC,GACZ,EAAKtB,SAAS,CACZC,SAAS,GAEb,GACJ,IAnFE,EAAKM,MAAQ,CACXD,OAAQ,SACRiB,YAAa,GACbtB,SAAS,EAETuB,OAAQ,GACRC,KAAM,GAENC,WAAY,GAEZC,QAAS,GACT7C,OAAQ,GAER8C,KAAM,GAENC,QAAS,GACTC,OAAQ,GAERC,UAAW,IAEX,CACJ,CA4XC,OA5XA,8DAED,oGACmBnD,KAAKoD,QAAQ,WAAU,OAApCjC,EAAO,EAAH,KAIRnB,KAAKoB,SAAS,CACZuB,YAAaxB,EAAKkC,YAAYC,KAC9BV,OAAQzB,EAAKyB,OACbC,KAAM1B,EAAKyB,OAAO,GAAG7B,GACrB+B,WAAY3B,EAAK4B,QACjBE,QAAS9B,EAAK6B,OAGhBO,SAASC,MAAQrC,EAAKkC,YAAYC,KAAK,gDACxC,0FAgDD,WAAiBG,GAAK,yEAInB,OAFKtC,EAAO,CACXuC,QAASD,EAAME,OAAOC,OACvB,SAEiB5D,KAAKoD,QAAQ,cAAejC,GAAK,OAA7Ce,EAAM,EAAH,KAITlC,KAAKoB,SAAS,CACZyB,KAAMY,EAAME,OAAOC,MACnBd,WAAYZ,IACX,gDACJ,wEAED,SAAauB,EAAOG,GAClB5D,KAAKoB,SAAS,CACZlB,OAAQ0D,EACRV,OAAQ,IAEZ,GAAC,uBAED,SAAUO,EAAOG,GACf5D,KAAKoB,SAAS,CACZ8B,OAAQU,EACR1D,OAAQ,IAEZ,GAAC,+CAED,sFAKG,OAJKiB,EAAO,CACXuC,QAAS1D,KAAK2B,MAAMkB,KACpBE,QAAS/C,KAAK2B,MAAMzB,OACpB2D,IAAK7D,KAAK2B,MAAMuB,QACjB,SAEiBlD,KAAKoD,QAAQ,WAAYjC,GAAK,OAA1Ce,EAAM,EAAH,KAETzB,QAAQC,IAAIwB,GAEZlC,KAAK8D,iBAAiB5B,GAAK,gDAE5B,2EAED,SAAiBA,GACf,IAAMa,EAAUb,EAAIa,QAEdgB,EAAQ7B,EAAI8B,mBAEZC,EAAgBlB,EAAQmB,KAAI,SAACC,GASjC,OARAA,EAAGhE,MAAQ,GAEX4D,EAAMK,SAAQ,SAACC,GACTA,EAAGC,YAAcH,EAAGpD,IACtBoD,EAAGhE,MAAMoE,KAAKF,EAElB,IAEOF,CACT,IAEAnE,KAAKoB,SAAS,CACZ4B,KAAMd,EAAI6B,MACVhB,QAASkB,EACTd,UAAWjB,EAAIiB,WAEnB,GAAC,yBAED,SAAYmB,EAAWE,EAAQrE,GAG7B,IAAM4C,EAAU/C,KAAK2B,MAAMoB,QACrBC,EAAOhD,KAAK2B,MAAMqB,KAIxBA,EAAKoB,SAAQ,SAAAP,GACXA,EAAIb,KAAKoB,SAAQ,SAAAC,GACfA,EAAGN,MAAMK,SAAQ,SAAAhE,GACVA,EAAKW,KAAOyD,IACbpE,EAAKD,MAAQA,EACbC,EAAKkE,UAAYA,EAEvB,GACF,GACF,IAEAvB,EAAQqB,SAAQ,SAAAlE,GACdA,EAAOC,MAAMiE,SAAQ,SAAAjE,GAChBA,EAAMsE,UAAYD,GAAUrE,EAAMmE,YAAcA,IACjDnE,EAAMG,YAAc,KAElBH,EAAMsE,UAAYD,GAAUrE,EAAMmE,YAAcA,IAClDnE,EAAMG,YAAc,IAExB,GACF,IAEAN,KAAKoB,SAAS,CACZ2B,QAAAA,EACAC,KAAAA,GAEJ,GAAC,2CAED,wFAkBE,OAjBMA,EAAOhD,KAAK2B,MAAMqB,KAEpBe,EAAQ,GAEZf,EAAKoB,SAAQ,SAAAP,GACXA,EAAIb,KAAKoB,SAAQ,SAAAC,GACfA,EAAGN,MAAMK,SAAQ,SAAAhE,GACf2D,EAAMQ,KAAKnE,EACb,GACF,GACF,IAEMe,EAAO,CACXuC,QAAS1D,KAAK2B,MAAMkB,KACpBkB,MAAOA,GAGT,SAEM/D,KAAKoD,QAAQ,OAAQjC,GAAK,OAEhCnB,KAAK0E,eAEL,gDACD,iEAED,WAAS,WAEP,OACE,gCACE,gBAACC,EAAA,EAAQ,CAACC,KAAM5E,KAAK2B,MAAMN,SACzB,gBAACwD,EAAA,EAAgB,CAACC,MAAM,aAG1B,gBAACC,EAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,GAAI,GAC9B,gBAACH,EAAA,GAAI,CAAC3E,MAAI,EAAC+E,GAAI,GAAIC,GAAI,IACrB,0BAAKpF,KAAK2B,MAAMgB,eAIpB,gBAACoC,EAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGI,eAAe,SAASH,GAAI,GAEtD,gBAACH,EAAA,GAAI,CAAC3E,MAAI,EAAC+E,GAAI,GAAIC,GAAI,GACrB,gBAAC,KAAQ,CACPjE,KAAMnB,KAAK2B,MAAMiB,OACjBgB,MAAO5D,KAAK2B,MAAMkB,KAClByC,KAAMtF,KAAKuF,WAAWzE,KAAKd,MAC3BwF,MAAM,WAIV,gBAACT,EAAA,GAAI,CAAC3E,MAAI,EAAC+E,GAAI,GAAIC,GAAI,GACrB,gBAAC,KAAc,CACbI,MAAM,YACNC,UAAU,EACVtE,KAAMnB,KAAK2B,MAAMmB,WACjBc,MAAO5D,KAAK2B,MAAMzB,OAClBoF,KAAMtF,KAAK0F,aAAa5E,KAAKd,SAIjC,gBAAC+E,EAAA,GAAI,CAAC3E,MAAI,EAAC+E,GAAI,GAAIC,GAAI,GACrB,gBAAC,KAAc,CACbI,MAAM,YACNC,UAAU,EACVtE,KAAMnB,KAAK2B,MAAMsB,QACjBW,MAAO5D,KAAK2B,MAAMuB,OAClBoC,KAAMtF,KAAK2F,UAAU7E,KAAKd,SAI9B,gBAAC+E,EAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG7E,MAAI,EAACgF,GAAI,GAErC,gBAACL,EAAA,GAAI,CAAC3E,MAAI,EAAC+E,GAAI,GAAIC,GAAI,GACrB,gBAACQ,EAAA,EAAM,CACLC,QAAQ,YACRC,MAAO,CAAEC,WAAY,UACrBnF,QAASZ,KAAK0E,aAAa5D,KAAKd,OAAM,oBAM1C,gBAAC+E,EAAA,GAAI,CAAC3E,MAAI,EAAC+E,GAAI,GAAIC,GAAI,GACrB,gBAACQ,EAAA,EAAM,CACLE,MAAO,CAAEC,WAAY,SAAUC,gBAAiB,UAAWlB,MAAO,SAClElE,QAASZ,KAAKiG,SAASnF,KAAKd,OAAM,0BAUtCA,KAAK2B,MAAMqB,KAAKkD,OAChB,gBAACnB,EAAA,GAAI,CAACC,WAAS,EAACC,QAAS,GACvB,gBAACF,EAAA,GAAI,CAAC3E,MAAI,EAAC+E,GAAI,GAAIC,GAAI,IACrB,gBAACe,EAAA,EAAc,CAACC,GAAI,CAAEC,UAAW,CAAElB,GAAI,OAAQC,GAAI,OACjD,gBAACkB,EAAA,EAAK,CAACC,cAAY,EAAC,aAAW,gBAE7B,gBAACC,EAAA,EAAS,KAEV,gBAACC,EAAA,EAAQ,CAACL,GAAI,CAAEM,OAAQ,IACpB,gBAAC/F,EAAA,EAAS,CACVyF,GAAI,CAAEM,OAAQ,IAAI,iBAElB,gBAAC/F,EAAA,EAAS,CAACyF,GAAI,CAAEO,YAAa,EAAGC,UAAW,SAAUC,WAAY,SAAW7G,KAAK2B,MAAMwB,WACxF,gBAACxC,EAAA,EAAS,CAACmG,QAAO,UAAK,EAAgC,EAA5B9G,KAAK2B,MAAMoB,QAAQmD,WAGhD,gBAACO,EAAA,EAAQ,CAACL,GAAI,CAAEM,OAAQ,IACtB,gBAAC/F,EAAA,EAAS,CAACyF,GAAI,CAAEM,OAAQ,IAAI,aAC7B,gBAAC/F,EAAA,EAAS,kBACV,gBAACA,EAAA,EAAS,kBACV,gBAACA,EAAA,EAAS,eACTX,KAAK2B,MAAMoB,QAAQmB,KAAI,SAAChE,EAAQ6G,GAAG,OAClC,gBAACpG,EAAA,EAAS,CACRoG,IAAKA,EACLjB,MAAO,CACLkB,SAAU,IACVJ,UAAW,WAIZ1G,EAAOoD,KACE,MAKlB,gBAAC2D,EAAA,EAAS,KACPjH,KAAK2B,MAAMqB,KAAKkB,KAAI,SAAC9D,EAAM2G,GAAG,OAC7B,gBAAC,WAAc,CAACA,IAAKA,GACnB,gBAACN,EAAA,EAAQ,KACP,gBAAC9F,EAAA,EAAS,CACRmF,MAAO,CAAEoB,SAAU,SAAUC,QAAS,OAAQnB,gBAAiB,YAE9D5F,EAAKkD,MAER,gBAAC3C,EAAA,EAAS,CACVmF,MAAO,CAAEE,gBAAiB,WAC1Bc,QAAO,UAAK,EAAgC,EAA5B,EAAKnF,MAAMoB,QAAQmD,WAKpC9F,EAAK4C,KAAKkB,KAAI,SAACkD,EAAUC,GAAO,OAC/B,gBAAC,WAAc,CAACN,IAAKM,GACnB,gBAACZ,EAAA,EAAQ,CACPL,GAAI,CAAE,OAAQ,CAAEJ,gBAAiB,UAAWW,YAAa,UAEzD,gBAAChG,EAAA,EAAS,KAAEyG,EAAS9D,MACrB,gBAAC3C,EAAA,EAAS,MAEG,IAAZ0G,EACC,gBAAC1G,EAAA,EAAS,CAACyF,GAAI,CAAEQ,UAAW,WAAW,QAIvC,gBAAC,WAAc,CAACG,IAAKM,GACnB,gBAAC1G,EAAA,EAAS,OAGd,gBAACA,EAAA,EAAS,MACT,EAAKgB,MAAMoB,QAAQmB,KAAI,SAAChE,EAAQ6G,GAAG,OAClC,gBAAC,WAAc,CAACA,IAAKA,GACnB,gBAACpG,EAAA,EAAS,MACK,KAIpByG,EAASrD,MAAMG,KAAI,SAAC9D,EAAMkH,GAAC,OAC1B,gBAACb,EAAA,EAAQ,CAACM,IAAKO,EAAGC,OAAK,GACrB,gBAAC5G,EAAA,EAAS,CAACN,UAAU,YAClBD,EAAKkD,MAER,gBAAC3C,EAAA,EAAS,MAEV,gBAACA,EAAA,EAAS,KAAEP,EAAKD,OACjB,gBAACQ,EAAA,EAAS,KAAEP,EAAKoH,KAChB,EAAK7F,MAAMoB,QAAQmB,KAAI,SAAChE,EAAQ6G,GAAG,OACnC,gBAAC,WAAc,CAACA,IAAKA,GACpB7G,EAAOC,MAAMsH,MAAK,SAACpD,GAAE,OAAKA,EAAGI,UAAYrE,EAAKW,EAAE,IAChD,gBAAChB,EAAU,CACTG,OAASA,EACTE,KAAOA,EACPD,MAAQD,EAAOC,MAAMsH,MAAK,SAACpD,GAAE,OAAKA,EAAGI,UAAYrE,EAAKW,EAAE,IACxDF,YAAc,EAAKA,YAAYC,KAAK,KAGtC,gBAACH,EAAA,EAAS,MAEI,IAEP,IAEE,IAEJ,SAxGJ,KAkHjC,KAAC,EArZU,CAASK,EAAAA,WAwZf,SAAS0G,IACd,OAAO,gBAACzG,EAAO,KACjB,C,iBCndM,IAAI0G,EAAY,EAAQ,KAAR,CAA0FjG,EAAOX,GAAI,CAAC,QAAS,IAC/HW,EAAOkG,IAAIC,QAAQF,GACnBjG,EAAOkG,IAAIE,YAAOC,EAAWJ,E","sources":["webpack://package.json/./src/components/tender/tender.component.jsx","webpack://package.json/./src/components/tender/tender.style.scss?9070"],"sourcesContent":["import React from 'react';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { MyAutocomplite, MySelect } from '../../stores/elements';\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass TenderCell extends React.Component {\r\n\r\n  // shouldComponentUpdate(nextProps){\r\n\r\n  //   let array1 = Object.values(nextProps.price);\r\n  //   let array2 = Object.values(this.props.price);\r\n\r\n  //   let is_same = array1.length === array2.length && array1.every(function (element, index) { return element === array2[index] });\r\n\r\n  //   return is_same;\r\n  // }\r\n\r\n  render(){\r\n    const { vendor, price, item } = this.props;\r\n\r\n    let className = 'tdprice ';\r\n\r\n    if( price.checkTender == '1' ){\r\n      className += 'chooseCell ';\r\n    }\r\n\r\n    if( price.price == price.min_price ){\r\n      className += 'minPriceCell ';\r\n    }\r\n\r\n    if( price.price == price.max_price ){\r\n      className += 'maxPriceCell ';\r\n    }\r\n\r\n    console.log('render')\r\n\r\n    return (\r\n      <TableCell\r\n        className={className}\r\n        onClick={this.props.changePrice.bind(this, vendor.id, item.id, price.price)}\r\n      >\r\n        {price.price}\r\n      </TableCell>\r\n    )\r\n  }\r\n}\r\n\r\nclass Tender_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      module: 'tender',\r\n      module_name: '',\r\n      is_load: false,\r\n\r\n      cities: [],\r\n      city: '',\r\n\r\n      allVendors: [],\r\n\r\n      vendors: [],\r\n      vendor: [],\r\n\r\n      cats: [],\r\n\r\n      newCats: [],\r\n      newCat: '',\r\n\r\n      all_price: '',\r\n\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let data = await this.getData('get_all');\r\n\r\n    // console.log(data);\r\n\r\n    this.setState({\r\n      module_name: data.module_info.name,\r\n      cities: data.cities,\r\n      city: data.cities[0].id,\r\n      allVendors: data.vendors,\r\n      newCats: data.cats,\r\n    });\r\n\r\n    document.title = data.module_info.name;\r\n  }\r\n\r\n  getData = (method, data = {}) => {\r\n    this.setState({\r\n      is_load: true,\r\n    });\r\n\r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: queryString.stringify({\r\n        method: method,\r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify(data),\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json.st === false && json.type == 'redir') {\r\n          window.location.pathname = '/';\r\n          return;\r\n        }\r\n\r\n        if (json.st === false && json.type == 'auth') {\r\n          window.location.pathname = '/auth';\r\n          return;\r\n        }\r\n\r\n        setTimeout(() => {\r\n          this.setState({\r\n            is_load: false,\r\n          });\r\n        }, 300);\r\n\r\n        return json;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({\r\n          is_load: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  async changeCity(event) {\r\n\r\n    const data = {\r\n      city_id: event.target.value,\r\n    };\r\n\r\n    const res = await this.getData('get_vendors', data);\r\n\r\n    // console.log(res)\r\n\r\n    this.setState({\r\n      city: event.target.value,\r\n      allVendors: res,\r\n    });\r\n  }\r\n\r\n  changeVendor(event, value) {\r\n    this.setState({\r\n      vendor: value,\r\n      newCat: '',\r\n    });\r\n  }\r\n\r\n  changeCat(event, value) {\r\n    this.setState({\r\n      newCat: value,\r\n      vendor: [],\r\n    });\r\n  }\r\n\r\n  async getDataTable() {\r\n    const data = {\r\n      city_id: this.state.city,\r\n      vendors: this.state.vendor,\r\n      cat: this.state.newCat,\r\n    };\r\n\r\n    const res = await this.getData('get_data', data);\r\n\r\n    console.log(res)\r\n\r\n    this.getDataTableCell(res);\r\n\r\n  }\r\n\r\n  getDataTableCell(res) {\r\n    const vendors = res.vendors;\r\n\r\n    const items = res.vendor_items_price;\r\n\r\n    const vendors_items = vendors.map((el) => {\r\n      el.price = [];\r\n\r\n      items.forEach((it) => {\r\n        if (it.vendor_id === el.id) {\r\n          el.price.push(it);\r\n        }\r\n      });\r\n\r\n      return el;\r\n    });\r\n\r\n    this.setState({\r\n      cats: res.items,\r\n      vendors: vendors_items,\r\n      all_price: res.all_price\r\n    });\r\n  }\r\n\r\n  changePrice(vendor_id, cat_id, price) {\r\n    // console.log(vendor_id, cat_id, price)\r\n\r\n    const vendors = this.state.vendors;\r\n    const cats = this.state.cats;\r\n\r\n    // console.log(cats);\r\n\r\n    cats.forEach(cat => {\r\n      cat.cats.forEach(it => {\r\n        it.items.forEach(item => {\r\n            if(item.id === cat_id) {\r\n              item.price = price;\r\n              item.vendor_id = vendor_id;\r\n            }\r\n        })\r\n      })\r\n    })\r\n\r\n    vendors.forEach(vendor => {\r\n      vendor.price.forEach(price => {\r\n        if(price.item_id === cat_id && price.vendor_id === vendor_id) {\r\n          price.checkTender = '1';\r\n        } \r\n        if (price.item_id === cat_id && price.vendor_id !== vendor_id) {\r\n          price.checkTender = '0';\r\n        }\r\n      })\r\n    })\r\n\r\n    this.setState({\r\n      vendors,\r\n      cats,\r\n    });\r\n  }\r\n\r\n  async saveData () {\r\n    const cats = this.state.cats;\r\n\r\n    let items = [];\r\n\r\n    cats.forEach(cat => {\r\n      cat.cats.forEach(it => {\r\n        it.items.forEach(item => {\r\n          items.push(item)\r\n        })\r\n      })\r\n    })\r\n\r\n    const data = {\r\n      city_id: this.state.city,\r\n      items: items\r\n    };\r\n\r\n    // console.log(data);\r\n\r\n    await this.getData('save', data);\r\n\r\n    this.getDataTable();\r\n\r\n    // console.log(res)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <Backdrop open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n\r\n        <Grid container spacing={3} mb={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3} justifyContent=\"center\" mb={5}>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <MySelect\r\n              data={this.state.cities}\r\n              value={this.state.city}\r\n              func={this.changeCity.bind(this)}\r\n              label=\"Город\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <MyAutocomplite\r\n              label=\"Поставщик\"\r\n              multiple={true}\r\n              data={this.state.allVendors}\r\n              value={this.state.vendor}\r\n              func={this.changeVendor.bind(this)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <MyAutocomplite\r\n              label=\"Категория\"\r\n              multiple={false}\r\n              data={this.state.newCats}\r\n              value={this.state.newCat}\r\n              func={this.changeCat.bind(this)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid container spacing={3} item sm={3}>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ whiteSpace: 'nowrap' }}\r\n              onClick={this.getDataTable.bind(this)}\r\n            >\r\n              Обновить данные\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <Button\r\n              style={{ whiteSpace: 'nowrap', backgroundColor: '#00a550', color: 'white' }}\r\n              onClick={this.saveData.bind(this)}\r\n            >\r\n              Сохранить изменения\r\n            </Button>\r\n          </Grid>\r\n\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n        {!this.state.cats.length ? null : (\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={12}>\r\n              <TableContainer sx={{ maxHeight: { xs: 'none', sm: 650 } }}>\r\n                <Table stickyHeader aria-label=\"sticky table\" >\r\n\r\n                  <TableHead>\r\n\r\n                  <TableRow sx={{ zIndex: 6 }}>\r\n                      <TableCell \r\n                      sx={{ zIndex: 7 }} \r\n                      >Средний закуп</TableCell>\r\n                      <TableCell sx={{ borderRight: 0, textAlign: 'center', fontWeight: 'bold' }}>{this.state.all_price}</TableCell>\r\n                      <TableCell colSpan={`${2 + this.state.vendors.length * 2}`}></TableCell>\r\n                    </TableRow>\r\n\r\n                    <TableRow sx={{ zIndex: 1 }} >\r\n                      <TableCell sx={{ zIndex: 3 }}>Категория</TableCell>\r\n                      <TableCell>Параметры</TableCell>\r\n                      <TableCell>Выбранный</TableCell>\r\n                      <TableCell>Расход</TableCell>\r\n                      {this.state.vendors.map((vendor, key) => (\r\n                        <TableCell\r\n                          key={key}\r\n                          style={{\r\n                            maxWidth: 100,\r\n                            textAlign: 'center'\r\n                          }}\r\n                          \r\n                        >\r\n                          {vendor.name}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {this.state.cats.map((item, key) => (\r\n                      <React.Fragment key={key}>\r\n                        <TableRow>\r\n                          <TableCell\r\n                            style={{ position: 'sticky', display: 'flex', backgroundColor: '#ADD8E6' }}\r\n                          >\r\n                            {item.name}\r\n                          </TableCell>\r\n                          <TableCell\r\n                          style={{ backgroundColor: '#ADD8E6' }}\r\n                          colSpan={`${3 + this.state.vendors.length * 2}`}\r\n                          >\r\n                          </TableCell>\r\n                        </TableRow>\r\n\r\n                        {item.cats.map((category, key_cat) => (\r\n                          <React.Fragment key={key_cat}>\r\n                            <TableRow\r\n                              sx={{ '& td': { backgroundColor: '#ADD8E6', borderRight: 'none' } }}\r\n                            >\r\n                              <TableCell>{category.name}</TableCell>\r\n                              <TableCell></TableCell>\r\n                              \r\n                              {key_cat === 0 ? (\r\n                                <TableCell sx={{ textAlign: 'center' }}>\r\n                                  Цена\r\n                                </TableCell>\r\n                              ) : (\r\n                                <React.Fragment key={key_cat}>\r\n                                  <TableCell></TableCell>\r\n                                </React.Fragment>\r\n                              )}\r\n                              <TableCell></TableCell>\r\n                              {this.state.vendors.map((vendor, key) => (\r\n                                <React.Fragment key={key}>\r\n                                  <TableCell></TableCell>\r\n                                </React.Fragment>\r\n                              ))}\r\n                            </TableRow>\r\n\r\n                            {category.items.map((item, k) => (\r\n                              <TableRow key={k} hover>\r\n                                <TableCell className=\"td_color\">\r\n                                  {item.name}\r\n                                </TableCell>\r\n                                <TableCell></TableCell>\r\n                                \r\n                                <TableCell>{item.price}</TableCell>\r\n                                <TableCell>{item.ras}</TableCell>\r\n                                {this.state.vendors.map((vendor, key) => (\r\n                                 <React.Fragment key={key}>\r\n                                 {vendor.price.find((it) => it.item_id === item.id) ? (\r\n                                  <TenderCell \r\n                                    vendor={ vendor }\r\n                                    item={ item }\r\n                                    price={ vendor.price.find((it) => it.item_id === item.id) }\r\n                                    changePrice={ this.changePrice.bind(this) }\r\n                                   />\r\n                                  ) : (\r\n                                  <TableCell></TableCell>\r\n                                 )}\r\n                               </React.Fragment>\r\n                                ))}\r\n                              </TableRow>\r\n                            ))}\r\n                          </React.Fragment>\r\n                        ))}\r\n                      </React.Fragment>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport function Tender() {\r\n  return <Tender_ />;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1668339426063\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","TenderCell","this","props","vendor","price","item","className","checkTender","min_price","max_price","console","log","TableCell","onClick","changePrice","bind","id","React","Tender_","method","data","setState","is_load","fetch","headers","body","stringify","module","state","version","login","localStorage","getItem","JSON","then","res","json","st","type","setTimeout","window","location","pathname","err","module_name","cities","city","allVendors","vendors","cats","newCats","newCat","all_price","getData","module_info","name","document","title","event","city_id","target","value","cat","getDataTableCell","items","vendor_items_price","vendors_items","map","el","forEach","it","vendor_id","push","cat_id","item_id","getDataTable","Backdrop","open","CircularProgress","color","Grid","container","spacing","mb","xs","sm","justifyContent","func","changeCity","label","multiple","changeVendor","changeCat","Button","variant","style","whiteSpace","backgroundColor","saveData","length","TableContainer","sx","maxHeight","Table","stickyHeader","TableHead","TableRow","zIndex","borderRight","textAlign","fontWeight","colSpan","key","maxWidth","TableBody","position","display","category","key_cat","k","hover","ras","find","Tender","cssReload","hot","dispose","accept","undefined"],"sourceRoot":""}