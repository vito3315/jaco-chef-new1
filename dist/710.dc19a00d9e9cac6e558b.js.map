{"version":3,"file":"710.dc19a00d9e9cac6e558b.js","mappings":"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","sources":["webpack://package.json/./src/components/cat_work/cat_work.component.jsx","webpack://package.json/./src/components/cat_work/cat_work.style.scss"],"sourcesContent":["import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport { MyTextInput, TextEditor } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nclass CatWork_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      module: 'cat_work',\n      module_name: '',\n      is_load: false,\n      \n      cats: [],\n      modalDialog: false,\n      modalDialogNew: false,\n\n      nameCat: '',\n      editText: '',\n\n      nameCatNew: '',\n      editTextNew: '',\n\n      config: {\n        readonly: false // all options from https://xdsoft.net/jodit/doc/\n      },\n\n      showCat: null\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      cats: data.cats\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        window.location.pathname = '/';\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  openCat(item){\n    this.setState({\n      modalDialog: true,\n      showCat: item,\n      nameCat: item.name,\n      editText: item.text\n    })\n  }\n\n  async save(){\n    let data = {\n      cat_id: this.state.showCat.id,\n      name: this.state.nameCat,\n      text: document.getElementById('EditorEdit').value\n    };\n\n    let res = await this.getData('save_edit', data);\n\n    if( res.st === false ){\n      alert(res.text)\n    }else{\n      this.setState({ \n        modalDialog: false, \n        showCat: null, \n        nameCat: '' \n      })\n\n      document.getElementById('EditorEdit').value = '';\n\n      res = await this.getData('get_all');\n    \n      this.setState({\n        cats: res.cats\n      })\n    }\n  }\n\n  async saveNew(){\n    let data = {\n      name: this.state.nameCatNew,\n      text: document.getElementById('EditorNew').value\n    };\n\n    let res = await this.getData('save_new', data);\n\n    if( res.st === false ){\n      alert(res.text)\n    }else{\n      this.setState({ \n        modalDialogNew: false, \n        editTextNew: '', \n        nameCatNew: '' \n      })\n\n      document.getElementById('EditorNew').value = '';\n\n      res = await this.getData('get_all');\n    \n      this.setState({\n        cats: res.cats\n      })\n    }\n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop style={{ zIndex: 99 }} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        { !this.state.showCat ? null :\n          <Dialog\n            open={this.state.modalDialog}\n            onClose={ () => { this.setState({ modalDialog: false, showCat: null, editText: '', nameCat: '' }) } }\n          >\n            <DialogTitle>Категория уборки \"{this.state.showCat.name}\"</DialogTitle>\n            <DialogContent style={{ paddingTop: 10 }}>\n              \n              <Grid container spacing={3}>\n                \n                <Grid item xs={12} sm={12}>\n                  <MyTextInput value={ this.state.nameCat } func={ (event) => { this.setState({ nameCat: event.target.value }) } } label='Название категории' />\n                </Grid>\n\n                <Grid item xs={12} sm={12}>\n                  <TextEditor id=\"EditorEdit\" text={this.state.showCat.text} />\n                </Grid>\n                \n              </Grid>\n\n            </DialogContent>\n            <DialogActions>\n              <Button color=\"primary\" onClick={this.save.bind(this)}>Сохранить</Button>\n            </DialogActions>\n          </Dialog>\n        }\n\n        <Dialog\n          open={this.state.modalDialogNew}\n          onClose={ () => { this.setState({ modalDialogNew: false, editTextNew: '', nameCatNew: '' }) } }\n        >\n          <DialogTitle>Новая категория уборки</DialogTitle>\n          <DialogContent style={{ paddingTop: 10 }}>\n            \n            <Grid container spacing={3}>\n              \n              <Grid item xs={12} sm={12}>\n                <MyTextInput value={ this.state.nameCatNew } func={ (event) => { this.setState({ nameCatNew: event.target.value }) } } label='Название категории' />\n              </Grid>\n\n              <Grid item xs={12} sm={12}>\n                <TextEditor id=\"EditorNew\" text={''} />\n              </Grid>\n              \n            </Grid>\n\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={this.saveNew.bind(this)}>Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n\n          <Grid item xs={12} sm={12}>\n            <Button variant=\"contained\" color=\"primary\" onClick={ () => { this.setState({ modalDialogNew: true }) } }>Добавить категорию</Button>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            <List style={{ width: '100%' }}>\n              { this.state.cats.map( (item, key) =>\n                <ListItem button key={key} onClick={ this.openCat.bind(this, item) }>\n                  <ListItemText primary={ item.name } />\n                </ListItem>\n              ) }\n            </List>\n          </Grid>\n        \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function CatWork() {\n  return (\n    <CatWork_ />\n  );\n}","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1669228465826\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","CatWork_","props","method","data","setState","is_load","fetch","headers","body","stringify","module","state","version","login","localStorage","getItem","JSON","then","res","json","st","type","setTimeout","window","location","pathname","err","console","log","module_name","cats","modalDialog","modalDialogNew","nameCat","editText","nameCatNew","editTextNew","config","readonly","showCat","this","getData","module_info","name","document","title","item","text","cat_id","id","getElementById","value","alert","Backdrop","style","zIndex","open","CircularProgress","color","Dialog","onClose","DialogTitle","DialogContent","paddingTop","Grid","container","spacing","xs","sm","func","event","target","label","DialogActions","Button","onClick","save","bind","saveNew","variant","List","width","map","key","ListItem","button","openCat","ListItemText","primary","React","CatWork","cssReload","hot","dispose","accept","undefined"],"sourceRoot":""}