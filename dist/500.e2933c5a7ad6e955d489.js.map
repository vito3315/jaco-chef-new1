<<<<<<< HEAD
{"version":3,"file":"500.e2933c5a7ad6e955d489.js","mappings":"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","sources":["webpack://package.json/./src/components/app_work_point/app_work_point.component.jsx","webpack://package.json/./src/components/app_work_point/app_work_point.style.scss"],"sourcesContent":["import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport SendIcon from '@mui/icons-material/Send';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n\nimport { MyTextInput, MySelect } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nclass AppWorkPoint_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      module: 'app_work_point',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point_id: 0,\n\n      apps: [],\n      app_id: 0,\n\n      allList: [],\n      allListRender: [],\n      thisList: []\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      points: data.points,\n      point_id: data.points[0].id,\n      apps: data.apps,\n      app_id: data.apps[0].id\n    })\n    \n    document.title = data.module_info.name;\n\n    setTimeout( () => {\n      this.getWorks();\n    }, 300 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        window.location.pathname = '/';\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  changeApp(event){\n    this.setState({\n      app_id: event.target.value\n    });\n\n    setTimeout( () => {\n      this.getWorks();\n    }, 300 )\n  }\n\n  async getWorks(){\n    let data = {\n      point_id: this.state.point_id,\n      app_id: this.state.app_id\n    };\n\n    let res = await this.getData('get_works', data);\n\n    console.log( res )\n\n    this.setState({\n      allList: res.all_work,\n      thisList: res.this_work,\n    })\n\n    setTimeout( () => {\n      this.checkList();\n    }, 300 )\n  }\n\n  checkList(){\n    let allList = this.state.allList;\n    let thisList = this.state.thisList;\n\n    thisList.map( (Titem) => {\n      let newArr = [];\n\n        allList.map( (Aitem) => {\n          if( parseInt(Aitem.id) != parseInt(Titem.id) ){\n            newArr.push(Aitem);\n          }\n        })\n\n        allList = newArr;\n    } )\n\n    this.setState({\n      allListRender: allList\n    })\n  }\n\n  add(id, name){\n    let thisList = this.state.thisList;\n    let allList = this.state.allList;\n\n    let check = thisList.find( (item, key) => parseInt(item['id']) == parseInt(id) );\n    let thisItem = allList.find( (item, key) => parseInt(item['id']) == parseInt(id) );\n\n\t\tif( !check ){\n\t\t\tthisList.push({id: id, name: name, time_min: 0, dop_time: 0, time_min: thisItem.time_min})\n\t\t}\n\n\t\tthis.setState({\n      thisList: thisList\n    })\n\n    setTimeout( () => {\n      this.checkList();\n    }, 300 )\n  }\n\n  del(id, name){\n    let new_arr = [];\n    let thisList = this.state.thisList;\n\n\t\tthisList.map(function(item, key){\n\t\t\tif( parseInt(item['id']) != parseInt(id) ){\n\t\t\t\tnew_arr.push( item )\n\t\t\t}\n\t\t})\n\n\t\tthis.setState({\n      thisList: new_arr\n    })\n\n    setTimeout( () => {\n      this.checkList();\n    }, 300 )\n\t}\n\n  async save(){\n    let data = {\n      point_id: this.state.point_id,\n      app_id: this.state.app_id,\n      items: this.state.thisList\n    };\n\n    let fake_item = null;\n\n    this.state.thisList.map( (item, key) => {\n      if( item.dop_time.length == 0 ){\n        fake_item = item;\n      }\n    } )\n\n    console.log(fake_item  )\n\n    if( fake_item ){\n      alert('У позиции \"'+fake_item.name+'\" не указано доп время');\n\n      return ;\n    }\n\n    let res = await this.getData('save', data);\n\n    console.log( res )\n\n    alert(res.text)\n  }\n\n  changeDopTime(key, event){\n    let data = event.target.value;\n    let list = this.state.thisList;\n\n    if( !isNaN(data) || data == ''  ){\n      list[ key ]['dop_time'] = data == '' ? '' : parseInt(data);\n\n      this.setState({\n        thisList: list\n      })\n    }\n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop style={{ zIndex: 99 }} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <MySelect data={this.state.points} value={this.state.point_id} func={ (event) => { this.setState({ point_id: event.target.value }) } } label='Точка' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MySelect data={this.state.apps} value={this.state.app_id} func={ this.changeApp.bind(this) } label='Должность' />\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.getWorks.bind(this)}>Обновить данные</Button>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <List style={{ width: '100%' }}>\n              { this.state.allListRender.map( (item, key) =>\n                <ListItem key={key} style={{ borderBottom: '1px solid #e5e5e5' }}>\n                  <ListItemText primary={ item.name } />\n                  <SendIcon onClick={this.add.bind(this, item.id, item.name)} />\n                </ListItem>\n              ) }\n            </List>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Наименование</TableCell>\n                  <TableCell>Основное время</TableCell>\n                  <TableCell>Доп время (в минутах)</TableCell>\n                  <TableCell><CloseIcon /></TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                \n                { this.state.thisList.map( (item, key) =>\n                  <TableRow key={key}>\n                    <TableCell>{item.name}</TableCell>\n                    <TableCell>{item.time_min} мин.</TableCell>\n                    <TableCell>\n                      <MyTextInput value={ item.dop_time } func={ this.changeDopTime.bind(this, key) } label='' />\n                    </TableCell>\n                    <TableCell>\n                      <CloseIcon onClick={this.del.bind(this, item.id, item.name)} style={{cursor: 'pointer'}} />\n                    </TableCell>\n                  </TableRow>\n                ) }\n              \n              </TableBody>\n            \n            </Table>\n\n          </Grid>\n        \n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.save.bind(this)}>Сохранить</Button>\n          </Grid>\n\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function AppWorkPoint() {\n  return (\n    <AppWorkPoint_ />\n  );\n}","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1664532173277\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","AppWorkPoint_","props","method","data","setState","is_load","fetch","headers","body","stringify","module","state","version","login","localStorage","getItem","JSON","then","res","json","st","type","setTimeout","window","location","pathname","err","console","log","module_name","points","point_id","apps","app_id","allList","allListRender","thisList","this","getData","module_info","name","id","document","title","getWorks","event","target","value","all_work","this_work","checkList","map","Titem","newArr","Aitem","parseInt","push","check","find","item","key","thisItem","time_min","dop_time","new_arr","items","fake_item","length","alert","text","list","isNaN","Backdrop","style","zIndex","open","CircularProgress","color","Grid","container","spacing","xs","sm","func","label","changeApp","bind","Button","variant","onClick","List","width","ListItem","borderBottom","ListItemText","primary","Send","add","Table","size","TableHead","TableRow","TableCell","Close","TableBody","changeDopTime","del","cursor","save","React","AppWorkPoint","cssReload","hot","dispose","accept","undefined"],"sourceRoot":""}
=======
{"version":3,"file":"500.e2933c5a7ad6e955d489.js","mappings":"oZAsBA,IAAMA,EAAcC,EAAQ,MAEtBC,EAAAA,SAAAA,I,icACJ,WAAYC,GAAO,4BACjB,cAAMA,IADW,6BAsCT,SAACC,GAAsB,IAAdC,EAAc,uDAAP,CAAC,EAMzB,OAJA,EAAKC,SAAS,CACZC,SAAS,IAGJC,MAAM,wCAAyC,CACpDJ,OAAQ,OACRK,QAAS,CACP,eAAe,qCACjBC,KAAMV,EAAYW,UAAU,CAC1BP,OAAQA,EACRQ,OAAQ,EAAKC,MAAMD,OACnBE,QAAS,EACTC,MAAOC,aAAaC,QAAQ,SAC5BZ,KAAMa,KAAKP,UAAWN,OAEvBc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IAAgBF,MAAK,SAAAE,GAE9B,IAAgB,IAAZA,EAAKC,IAA6B,SAAbD,EAAKE,KAA9B,CAKA,IAAgB,IAAZF,EAAKC,IAA6B,QAAbD,EAAKE,KAW9B,OANAC,YAAY,WACV,EAAKlB,SAAS,CACZC,SAAS,GAEZ,GAAE,KAEIc,EAVLI,OAAOC,SAASC,SAAW,OAH5B,MAFCF,OAAOC,SAASC,SAAW,GAgB9B,IA9BM,OA+BA,SAAAC,GACLC,QAAQC,IAAKF,GACb,EAAKtB,SAAS,CACZC,SAAS,GAEZ,GACF,IA9EC,EAAKM,MAAQ,CACXD,OAAQ,iBACRmB,YAAa,GACbxB,SAAS,EAETyB,OAAQ,GACRC,SAAU,EAEVC,KAAM,GACNC,OAAQ,EAERC,QAAS,GACTC,cAAe,GACfC,SAAU,IAhBK,CAkBlB,C,qEAED,2GACmBC,KAAKC,QAAQ,WADhC,OACMnC,EADN,OAGEkC,KAAKjC,SAAS,CACZyB,YAAa1B,EAAKoC,YAAYC,KAC9BV,OAAQ3B,EAAK2B,OACbC,SAAU5B,EAAK2B,OAAO,GAAGW,GACzBT,KAAM7B,EAAK6B,KACXC,OAAQ9B,EAAK6B,KAAK,GAAGS,KAGvBC,SAASC,MAAQxC,EAAKoC,YAAYC,KAElClB,YAAY,WACV,EAAKsB,UACN,GAAE,KAfL,gD,oEA+DA,SAAUC,GAAM,WACdR,KAAKjC,SAAS,CACZ6B,OAAQY,EAAMC,OAAOC,QAGvBzB,YAAY,WACV,EAAKsB,UACN,GAAE,IACJ,G,2CAED,oGACMzC,EAAO,CACT4B,SAAUM,KAAK1B,MAAMoB,SACrBE,OAAQI,KAAK1B,MAAMsB,QAHvB,SAMkBI,KAAKC,QAAQ,YAAanC,GAN5C,OAMMe,EANN,OAQES,QAAQC,IAAKV,GAEbmB,KAAKjC,SAAS,CACZ8B,QAAShB,EAAI8B,SACbZ,SAAUlB,EAAI+B,YAGhB3B,YAAY,WACV,EAAK4B,WACN,GAAE,KAjBL,gD,oEAoBA,WACE,IAAIhB,EAAUG,KAAK1B,MAAMuB,QACVG,KAAK1B,MAAMyB,SAEjBe,KAAK,SAACC,GACb,IAAIC,EAAS,GAEXnB,EAAQiB,KAAK,SAACG,GACRC,SAASD,EAAMb,KAAOc,SAASH,EAAMX,KACvCY,EAAOG,KAAKF,EAEf,IAEDpB,EAAUmB,CACb,IAEDhB,KAAKjC,SAAS,CACZ+B,cAAeD,GAElB,G,iBAED,SAAIO,EAAID,GAAK,WACPJ,EAAWC,KAAK1B,MAAMyB,SACtBF,EAAUG,KAAK1B,MAAMuB,QAErBuB,EAAQrB,EAASsB,MAAM,SAACC,EAAMC,GAAP,OAAeL,SAASI,EAAI,KAAWJ,SAASd,EAAhD,IACvBoB,EAAW3B,EAAQwB,MAAM,SAACC,EAAMC,GAAP,OAAeL,SAASI,EAAI,KAAWJ,SAASd,EAAhD,IAE1BgB,GACJrB,EAASoB,MAAT,QAAef,GAAIA,EAAID,KAAMA,EAAMsB,SAAU,EAAGC,SAAU,GAA1D,WAAuEF,EAASC,WAGjFzB,KAAKjC,SAAS,CACVgC,SAAUA,IAGZd,YAAY,WACV,EAAK4B,WACN,GAAE,IACJ,G,iBAED,SAAIT,EAAID,GAAK,WACPwB,EAAU,GACC3B,KAAK1B,MAAMyB,SAEnBe,KAAI,SAASQ,EAAMC,GACvBL,SAASI,EAAI,KAAWJ,SAASd,IACpCuB,EAAQR,KAAMG,EAEf,IAEDtB,KAAKjC,SAAS,CACVgC,SAAU4B,IAGZ1C,YAAY,WACV,EAAK4B,WACN,GAAE,IACL,G,uCAEA,2FACM/C,EAAO,CACT4B,SAAUM,KAAK1B,MAAMoB,SACrBE,OAAQI,KAAK1B,MAAMsB,OACnBgC,MAAO5B,KAAK1B,MAAMyB,UAGhB8B,EAAY,KAEhB7B,KAAK1B,MAAMyB,SAASe,KAAK,SAACQ,EAAMC,GACF,GAAxBD,EAAKI,SAASI,SAChBD,EAAYP,EAEf,IAEDhC,QAAQC,IAAIsC,IAERA,EAjBN,uBAkBIE,MAAM,cAAcF,EAAU1B,KAAK,0BAlBvC,0CAuBkBH,KAAKC,QAAQ,OAAQnC,GAvBvC,OAuBMe,EAvBN,OAyBES,QAAQC,IAAKV,GAEbkD,MAAMlD,EAAImD,MA3BZ,iD,wEA8BA,SAAcT,EAAKf,GACjB,IAAI1C,EAAO0C,EAAMC,OAAOC,MACpBuB,EAAOjC,KAAK1B,MAAMyB,SAEjBmC,MAAMpE,IAAiB,IAARA,IAClBmE,EAAMV,GAAN,SAAkC,IAARzD,EAAa,GAAKoD,SAASpD,GAErDkC,KAAKjC,SAAS,CACZgC,SAAUkC,IAGf,G,oBAED,WAAQ,WACN,OACE,gCACE,gBAACE,EAAA,EAAD,CAAUC,MAAO,CAAEC,OAAQ,IAAMC,KAAMtC,KAAK1B,MAAMN,SAChD,gBAACuE,EAAA,EAAD,CAAkBC,MAAM,aAG1B,gBAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,gBAACF,EAAA,GAAD,CAAMnB,MAAI,EAACsB,GAAI,GAAIC,GAAI,IACrB,0BAAK7C,KAAK1B,MAAMkB,cAGlB,gBAACiD,EAAA,GAAD,CAAMnB,MAAI,EAACsB,GAAI,GAAIC,GAAI,GACrB,gBAAC,KAAD,CAAU/E,KAAMkC,KAAK1B,MAAMmB,OAAQiB,MAAOV,KAAK1B,MAAMoB,SAAUoD,KAAO,SAACtC,GAAY,EAAKzC,SAAS,CAAE2B,SAAUc,EAAMC,OAAOC,OAAU,EAAGqC,MAAM,WAE/I,gBAACN,EAAA,GAAD,CAAMnB,MAAI,EAACsB,GAAI,GAAIC,GAAI,GACrB,gBAAC,KAAD,CAAU/E,KAAMkC,KAAK1B,MAAMqB,KAAMe,MAAOV,KAAK1B,MAAMsB,OAAQkD,KAAO9C,KAAKgD,UAAUC,KAAKjD,MAAQ+C,MAAM,eAGtG,gBAACN,EAAA,GAAD,CAAMnB,MAAI,EAACsB,GAAI,GAAIC,GAAI,GACrB,gBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASpD,KAAKO,SAAS0C,KAAKjD,OAAxD,oBAGF,gBAACyC,EAAA,GAAD,CAAMnB,MAAI,EAACsB,GAAI,GAAIC,GAAI,GACrB,gBAACQ,EAAA,EAAD,CAAMjB,MAAO,CAAEkB,MAAO,SAClBtD,KAAK1B,MAAMwB,cAAcgB,KAAK,SAACQ,EAAMC,GAAP,OAC9B,gBAACgC,EAAA,GAAD,CAAUhC,IAAKA,EAAKa,MAAO,CAAEoB,aAAc,sBACzC,gBAACC,EAAA,EAAD,CAAcC,QAAUpC,EAAKnB,OAC7B,gBAACwD,EAAA,EAAD,CAAUP,QAAS,EAAKQ,IAAIX,KAAK,EAAM3B,EAAKlB,GAAIkB,EAAKnB,QAHzB,MASpC,gBAACsC,EAAA,GAAD,CAAMnB,MAAI,EAACsB,GAAI,GAAIC,GAAI,GACrB,gBAACgB,EAAA,EAAD,CAAOC,KAAK,SACV,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,qBACA,gBAACA,EAAA,EAAD,uBACA,gBAACA,EAAA,EAAD,8BACA,gBAACA,EAAA,EAAD,KAAW,gBAACC,EAAA,EAAD,SAIf,gBAACC,EAAA,EAAD,KAEInE,KAAK1B,MAAMyB,SAASe,KAAK,SAACQ,EAAMC,GAAP,OACzB,gBAACyC,EAAA,EAAD,CAAUzC,IAAKA,GACb,gBAAC0C,EAAA,EAAD,KAAY3C,EAAKnB,MACjB,gBAAC8D,EAAA,EAAD,KAAY3C,EAAKG,SAAjB,SACA,gBAACwC,EAAA,EAAD,KACE,gBAAC,KAAD,CAAavD,MAAQY,EAAKI,SAAWoB,KAAO,EAAKsB,cAAcnB,KAAK,EAAM1B,GAAOwB,MAAM,MAEzF,gBAACkB,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAWd,QAAS,EAAKiB,IAAIpB,KAAK,EAAM3B,EAAKlB,GAAIkB,EAAKnB,MAAOiC,MAAO,CAACkC,OAAQ,cARxD,OAmBjC,gBAAC7B,EAAA,GAAD,CAAMnB,MAAI,EAACsB,GAAI,GAAIC,GAAI,GACrB,gBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASpD,KAAKuE,KAAKtB,KAAKjD,OAApD,eAMT,K,EAlSGrC,CAAsB6G,EAAAA,WAqSrB,SAASC,IACd,OACE,gBAAC9G,EAAD,KAEH,C,iBC7TK,IAAI+G,EAAY,EAAQ,KAAR,CAA0FrG,EAAO+B,GAAI,CAAC,QAAS,IAC/H/B,EAAOsG,IAAIC,QAAQF,GACnBrG,EAAOsG,IAAIE,YAAOC,EAAWJ,E","sources":["webpack://package.json/./src/components/app_work_point/app_work_point.component.jsx","webpack://package.json/./src/components/app_work_point/app_work_point.style.scss"],"sourcesContent":["import React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport { MyTextInput, MySelect } from '../../stores/elements';\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass AppWorkPoint_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        \r\n    this.state = {\r\n      module: 'app_work_point',\r\n      module_name: '',\r\n      is_load: false,\r\n      \r\n      points: [],\r\n      point_id: 0,\r\n\r\n      apps: [],\r\n      app_id: 0,\r\n\r\n      allList: [],\r\n      allListRender: [],\r\n      thisList: []\r\n    };\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    let data = await this.getData('get_all');\r\n    \r\n    this.setState({\r\n      module_name: data.module_info.name,\r\n      points: data.points,\r\n      point_id: data.points[0].id,\r\n      apps: data.apps,\r\n      app_id: data.apps[0].id\r\n    })\r\n    \r\n    document.title = data.module_info.name;\r\n\r\n    setTimeout( () => {\r\n      this.getWorks();\r\n    }, 300 )\r\n  }\r\n  \r\n  getData = (method, data = {}) => {\r\n    \r\n    this.setState({\r\n      is_load: true\r\n    })\r\n    \r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: queryString.stringify({\r\n        method: method, \r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify( data )\r\n      })\r\n    }).then(res => res.json()).then(json => {\r\n      \r\n      if( json.st === false && json.type == 'redir' ){\r\n        window.location.pathname = '/';\r\n        return;\r\n      }\r\n      \r\n      if( json.st === false && json.type == 'auth' ){\r\n        window.location.pathname = '/auth';\r\n        return;\r\n      }\r\n      \r\n      setTimeout( () => {\r\n        this.setState({\r\n          is_load: false\r\n        })\r\n      }, 300 )\r\n      \r\n      return json;\r\n    })\r\n    .catch(err => { \r\n      console.log( err )\r\n      this.setState({\r\n        is_load: false\r\n      })\r\n    });\r\n  }\r\n   \r\n  changeApp(event){\r\n    this.setState({\r\n      app_id: event.target.value\r\n    });\r\n\r\n    setTimeout( () => {\r\n      this.getWorks();\r\n    }, 300 )\r\n  }\r\n\r\n  async getWorks(){\r\n    let data = {\r\n      point_id: this.state.point_id,\r\n      app_id: this.state.app_id\r\n    };\r\n\r\n    let res = await this.getData('get_works', data);\r\n\r\n    console.log( res )\r\n\r\n    this.setState({\r\n      allList: res.all_work,\r\n      thisList: res.this_work,\r\n    })\r\n\r\n    setTimeout( () => {\r\n      this.checkList();\r\n    }, 300 )\r\n  }\r\n\r\n  checkList(){\r\n    let allList = this.state.allList;\r\n    let thisList = this.state.thisList;\r\n\r\n    thisList.map( (Titem) => {\r\n      let newArr = [];\r\n\r\n        allList.map( (Aitem) => {\r\n          if( parseInt(Aitem.id) != parseInt(Titem.id) ){\r\n            newArr.push(Aitem);\r\n          }\r\n        })\r\n\r\n        allList = newArr;\r\n    } )\r\n\r\n    this.setState({\r\n      allListRender: allList\r\n    })\r\n  }\r\n\r\n  add(id, name){\r\n    let thisList = this.state.thisList;\r\n    let allList = this.state.allList;\r\n\r\n    let check = thisList.find( (item, key) => parseInt(item['id']) == parseInt(id) );\r\n    let thisItem = allList.find( (item, key) => parseInt(item['id']) == parseInt(id) );\r\n\r\n\t\tif( !check ){\r\n\t\t\tthisList.push({id: id, name: name, time_min: 0, dop_time: 0, time_min: thisItem.time_min})\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n      thisList: thisList\r\n    })\r\n\r\n    setTimeout( () => {\r\n      this.checkList();\r\n    }, 300 )\r\n  }\r\n\r\n  del(id, name){\r\n    let new_arr = [];\r\n    let thisList = this.state.thisList;\r\n\r\n\t\tthisList.map(function(item, key){\r\n\t\t\tif( parseInt(item['id']) != parseInt(id) ){\r\n\t\t\t\tnew_arr.push( item )\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.setState({\r\n      thisList: new_arr\r\n    })\r\n\r\n    setTimeout( () => {\r\n      this.checkList();\r\n    }, 300 )\r\n\t}\r\n\r\n  async save(){\r\n    let data = {\r\n      point_id: this.state.point_id,\r\n      app_id: this.state.app_id,\r\n      items: this.state.thisList\r\n    };\r\n\r\n    let fake_item = null;\r\n\r\n    this.state.thisList.map( (item, key) => {\r\n      if( item.dop_time.length == 0 ){\r\n        fake_item = item;\r\n      }\r\n    } )\r\n\r\n    console.log(fake_item  )\r\n\r\n    if( fake_item ){\r\n      alert('У позиции \"'+fake_item.name+'\" не указано доп время');\r\n\r\n      return ;\r\n    }\r\n\r\n    let res = await this.getData('save', data);\r\n\r\n    console.log( res )\r\n\r\n    alert(res.text)\r\n  }\r\n\r\n  changeDopTime(key, event){\r\n    let data = event.target.value;\r\n    let list = this.state.thisList;\r\n\r\n    if( !isNaN(data) || data == ''  ){\r\n      list[ key ]['dop_time'] = data == '' ? '' : parseInt(data);\r\n\r\n      this.setState({\r\n        thisList: list\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n        <Backdrop style={{ zIndex: 99 }} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <MySelect data={this.state.points} value={this.state.point_id} func={ (event) => { this.setState({ point_id: event.target.value }) } } label='Точка' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <MySelect data={this.state.apps} value={this.state.app_id} func={ this.changeApp.bind(this) } label='Должность' />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={3}>\r\n            <Button variant=\"contained\" onClick={this.getWorks.bind(this)}>Обновить данные</Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <List style={{ width: '100%' }}>\r\n              { this.state.allListRender.map( (item, key) =>\r\n                <ListItem key={key} style={{ borderBottom: '1px solid #e5e5e5' }}>\r\n                  <ListItemText primary={ item.name } />\r\n                  <SendIcon onClick={this.add.bind(this, item.id, item.name)} />\r\n                </ListItem>\r\n              ) }\r\n            </List>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <Table size='small'>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Наименование</TableCell>\r\n                  <TableCell>Основное время</TableCell>\r\n                  <TableCell>Доп время (в минутах)</TableCell>\r\n                  <TableCell><CloseIcon /></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                \r\n                { this.state.thisList.map( (item, key) =>\r\n                  <TableRow key={key}>\r\n                    <TableCell>{item.name}</TableCell>\r\n                    <TableCell>{item.time_min} мин.</TableCell>\r\n                    <TableCell>\r\n                      <MyTextInput value={ item.dop_time } func={ this.changeDopTime.bind(this, key) } label='' />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <CloseIcon onClick={this.del.bind(this, item.id, item.name)} style={{cursor: 'pointer'}} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ) }\r\n              \r\n              </TableBody>\r\n            \r\n            </Table>\r\n\r\n          </Grid>\r\n        \r\n          <Grid item xs={12} sm={3}>\r\n            <Button variant=\"contained\" onClick={this.save.bind(this)}>Сохранить</Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport function AppWorkPoint() {\r\n  return (\r\n    <AppWorkPoint_ />\r\n  );\r\n}","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1663248692205\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","AppWorkPoint_","props","method","data","setState","is_load","fetch","headers","body","stringify","module","state","version","login","localStorage","getItem","JSON","then","res","json","st","type","setTimeout","window","location","pathname","err","console","log","module_name","points","point_id","apps","app_id","allList","allListRender","thisList","this","getData","module_info","name","id","document","title","getWorks","event","target","value","all_work","this_work","checkList","map","Titem","newArr","Aitem","parseInt","push","check","find","item","key","thisItem","time_min","dop_time","new_arr","items","fake_item","length","alert","text","list","isNaN","Backdrop","style","zIndex","open","CircularProgress","color","Grid","container","spacing","xs","sm","func","label","changeApp","bind","Button","variant","onClick","List","width","ListItem","borderBottom","ListItemText","primary","Send","add","Table","size","TableHead","TableRow","TableCell","Close","TableBody","changeDopTime","del","cursor","save","React","AppWorkPoint","cssReload","hot","dispose","accept","undefined"],"sourceRoot":""}
>>>>>>> b72e2a3a02e2a4a8263332ed82d2b0e927e48f30
