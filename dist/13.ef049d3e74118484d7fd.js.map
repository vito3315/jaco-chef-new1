{"version":3,"file":"13.ef049d3e74118484d7fd.js","mappings":"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","sources":["webpack://package.json/./src/components/check_check/check_check.component.jsx","webpack://package.json/./src/components/check_check/check_check.style.scss"],"sourcesContent":["import React from 'react';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableContainer from '@mui/material/TableContainer';\n\nimport Paper from '@mui/material/Paper';\n\n//import VisibilityIcon from '@mui/icons-material/Visibility';\n//import VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\n\n//import List from '@mui/material/List';\n//import ListItem from '@mui/material/ListItem';\n//import ListItemText from '@mui/material/ListItemText';\n\nimport Dialog from '@mui/material/Dialog';\n//import DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\n//import Accordion from '@mui/material/Accordion';\n//import AccordionSummary from '@mui/material/AccordionSummary';\n//import AccordionDetails from '@mui/material/AccordionDetails';\n//import Typography from '@mui/material/Typography';\n//import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\n//import Backdrop from '@mui/material/Backdrop';\n//import CircularProgress from '@mui/material/CircularProgress';\n\n//import IconButton from '@mui/material/IconButton';\nimport SaveIcon from '@mui/icons-material/Save';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\n\nimport {\n  MySelect,\n  MyDatePickerNew,\n  MyCheckBox,\n  MyAutocomplite,\n  MyTextInput,\n} from '../../stores/elements';\nimport { AlignHorizontalLeftRounded } from '@mui/icons-material';\n//import { restore } from 'ignore-styles';\n\nconst queryString = require('query-string');\n\nfunction formatDate(date) {\n  var d = new Date(date),\n    month = '' + (d.getMonth() + 1),\n    day = '' + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass CheckCheckTable extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    // var array1 = nextProps.users;\n    // var array2 = this.props.users;\n\n    // var is_same = (array1.length == array2.length) && array1.every(function(element, index) {\n    //     return element === array2[index];\n    // });\n\n    // console.log(this.props)\n\n    return true;\n  }\n\n  render() {\n    return (\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>#</TableCell>\n              <TableCell>Номер заказа</TableCell>\n              <TableCell>Точка</TableCell>\n              <TableCell>Тип заказа</TableCell>\n              <TableCell>Номер кассы</TableCell>\n              <TableCell>Сумма заказа</TableCell>\n              <TableCell>Дата/Время заказа</TableCell>\n              <TableCell>Найти заказ</TableCell>\n              <TableCell>Сохранить</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.orders.map((item, key) => (\n              <TableRow key={key}>\n                <TableCell>{key + 1}</TableCell>\n                <TableCell>\n                <MyTextInput\n                    value = {item.order_id}\n                    // func={ this.changeItem.bind(this, 'name_for_vendor') }\n                  /> \n                </TableCell>\n                <TableCell>{item.addr}</TableCell>\n                <TableCell>{item.type}</TableCell>\n                <TableCell>{item.kassa}</TableCell>\n                <TableCell>{item.sum}</TableCell>\n                <TableCell>{item.date} {item.time}</TableCell>\n                <TableCell>\n                  <Button onClick={this.props.openModal.bind(this, item.sum, item.date, key, item.point_id  )}>\n                    <OpenInNewIcon className=\"icon\" />\n                  </Button>\n                </TableCell>\n                <TableCell>\n                  <Button onClick={this.props.saveOrder.bind(this, item.id, item.order_id, item.point_id  )}>\n                    <SaveIcon className=\"icon\" />\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n}\n\nclass CheckModalTable extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    // var array1 = nextProps.users;\n    // var array2 = this.props.users;\n\n    // var is_same = (array1.length == array2.length) && array1.every(function(element, index) {\n    //     return element === array2[index];\n    // });\n    console.log('orders_in', this.props.orders);\n    return true;\n  }\n\n  \n\n  render() {\n    return (\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>#</TableCell>\n              <TableCell>Номер заказа</TableCell>\n              <TableCell>Точка</TableCell>\n              <TableCell>Дата/Время заказа</TableCell>\n              <TableCell>Тип заказа</TableCell>\n              <TableCell>Сумма заказа</TableCell>\n              <TableCell>Выбрать</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.orders.map((item, key) => (\n              <TableRow key={key}>\n                <TableCell>{key + 1}</TableCell>\n                <TableCell>{item.id}</TableCell>\n                <TableCell>{item.addr}</TableCell>\n                <TableCell>{item.date}</TableCell>\n                <TableCell>{item.type}</TableCell>\n                <TableCell>{item.sum}</TableCell>\n                <TableCell>\n                  <Button style={{cursor: 'pointer'}} onClick={this.props.selectOrder.bind(this, item.id)} > \n                    <CheckCircleIcon className=\"icon\" />\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n}\n\nclass CheckCheck_ extends React.Component {\n  constructor(props) {\n    super(props);\n\n    //todo\n    let date_start =  new Date();\n    date_start.setDate(date_start.getDate() - 5);\n\n    this.state = {\n      module: 'check_check',\n      module_name: 'Проверка чеков',\n      is_load: false,\n\n      point_list: [],\n     \n      point_id: 0,\n      type : 0,\n      select_list: [],\n\n      kassa_list  : [],\n      \n      date_start: formatDate(date_start),\n      date_end: formatDate(new Date()),\n\n      allOrder: [],\n      orders: [],\n      order: {},\n\n      modalOrder: false,\n\n      number_order: {},\n     \n    };\n  }\n\n  getData = (method, data = {}, is_load = true) => {\n    \n    if( is_load == true ){\n      this.setState({\n        is_load: true\n      })\n    }\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        window.location.pathname = '/';\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      console.log( err )\n    });\n  }\n\n  async componentDidMount(){\n   \n    let res = await this.getData('get_points');\n\n    if(res.st == true){\n      this.setState({\n        kassa_list: res.kassa_list,\n        point_list: res.point_list,\n        select_list: res.type_list,\n      });\n    }\n   \n  }\n\n  // функция которая присваивает значение в модуле\n  changeSort(type, event, data) {\n    // автокомлит для должностей - нужен в этом модуле???\n    if (type == 'app_id') {\n      this.setState({\n        app_id: data != null ? data.id : 0,\n        app_filter: data,\n      });\n    } else {\n      this.setState({\n        [type]: event.target.value,\n      });\n    }\n\n    // setTimeout(() => {\n    //     this.getUsers();\n    // }, 300)\n  }\n\n  changeDateRange(data, event) {\n    this.setState({\n      [data]: formatDate(event),\n    });\n  }\n\n  // открыть todo\n  async openOrder(id) {\n   \n    let data = {\n      date_start  : this.state.date_start,\n      date_end    : this.state.date_end,\n      point_id    : this.state.point_id,\n      type        : this.state.type,\n      kassa       : this.state.kassa,\n    };\n\n    let res = await this.getData('show', data);\n    if(!res.st){\n      alert(res.text); \n      return false;\n    }\n    \n    console.log('res_type',res.type);\n\n    // отображаем соообщение \n    if(res.text){\n      alert(res.text);\n    }\n    /* */\n    \n    if(res.orders){\n      this.setState({\n        allOrder: res.orders,\n        // chose_app: res.user.app_id,\n        //modalOrder: true,\n      });\n    }\n    \n  }\n\n  // выбор заказа в модалке (передача order_id)\n  selectOrder(order_id) {\n    /*\n    const number_order = this.state.allOrder;\n\n    const res = this.state.allOrder.find((el) => el.id === id);\n\n    number_order.map((el) =>\n      this.state.order.id === el.id ? (el.number_order = res.number) : null\n    );\n    */\n    let allOrder = this.state.allOrder;\n    let row_numb = this.state.row_numb;\n  \n    allOrder.map((el, i) => \n      row_numb === i ?  el.order_id = order_id : 0\n    )\n\n    this.setState({\n      allOrder: allOrder,\n      // chose_app: res.user.app_id,\n      modalOrder: false,\n    });\n  }\n\n\n  // модалка заказов\n  async openModal(sum, date, row_numb, point_id) {\n    \n    let data = {\n      sum         : sum,\n      point_id    : point_id,\n      date        : date,\n      type        : this.state.type,\n    };\n\n    console.log('modal_data', data)\n    console.log('row_numb', row_numb)\n    console.log('point_id', point_id)\n    let res = await this.getData('find_order', data);\n\n    console.log('res', res)\n    this.setState({\n      modalOrder: true,\n      orders    : res.orders,\n      row_numb : row_numb,\n    });\n  }\n\n // сохранении order_id\n async saveOrder(id, order_id, point_id) {\n    let data = {\n      id         : id,\n      order_id   : order_id,\n      point_id   : point_id,\n    };\n\n    console.log('data', data); \n    let res = await this.getData('saveItem', data);\n\n    if(res.st == true){\n      console.log('save ok'); \n      this.openOrder();\n      alert('Данные сохранены');\n    } else{\n      console.log('save err'); \n      alert(res.text);\n    }\n  \n }\n\n  render() {\n    return (\n      <>\n      \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <MyDatePickerNew\n              label=\"Начало периода\"\n              value={this.state.date_start}\n              func={this.changeDateRange.bind(this, 'date_start')}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <MyDatePickerNew\n              label=\"Конец периода\"\n              value={this.state.date_end}\n              func={this.changeDateRange.bind(this, 'date_end')}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <MySelect\n              data={this.state.point_list}\n              value={this.state.point_id.id}\n              func={this.changeSort.bind(this, 'point_id')}\n              label=\"Точка\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <MySelect\n              data={this.state.select_list}\n              value={this.state.type}\n              func={ this.changeSort.bind(this, 'type') }\n              label=\"Тип\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MySelect\n              data={this.state.kassa_list}\n              value={this.state.kassa}\n              func={ this.changeSort.bind(this, 'kassa') }\n              label=\"Касса\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <Button\n              onClick={this.openOrder.bind(this)}\n              variant=\"contained\"\n            >\n              Выполнить\n            </Button>\n          </Grid>\n\n          <Grid item xs={12}>\n            {this.state.allOrder.length > 0 ? (\n              <CheckCheckTable\n                orders={this.state.allOrder}\n                openModal={this.openModal.bind(this)}\n                saveOrder={this.saveOrder.bind(this)}\n              />\n            ) : null}\n          </Grid>\n        </Grid>\n\n        <Dialog\n          open={this.state.modalOrder}\n          fullWidth={true}\n          maxWidth={'md'}\n          onClose={() => {\n            this.setState({ modalOrder: false });\n          }}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle>Заказы</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            <Grid container spacing={3}>\n              {this.state.orders && this.state.modalOrder === true ? (\n                <CheckModalTable\n                  orders={this.state.orders}\n                  selectOrder={this.selectOrder.bind(this)}\n                  \n                />\n              ) : null}\n            </Grid>\n          </DialogContent>\n          {/* <DialogActions>\n            <Button \n            // onClick={this.checkArt.bind(this)} \n            color=\"primary\"\n            >Выбрать</Button>\n          </DialogActions> */}\n        </Dialog>\n      </>\n    );\n  }\n}\n\nexport function CheckCheck() {\n  return <CheckCheck_ />;\n}\n","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1668160334262\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","CheckCheckTable","nextProps","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","this","props","orders","map","item","key","value","order_id","addr","type","kassa","sum","time","Button","onClick","openModal","bind","point_id","OpenInNew","className","saveOrder","id","Save","React","CheckModalTable","console","log","style","cursor","selectOrder","CheckCircle","CheckCheck_","method","data","is_load","setState","fetch","headers","body","stringify","module","state","version","login","localStorage","getItem","JSON","then","res","json","st","setTimeout","window","location","pathname","err","date_start","setDate","module_name","point_list","select_list","kassa_list","date_end","allOrder","order","modalOrder","number_order","getData","type_list","event","app_id","app_filter","target","alert","text","row_numb","el","i","openOrder","Grid","container","spacing","xs","sm","label","func","changeDateRange","changeSort","variant","Dialog","open","fullWidth","maxWidth","onClose","DialogTitle","DialogContent","paddingBottom","paddingTop","CheckCheck","cssReload","hot","dispose","accept","undefined"],"sourceRoot":""}