{"version":3,"file":"main.6ccc35ae4ee8048427f8.js","mappings":"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","sources":["webpack://package.json/./server/routes.js","webpack://package.json/./src/components/app_work/app_work.component.jsx","webpack://package.json/./src/components/app_work_point/app_work_point.component.jsx","webpack://package.json/./src/components/auth/auth.component.jsx","webpack://package.json/./src/components/cat_work/cat_work.component.jsx","webpack://package.json/./src/components/category_items/category_items.component.jsx","webpack://package.json/./src/components/concenter/concenter.component.jsx","webpack://package.json/./src/components/drive_map_stat_all/drive_map_stat_all.component.jsx","webpack://package.json/./src/components/driver_stat/driver_stat.component.jsx","webpack://package.json/./src/components/events/events.component.jsx","webpack://package.json/./src/components/home/home.component.jsx","webpack://package.json/./src/components/live_orders/live_orders.component.jsx","webpack://package.json/./src/components/ras_by_bill/ras_by_bill.component.jsx","webpack://package.json/./src/components/registration/registration.component.jsx","webpack://package.json/./src/components/revizion/revizion.component.jsx","webpack://package.json/./src/components/site_sale_2/site_sale_2.component.jsx","webpack://package.json/./src/components/socialnetwork/socialnetwork.component.jsx","webpack://package.json/./src/components/tender/tender.component.jsx","webpack://package.json/./src/components/vendor_item_price/vendor_item_price.component.jsx","webpack://package.json/./src/components/vendor_module/vendor_module.component.jsx","webpack://package.json/./src/components/work_schedule/work_schedule.component.jsx","webpack://package.json/./src/components/app/app.component.jsx","webpack://package.json/./src/index.prod.js","webpack://package.json/./src/stores/elements.js"],"sourcesContent":["const { Home } = require( '../src/components/home' );\nconst { Auth } = require( '../src/components/auth' );\nconst { Reg } = require( '../src/components/registration' );\n\nconst { LiveOrders } = require( '../src/components/live_orders' );\nconst { Events } = require( '../src/components/events' );\nconst { RasByBill } = require( '../src/components/ras_by_bill' );\nconst { CategoryItems } = require( '../src/components/category_items' );\nconst { VendorModule } = require( '../src/components/vendor_module' );\nconst { VendorItemPrice } = require( '../src/components/vendor_item_price' );\nconst { Tender } = require( '../src/components/tender' );\nconst { Revizion, RevizionNew } = require( '../src/components/revizion' );\nconst { WorkSchedule } = require( '../src/components/work_schedule' );\nconst { SiteSale2, SiteSale2_New, SiteSale2_Edit, SiteSale2_Stat, SiteSale2_StatList } = require( '../src/components/site_sale_2' );\nconst { DriveMapStatAll } = require( '../src/components/drive_map_stat_all' );\nconst { DriverStat } = require( '../src/components/driver_stat' );\nconst { Concenter } = require( '../src/components/concenter' );\nconst { SocialNetwork } = require( '../src/components/socialnetwork' );\nconst { CatWork } = require( '../src/components/cat_work' );\nconst { AppWorkPoint } = require( '../src/components/app_work_point' );\nconst { AppWork } = require( '../src/components/app_work' );\n\n//\n\nmodule.exports = [\n    {\n        path: '/',\n        exact: true,\n        component: Home,\n        title: 'Главная',\n        code: 200\n    },\n    {\n        path: '/auth',\n        exact: true,\n        component: Auth,\n        title: 'Авторизация',\n        code: 200\n    },\n    {\n        path: '/registration',\n        exact: true,\n        component: Reg,\n        title: 'Регистрация',\n        code: 200\n    },\n    \n    {\n        path: '/live_orders',\n        exact: true,\n        component: LiveOrders,\n        title: 'Оформленные заказы',\n        code: 200\n    },\n    {\n        path: '/events',\n        exact: true,\n        component: Events,\n        title: 'События',\n        code: 200\n    },\n    {\n        path: '/ras_by_bill',\n        exact: true,\n        component: RasByBill,\n        title: 'Расход по накладным',\n        code: 200\n    },\n    {\n        path: '/category_items',\n        exact: true,\n        component: CategoryItems,\n        title: 'Категории товаров',\n        code: 200\n    },\n    {\n        path: '/vendor_module',\n        exact: true,\n        component: VendorModule,\n        title: 'Поставщики',\n        code: 200\n    },\n    {\n        path: '/vendor_item_price',\n        exact: true,\n        component: VendorItemPrice,\n        title: 'Цены на товары поставщика',\n        code: 200\n    },\n    {\n        path: '/tender',\n        exact: true,\n        component: Tender,\n        title: 'Цены на товары поставщика',\n        code: 200\n    },\n    {\n        path: '/revizion',\n        exact: true,\n        component: Revizion,\n        title: 'Ревизия',\n        code: 200\n    },\n    {\n        path: '/revizion/new',\n        exact: true,\n        component: RevizionNew,\n        title: 'Новая ревизия',\n        code: 200\n    },\n    {\n        path: '/work_schedule',\n        exact: true,\n        component: WorkSchedule,\n        title: 'График работы',\n        code: 200\n    },\n    \n    {\n        path: '/site_sale_2',\n        exact: true,\n        component: SiteSale2,\n        title: 'Промокоды маркетолога',\n        code: 200\n    },\n    {\n        path: '/site_sale_2/new',\n        exact: true,\n        component: SiteSale2_New,\n        title: 'Промокоды маркетолога',\n        code: 200\n    },\n    {\n        path: '/site_sale_2/edit/:promoId',\n        exact: true,\n        component: SiteSale2_Edit,\n        title: 'Промокоды маркетолога',\n        code: 200\n    },\n    {\n        path: '/site_sale_2/stat',\n        exact: true,\n        component: SiteSale2_Stat,\n        title: 'Промокоды маркетолога',\n        code: 200\n    },\n    {\n        path: '/site_sale_2/stat_list',\n        exact: true,\n        component: SiteSale2_StatList,\n        title: 'Выписанные промики',\n        code: 200\n    },\n    {\n        path: '/drive_map_stat_all',\n        exact: true,\n        component: DriveMapStatAll,\n        title: 'Курьеры на карте',\n        code: 200\n    },\n    {\n        path: '/driver_stat',\n        exact: true,\n        component: DriverStat,\n        title: 'Статистика курьеров',\n        code: 200\n    },\n    {\n        path: '/concenter',\n        exact: true,\n        component: Concenter,\n        title: 'Контакт-центр',\n        code: 200\n    },\n    {\n        path: '/socialnetwork',\n        exact: true,\n        component: SocialNetwork,\n        title: 'Социальные сети',\n        code: 200\n    },\n    {\n        path: '/cat_work',\n        exact: true,\n        component: CatWork,\n        title: 'Категории уборок',\n        code: 200\n    },\n    {\n        path: '/app_work_point',\n        exact: true,\n        component: AppWorkPoint,\n        title: 'Уборки на точке',\n        code: 200\n    },\n    {\n        path: '/app_work',\n        exact: true,\n        component: AppWork,\n        title: 'Время уборок',\n        code: 200\n    },\n    \n    \n];","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableFooter from '@mui/material/TableFooter';\nimport Paper from '@mui/material/Paper';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport CloseIcon from '@mui/icons-material/Close';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\n\nimport { MyTextInput, MyCheckBox, MySelect, MyTimePicker } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    },\n    def: {\n      main: '#353b48',\n      secondary: '#fff'\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nclass AppWork_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'app_work',\n      module_name: '',\n      is_load: false,\n      \n      items: [],\n      modalDialog: false,\n      modalDialogNew: false,\n\n      dows: [\n        {id: 1, name: 'Понедельник'},\n        {id: 2, name: 'Вторник'},\n        {id: 3, name: 'Среда'},\n        {id: 4, name: 'Четверг'},\n        {id: 5, name: 'Пятница'},\n        {id: 6, name: 'Суббота'},\n        {id: 7, name: 'Воскресенье'},\n        {id: 10, name: 'Другое'},\n\t      {id: 11, name: 'Каждый день'},\n\t      {id: 12, name: 'Каждый день в конце смены'},\n      ],\n      types: [\n        {id: 0, name: 'Другое'},\n        {id: 1, name: 'Только 1 активная'},\n        {id: 2, name: 'Добавление без ограничений'},\n        {id: 3, name: 'Ручное добавление'},\n      ],\n\n      itemsEdit: null,\n      nameWork: '',\n\n      itemsNew: null\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    data.items.map( (item, key) => {\n      data.items[key]['dow_name'] = this.state.dows.find( (it) => parseInt(it.id) == parseInt(item.dow) )['name'];\n    } )\n\n    this.setState({\n      module_name: data.module_info.name,\n      items: data.items\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  openCat(item){\n    this.setState({\n      modalDialog: true,\n      showCat: item,\n      nameCat: item.name,\n      editText: item.text\n    })\n  }\n\n  async saveEdit(){\n    let data = {\n      work: this.state.itemsEdit.item,\n      times_add: this.state.itemsEdit.times_add,\n      times_close: this.state.itemsEdit.times_close,\n    };\n\n    let res = await this.getData('save_edit', data);\n\n    console.log( res )\n\n    if( res.st === false ){\n      alert(res.text)\n    }else{\n      this.setState({ \n        modalDialog: false, \n        itemsEdit: null,\n        nameWork: ''\n      })\n\n      let data = await this.getData('get_all');\n    \n      data.items.map( (item, key) => {\n        data.items[key]['dow_name'] = this.state.dows.find( (it) => parseInt(it.id) == parseInt(item.dow) )['name'];\n      } )\n\n      this.setState({\n        items: data.items\n      })\n    }\n  }\n\n  async saveNew(){\n    let data = {\n      work: this.state.itemsNew.item,\n      times_add: this.state.itemsNew.times_add,\n      times_close: this.state.itemsNew.times_close,\n    };\n\n    let res = await this.getData('save_new', data);\n\n    console.log( res )\n\n    if( res.st === false ){\n      alert(res.text)\n    }else{\n      this.setState({ \n        modalDialogNew: false, \n        itemsNew: null\n      })\n\n      let data = await this.getData('get_all');\n    \n      data.items.map( (item, key) => {\n        data.items[key]['dow_name'] = this.state.dows.find( (it) => parseInt(it.id) == parseInt(item.dow) )['name'];\n      } )\n\n      this.setState({\n        items: data.items\n      })\n    }\n  }\n\n  async openWork(id){\n    let data = {\n      id: id\n    };\n\n    let res = await this.getData('get_one', data);\n\n    console.log( res )\n\n    this.setState({\n      itemsEdit: res,\n      modalDialog: true,\n      nameWork: res.item.name\n    })\n  }\n\n  async openNewWork(){\n    let res = await this.getData('get_all_for_new');\n\n    console.log( res )\n\n    this.setState({\n      itemsNew: res,\n      modalDialogNew: true\n    })\n  }\n\n  chengeItem(type, event){\n    let data = event.target.value;\n    let item = this.state.itemsEdit;\n\n    item.item[ [type] ] = data;\n\n    if( type == 'dow' && data == 12 ){\n      item.times_add = [{ time_action: '19:00' }];\n      item.times_close = '23:00';\n    }\n\n    this.setState({\n      itemsEdit: item\n    })\n  }\n\n  chengeItemNew(type, event){\n    let data = event.target.value;\n    let item = this.state.itemsNew;\n\n    item.item[ [type] ] = data;\n\n    if( type == 'dow' && data == 12 ){\n      item.times_add = [{ time_action: '19:00' }];\n      item.times_close = '23:00';\n    }\n\n    this.setState({\n      itemsNew: item\n    })\n  }\n\n  chengeTime(key, event){\n    let data = event.target.value;\n    let item = this.state.itemsEdit;\n\n    item.times_add[ key ]['time_action'] = data;\n\n    this.setState({\n      itemsEdit: item\n    })\n  }\n\n  chengeTimeNew(key, event){\n    let data = event.target.value;\n    let item = this.state.itemsNew;\n\n    item.times_add[ key ]['time_action'] = data;\n\n    this.setState({\n      itemsNew: item\n    })\n  }\n\n  delTime(key){\n    let item = this.state.itemsEdit;\n\n    let newArr = [];\n\n    item.times_add.map( (it, k) => {\n      if( parseInt( k ) != parseInt( key ) ){\n        newArr.push(it)\n      }\n    } )\n\n    item.times_add = newArr;\n\n    this.setState({\n      itemsEdit: item\n    })\n  }\n\n  delTimeNew(key){\n    let item = this.state.itemsNew;\n\n    let newArr = [];\n\n    item.times_add.map( (it, k) => {\n      if( parseInt( k ) != parseInt( key ) ){\n        newArr.push(it)\n      }\n    } )\n\n    item.times_add = newArr;\n\n    this.setState({\n      itemsNew: item\n    })\n  }\n\n  addTime(event){\n    let data = document.getElementById('timePikerNew').value;\n    let item = this.state.itemsEdit;\n\n    if( data != '' ){\n      item.times_add.push({\n        time_action: data\n      });\n\n      this.setState({\n        itemsEdit: item\n      })\n    }\n  }\n\n  addTimeNew(event){\n    let data = document.getElementById('timePikerNew').value;\n    let item = this.state.itemsNew;\n\n    if( data != '' ){\n      item.times_add.push({\n        time_action: data\n      });\n  \n      this.setState({\n        itemsNew: item\n      })\n    }\n  }\n\n  chengeTimeClose(event){\n    let data = event.target.value;\n    let item = this.state.itemsEdit;\n\n    item.times_close = data;\n\n    this.setState({\n      itemsEdit: item\n    })\n  }\n\n  chengeTimeCloseNew(event){\n    let data = event.target.value;\n    let item = this.state.itemsNew;\n\n    item.times_close = data;\n\n    this.setState({\n      itemsNew: item\n    })\n  }\n\n  async changeCheck(key, type, event){\n    let items = this.state.items;\n\n    items[ key ][ [type] ] = event.target.checked ? 1 : 0;\n\n    let data = {\n      type: type,\n      value: event.target.checked ? 1 : 0,\n      id: items[ key ].id\n    };\n\n    let res = await this.getData('save_check', data);\n    \n\n    this.setState({\n      items: items\n    })\n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        { !this.state.itemsEdit ? null :\n          <Dialog\n            open={this.state.modalDialog}\n            maxWidth={'md'}\n            onClose={ () => { this.setState({ modalDialog: false, itemsEdit: null, nameWork: '' }) } }\n          >\n            <DialogTitle>Уборка \"{this.state.nameWork}\"</DialogTitle>\n            <DialogContent style={{ paddingTop: 10 }}>\n              \n              <Grid container spacing={3}>\n                \n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={ this.state.itemsEdit.item.name } func={ this.chengeItem.bind(this, 'name') } label='Название уборки' />\n                </Grid>\n\n                <Grid item xs={12} sm={4}>\n                  <MySelect classes={this.state.classes} data={this.state.itemsEdit.cats} value={this.state.itemsEdit.item.type_new} func={ this.chengeItem.bind(this, 'type_new') } label='Категория уборки' />\n                </Grid>\n\n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={ this.state.itemsEdit.item.time_min } func={ this.chengeItem.bind(this, 'time_min') } label='Время уборки (в минутах)' />\n                </Grid>\n\n\n                <Grid item xs={12} sm={3}>\n                  <MyTextInput classes={this.state.classes} value={ this.state.itemsEdit.item.max_count } func={ this.chengeItem.bind(this, 'max_count') } label='Количество активаций' />\n                </Grid>\n\n                <Grid item xs={12} sm={9}>\n                  <MyTextInput multiline={true} maxRows={2} classes={this.state.classes} value={this.state.itemsEdit.item.description} func={ this.chengeItem.bind(this, 'description') } label='Описание (для внутренного использования)'/>\n                </Grid>\n                \n\n                <Grid item xs={12} sm={4}>\n                  <MySelect classes={this.state.classes} data={this.state.itemsEdit.apps} value={this.state.itemsEdit.item.app_id} func={ this.chengeItem.bind(this, 'app_id') } label='Должность' />\n                </Grid>\n\n                <Grid item xs={12} sm={4}>\n                  <MySelect classes={this.state.classes} data={this.state.dows} value={this.state.itemsEdit.item.dow} func={ this.chengeItem.bind(this, 'dow') } label='День недели' />\n                </Grid>\n\n                <Grid item xs={12} sm={4}>\n                  <MySelect classes={this.state.classes} data={this.state.types} value={this.state.itemsEdit.item.type_time} func={ this.chengeItem.bind(this, 'type_time') } label='Тип добавления' />\n                </Grid>\n                \n\n                <Grid item xs={12} sm={6}>\n                  <List>\n                    <ListItem style={{ borderBottom: '1px solid #e5e5e5' }}>\n                      <ListItemText primary={ 'Время добавления уборки' } />\n                    </ListItem>\n\n                    { this.state.itemsEdit.times_add.map( (item, key) =>\n                      <ListItem key={key} style={{ borderBottom: '1px solid #e5e5e5' }}>\n                        <MyTimePicker classes={this.state.classes} label={''} value={item.time_action} func={ this.chengeTime.bind(this, key) } />\n                        <CloseIcon style={{ cursor: 'pointer' }} onClick={ this.delTime.bind(this, key) } />\n                      </ListItem>\n                    ) }\n\n                    <ListItem style={{ borderBottom: '1px solid #e5e5e5' }}>\n                      <MyTimePicker id=\"timePikerNew\" classes={this.state.classes} label={''} value={'00:00'} onBlur={ this.addTime.bind(this) } />\n                    </ListItem>\n                  </List>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <List>\n                    <ListItem style={{ borderBottom: '1px solid #e5e5e5' }}>\n                      <ListItemText primary={ 'Время автоматического удаления' } />\n                    </ListItem>\n\n                    <ListItem style={{ borderBottom: '1px solid #e5e5e5' }}>\n                      <MyTimePicker classes={this.state.classes} label={''} value={this.state.itemsEdit.times_close} func={ this.chengeTimeClose.bind(this) } />\n                    </ListItem>\n                  </List>\n                </Grid>\n\n              </Grid>\n\n            </DialogContent>\n            <DialogActions>\n              <Button color=\"primary\" onClick={this.saveEdit.bind(this)}>Сохранить</Button>\n            </DialogActions>\n          </Dialog>\n        }\n\n        { !this.state.itemsNew ? null :\n          <Dialog\n            open={this.state.modalDialogNew}\n            maxWidth={'md'}\n            onClose={ () => { this.setState({ modalDialogNew: false }) } }\n          >\n            <DialogTitle>Новая уборка</DialogTitle>\n            <DialogContent style={{ paddingTop: 10 }}>\n              \n              <Grid container spacing={3}>\n                \n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={ this.state.itemsNew.item.name } func={ this.chengeItemNew.bind(this, 'name') } label='Название уборки' />\n                </Grid>\n\n                <Grid item xs={12} sm={4}>\n                  <MySelect classes={this.state.classes} data={this.state.itemsNew.cats} value={this.state.itemsNew.item.type_new} func={ this.chengeItemNew.bind(this, 'type_new') } label='Категория уборки' />\n                </Grid>\n\n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={ this.state.itemsNew.item.time_min } func={ this.chengeItemNew.bind(this, 'time_min') } label='Время уборки (в минутах)' />\n                </Grid>\n\n                <Grid item xs={12} sm={3}>\n                  <MyTextInput classes={this.state.classes} value={ this.state.itemsNew.item.max_count } func={ this.chengeItemNew.bind(this, 'max_count') } label='Количество активаций' />\n                </Grid>\n\n                <Grid item xs={12} sm={9}>\n                  <MyTextInput multiline={true} maxRows={2} classes={this.state.classes} value={this.state.itemsNew.item.description} func={ this.chengeItemNew.bind(this, 'description') } label='Описание (для внутренного использования)'/>\n                </Grid>\n                \n                <Grid item xs={12} sm={4}>\n                  <MySelect classes={this.state.classes} data={this.state.itemsNew.apps} value={this.state.itemsNew.item.app_id} func={ this.chengeItemNew.bind(this, 'app_id') } label='Должность' />\n                </Grid>\n\n                <Grid item xs={12} sm={4}>\n                  <MySelect classes={this.state.classes} data={this.state.dows} value={this.state.itemsNew.item.dow} func={ this.chengeItemNew.bind(this, 'dow') } label='День недели' />\n                </Grid>\n\n                <Grid item xs={12} sm={4}>\n                  <MySelect classes={this.state.classes} data={this.state.types} value={this.state.itemsNew.item.type_time} func={ this.chengeItemNew.bind(this, 'type_time') } label='Тип добавления' />\n                </Grid>\n                \n\n                <Grid item xs={12} sm={6}>\n                  <List>\n                    <ListItem style={{ borderBottom: '1px solid #e5e5e5' }}>\n                      <ListItemText primary={ 'Время добавления уборки' } />\n                    </ListItem>\n\n                    { this.state.itemsNew.times_add.map( (item, key) =>\n                      <ListItem key={key} style={{ borderBottom: '1px solid #e5e5e5' }}>\n                        <MyTimePicker classes={this.state.classes} label={''} value={item.time_action} func={ this.chengeTimeNew.bind(this, key) } />\n                        <CloseIcon style={{ cursor: 'pointer' }} onClick={ this.delTimeNew.bind(this, key) } />\n                      </ListItem>\n                    ) }\n\n                    <ListItem style={{ borderBottom: '1px solid #e5e5e5' }}>\n                      <MyTimePicker id=\"timePikerNew\" classes={this.state.classes} label={''} value={'00:00'} onBlur={ this.addTimeNew.bind(this) } />\n                    </ListItem>\n                  </List>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <List>\n                    <ListItem style={{ borderBottom: '1px solid #e5e5e5' }}>\n                      <ListItemText primary={ 'Время автоматического удаления' } />\n                    </ListItem>\n\n                    <ListItem style={{ borderBottom: '1px solid #e5e5e5' }}>\n                      <MyTimePicker classes={this.state.classes} label={''} value={this.state.itemsNew.times_close} func={ this.chengeTimeCloseNew.bind(this) } />\n                    </ListItem>\n                  </List>\n                </Grid>\n\n              </Grid>\n\n            </DialogContent>\n            <DialogActions>\n              <Button color=\"primary\" onClick={this.saveNew.bind(this)}>Сохранить</Button>\n            </DialogActions>\n          </Dialog>\n        }\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n\n          <Grid item xs={12} sm={12}>\n            <Button variant=\"contained\" color=\"primary\" onClick={ this.openNewWork.bind(this) }>Добавить уборку</Button>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Работа</TableCell>\n                  <TableCell>Должность</TableCell>\n                  <TableCell>Время</TableCell>\n                  <TableCell>День недели</TableCell>\n                  <TableCell>Время открытия</TableCell>\n                  \n                  <TableCell>Время закрытия</TableCell>\n                  <TableCell>Не удалять в конце смены</TableCell>\n                  <TableCell>Обязательна к выполнению в особый день</TableCell>\n                  <TableCell><VisibilityIcon /></TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                \n                { this.state.items.map( (item, key) =>\n                  <TableRow key={key}>\n                    <TableCell onClick={ this.openWork.bind(this, item.id) } style={{ color: '#c03', cursor: 'pointer', fontWeight: 'bold' }}>{item.work_name}</TableCell>\n                    <TableCell>{item.app_name}</TableCell>\n                    <TableCell>{item.time_min ? item.time_min + 'мин.' : ''}</TableCell>\n                    <TableCell>{item.dow_name}</TableCell>\n                    <TableCell>{item.times_open}</TableCell>\n\n                    <TableCell>{item.times_close}</TableCell>\n\n                    <TableCell>\n                      <MyCheckBox classes={this.state.classes} value={ parseInt(item.is_not_del) == 1 ? true : false } func={ this.changeCheck.bind(this, key, 'is_not_del') } label='' />\n                    </TableCell>\n                    <TableCell>\n                      <MyCheckBox classes={this.state.classes} value={ parseInt(item.is_need) == 1 ? true : false } func={ this.changeCheck.bind(this, key, 'is_need') } label='' />\n                    </TableCell>\n                    <TableCell>\n                      <MyCheckBox classes={this.state.classes} value={ parseInt(item.is_active) == 1 ? true : false } func={ this.changeCheck.bind(this, key, 'is_active') } label='' />\n                    </TableCell>\n                  </TableRow>\n                ) }\n              \n              </TableBody>\n            \n            </Table>\n          </Grid>\n        \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function AppWork () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <AppWork_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport SendIcon from '@mui/icons-material/Send';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { MyTextInput, MySelect } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    },\n    def: {\n      main: '#353b48',\n      secondary: '#fff'\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nclass AppWorkPoint_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'app_work_point',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point_id: 0,\n\n      apps: [],\n      app_id: 0,\n\n      allList: [],\n      allListRender: [],\n      thisList: []\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      points: data.points,\n      point_id: data.points[0].id,\n      apps: data.apps,\n      app_id: data.apps[0].id\n    })\n    \n    document.title = data.module_info.name;\n\n    setTimeout( () => {\n      this.getWorks();\n    }, 300 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  changeApp(event){\n    this.setState({\n      app_id: event.target.value\n    });\n\n    setTimeout( () => {\n      this.getWorks();\n    }, 300 )\n  }\n\n  async getWorks(){\n    let data = {\n      point_id: this.state.point_id,\n      app_id: this.state.app_id\n    };\n\n    let res = await this.getData('get_works', data);\n\n    console.log( res )\n\n    this.setState({\n      allList: res.all_work,\n      thisList: res.this_work,\n    })\n\n    setTimeout( () => {\n      this.checkList();\n    }, 300 )\n  }\n\n  checkList(){\n    let allList = this.state.allList;\n    let thisList = this.state.thisList;\n\n    thisList.map( (Titem) => {\n      let newArr = [];\n\n        allList.map( (Aitem) => {\n          if( parseInt(Aitem.id) != parseInt(Titem.id) ){\n            newArr.push(Aitem);\n          }\n        })\n\n        allList = newArr;\n    } )\n\n    this.setState({\n      allListRender: allList\n    })\n  }\n\n  add(id, name){\n    let check = false;\n\n    let thisList = this.state.thisList;\n\n\t\tthisList.map(function(item, key){\n\t\t\tif( parseInt(item['id']) == parseInt(id) ){\n\t\t\t\tcheck = true;\n\t\t\t}\n\t\t})\n\n\t\tif( !check ){\n\t\t\tthisList.push({id: id, name: name, time_min: 0})\n\t\t}\n\n\t\tthis.setState({\n      thisList: thisList\n    })\n\n    setTimeout( () => {\n      this.checkList();\n    }, 300 )\n  }\n\n  del(id, name){\n    let new_arr = [];\n    let thisList = this.state.thisList;\n\n\t\tthisList.map(function(item, key){\n\t\t\tif( parseInt(item['id']) != parseInt(id) ){\n\t\t\t\tnew_arr.push( item )\n\t\t\t}\n\t\t})\n\n\t\tthis.setState({\n      thisList: new_arr\n    })\n\n    setTimeout( () => {\n      this.checkList();\n    }, 300 )\n\t}\n\n  async save(){\n    let data = {\n      point_id: this.state.point_id,\n      app_id: this.state.app_id,\n      items: this.state.thisList\n    };\n\n    let res = await this.getData('save', data);\n\n    console.log( res )\n\n    alert(res.text)\n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point_id} func={ (event) => { this.setState({ point_id: event.target.value }) } } label='Точка' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.apps} value={this.state.app_id} func={ this.changeApp.bind(this) } label='Должность' />\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.getWorks.bind(this)}>Обновить данные</Button>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <List style={{ width: '100%' }}>\n              { this.state.allListRender.map( (item, key) =>\n                <ListItem key={key} style={{ borderBottom: '1px solid #e5e5e5' }}>\n                  <ListItemText primary={ item.name } />\n                  <SendIcon onClick={this.add.bind(this, item.id, item.name)} />\n                </ListItem>\n              ) }\n            </List>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <List style={{ width: '100%' }}>\n              { this.state.thisList.map( (item, key) =>\n                <ListItem key={key} style={{ borderBottom: '1px solid #e5e5e5' }}>\n                  <ListItemText primary={ item.name } />\n                  <CloseIcon onClick={this.del.bind(this, item.id, item.name)}/>\n                </ListItem>\n              ) }\n            </List>\n          </Grid>\n        \n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.save.bind(this)}>Сохранить</Button>\n          </Grid>\n\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function AppWorkPoint(){\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <AppWorkPoint_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    borderRadius: 0,\n    width: '100%',\n    height: 150,\n    margin: 0,\n    backgroundColor: '#fff'\n  },\n  avatar2: {\n    borderRadius: 0,\n    width: '100%',\n    height: 130,\n    margin: 0,\n    backgroundColor: '#fff'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  textLink: {\n    color: '#c03'\n  }\n});\n\nclass Auth_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'auth',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      dialogTitle: '',\n      dialogText: ''\n    };\n  }\n  \n  async componentDidMount(){\n      \n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: '+79879340391',\n        //login: localStorage.getItem('login'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        this.state.history.push(\"/auth\");\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      showReady: this.state.showReady === true ? 1 : 0\n    };\n    \n    let res = await this.getData('get_orders', data);\n    \n    this.setState({\n      read: res.read,\n      onstol: res.onstol,\n      ordersQueue: res.prestol_new\n    })\n  }\n  \n  async auth(){\n    let data = {\n      login: document.getElementById('phone').value,\n      pwd: document.getElementById('password').value\n    };\n    \n    let res = await this.getData('auth', data);\n    \n    console.log( res )\n    \n    if( res.st === false ){\n      setTimeout( () => {\n        this.setState({ \n          modalDialog: true,\n          dialogTitle: 'Предупреждение',\n          dialogText: res.text\n        })\n      }, 500 )\n    }else{\n      localStorage.setItem('token', res.token)\n      \n      setTimeout( () => {\n        window.location.pathname = '/'\n      }, 300)\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{this.state.dialogTitle}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">{this.state.dialogText}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ () => { this.setState({ modalDialog: false }) } } color=\"primary\" autoFocus>Хорошо</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          <Grid item xs={12} sm={6} md={6} lg={4} xl={3}>\n            <div className={this.state.classes.paper}>\n              <Avatar className={this.state.classes.avatar}>\n                <img alt=\"Жако доставка роллов и пиццы\" src=\"../assets/img_other/Favikon.png\" style={{ height: '100%' }} />\n              </Avatar>\n              <form className={this.state.classes.form} noValidate>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  size=\"small\"\n                  required\n                  fullWidth\n                  id=\"phone\"\n                  label=\"Номер телефона\"\n                  name=\"phone\"\n                  autoComplete=\"phone\"\n                  autoFocus\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  size=\"small\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Пароль\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                />\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={this.state.classes.submit}\n                  onClick={ this.auth.bind(this) }\n                >\n                  Войти\n                </Button>\n                <Grid container>\n                  <Grid item xs>\n                    <a href=\"/registration\" className={this.state.classes.textLink}>Восстановить пароль</a>\n                  </Grid>\n                </Grid>\n              </form>\n            </div>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Auth () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <Auth_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport { MyTextInput, TextEditor } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    },\n    def: {\n      main: '#353b48',\n      secondary: '#fff'\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nclass CatWork_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'cat_work',\n      module_name: '',\n      is_load: false,\n      \n      cats: [],\n      modalDialog: false,\n      modalDialogNew: false,\n\n      nameCat: '',\n      editText: '',\n\n      nameCatNew: '',\n      editTextNew: '',\n\n      config: {\n        readonly: false // all options from https://xdsoft.net/jodit/doc/\n      },\n\n      showCat: null\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      cats: data.cats\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  openCat(item){\n    this.setState({\n      modalDialog: true,\n      showCat: item,\n      nameCat: item.name,\n      editText: item.text\n    })\n  }\n\n  async save(){\n    let data = {\n      cat_id: this.state.showCat.id,\n      name: this.state.nameCat,\n      text: document.getElementById('EditorEdit').value\n    };\n\n    let res = await this.getData('save_edit', data);\n\n    if( res.st === false ){\n      alert(res.text)\n    }else{\n      this.setState({ \n        modalDialog: false, \n        showCat: null, \n        nameCat: '' \n      })\n\n      document.getElementById('EditorEdit').value = '';\n\n      res = await this.getData('get_all');\n    \n      this.setState({\n        cats: res.cats\n      })\n    }\n  }\n\n  async saveNew(){\n    let data = {\n      name: this.state.nameCatNew,\n      text: document.getElementById('EditorNew').value\n    };\n\n    let res = await this.getData('save_new', data);\n\n    if( res.st === false ){\n      alert(res.text)\n    }else{\n      this.setState({ \n        modalDialogNew: false, \n        editTextNew: '', \n        nameCatNew: '' \n      })\n\n      document.getElementById('EditorNew').value = '';\n\n      res = await this.getData('get_all');\n    \n      this.setState({\n        cats: res.cats\n      })\n    }\n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        { !this.state.showCat ? null :\n          <Dialog\n            open={this.state.modalDialog}\n            onClose={ () => { this.setState({ modalDialog: false, showCat: null, editText: '', nameCat: '' }) } }\n          >\n            <DialogTitle>Категория уборки \"{this.state.showCat.name}\"</DialogTitle>\n            <DialogContent style={{ paddingTop: 10 }}>\n              \n              <Grid container spacing={3}>\n                \n                <Grid item xs={12} sm={12}>\n                  <MyTextInput classes={this.state.classes} value={ this.state.nameCat } func={ (event) => { this.setState({ nameCat: event.target.value }) } } label='Название категории' />\n                </Grid>\n\n                <Grid item xs={12} sm={12}>\n                  <TextEditor id=\"EditorEdit\" text={this.state.showCat.text} />\n                </Grid>\n                \n              </Grid>\n\n            </DialogContent>\n            <DialogActions>\n              <Button color=\"primary\" onClick={this.save.bind(this)}>Сохранить</Button>\n            </DialogActions>\n          </Dialog>\n        }\n\n        <Dialog\n          open={this.state.modalDialogNew}\n          onClose={ () => { this.setState({ modalDialogNew: false, editTextNew: '', nameCatNew: '' }) } }\n        >\n          <DialogTitle>Новая категория уборки</DialogTitle>\n          <DialogContent style={{ paddingTop: 10 }}>\n            \n            <Grid container spacing={3}>\n              \n              <Grid item xs={12} sm={12}>\n                <MyTextInput classes={this.state.classes} value={ this.state.nameCatNew } func={ (event) => { this.setState({ nameCatNew: event.target.value }) } } label='Название категории' />\n              </Grid>\n\n              <Grid item xs={12} sm={12}>\n                <TextEditor id=\"EditorNew\" text={''} />\n              </Grid>\n              \n            </Grid>\n\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={this.saveNew.bind(this)}>Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n\n          <Grid item xs={12} sm={12}>\n            <Button variant=\"contained\" color=\"primary\" onClick={ () => { this.setState({ modalDialogNew: true }) } }>Добавить категорию</Button>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            <List style={{ width: '100%' }}>\n              { this.state.cats.map( (item, key) =>\n                <ListItem button key={key} onClick={ this.openCat.bind(this, item) }>\n                  <ListItemText primary={ item.name } />\n                </ListItem>\n              ) }\n            </List>\n          </Grid>\n        \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function CatWork () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <CatWork_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport MenuIcon from '@mui/icons-material/Menu';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport TextField from '@mui/material/TextField';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyAutocomplite } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    },\n    def: {\n      main: '#353b48',\n      secondary: '#fff'\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nclass CategoryItems_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'category_items',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      modalDialog2: false,\n      modalDialog3: false,\n      \n      newMainCatMy: 0,\n      editMainCatMy: 0,\n      newMainNameMy: '',\n      editMainNameMy: '',\n      \n      editCat: null,\n      \n      allCats: [],\n      allItems: [],\n      \n      thisValItems: [],\n      thisDataItems: [],\n      thisCatId: 0,\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      allCats: data.cats,\n      allItems: data.items,\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  createCat(){\n    this.setState({\n      modalDialog: true,\n      newMainCatMy: 0,\n      newMainNameMy: ''\n    })\n  }\n  \n  changeCatMain(event){\n    let data = event.target.value;\n    \n    this.setState({\n      newMainCatMy: data\n    })\n  }\n  \n  changeCatMainEdit(event){\n    let data = event.target.value;\n    \n    this.setState({\n      editMainCatMy: data\n    })\n  }\n  \n  changeNameMain(event){\n    let data = event.target.value;\n    \n    this.setState({\n      newMainNameMy: data\n    })\n  }\n  \n  changeNameMainEdit(event){\n    let data = event.target.value;\n    \n    this.setState({\n      editMainNameMy: data\n    })\n  }\n  \n  async saveCat(){\n    let data = {\n      name: this.state.newMainNameMy,\n      cat_id: this.state.newMainCatMy\n    };\n    \n    let res = await this.getData('save_cat', data);\n    \n    if( res.st === false ){\n      alert(res.text);\n      return ;\n    }\n    \n    this.setState({\n      allCats: res.cats,\n      modalDialog: false\n    })\n  }\n  \n  addItems(cat_id){\n    \n    let myVal = this.state.allItems.filter( (item) => parseInt(item.cat_id) == parseInt(cat_id) );\n    let data = this.state.allItems.filter( (item) => parseInt(item.cat_id) == 0 );\n    \n    this.setState({\n      modalDialog2: true,\n      thisValItems: myVal,\n      thisDataItems: data,\n      thisCatId: cat_id\n    })\n  }\n  \n  async saveItems(){\n    let data = {\n      cat_id: this.state.thisCatId,\n      items: this.state.thisValItems\n    };\n    \n    let res = await this.getData('save_items_cat', data);\n    \n    this.setState({\n      allCats: res.cats,\n      allItems: res.items,\n      modalDialog2: false,\n      \n      thisValItems: [],\n      thisDataItems: [],\n      thisCatId: 0\n    })\n  }\n  \n  editCat(cat){\n    this.setState({\n      modalDialog3: true,\n      editMainCatMy: cat.parent_id,\n      editMainNameMy: cat.name,\n      editCat: cat\n    })\n  }\n  \n  async saveEditCat(){\n    let data = {\n      name: this.state.editMainNameMy,\n      cat_id: this.state.editMainCatMy,\n      id: this.state.editCat.id\n    };\n    \n    let res = await this.getData('edit_cat', data);\n    \n    if( res.st === false ){\n      alert(res.text);\n      return ;\n    }\n    \n    this.setState({\n      allCats: res.cats,\n      modalDialog: false\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Новая категория</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={12}>\n                <MySelect \n                  classes={this.state.classes} \n                  label=\"Главная категория\" \n                  data={ this.state.allCats.filter( (item) => parseInt(item.parent_id) == -1 || !item.parent_id ) }\n                  value={this.state.newMainCatMy} \n                  func={ this.changeCatMain.bind(this) } />\n              </Grid>  \n              <Grid item xs={12} sm={12}>\n                <TextField label=\"Название категории\" size=\"small\" variant=\"outlined\" style={{ width: '100%' }} color=\"primary\" value={this.state.newMainNameMy} onChange={this.changeNameMain.bind(this)} />\n              </Grid>\n            </Grid>\n            \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ this.saveCat.bind(this) } color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Dialog\n          open={this.state.modalDialog2}\n          onClose={ () => { this.setState({ modalDialog2: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle>Позиции категории</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={12}>\n                <MyAutocomplite \n                  label=\"Выбранные позиции\" \n                  func={ (event, val) => { this.setState({ thisValItems: val }) } }\n                  data={ this.state.thisDataItems } \n                  value={ this.state.thisValItems } />\n              </Grid>\n            </Grid>\n            \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ this.saveItems.bind(this) } color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Dialog\n          open={this.state.modalDialog3}\n          onClose={ () => { this.setState({ modalDialog3: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Редактирование категории</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={12}>\n                <MySelect \n                  classes={this.state.classes} \n                  label=\"Главная категория\" \n                  data={ this.state.allCats.filter( (item) => parseInt(item.parent_id) == -1 || !item.parent_id ) } \n                  value={this.state.editMainCatMy} \n                  func={ this.changeCatMainEdit.bind(this) } \n                />\n              </Grid>  \n              <Grid item xs={12} sm={12}>\n                <TextField \n                  label=\"Название категории\" \n                  size=\"small\" \n                  variant=\"outlined\" \n                  style={{ width: '100%' }} \n                  color=\"primary\" \n                  value={this.state.editMainNameMy} \n                  onChange={ this.changeNameMainEdit.bind(this) }\n                />\n              </Grid>\n            </Grid>\n            \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ this.saveEditCat.bind(this) } color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            <Button onClick={this.createCat.bind(this)}>Создать категорию</Button>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            { this.state.allCats.map( (main_cat, main_key) =>\n              parseInt(main_cat.parent_id) != -1 ? null :\n                <Accordion key={main_key}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                  >\n                    <MenuIcon style={{ marginRight: 10 }} onClick={ this.editCat.bind(this, main_cat) } />\n                    <Typography>{main_cat.name}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    \n                  { this.state.allCats.map( (parent_cat, parent_key) =>\n                    parseInt(main_cat.id) != parseInt(parent_cat.parent_id) ? null :\n                      <Accordion key={main_key+'_'+parent_key}>\n                        <AccordionSummary\n                          expandIcon={<ExpandMoreIcon />}\n                          aria-controls=\"panel1a-content\"\n                        >\n                          <MenuIcon style={{ marginRight: 10 }} onClick={ this.editCat.bind(this, parent_cat) } />\n                          <Typography>{parent_cat.name}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          \n                          { this.state.allItems.filter( (item) => parseInt(item.cat_id) == parseInt(parent_cat.id) ).map( (item, key) =>\n                            <Accordion key={main_key+'_'+parent_key+'_'+key}>\n                              <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                              >\n                                <Typography>{item.name}</Typography>\n                              </AccordionSummary>\n                            </Accordion>\n                          ) }\n                            \n                          <Button onClick={this.addItems.bind(this, parseInt(parent_cat.id))}>Добавить</Button>\n                            \n                        </AccordionDetails>\n                      </Accordion>\n                  )}\n                    \n                  </AccordionDetails>\n                </Accordion>\n            ) }\n          </Grid>\n          \n          \n        \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function CategoryItems () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <CategoryItems_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableFooter from '@mui/material/TableFooter';\nimport Paper from '@mui/material/Paper';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyDatePickerNew, MyTextInput } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>{children}</Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass Concenter_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'concenter',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      modalDialogDel: false,\n      \n      cities: [],\n      city_id: 1,\n      date: formatDate(new Date()),\n      point_list: [],\n      need_point_list: [],\n      point_id: 0,\n      indexTab: 0,\n\n      orders: [],\n      ordersRender: [],\n      showOrder: null,\n\n      radiogroup_options: [\n        {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n        {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n        {id: '2', label: 'Изменились планы', value: 0 },\n        {id: '3', label: 'Недостаточно средств', value: 0 },\n        {id: '4', label: 'Другое', value: 0 },\n      ],\n      textDel: '',\n      typeDel: -1,\n\n      number: '',\n      addr: ''\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    let need_points = data.points.filter( (item, key) => parseInt(item.city_id) == parseInt(data.cities[0].id) );\n\n    this.setState({\n      module_name: data.module_info.name,\n      cities: data.cities,\n      point_list: data.points,\n      need_point_list: need_points,\n      point_id: parseInt(need_points[0].id)\n    })\n    \n    document.title = data.module_info.name;\n\n    setTimeout( () => {\n      this.getOrders();\n    }, 300 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  changeCity(event){\n    this.setState({\n      number: '',\n      addr: ''\n    })\n\n    let data = event.target.value;\n    \n    let need_points = this.state.point_list.filter( (item, key) => parseInt(item.city_id) == parseInt(data) );\n\n    this.setState({\n      city_id: data,\n      need_point_list: need_points,\n      point_id: parseInt(need_points[0].id),\n      indexTab: 0\n    })\n\n    setTimeout( () => {\n      this.getOrders();\n    }, 300 )\n  }\n  \n  async changePoint(event, index){\n    let point_id = event.target.id;\n    point_id = point_id.split('-')[2]\n\n    this.setState({\n      point_id: point_id,\n      indexTab: index\n    })\n\n    setTimeout( () => {\n      this.getOrders();\n    }, 300 )\n    \n  }\n\n  async getOrders(){\n    let data = {\n      point_id: this.state.point_id,\n      date: this.state.date\n    };\n    \n    let res = await this.getData('get_orders', data);\n\n    console.log( res )\n\n    this.setState({\n      orders: res.orders\n    })\n\n    setTimeout( () => {\n      this.filterNumber();\n    }, 300 )\n  }\n\n  btnGetOrders(){\n    this.setState({\n      number: '',\n      addr: ''\n    })\n\n    this.getOrders();\n  }\n\n  async showOrder(order_id){\n    let data = {\n      point_id: this.state.point_id,\n      order_id: order_id\n    };\n\n    let res = await this.getData('get_order_new', data);\n\n    console.log( res )\n\n    this.setState({\n      modalDialog: true,\n      showOrder: res\n    })\n  }\n\n  closeOrder(){\n    this.setState({ modalDialogDel: true })\n  }\n\n  async closeOrderTrue(){\n    let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n    if( deltype.id == '4' ){\n      deltype.label = this.state.textDel;\n    }\n    \n    if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n      let data = {\n        typeCreate: 'center',\n        order_id: this.state.showOrder.order.order_id,\n        point_id: this.state.showOrder.order.point_id,\n        ans: deltype.label\n      };\n  \n      let res = await this.getData('close_order_center', data);\n\n      //setTimeout(() => {\n        if( res['st'] === true ){\n          this.setState({\n            modalDialogDel: false,\n            modalDialog: false,\n          });\n          \n          this.getOrders();\n        }else{\n          alert( res['text'] );\n        }\n      //}, 300);\n    }\n  }\n\n  async fakeUser(){\n    let type_check = 0;\n\n    if( parseInt(this.state.showOrder.order.check_pos) >= 0 ){\n      if( parseInt(this.state.showOrder.order.check_pos) <= 100 ){\n        type_check = 1;\n      }else{\n        type_check = 2;\n      }\n    }else{\n      type_check = 0;\n    }\n\n    //0 - не активно\n    //1 - сразу\n    //2 - уточнить\n\n    \n    if( parseInt(type_check) == 0 ){\n      alert('Создать обращение не возможно')\n      return ;\n    }\n\n    if( parseInt(type_check) == 1 ){\n      let text = prompt('Комментарий к ситуации', '');\n\n      if(text.length > 0){\n        let data = {\n          text: text,\n          point_id: parseInt(this.state.showOrder.order.point_id),\n          order_id: parseInt(this.state.showOrder.order.order_id),\n        };\n    \n        let res = await this.getData('fake_user', data);\n  \n        if(res['st'] == true){\n          alert('Обращение зафиксировано')\n          this.setState({ modalDialog: false })\n        }else{\n          alert(res['text'])\n        }\n\n      }else{\n        alert('надо указать комментарий')\n      }\n    }\n\n    if( parseInt(type_check) == 2 ){\n      const result = confirm('Курьер, предположительно, находиться далеко от клиента, точно оформить довоз ?');\n\n      if (result) {\n        var text = prompt('Комментарий к ситуации', '');\n\n        if(text.length > 0){\n          let data = {\n            text: text,\n            point_id: parseInt(this.state.showOrder.order.point_id),\n            order_id: parseInt(this.state.showOrder.order.order_id),\n          };\n      \n          let res = await this.getData('fake_user', data);\n\n          if(res['st'] == true){\n            alert('Обращение зафиксировано')\n            this.setState({ modalDialog: false })\n          }else{\n            alert(res['text'])\n          }\n        }else{\n          alert('надо указать комментарий')\n        }\n      }\n    }\n  }\n\n  changeText(event){\n    this.setState({ textDel: event.target.value })\n  }\n\n  changeAddr = (event) => {\n    this.setState({\n      typeDel: event.target.value,\n    })\n  }\n\n  changeDate(val){\n    this.setState({\n      number: '',\n      addr: ''\n    })\n    \n    this.setState({\n      date: formatDate(val)\n    })\n\n    setTimeout( () => {\n      this.getOrders();\n    }, 300 )\n  }\n\n  changeNumber(event){\n    let value = event.target.value;\n    \n    if( isNaN(value) ){\n      return ;\n    }\n\n    this.setState({ number: value })\n\n    setTimeout( () => {\n      this.filterNumber();\n    }, 300 )\n  }\n\n  changeAddrSt(event){\n    let value = event.target.value;\n    \n    this.setState({ addr: value })\n\n    setTimeout( () => {\n      this.filterNumber();\n    }, 300 )\n  }\n\n  filterNumber(){\n    let renderOrders = this.state.orders;\n\n    if( this.state.number.length > 0 ){\n      renderOrders = renderOrders.filter( (item) => item.number.indexOf(this.state.number) !== -1 );\n    }\n\n    if( this.state.addr.length > 0 ){\n      renderOrders = renderOrders.filter( (item) => (item.street + ' ' + item.home).toLowerCase() .indexOf(this.state.addr.toLowerCase()) !== -1 );\n    }\n\n    this.setState({\n      ordersRender: renderOrders\n    })\n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        { !this.state.showOrder ? null : \n          <Dialog\n            open={this.state.modalDialog}\n            onClose={ () => { this.setState({ modalDialog: false }) } }\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{textAlign: 'center'}}>Заказ #{this.state.showOrder.order.order_id}</DialogTitle>\n            <DialogContent>\n              \n              <Grid container spacing={0}>\n                <Grid item xs={12}>\n                  <span>{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</span>\n                </Grid>\n                <Grid item xs={12}>\n                  <span>{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</span>\n                </Grid>\n\n                { this.state.showOrder.order.number.length > 1 ? \n                  <Grid item xs={12}>\n                    <b>Телефон: </b> \n                    <span>{this.state.showOrder.order.number}</span> \n                  </Grid>\n                    : \n                  null\n                }\n\n                { this.state.showOrder.order.delete_reason.length > 0 ? <Grid item xs={12}><span style={{ color: 'red' }}>Удален: {this.state.showOrder.order.date_time_delete}</span></Grid> : null}\n                { this.state.showOrder.order.delete_reason.length > 0 ? <Grid item xs={12}><span style={{ color: 'red' }}>{this.state.showOrder.order.delete_reason}</span></Grid> : null}\n                \n                { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                  <Grid item xs={12}><span>{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</span></Grid>\n                }\n                \n                <Grid item xs={12}><span>{this.state.showOrder.order.textTime}</span></Grid>\n                \n                \n                { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                  <>\n                    <Grid item xs={12}>\n                      <b>Промокод: </b>\n                      <span>{this.state.showOrder.order.promo_name}</span>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <span className=\"noSpace\">{this.state.showOrder.order.promo_text}</span>\n                    </Grid>\n                  </>\n                }\n                \n                { this.state.showOrder.order.comment == null || this.state.showOrder.order.comment.length == 0 ? null :\n                  <Grid item xs={12}>\n                    <b>Комментарий: </b>\n                    <span>{this.state.showOrder.order.comment}</span>\n                  </Grid>\n                }\n                \n                { this.state.showOrder.order.sdacha == null || parseInt(this.state.showOrder.order.sdacha) == 0 ? null :\n                  <Grid item xs={12}>\n                    <b>Сдача: </b>\n                    <span>{this.state.showOrder.order.sdacha}</span>\n                  </Grid>\n                }\n                \n                <Grid item xs={12}>\n                  <b>Сумма заказа: </b>\n                  <span>{this.state.showOrder.order.sum_order} р</span>\n                </Grid>\n\n                { this.state.showOrder.order.check_pos_drive == null || !this.state.showOrder.order.check_pos_drive ? null :\n                  <Grid item xs={12}>\n                    <b>Довоз оформлен: </b>\n                    <span>{this.state.showOrder.order.comment}</span>\n                  </Grid>\n                }\n\n                <Grid item xs={12}>\n                  <Table size={'small'} style={{ marginTop: 15 }}>\n                    <TableBody>\n                      { this.state.showOrder.order_items.map( (item, key) =>\n                        <TableRow key={key}>\n                          <TableCell>{item.name}</TableCell>\n                          <TableCell>{item.count}</TableCell>\n                          <TableCell>{item.price} р</TableCell>\n                        </TableRow>\n                      ) }\n                    </TableBody>\n                    <TableFooter>\n                      <TableRow>\n                        <TableCell style={{fontWeight: 'bold', color: '#000'}}>Сумма закза</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell style={{fontWeight: 'bold', color: '#000'}}>{this.state.showOrder.order.sum_order} р</TableCell>\n                      </TableRow>\n                    </TableFooter>\n                  </Table>\n                </Grid>\n\n                <Accordion style={{ width: '100%' }}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                  >\n                    <Typography>Расформировка</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Table size={'small'} style={{ marginTop: 15 }}>\n                      <TableBody>\n                        { this.state.showOrder.order_items_.map( (item, key) =>\n                          <TableRow key={key}>\n                            <TableCell>{item.name}</TableCell>\n                            <TableCell style={{ backgroundColor: parseInt(item.ready) > 0 ? '#6ab04c' : '#eb4d4b' }}></TableCell>\n                          </TableRow>\n                        ) }\n                      </TableBody>\n                    </Table>\n                  </AccordionDetails>\n                </Accordion>\n              </Grid>\n\n            </DialogContent>\n\n            { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n              <DialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                  <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this) }>Отменить заказ</Button>\n                </ButtonGroup>\n              </DialogActions>\n                :\n              null\n            }\n\n            { parseInt( this.state.showOrder.order.type_order_ ) == 1 && parseInt( this.state.showOrder.order.status_order ) > 4 && parseInt( this.state.showOrder.order.check_pos ) >= 0 ? \n              <DialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                  <Button variant=\"contained\" className=\"BtnCardMain CardInCardItemYellow\" onClick={ this.fakeUser.bind(this) }>Клиент не вышел на связь</Button>\n                </ButtonGroup>\n              </DialogActions>\n                :\n              null\n            }\n          </Dialog>\n        }\n\n        { !this.state.showOrder ? null : \n          <Dialog\n            open={this.state.modalDialogDel}\n            onClose={ () => { this.setState({ modalDialogDel: false }) } }\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{textAlign: 'center'}}>Отмена заказа {this.state.showOrder.order.order_id}</DialogTitle>\n            <DialogContent>\n              \n              <FormControl component=\"fieldset\">\n                <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                  {this.state.radiogroup_options.map((item, key) => \n                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                  )}\n                </RadioGroup>\n              </FormControl>\n\n              <TextField\n                //autoFocus\n                onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                value={ this.state.textDel }\n                onChange={ this.changeText.bind(this) }\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Причина отмены\"\n                type=\"text\"\n                fullWidth\n              />\n\n            </DialogContent>\n\n            <DialogActions style={{ paddingBottom: 24 }}>\n\n              <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n              </ButtonGroup>\n              \n              <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n              </ButtonGroup>\n\n            </DialogActions>\n                \n          </Dialog>\n        }\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city_id} func={ this.changeCity.bind(this) } label='Город' />\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <MyDatePickerNew label={'Дата'} value={this.state.date} func={ this.changeDate.bind(this) } />\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <MyTextInput label={'Номер телефона'} value={this.state.number} func={ this.changeNumber.bind(this) } />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MyTextInput label={'Адрес'} value={this.state.addr} func={ this.changeAddrSt.bind(this) } />\n          </Grid>\n\n          \n          \n          \n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.btnGetOrders.bind(this)}>Обновить</Button>\n          </Grid>\n          \n          <Grid item xs={12}>\n            <Tabs value={this.state.indexTab} onChange={this.changePoint.bind(this)}>\n              { this.state.need_point_list.map( (item, key) =>\n                <Tab key={key} label={item.name} onClick={this.getOrders.bind(this)} {...a11yProps(parseInt(item.id))} />\n              ) }\n            </Tabs>\n          </Grid>\n\n          <Grid item xs={12}>\n            \n            <Table size={'small'}>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Заказ</TableCell>\n                  <TableCell>Оформил</TableCell>\n                  <TableCell>Номер клиента</TableCell>\n                  <TableCell>Адрес доставки</TableCell>\n                  <TableCell>Время открытия заказа</TableCell>\n                  \n                  <TableCell>Ко времени</TableCell>\n                  <TableCell>Закрыт на кухне</TableCell>\n                  <TableCell>Получен клиентом</TableCell>\n\n                  <TableCell>До просрочки</TableCell>\n                  <TableCell>Время обещ</TableCell>\n\n                  <TableCell>Тип</TableCell>\n                  <TableCell>Статус</TableCell>\n\n                  <TableCell>Сумма</TableCell>\n                  <TableCell>Оплата</TableCell>\n                  <TableCell>Водитель</TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                \n                { this.state.ordersRender.map( (item, key) =>\n                  <TableRow key={key} style={ parseInt(item.is_delete) == 1 ? {backgroundColor: 'red', color: '#fff', fontWeight: 'bold'} : {} }>\n                    <TableCell style={ parseInt(item.dist) >= 0 ? {backgroundColor: 'yellow', color: '#000', cursor: 'pointer', fontWeight: 'inherit'} : {color: 'inherit', cursor: 'pointer', fontWeight: 'inherit'} } onClick={this.showOrder.bind(this, item.id)}>{item.id}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.type_user}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.number}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.street} {item.home}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.date_time_order}</TableCell>\n\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit', backgroundColor: parseInt(item.is_preorder) == 1 ? '#bababa' : 'inherit' }}>{item.need_time}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{ item.give_data_time == '00:00:00' ? '' : item.give_data_time}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.close_order}</TableCell>\n\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.to_time}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.unix_time_to_client == '0' || parseInt(item.is_preorder) == 1 ? '' : item.unix_time_to_client}</TableCell>\n\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.type_order}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.status}</TableCell>\n\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.order_price}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.type_pay}</TableCell>\n                    <TableCell style={{ color: 'inherit', fontWeight: 'inherit' }}>{item.driver}</TableCell>\n                  </TableRow>\n                ) }\n              \n              </TableBody>\n            \n            </Table>\n            \n          </Grid>\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Concenter () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <Concenter_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nclass DriveMapStatAll_ extends React.Component {\n  map = null;\n\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      //classes: this.props.classes,\n      history: this.props.history,\n      module: 'drive_map_stat_all',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      drivers: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      points: data.point_list,\n      point: data.point_list[0].id,\n      module_name: data.module_info.name\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      //this.updateData();\n    }, 100 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n    };\n    \n    let res = await this.getData('get_orders', data);\n    \n    this.getOrders(res.orders, res.home, res.drivers)\n\n    this.setState({\n      drivers: res.drivers\n    })\n\n    console.log( res.drivers )\n  }\n  \n  getOrders(orders, home, drivers){\n    \n      \n      //setTimeout( () => {\n        let objectManager = new ymaps.ObjectManager();\n        \n        if( !this.map ){\n          ymaps.ready(() => {\n            this.map = new ymaps.Map('map', {\n              center: [home.latitude, home.longitude],\n              zoom: 11\n            }, {\n              searchControlProvider: 'yandex#search'\n            })\n            \n            //дом\n            let myGeoObject = new ymaps.GeoObject({\n              geometry: {\n                type: \"Point\",\n                coordinates: [home.latitude, home.longitude]\n              },\n            }, {\n              preset: 'islands#blackDotIcon', \n              iconColor: 'black'\n            })\n            \n            this.map.geoObjects.add(myGeoObject);\n            \n            \n            \n            let json = {\n              \"type\": \"FeatureCollection\",\n              \"features\": []\n            };\n                    \n            orders.map( function(item){\n            \n              json.features.push({\n                type: \"Feature\",\n                id: item.id,\n                options: {\n                  preset: parseInt(item.status_order) == 6 ? 'islands#blueCircleDotIconWithCaption' : 'islands#circleDotIcon', \n                  iconColor: item.point_color ? item.point_color : item.color\n                },\n                properties: {\n                  iconCaption: item.point_text,\n                },\n                geometry: {\n                  type: \"Point\",\n                  coordinates: [item.xy.latitude, item.xy.longitude]\n                },\n              })\n              \n            } )\n            \n            objectManager.add(json);\n\n            drivers.map( function(driver){\n              driver.positions.map( function(pos, key){\n  \n                pos['xy'] = JSON.parse(pos['xy'], true);\n  \n                json.features.push({\n                  type: \"Feature\",\n                  id: pos.id,\n                  options: {\n                    preset: 'islands#stretchyIcon', \n                    iconColor: driver.color,\n                  },\n                  properties: {\n                    iconContent: key\n                  },\n                  geometry: {\n                    type: \"Point\",\n                    coordinates: [pos['xy'][0], pos['xy'][1]],\n                  },\n                })\n  \n  \n              } )\n            } )\n  \n            objectManager.add(json);\n\n            this.map.geoObjects.add(objectManager);\n          });\n        }else{\n          \n          let json = {\n            \"type\": \"FeatureCollection\",\n            \"features\": []\n          };\n                  \n          //дом\n          json.features.push({\n            type: \"Feature\",\n            id: 0,\n            options: {\n              preset: 'islands#blackDotIcon', \n              iconColor: 'black'\n            },\n            geometry: {\n              type: \"Point\",\n              coordinates: [home.latitude, home.longitude]\n            },\n          })\n          \n          \n          orders.map( function(item){\n            \n            json.features.push({\n              type: \"Feature\",\n              id: item.id,\n              options: {\n                preset: parseInt(item.status_order) == 6 ? 'islands#blueCircleDotIconWithCaption' : 'islands#circleDotIcon', \n                iconColor: item.point_color ? item.point_color : item.color\n              },\n              properties: {\n                iconCaption: item.point_text,\n                //iconCaption: parseInt(item.status_order) == 6 ? item.close_time_ : parseInt(item.is_pred) == 1 ? item.need_time : parseInt(item.is_my) == 1 ? item.time_start_mini : '',\n              },\n              geometry: {\n                type: \"Point\",\n                coordinates: [item.xy.latitude, item.xy.longitude]\n              },\n            })\n            \n          } )\n          \n          objectManager.add(json);\n\n          drivers.map( function(driver){\n            driver.positions.map( function(pos, key){\n\n              pos['xy'] = JSON.parse(pos['xy'], true);\n\n              json.features.push({\n                type: \"Feature\",\n                id: pos.id,\n                options: {\n                  preset: 'islands#stretchyIcon', \n                  iconColor: driver.color,\n                },\n                properties: {\n                  iconContent: key\n                },\n                geometry: {\n                  type: \"Point\",\n                  coordinates: [pos['xy'][0], pos['xy'][1]],\n                },\n              })\n\n\n            } )\n          } )\n\n          objectManager.add(json);\n\n          this.map.geoObjects.removeAll()\n          this.map.geoObjects.add(objectManager);\n        }\n        \n        /*objectManager.objects.events.add(['click'], (e) => {\n          let order_id = e.get('objectId');\n          let order = this.state.orders.find( (item) => parseInt(item.id) == parseInt(order_id) );\n          \n          if( order ){\n            this.showOrder(order);\n          }\n        });*/\n        \n      //}, 300 )\n    \n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={6} sm={6}>\n            <MySelect data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          <Grid item xs={6} sm={6}>\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            { this.state.drivers.map( (item, key) =>\n              <div key={key} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                <div style={{ width: 50, height: 20, backgroundColor: item.color }}></div>\n                <div>{item.driver_name}</div>\n              </div>\n            ) }\n          </Grid>       \n          \n          \n          <Grid item xs={12} sm={12}>\n            <div id=\"map\" name=\"map\" style={{ width: '100%', height: 700, paddingTop: 10 }} />\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function DriveMapStatAll () {\n  let history = useHistory();\n  \n  return (\n    <DriveMapStatAll_ history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableFooter from '@mui/material/TableFooter';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyTextInput, MyDaterange } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass DriverStat_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'driver_stat',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      \n      date_start: formatDate(new Date()),\n      date_end: formatDate(new Date()),\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\n\n      modalDialog: false,\n\n      drive_stat_full: [],\n      drive_stat_date: null,\n      summ: 0,\n      choose_driver_id: 0,\n      check_cash: 0\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    console.log( data )\n    \n    this.setState({\n      points: data.points,\n      point: data.points[0].id,\n      module_name: data.module_info.name,\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      date_start: this.state.rangeDate[0],\n      date_end: this.state.rangeDate[1],\n    };\n    \n    let res = await this.getData('get_data', data);\n    \n    console.log( res )\n    \n    this.setState({\n      drive_stat_full: res.drive_stat_full,\n      drive_stat_date: res.stat_drive_date\n    })\n  }\n  \n  changeDateRange(data){\n    let dateStart = data[0] ? formatDate(data[0]) : '';\n    let dateEnd = data[1] ? formatDate(data[1]) : '';\n    \n    this.setState({\n      rangeDate: [dateStart, dateEnd]\n    })\n  }\n\n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n  }\n\n  giveCash(driver_id, check_cash){\n    this.setState({\n      modalDialog: true,\n      choose_driver_id: driver_id,\n      check_cash: check_cash\n    })\n  }\n\n  changeSumm(event){\n    this.setState({\n      summ: event.target.value,\n    })\n  }\n\n  async saveGivePrice(){\n\n    if( parseInt( this.state.summ ) > parseInt( this.state.check_cash ) ){\n      alert('Нельзя сдать денег больше, чем есть у курьера');\n      return;\n    }\n\n\n    let data = {\n      point_id: this.state.point,\n      price: this.state.summ,\n      driver_id: this.state.choose_driver_id,\n    };\n    \n    let res = await this.getData('save_give', data);\n\n    console.log( res )\n\n    if( res['st'] == true ){\n      this.setState({\n        modalDialog: false,\n        check_cash: 0,\n        choose_driver_id: 0,\n        summ: 0\n      })\n\n      this.updateData();\n    }else{\n      alert(res['text'])\n    }\n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false, check_cash: 0, choose_driver_id: 0, summ: 0 }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle>Какую сумму сдает курьер</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <MyTextInput label=\"\" value={this.state.summ} func={this.changeSumm.bind(this)} />\n\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={this.saveGivePrice.bind(this)}>Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={6} className=\"MyDaterange\">\n            <MyDaterange startText=\"Дата от\" endText=\"Дата до\" value={this.state.rangeDate} func={ this.changeDateRange.bind(this) } />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n          </Grid>\n        \n          <Grid item xs={12}>\n            <TableContainer component={Paper}>\n              <Table>\n                \n                <TableHead>\n                  <TableRow>\n                    <TableCell>Имя</TableCell>\n                    <TableCell>Вся сумма</TableCell>\n                    <TableCell>Сумма по налу</TableCell>\n                    <TableCell>Сумма по безналу</TableCell>\n                    <TableCell>Кол-во по налу</TableCell>\n                    <TableCell>Кол-во по безналу</TableCell>\n                    <TableCell>К сдаче</TableCell>\n\n                    <TableCell>Сдал за период</TableCell>\n\n                    <TableCell>Довозы</TableCell>\n                    <TableCell style={{ display: 'none' }}>Ошибки</TableCell>\n                    <TableCell>-</TableCell>\n                    <TableCell>Заказы</TableCell>\n                    <TableCell>Заработал</TableCell>\n                    <TableCell>Налички на руках</TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody>\n                  \n                  { this.state.drive_stat_full.map( (item, key) =>\n                    <TableRow key={key}>\n                      <TableCell>{item.name}</TableCell>\n                      <TableCell>{item.full_sum}</TableCell>\n                      <TableCell>{item.full_cash}</TableCell>\n                      <TableCell>{item.full_bank}</TableCell>\n                      <TableCell>{item.count_cash}</TableCell>\n                      <TableCell>{item.count_bank}</TableCell>\n                      <TableCell>{item.sdacha}</TableCell>\n\n                      <TableCell>{item.give_by_date}</TableCell>\n\n                      <TableCell>{item.dop_price ? item.dop_price : 0}</TableCell>\n                      <TableCell style={{ display: 'none' }}>{item.err_summ}</TableCell>\n                      <TableCell>{item.my_price ? item.my_price : 0}</TableCell>\n                      <TableCell>{item.my_orders}</TableCell>\n                      <TableCell>{item.my}</TableCell>\n                      <TableCell>{item.ost_cash}</TableCell>\n                      <TableCell>\n                        <Button variant=\"contained\" onClick={this.giveCash.bind(this, item.driver_id, item.ost_cash)}>Сдать</Button>\n                      </TableCell>\n                    </TableRow>\n                  ) }\n                \n                </TableBody>\n              \n              </Table>\n            </TableContainer>\n          </Grid>\n\n          { this.state.drive_stat_date == null ? null :\n            <Grid item xs={12}>\n              <TableContainer component={Paper}>\n                <Table>\n                  \n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Курьер</TableCell>\n\n                      { this.state.drive_stat_date.orders.map( (item, key) =>\n                        <TableCell key={key} colSpan={4} style={{textAlign: 'center'}}>{item.date}</TableCell>\n                      ) }\n                    </TableRow>\n                    <TableRow>\n                      <TableCell></TableCell>\n\n                      { this.state.drive_stat_date.orders.map( (item, key) =>\n                        <>\n                          <TableCell key={key+'_1'} style={{textAlign: 'center'}}>Наличка</TableCell>\n                          <TableCell key={key+'_2'} style={{textAlign: 'center'}}>Безнал</TableCell>\n                          <TableCell key={key+'_3'} style={{textAlign: 'center'}}>Сдача</TableCell>\n                          <TableCell key={key+'_4'} style={{textAlign: 'center'}}>Заработал</TableCell>\n                        </>\n                      ) }\n\n                    </TableRow>\n                  </TableHead>\n\n                  <TableBody>\n                    \n                    { this.state.drive_stat_date.unic_users.map( (item, key) =>\n                      <TableRow key={key}>\n                        <TableCell style={{borderRight: '1px solid #eee'}}>{item.short_name}</TableCell>\n\n                        { this.state.drive_stat_date.orders.map( function(order, order_k){\n\n                          let check = false,\n                            data = {};\n    \n                          order['new_users'].map(function(it, k){\n                            if(parseInt(it['driver_id']) == parseInt(item['driver_id']) && it['date'] == order['date']){\n                              check = true;\n                              data = it;\n                            }\n                          })\n\n                          if(check == false){\n                            return (\n                              <TableCell key={order_k} colSpan={4} style={{borderRight: '1px solid #eee'}}></TableCell>\n                            )\n                          }else{\n                            return (\n                              <>\n                                <TableCell key={order_k+'_1'} style={{textAlign: 'center'}}>{data.full_cash}</TableCell>\n                                <TableCell key={order_k+'_2'} style={{textAlign: 'center'}}>{data.full_bank}</TableCell>\n                                <TableCell key={order_k+'_3'} style={{textAlign: 'center'}}>{data.sdacha}</TableCell>\n                                <TableCell key={order_k+'_4'} style={{borderRight: '1px solid #eee', textAlign: 'center'}}>{data.my}</TableCell>\n                              </>\n                            )\n                          }\n\n                        })}\n\n                      </TableRow>\n                    )}\n                  </TableBody>\n                \n                  <TableFooter>\n                    \n                    <TableRow>\n                      <TableCell style={{borderRight: '1px solid #eee'}}></TableCell>\n\n                      { this.state.drive_stat_date.orders.map( (item, key) =>\n                        <>\n                          <TableCell key={key+'_1'} style={{textAlign: 'center'}}>{item.full_cash}</TableCell>\n                          <TableCell key={key+'_2'} style={{textAlign: 'center'}}>{item.full_bank}</TableCell>\n                          <TableCell key={key+'_3'} style={{textAlign: 'center'}}>{item.sdacha}</TableCell>\n                          <TableCell key={key+'_4'} style={{borderRight: '1px solid #eee', textAlign: 'center'}}>{item.my}</TableCell>\n                        </>\n                      )}\n                        \n\n                    </TableRow>\n                    \n                  </TableFooter>\n\n                </Table>\n              </TableContainer>\n            </Grid>\n          }\n\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function DriverStat () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <DriverStat_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox, MyTimePicker } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nclass Events_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'events',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      mounth: '0',\n      mounths: [],\n      years: [],\n      year: '0',\n      \n      calendar: [],\n      modalDialog: false,\n      \n      chooseDayHoly: '',\n      events: [],\n      chooseEvent: 0,\n      \n      eventPoint1: 0,\n      everyYear1: false,\n      timeStart2: '10:00',\n      timeEnd2: '21:30',\n      \n      expanded: '',\n      dayEvents: [],\n      events_hist: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    console.log( data )\n    \n    this.setState({\n      points: data.points,\n      point: data.points[0].id,\n      module_name: data.module_info.name,\n      mounths: data.mounth,\n      mounth: data.this_m,\n      years: data.years,\n      year: data.this_y,\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  changeMounth(event){\n    let data = event.target.value;\n    \n    this.setState({\n      mounth: data\n    })\n    \n    setTimeout( () => {\n      //this.updateData();\n    }, 50 )\n  }\n  \n  changeYear(event){\n    let data = event.target.value;\n    \n    this.setState({\n      year: data\n    })\n  }\n  \n  changeCheckOrders(event){\n    let data = event.target.checked;\n    \n    this.setState({\n      showReady: data\n    })\n  }\n  \n  async updateData(){\n    let data = {\n      m: this.state.mounth,\n      y: this.state.year,\n      point_id: this.state.point\n    };\n    \n    let res = await this.getData('get_calendar', data);\n    \n    console.log( res )\n    \n    this.setState({\n      calendar: res.year,\n    })\n  }\n  \n  async chooseDay(day){\n    \n    if( day.full_day ){\n    \n      this.setState({\n        chooseDay: null,\n        eventPoint1: this.state.point,\n        chooseEvent: 0,\n        everyYear1: false,\n        timeStart2: '10:00',\n        timeEnd2: '21:30',\n        modalDialog: false,\n        events_hist: []\n      })\n      \n      let data = {\n        date: day.full_day,\n        point_id: this.state.point\n      };\n      \n      let res = await this.getData('get_calendar_day', data);\n      \n      console.log( 'res', res )\n      \n      this.setState({\n        chooseDay: day,\n        chooseDayHoly: res.holy,\n        events: res.events,\n        events_hist: res.hist,\n        dayEvents: res.this_events,\n        modalDialog: true\n      })\n    }\n  }\n  \n  changeEvent(event){\n    let data = event.target.value;\n    \n    this.setState({\n      chooseEvent: data\n    })\n  }\n  \n  changePoint1(event){\n    let data = event.target.value;\n    \n    this.setState({\n      eventPoint1: data\n    })\n  }\n  \n  changeEveryYear1(event){\n    let data = event.target.checked;\n    \n    this.setState({\n      everyYear1: data\n    })\n  }\n  \n  changeTimeStart2(event){\n    let data = event.target.value;\n    \n    this.setState({\n      timeStart2: data\n    })\n  }\n  \n  changeTimeEnd2(event){\n    let data = event.target.value;\n    \n    this.setState({\n      timeEnd2: data\n    })\n  }\n  \n  async save(){\n    let data = {\n      date: this.state.chooseDay.full_day,\n      point_id: this.state.eventPoint1,\n      event: this.state.chooseEvent,\n      every_year: this.state.everyYear1 === true ? 1 : 0,\n      \n      time_start: this.state.timeStart2,\n      time_end: this.state.timeEnd2,\n    };\n    \n    let res = await this.getData('save_event', data);\n    \n    console.log( res )\n    \n    if( res.st === false ){\n      alert(res.text)\n    }else{\n      this.setState({\n        chooseDay: null,\n        eventPoint1: this.state.point,\n        chooseEvent: 0,\n        everyYear1: false,\n        timeStart2: '10:00',\n        timeEnd2: '21:30',\n        modalDialog: false\n      })\n      \n      setTimeout( () => {\n        this.updateData();\n      }, 300 )\n    }\n  }\n  \n  handleChange(data){\n    this.setState({\n      expanded: data\n    })\n  }\n  \n  async delEvent(event){\n    console.log( 'delEvent', event )\n    \n    if (confirm('Удалить событие \"'+event.title+' '+event.date+'\" ?')) {\n      let data = {\n        del_id: event.id\n      };\n      \n      let res = await this.getData('del_event', data);\n      \n      this.setState({\n        chooseDay: null,\n        eventPoint1: this.state.point,\n        chooseEvent: 0,\n        everyYear1: false,\n        timeStart2: '10:00',\n        timeEnd2: '21:30',\n        modalDialog: false\n      })\n      \n      setTimeout( () => {\n        this.updateData();\n      }, 300 )\n    } else {\n      \n    }\n    \n\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{this.state.chooseDay ? this.state.chooseDay.full_day : ''}</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            <DialogContentText id=\"alert-dialog-description\">\n              \n              <Grid container spacing={3}>\n                \n                {this.state.chooseDayHoly.length == 0 ? null :\n                  <Grid item xs={12} sm={12}>\n                    <Typography component=\"span\">{this.state.chooseDayHoly}</Typography>\n                  </Grid>\n                }\n                \n                <Grid item xs={12} sm={12}>\n                  <MySelect classes={this.state.classes} data={this.state.events} value={this.state.chooseEvent} func={ this.changeEvent.bind(this) } label='Событие' />\n                </Grid>\n                \n                <Grid item xs={12} sm={12}>\n                  <MySelect classes={this.state.classes} data={this.state.points} value={ this.state.eventPoint1 } func={ this.changePoint1.bind(this) } label='Точка' />\n                </Grid>\n                \n                { parseInt(this.state.chooseEvent) !== 2 ? null :\n                  <>\n                    <Grid item xs={6} sm={6}>\n                      <MyTimePicker classes={this.state.classes} value={ this.state.timeStart2 } func={ this.changeTimeStart2.bind(this) } label='Время начала работы' />\n                    </Grid>\n                    <Grid item xs={6} sm={6}>\n                      <MyTimePicker classes={this.state.classes} value={ this.state.timeEnd2 } func={ this.changeTimeEnd2.bind(this) } label='Время окончания работы' />\n                    </Grid>\n                  </>\n                }\n                \n                <Grid item xs={12} sm={12}>\n                  <MyCheckBox classes={this.state.classes} value={ this.state.everyYear1 } func={ this.changeEveryYear1.bind(this) } label='Каждый год' />\n                </Grid>\n                \n              </Grid>\n              \n              <List component=\"nav\">\n                { this.state.dayEvents.map( (item, key) => \n                  <ListItem key={key}>\n                    <ListItemText primary={item.title} />\n                    { parseInt(item.type) == 4 ? null :\n                      <CloseIcon color=\"primary\" onClick={this.delEvent.bind(this, item)} style={{ cursor: 'pointer' }} />\n                    }\n                  </ListItem>\n                )}\n              </List>\n              \n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography>История</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <List component=\"nav\">\n                    { this.state.events_hist.map( (item, key) => \n                      <ListItem key={key}>\n                        <ListItemText primary={item.title} />\n                      </ListItem>\n                    )}\n                  </List>\n                </AccordionDetails>\n              </Accordion>\n              \n              \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ this.save.bind(this) } color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.mounths} value={this.state.mounth} func={ this.changeMounth.bind(this) } label='Месяц' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.years} value={this.state.year} func={ this.changeYear.bind(this) } label='Год' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n          </Grid>\n        \n          \n          \n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }}>\n            \n            { this.state.calendar.map( (item, key) =>\n            \n              <Grid item xs={12} sm={4} key={key} style={{ padding: 20 }}>\n                <h1 style={{ textAlign: 'center' }}>{ item[0][0].mounth }</h1>\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\" style={{ overflow: 'hidden' }}>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell className={this.state.classes.tableCelHead}>Пн</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Вт</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Ср</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Чт</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Пт</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Сб</TableCell>\n                        <TableCell className={this.state.classes.tableCelHead}>Вс</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      \n                      { item.map( (mounth, m_key) =>\n                        <TableRow key={m_key}>\n                          { mounth.map( (day, k) =>\n                            <TableCell \n                              key={k} \n                              onClick={ this.chooseDay.bind(this, day) } \n                              \n                              style={{ color: day.dir ? 'yellow' : day.holy ? '#c03' : '#000' }}\n                              \n                              className={ day.event ? this.state.classes.customCel : this.state.classes.tableCel }\n                            > { day.day } </TableCell>\n                          ) }\n                        </TableRow>\n                      ) }\n                      \n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n            )}\n            \n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Events () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <Events_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n});\n\nclass Home_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      module: 'home',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      showReady: false,\n      read: [],\n      onstol: [],\n      ordersQueue: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n        console.log( err )\n    });\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          <Grid item xs={12} sm={12} style={{ height: '100vh' }}>\n            \n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Home () {\n  const classes = useStyles();\n  \n  return (\n    <Home_ classes={classes} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nclass Live_Orders extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'live_orders',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      showReady: false,\n      read: [],\n      onstol: [],\n      ordersQueue: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      points: data.point_list,\n      point: data.point_list[0].id,\n      module_name: data.module_info.name\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 100 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  changeCheckOrders(event){\n    let data = event.target.checked;\n    \n    this.setState({\n      showReady: data\n    })\n  }\n  \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      showReady: this.state.showReady === true ? 1 : 0\n    };\n    \n    let res = await this.getData('get_orders', data);\n    \n    this.setState({\n      read: res.read,\n      onstol: res.onstol,\n      ordersQueue: res.prestol_new\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          { this.state.points.length > 0 ?\n            <>\n              <Grid item xs={6} sm={6}>\n                <MySelect data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n              </Grid>\n              <Grid item xs={6} sm={6}>\n                <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <MyCheckBox value={this.state.showReady} func={ this.changeCheckOrders.bind(this) } label='Показывать готовые' />\n              </Grid>\n            </>\n              :\n            null\n          }\n          \n          \n          \n          <Grid item xs={12} sm={12}>\n            \n            <TableContainer component={Paper}>\n              <Table aria-label=\"a dense table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>#</TableCell>\n                    <TableCell>Тип</TableCell>\n                    <TableCell>Время заказа</TableCell>\n                    <TableCell>Время предзакза</TableCell>\n                    \n                    <TableCell>Время выхода на стол</TableCell>\n                    <TableCell>Во сколько собрали</TableCell>\n                    <TableCell>Закрыли</TableCell>\n                    \n                    <TableCell>Приготовили</TableCell>\n                    <TableCell>Отдали</TableCell>\n                    <TableCell>Обещали</TableCell>\n                    \n                    <TableCell>Статус</TableCell>\n                    <TableCell>Стол</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  {this.state.read.map( (item, key) => (\n                    <TableRow key={key}>\n                      <TableCell>{item.id}</TableCell>\n                      <TableCell>{item.type_order}</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? '' : item.date_time_order }</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? item.date_time_preorder_ : '' }</TableCell>\n                      \n                      <TableCell>{item.unix_start_stol_or}</TableCell>\n                      <TableCell>{item.give_data_time_}</TableCell>\n                      <TableCell>{item.close_date_time_order}</TableCell>\n                      \n                      <TableCell style = {{backgroundColor: parseInt(item.type_) == 1 ? '' : item.color}}>{item.time_}</TableCell>\n                      <TableCell style = {{backgroundColor: parseInt(item.type_) != 1 ? '' : item.color}}>{item.test_time}</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\n                      \n                      <TableCell>{item.status}</TableCell>\n                      <TableCell>{item.stol_sborki}</TableCell>\n                    </TableRow>\n                  ))}\n                  \n                  {this.state.onstol.map( (item, key) => (\n                    <TableRow key={key} style = {{backgroundColor: 'yellow'}}>\n                      <TableCell>{item.id}</TableCell>\n                      <TableCell>{item.type_order}</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? '' : item.date_time_order }</TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 1 ? item.date_time_preorder_ : '' }</TableCell>\n                      \n                      <TableCell>{item.unix_start_stol_or}</TableCell>\n                      <TableCell></TableCell>\n                      <TableCell></TableCell>\n                      \n                      <TableCell></TableCell>\n                      <TableCell></TableCell>\n                      <TableCell>{ parseInt(item.preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\n                      \n                      <TableCell>{item.status}</TableCell>\n                      <TableCell>{item.stol_sborki}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n            <TableContainer component={Paper}>\n              <Table aria-label=\"a dense table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>#</TableCell>\n                    <TableCell>Пред</TableCell>\n                    <TableCell>Время оформления</TableCell>\n                    <TableCell>Время выхода на стол</TableCell>\n                    <TableCell>Время закрытия</TableCell>\n                    <TableCell>Обещали</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  {this.state.ordersQueue.map( (item, key) => (\n                    <TableRow key={key}>\n                      <TableCell>{item.id}</TableCell>\n                      <TableCell>{ parseInt(item.is_preorder) == 1 ? item.date_time_preorder : '' }</TableCell>\n                      <TableCell>{ parseInt(item.is_preorder) == 0 ? item.date_time_order : '' }</TableCell>\n                      \n                      <TableCell>{item.time_start_order}</TableCell>\n                      <TableCell>{item.time_end_order}</TableCell>\n                      \n                      <TableCell>{ parseInt(item.is_preorder) == 0 ? item.unix_time_to_client : '' }</TableCell>\n                    </TableRow>\n                  ))}\n                  \n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function LiveOrders () {\n  let history = useHistory();\n  \n  return (\n    <Live_Orders history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyAutocomplite, MyDaterange } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass RasByBill_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'ras_by_bill',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      \n      points: [],\n      point: [],\n      date_start: formatDate(new Date()),\n      date_end: formatDate(new Date()),\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\n      items: [],\n      cats: [],\n      items_cat: [],\n      item_cat: 0,\n      \n      myItems: [],\n      \n      calendar: []\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      points: data.points,\n      \n      items: data.items,\n      cats: data.cats,\n      items_cat: data.items_cat\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n  }\n  \n  changeItems(event, data){\n    this.setState({\n      myItems: data\n    })\n  }\n  \n  async getItems(){\n    let data = {\n      points: this.state.point,\n      items: this.state.myItems,\n      item_cat: this.state.item_cat,\n      start_date: this.state.rangeDate[0],\n      end_date: this.state.rangeDate[1],\n    };\n    \n    let res = await this.getData('get_this_rev', data);\n    \n    let summ = 0;\n    \n    res.items_ras.map( (item, key) => {\n      summ += parseFloat(item.sum);\n    } )\n    \n    this.setState({\n      resItems: {\n        items_ras: res.items_ras,\n        pf_ras: res.pf_ras,\n        rec_ras: res.rec_ras,\n        full_sum: summ.toFixed(2)\n      },\n      catItems: null\n    })\n  }\n  \n  async getCats(){\n    let data = {\n      points: this.state.point,\n      items: this.state.myItems,\n      start_date: this.state.rangeDate[0],\n      end_date: this.state.rangeDate[1],\n    };\n    \n    let res = await this.getData('get_this_rev_cat', data);\n    \n    \n    let summ = 0;\n    \n    res.rec_ras.map( (item, key) => {\n      summ += parseFloat(item.this_price);\n    } )\n    \n    this.setState({\n      catItems: {\n        count_pos: res.count_pos,\n        items_ras: res.items_ras,\n        rec_ras: res.rec_ras,\n        full_sum: summ.toFixed(2)\n      },\n      resItems: null\n    })\n  }\n  \n  changeDateRange(data){\n    let dateStart = data[0] ? formatDate(data[0]) : '';\n    let dateEnd = data[1] ? formatDate(data[1]) : '';\n    \n    this.setState({\n      rangeDate: [dateStart, dateEnd]\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">  </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              \n              \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ () => {} } color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.points} multiple={true} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          \n          <Grid item xs={12} sm={4} className=\"MyDaterange\">\n            <MyDaterange startText=\"Дата от\" endText=\"Дата до\" value={this.state.rangeDate} func={ this.changeDateRange.bind(this) } />\n          </Grid>\n          \n          <Grid item xs={12} sm={5}>\n            <MySelect classes={this.state.classes} data={this.state.items_cat} multiple={false} value={this.state.item_cat} func={ (event) => {this.setState({ item_cat: event.target.value })} } label='Категория товара' />\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            <MyAutocomplite classes={this.state.classes} data={this.state.items} multiple={true} value={this.state.myItems} func={ this.changeItems.bind(this) } label='Заготовки' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.getItems.bind(this)}>Показать заготовки</Button>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.getCats.bind(this)}>Показать категории</Button>\n          </Grid>\n        \n        \n          { this.state.resItems && this.state.resItems.items_ras ?\n              \n            <>\n              <Grid item xs={12}>\n                \n                <h1>Куплено по наклданым</h1>\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Наименование товара</TableCell>\n                        <TableCell>Объем товра</TableCell>\n                        <TableCell>Объем заготовки</TableCell>\n                        <TableCell>Сумма</TableCell>\n                        <TableCell>Кол-во наклданых</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      \n                      { this.state.resItems.items_ras.map( (item, key) =>\n                        <TableRow key={key}>\n                          <TableCell> { item.name } </TableCell>\n                          <TableCell> { item.count_item + ' ' + item.ei_name } </TableCell>\n                          <TableCell> { item.count_pf + ' ' + item.ei_name_pf } </TableCell>\n                          <TableCell> { item.sum } </TableCell>\n                          <TableCell> { item.count_bill } </TableCell>\n                        </TableRow>\n                      ) }\n                      \n                      <TableRow>\n                        <TableCell> Всего: </TableCell>\n                        <TableCell> </TableCell>\n                        <TableCell> </TableCell>\n                        <TableCell> { this.state.resItems.full_sum } </TableCell>\n                        <TableCell> </TableCell>\n                      </TableRow>\n                      \n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n              \n              <Grid item xs={12}>\n                \n                <h1>Расход заготовок (включая рецепты)</h1>\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Наименование заготовки</TableCell>\n                        <TableCell>Объем заготовок</TableCell>\n                        <TableCell>Кол-во роллов</TableCell>\n                        <TableCell>Сумма роллов (примерно)</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      \n                      { this.state.resItems.pf_ras.map( (item, key) =>\n                        <TableRow key={key}>\n                          <TableCell> { item.pf_name } </TableCell>\n                          <TableCell> { item.count_pf + ' ' + item.ei_name } </TableCell>\n                          <TableCell> { item.count_rolls } </TableCell>\n                          <TableCell> { item.price_rolls } </TableCell>\n                        </TableRow>\n                      ) }\n                      \n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n              \n              <Grid item xs={12}>\n                \n                <h1>Расход рецептов</h1>\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Наименование заготовки</TableCell>\n                        <TableCell>Объем заготовок</TableCell>\n                        <TableCell>Кол-во роллов</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      \n                      { this.state.resItems.rec_ras.map( (item, key) =>\n                        <TableRow key={key}>\n                          <TableCell> { item.pf_name } </TableCell>\n                          <TableCell> { item.count_pf + ' ' + item.ei_name } </TableCell>\n                          <TableCell> { item.count_rolls } </TableCell>\n                        </TableRow>\n                      ) }\n                      \n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n            </>\n              :\n            null              \n          }\n          \n          { this.state.catItems && this.state.catItems.rec_ras ?\n            <Grid item xs={12}>\n              \n              <Accordion disabled>\n                <AccordionSummary>\n                  <Typography style={{ width: '50%' }}>Роллов: {this.state.catItems.count_pos.count_rolls}</Typography>\n                  <Typography style={{ width: '50%' }}>Пиццы: {this.state.catItems.count_pos.count_pizza}</Typography>\n                </AccordionSummary>\n              </Accordion>\n              \n              { this.state.catItems.rec_ras.map( (item, key) =>\n                <Accordion key={key}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1bh-content\"\n                  >\n                    <Typography style={{ width: '60%' }}>{item.name}</Typography>\n                    <Typography style={{ width: '20%' }}>{item.this_price}</Typography>\n                    <Typography style={{ width: '20%' }}>{item.price_by_items}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    \n                    { item.parent_cat.map( (it, k) =>\n                      <Accordion key={k}>\n                        <AccordionSummary\n                          expandIcon={<ExpandMoreIcon />}\n                          aria-controls=\"panel1bh-content\"\n                        >\n                          <Typography style={{ width: '60%', paddingLeft: 20 }}>{it.name}</Typography>\n                          <Typography style={{ width: '20%', paddingLeft: 20 }}>{it.this_price}</Typography>\n                          <Typography style={{ width: '20%', paddingLeft: 20 }}>{it.price_by_items}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          \n                          <Accordion disabled={true}>\n                            <AccordionSummary>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Товар</Typography>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Товара</Typography>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Заготовок</Typography>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Накладных</Typography>\n                              <Typography style={{ width: '20%', paddingLeft: 40 }}>Сумма</Typography>\n                            </AccordionSummary>\n                          </Accordion>\n                          \n                          { it.items.map( (parent_items, parent_key) =>\n                            <Accordion key={parent_key} disabled={true}>\n                              <AccordionSummary>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.name}</Typography>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_item} {parent_items.ei_name}</Typography>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_pf} {parent_items.ei_name}</Typography>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.count_bill}</Typography>\n                                <Typography style={{ width: '20%', paddingLeft: 40 }}>{parent_items.sum}</Typography>\n                              </AccordionSummary>\n                            </Accordion>\n                          ) }\n                          \n                        </AccordionDetails>\n                      </Accordion>\n                    ) }\n                    \n                    \n                  </AccordionDetails>\n                </Accordion>\n              ) }\n              \n              <Accordion disabled>\n                <AccordionSummary>\n                  <Typography style={{ width: '60%', marginRight: -15 }}>Всего:</Typography>\n                  <Typography style={{ width: '40%' }}>{ this.state.catItems.full_sum }</Typography>\n                </AccordionSummary>\n              </Accordion>\n              \n            </Grid>\n              :\n            null              \n          }\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function RasByBill () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <RasByBill_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    borderRadius: 0,\n    width: '100%',\n    height: 150,\n    margin: 0,\n    backgroundColor: '#fff'\n  },\n  avatar2: {\n    borderRadius: 0,\n    width: '100%',\n    height: 130,\n    margin: 0,\n    backgroundColor: '#fff'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  textLink: {\n    color: '#c03'\n  }\n});\n\nclass Reg_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'auth',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      dialogTitle: '',\n      dialogText: '',\n      \n      activeStep: 0,\n      steps: ['Телефон', 'Подтверждение', 'Новый пароль'],\n      \n      phone: '',\n      code: '',\n      pwd: ''\n    };\n  }\n  \n  async componentDidMount(){\n      \n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: '+79879340391',\n        //login: localStorage.getItem('login'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        this.state.history.push(\"/auth\");\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      showReady: this.state.showReady === true ? 1 : 0\n    };\n    \n    let res = await this.getData('get_orders', data);\n    \n    this.setState({\n      read: res.read,\n      onstol: res.onstol,\n      ordersQueue: res.prestol_new\n    })\n  }\n  \n  async nextStep(){\n    if( this.state.activeStep == 0 ){\n      let data = {\n        login: document.getElementById('phone').value\n      }\n      \n      let res = await this.getData('check_phone', data);\n      \n      if( res.st === false ){\n        setTimeout( () => {\n          this.setState({ \n            modalDialog: true,\n            dialogTitle: 'Предупреждение',\n            dialogText: res.text\n          })\n        }, 500 )\n      }else{\n        this.setState({ \n          activeStep: this.state.activeStep+1,\n          phone: data.login\n        })\n      }\n    }else if( this.state.activeStep == 1 ){\n      let data = {\n        login: this.state.phone,\n\t\t\t  code: document.getElementById('code').value\n      }\n      \n      let res = await this.getData('check_code', data);\n      \n      if( res.st === false ){\n        setTimeout( () => {\n          this.setState({ \n            modalDialog: true,\n            dialogTitle: 'Предупреждение',\n            dialogText: res.text\n          })\n        }, 500 )\n      }else{\n        this.setState({ \n          activeStep: this.state.activeStep+1,\n          code: data.code\n        })\n      }\n    }else if( this.state.activeStep == 2 ){\n      let data = {\n        login: this.state.phone,\n        code: this.state.code,\n        pwd: document.getElementById('password').value\n      }\n      \n      let res = await this.getData('save_new_pwd', data);\n      \n      if( res.st === false ){\n        setTimeout( () => {\n          this.setState({ \n            modalDialog: true,\n            dialogTitle: 'Предупреждение',\n            dialogText: res.text\n          })\n        }, 500 )\n      }else{\n        localStorage.setItem('token', res.token)\n      \n        setTimeout( () => {\n          window.location.pathname = '/'\n        }, 300)\n      }\n    }\n  }\n  \n  enterNextStep(event){\n    if( event.charCode == 13 ){\n      this.nextStep();\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{this.state.dialogTitle}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">{this.state.dialogText}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ () => { this.setState({ modalDialog: false }) } } color=\"primary\" autoFocus>Хорошо</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          <Grid item xs={12} sm={6} md={6} lg={4} xl={3}>\n            <div className={this.state.classes.paper}>\n              <Avatar className={this.state.classes.avatar}>\n                <img alt=\"Жако доставка роллов и пиццы\" src=\"../assets/img_other/Favikon.png\" style={{ height: '100%' }} />\n              </Avatar>\n              \n              <Stepper activeStep={this.state.activeStep} alternativeLabel style={{ width: '100%' }}>\n                {this.state.steps.map((label) => (\n                  <Step key={label}>\n                    <StepLabel>{label}</StepLabel>\n                  </Step>\n                ))}\n              </Stepper>\n              <div className={this.state.classes.form} style={{ width: '100%' }}>\n                \n                { this.state.activeStep == 0 ?\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    size=\"small\"\n                    required\n                    fullWidth\n                    id=\"phone\"\n                    label=\"Номер телефона\"\n                    name=\"phone\"\n                    autoComplete=\"phone\"\n                    autoFocus\n                    onKeyPress={ this.enterNextStep.bind(this) }\n                  />  \n                    :\n                  null\n                }\n                \n                { this.state.activeStep == 1 ?\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    size=\"small\"\n                    required\n                    fullWidth\n                    id=\"code\"\n                    label=\"Код из смс\"\n                    name=\"code\"\n                    autoComplete=\"code\"\n                    autoFocus\n                    onKeyPress={ this.enterNextStep.bind(this) }\n                  />  \n                    :\n                  null\n                }\n                \n                { this.state.activeStep == 2 ?\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    size=\"small\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Пароль\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    onKeyPress={ this.enterNextStep.bind(this) }\n                  />\n                    :\n                  null\n                }\n                                  \n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={this.state.classes.submit}\n                  onClick={ this.nextStep.bind(this) }\n                >\n                  Дальше\n                </Button>\n                <Grid container>\n                  <Grid item xs>\n                    <a href=\"/auth\" className={this.state.classes.textLink}>Вернуться к авторизации</a>\n                  </Grid>\n                </Grid>\n                \n                \n              </div>\n              \n              \n            </div>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Reg () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <Reg_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { makeStyles } from '@mui/styles';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n\nimport TextField from '@mui/material/TextField';\nimport CloseIcon from '@mui/icons-material/Close';\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport Divider from '@mui/material/Divider';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RestoreIcon from '@mui/icons-material/Restore';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ArchiveIcon from '@mui/icons-material/Archive';\nimport Paper from '@mui/material/Paper';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\n\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\n\nimport { MySelect, MyCheckBox, MyTimePicker, MyTextInput, MyDaterange, MyAutocomplite, MyDatePicker } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  \n}));\n\nclass Revizion_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'revizion',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      \n      revList: [],\n      chooseRev: '',\n      \n      items: [],\n      pf: [],\n      all_data: [],\n      chooseTab: 0,\n      \n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      points: data.point_list,\n      point: data.point_list.length == 1 ? data.point_list[0].id : '0',\n      module_name: data.module_info.name,\n\t  all_data: data.get_data_for_new_rev\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      //this.updateData();\n    }, 100 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n   \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.getRevList();\n    }, 50 )\n  }\n  \n  changeRev(event){\n    let data = event.target.value;\n    \n    this.setState({\n      chooseRev: data\n    })\n    \n    setTimeout( () => {\n      this.getDataRev();\n    }, 300 )\n  }\n  \n   async search(event){\n\t    \n\t\tlet data = {\n\t\t\tpoint_id: this.state.point,\n\t\t\tshowReady: this.state.showReady === true ? 1 : 0\n\t\t};\n    \n\t\t// let res =  this.getData('get_orders', data);\t\n\t\tlet res2 = this.state;\n\t\t// let res3 = await this.getData('all_items_list', data);\n\t\t// let word = event.target.value;\n   \n\t\tconsole.log('res2');\n\t\tconsole.log(res2);\n\t\t//res2.forEach(element => console.log(element));\n\t\t\n\t\t\n\t\t// data\n\t\t// d.forEach(item => { \n\t\t\t// console.log(item);\n\t\t// })\n  }\n  \n  async updateData(){\n\t  \n    let data = {\n      rev_id\t: this.state.chooseRev,\n      point_id\t: this.state.point,\n    };\n    \n\tconsole.log('data=');\n\tconsole.log(data);\n\t\n\t// to do переписать\n    let res = await this.getData('get_data_rev', data);\n\t\n\t// отрисовка\n\tthis.setState({\n      items: \tres.item,\n      rec: \t\tres.rec,\n      pf: \t\tres.pf\n    })\n\tconsole.log('res=');\n    console.log(res);\n    // this.setState({\n      // read: res.read,\n      // onstol: res.onstol,\n      // ordersQueue: res.prestol_new\n    // })\n  }\n  \n  async getRevList(){\n    let data = {\n      point_id: this.state.point,\n    };\n    \n    let res = await this.getData('get_rev_list', data);\n    \n    this.setState({\n      revList: res,\n      chooseRev: res.length > 0 ? res[0]['id'] : ''\n    })\n    \n    if( res.length > 0 ){\n      setTimeout( () => {\n        this.getDataRev();\n      }, 300 )\n    }\n  }\n  \n  async getDataRev(){\n    let data = {\n      point_id: this.state.point,\n      rev_id: this.state.chooseRev\n    };\n    \n    let res = await this.getData('get_data_rev', data);\n    \n    this.setState({\n      items: res['items'],\n      pf: res['pf'],\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12}>\n            <Link to={\"/revizion/new\"}>Новая ревизия2</Link>\n          </Grid>\n          \n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.revList} value={this.state.chooseRev} func={ this.changeRev.bind(this) } label='Ревизия' />\n          </Grid>\n\t\t  <Grid item xs={12} sm={6}>\n\t\t\t<MyTextInput classes={this.state.classes} func={ this.search.bind(this) } label='Поиск' />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n          </Grid>\n          \n            \n          \n          \n          \n          <Grid item xs={12} sm={12} id=\"revTable\">\n            \n            <Tabs value={this.state.chooseTab} onChange={ (item, key) => { this.setState({ chooseTab: key }) } } textColor=\"primary\" indicatorColor=\"primary\" centered>\n              <Tab label=\"Товары\" {...a11yProps(0)} />\n              <Tab label=\"Заготовки\" {...a11yProps(1)} />\n            </Tabs>\n            \n            <TabPanel value={this.state.chooseTab} index={0}>\n              \n              <TableContainer component={Paper} >\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Товар</TableCell>\n                      <TableCell>Объем</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    { this.state.items.map( (item, key) => (\n                      <TableRow key={key}>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell>{item.value} {item.ei_name}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              \n            </TabPanel>\n            <TabPanel value={this.state.chooseTab} index={1}>\n              \n              <TableContainer component={Paper} >\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Заготовка</TableCell>\n                      <TableCell>Объем</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    { this.state.pf.map( (item, key) => (\n                      <TableRow key={key}>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell>{item.value} {item.ei_name}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              \n            </TabPanel>\n            \n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nclass RevizionNewItem extends React.Component{\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      item: this.props.item,\n      change: this.props.change\n    };\n  }\n  \n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.state.change !== nextState.change ||\n      this.state.change !== nextProps.change\n    );\n  }\n  \n  render(){\n    return (\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          //aria-controls=\"panel1a-content\"\n          //id=\"panel1a-header\"\n        >\n          <Typography style={{ width: '60%' }}>{this.state.item.name}</Typography>\n          <Typography style={{ width: '40%' }}>{this.state.item.value} {this.state.item.ei_name}</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          \n          \n            { this.state.item.counts.map( (it, k) =>\n              <Grid container spacing={3} key={k} style={{ paddingTop: 10, paddingBottom: 10 }}>\n                <Grid item xs={12} sm={6}>\n                  <MySelect data={ this.state.item.size } value={ it.need_pq } func={ this.props.func.bind(this, 'item', this.props.itemKey, 'need_pq', k) } label='Объем упаковки' />\n                </Grid>\n                <Grid item xs={ k == 0 ? 12 : 9 } sm={5}>\n                  <TextField value={ it.value } onChange={ this.props.func.bind(this, 'item', this.props.itemKey, 'value', k) } fullWidth variant=\"outlined\" size=\"small\" label=\"Количество\" />\n                </Grid>\n                { k == 0 ? null :\n                  <Grid item xs={3} sm={1}>\n                    <Button onClick={this.props.clear.bind(this, 'item', this.props.itemKey, k)} variant=\"contained\"> <CloseIcon /> </Button>\n                  </Grid>\n                }\n                \n              </Grid>\n            ) }\n          \n          \n          <Grid item xs={12} sm={6}>\n            <Button variant=\"contained\" onClick={this.props.copy.bind(this, 'item', this.props.itemKey)}>Дублировать</Button>\n          </Grid>\n          \n        </AccordionDetails>\n      </Accordion>\n    )\n  }\n}\n\nclass RevizionNew_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'revizion',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      point: '0',\n      \n      revList: [],\n      chooseRev: '',\n      \n      storages: [],\n      items: [],\n      rec: [],\n      pf: [],\n      \n      chooseTab: 0,\n      \n      open: false\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      points: data.point_list,\n      point: data.point_list.length == 1 ? data.point_list[0].id : '0',\n      module_name: data.module_info.name\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      //this.updateData();\n    }, 100 )\n  }\n  \n  changePoint(event){\n    let data = event.target.value;\n    \n    this.setState({\n      point: data\n    })\n    \n    setTimeout( () => {\n      this.getDataRev();\n    }, 300 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n\t  \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n    });\n  }\n  \n  async getDataRev(){\n    let data = {\n      point_id: this.state.point\n    };\n    \n    let res = await this.getData('get_data_for_new_rev', data);\n    \n    this.setState({\n      storages: res['storages'],\n      items: res['items'],\n      rec: res['rec'],\n      pf: res['pf']\n    })\n  }\n  \n  saveData(type, key_item, data, key_data, event){\n    \n    if( type == 'item' ){\n      let items = this.state.items;\n      \n      items[key_item]['counts'][key_data][ [data] ] = event.target.value;\n      \n      let allVal = 0;\n      \n      items[key_item]['counts'].map( (item, key) => {\n        allVal += parseFloat(item.need_pq) * parseFloat(item.value);\n      } )\n      \n      items[key_item]['value'] = allVal;\n      items[key_item]['change'] ++;\n      \n      this.setState({\n        items: items\n      })\n    }\n    \n    \n  }\n  \n  copyData(type, key_item){\n    if( type == 'item' ){\n      let items = this.state.items;\n      \n      items[key_item]['counts'].push({ need_pq: items[key_item]['counts'][0]['need_pq'], value: 0 })\n      items[key_item]['change'] ++;\n      \n      this.setState({\n        items: items\n      })\n    }\n  }\n  \n  clearData(type, key_item, key_data){\n    \n    if( type == 'item' ){\n      let items = this.state.items;\n      let new_counts = [];\n      \n      items[key_item]['counts'].map( (item, key) => {\n        if( key != key_data ){\n          new_counts.push( item )\n        }\n      } )\n      \n      items[key_item]['counts'] = new_counts;\n      \n      let allVal = 0;\n      \n      items[key_item]['counts'].map( (item, key) => {\n        allVal += parseFloat(item.need_pq) * parseFloat(item.value);\n      } )\n      \n      items[key_item]['value'] = allVal;\n      items[key_item]['change'] ++;\n      \n      this.setState({\n        items: items\n      })\n    }\n    \n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          \n          \n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.points} value={this.state.point} func={ this.changePoint.bind(this) } label='Точка' />\n          </Grid>\n          \n          <Grid item xs={12} sm={12} id=\"revTable\">\n            \n            <Tabs value={this.state.chooseTab} onChange={ (item, key) => { this.setState({ chooseTab: key }) } } textColor=\"primary\" indicatorColor=\"primary\" centered>\n              <Tab label=\"Товары\" {...a11yProps(0)} />\n              <Tab label=\"Заготовки\" {...a11yProps(1)} />\n            </Tabs>\n            \n            <TabPanel value={this.state.chooseTab} index={0}>\n              \n              { this.state.items.map( (item, key) =>\n                <RevizionNewItem key={key} itemKey={key} item={item} change={item.change} func={ this.saveData.bind(this) } copy={ this.copyData.bind(this) } clear={ this.clearData.bind(this) } />\n              ) }\n              \n              \n            </TabPanel>\n            <TabPanel value={this.state.chooseTab} index={1}>\n              \n              \n              \n            </TabPanel>\n            \n          </Grid>\n        </Grid>\n        \n        <React.Fragment >\n          <SwipeableDrawer\n            anchor={'left'}\n            open={ this.state.open }\n            onClose={ () => { this.setState({ open: false }) } }\n            onOpen={ () => { this.setState({ open: true }) } }\n          >\n            <List style={{ width: '100%' }}>\n              { this.state.storages.map( (item, key) =>\n                <ListItem button key={key}>\n                  <ListItemText primary={ item.name } />\n                </ListItem>\n              ) }\n            </List>\n          </SwipeableDrawer>\n        </React.Fragment>\n        \n        { this.state.storages.length == 0 ? null :\n          <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\n            <BottomNavigation\n              showLabels\n              onChange={(event, newValue) => {\n                this.setState({ open: true })\n              }}\n            >\n              <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n            </BottomNavigation>\n          </Paper>\n        }\n      </>\n    )\n  }\n}\n\nexport function Revizion () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <Revizion_ classes={classes} history={history} />\n  );\n}\n\nexport function RevizionNew () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <RevizionNew_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport { NavLink as Link, useParams } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableFooter from '@mui/material/TableFooter';\n\nimport Divider from '@mui/material/Divider';\n\nimport CloseIcon from '@mui/icons-material/Close';\nimport CheckIcon from '@mui/icons-material/Check';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox, MyTimePicker, MyTextInput, MyDaterange, MyAutocomplite } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nimport DatePicker from \"react-multi-date-picker\"\n\nclass MyDatePicker extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <>\n        <Typography>{this.props.label}</Typography>\n        <DatePicker\n          format=\"YYYY-MM-DD\"\n          \n          multiple\n          sort\n          \n          //mask=\"____/__/__\"\n          //multiple={ this.props.multiple && this.props.multiple === true ? true : false }\n          //disableCloseOnSelect={true}\n          //inputFormat=\"yyyy-MM-dd\"\n          style={{ width: '100%' }}\n          label={this.props.label}\n          value={this.props.value}\n          onChange={this.props.func}\n        />\n      </>\n    )\n  }\n}\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nfunction formatDateDot(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [day, month, year].join('.');\n}\n\nfunction formatDateName(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  //if (month.length < 2) \n  //    month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  let m = '';    \n      \n  switch(parseInt(month)){\n\t\tcase 1:{\n\t\t\tm = 'Января';\n\t\t\tbreak;}\n\t\tcase 2:{\n\t\t\tm = 'Февраля';\n\t\t\tbreak;}\n\t\tcase 3:{\n\t\t\tm = 'Марта';\n\t\t\tbreak;}\n\t\tcase 4:{\n\t\t\tm = 'Апреля';\n\t\t\tbreak;}\n\t\tcase 5:{\n\t\t\tm = 'Мая';\n\t\t\tbreak;}\n\t\tcase 6:{\n\t\t\tm = 'Июня';\n\t\t\tbreak;}\t\n\t\tcase 7:{\n\t\t\tm = 'Июля';\n\t\t\tbreak;}\n\t\tcase 8:{\n\t\t\tm = 'Августа';\n\t\t\tbreak;}\n\t\tcase 9:{\n\t\t\tm = 'Сентября';\n\t\t\tbreak;}\n\t\tcase 10:{\n\t\t\tm = 'Октября';\n\t\t\tbreak;}\n\t\tcase 11:{\n\t\t\tm = 'Ноября';\n\t\t\tbreak;}\n\t\tcase 12:{\n\t\t\tm = 'Декабря';\n\t\t\tbreak;}\t\n\t}    \n      \n  return [day, m].join(' ');\n}\n\nclass SiteSale2_new_ extends React.Component {\n  click = false;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'site_sale_2',\n      module_name: '',\n      is_load: false,\n      modalText: '',\n      \n      points: [],\n      point: 0,\n      cities: [],\n      city: 0,\n      \n      modalDialog: false,\n      modalLink: '',\n      \n      where_promo_list: [\n        {id: 1, name: 'Создать'},\n        {id: 2, name: 'Создать и показать'},\n        {id: 3, name: 'Отправить на почту'},\n        {id: 4, name: 'Отправить в смс'},\n        {id: 5, name: 'Рассылка смс'},\n        {id: 6, name: 'Отправить в ЛК (через 8)'},\n        {id: 7, name: 'Создать сертификат(ы)'},\n        {id: 8, name: 'Отправить через бота ВК'},\n      ],\n      promo_action_list: [],\n      sale_list: [\n        {id: 1, name: 'На товары'},\n        {id: 2, name: 'На категории'},\n        {id: 3, name: 'На все меню (кроме допов и закусок)'},\n      ],\n      promo_conditions_list: [\n        {id: 1, name: 'В корзине есть определенные товар(ы)'},\n        {id: 2, name: 'В корзине набрана определенная сумма'},\n      ],\n      promo_sale_list: [],\n      type_sale_list: [\n        {id: 1, name: 'В рублях'},\n        {id: 2, name: 'В процентах'},\n      ],\n      date_promo_list: [\n        {id: 1, name: 'В определенные даты'},\n        {id: 2, name: '14 дней с 10:00 до 21:40'},\n        {id: 3, name: '14 дней с 00:00 до 23:59'},\n      ],\n      type_order_list: [\n        {id: 1, name: 'Все'},\n        {id: 2, name: 'Доставка'},\n        {id: 3, name: 'Самовывоз'},\n        {id: 4, name: 'Зал'},\n      ],\n      where_order_list: [\n        {id: 1, name: 'В городе'},\n        {id: 2, name: 'На точке'}\n      ],\n      \n      promo_prizw_vk: \n    \t\t'Привет!\\r\\n'+\n    \t\t'Поздравляем 🎉\\r\\n'+\n    \t\t'Промокод --promo-- на --position--, действует до --endDate--. Активировать можно при заказе на доставку, самовывоз и в кафе.\\r\\n\\r\\n'+\n\n    \t\t'Обратите внимание, что за подарочную позицию надо будет заплатить 1 руб, это необходимое условие для получения приза. В промокод не входят соевый соус, имбирь и васаби.\\r\\n\\r\\n'+\n\n    \t\t'Заказы принимаем на сайте --site--\\r\\n\\r\\n'+\n\n    \t\t'Режим работы: с 10:00 до 21:30\\r\\n'+\n    \t\t'Адреса наших кафе:\\r\\n'+\n    \t\t'--addrCity--',\n      \n      spamNameSMS: '',\n        \n      auto_text: true,\n      where_promo: 1,\n      promo_name: '',\n      generate_new: false,\n      count_action: 1,\n      promo_action: 1,\n      type_sale: 3,\n      promo_sale: 1,\n      sale_type: 2,\n      promo_conditions: 2,\n      \n      price_start: 0,\n      price_end: 0,\n      date_promo: 1,\n      \n      date_start: formatDate(new Date()),\n      date_end: formatDate(new Date()),\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\n      time_start: '10:00',\n      time_end: '21:30',\n      \n      promo_length: 5,\n      promo_count: 1,\n      \n      day_1: true,\n      day_2: true,\n      day_3: true,\n      day_4: true,\n      day_5: true,\n      day_6: true,\n      day_7: true,\n      \n      type_order: 1,\n      where_order: 1,\n      \n      numberList: '',\n      promo_desc_true: '',\n      promo_desc_false: '',\n      textSMS: '',\n      \n      \n      addItem: null,\n      addItemCount: 1,\n      addItemPrice: 1,\n      addItemAllPrice: 0,\n      \n      itemsAdd: [],\n      itemsAddPrice: [],\n      items: [],\n      cats: [],\n      saleCat: [],\n      saleItem: [],\n      \n      priceItem: null,\n      \n      conditionItems: [],\n      \n      testDate: [],\n      createdPromo: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all_for_new');\n    \n    let date = new Date();\n    let fullDate = '';\n    \n    let Y = date.getFullYear();\n    let M = date.getMonth()+1;\n    let D = date.getDate();\n    \n    fullDate = Y + '-' + ( parseInt(M) > 9 ? M : '0'+M ) + '-' + ( parseInt(D) > 9 ? D : '0'+D );\n    \n    this.setState({\n      points: data.points,\n      cities: data.cities,\n      module_name: data.module_info.name,\n      promo_action_list: data.promo_action_list,\n      promo_sale_list: data.promo_sale_list,\n      \n      date_start: fullDate,\n      date_end: fullDate,\n      \n      items: data.items,\n      cats: data.cats\n    })\n    \n    document.title = data.module_info.name;\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();     \n      this.generateTextDescTrue(); \n    }, 300 )\n  }\n  \n  async save(){\n    \n    if( !this.click ){\n      this.click = true;  \n      \n      this.setState({\n        createdPromo: []\n      });\n\n      let count_promo = this.state.promo_sale_list.find( (item) => parseInt(item.id) == parseInt(this.state.promo_sale) )['name'];\n      \n      let conditionItems = [];\n      \n      this.state.conditionItems.map( (item) => {\n        conditionItems.push(item.id)\n      } )\n      \n      \n      let promo_items = [];\n      \n      this.state.saleItem.map( (item) => {\n        promo_items.push(item.id)\n      } )\n      \n      \n      let promo_cat = [];\n      \n      this.state.saleCat.map( (item) => {\n        promo_cat.push(item.id)\n      } )\n      \n      let dateList = [];\n      \n      this.state.testDate.map( (item) => {\n        dateList.push( (new Date(item).toISOString()).split('T')[0] );\n      } )\n      \n      dateList = dateList.join(',')\n      \n      let data = {\n        spamNameSMS: this.state.spamNameSMS,\n        promo_vk_prize: this.state.promo_prizw_vk,\n        cert_text: this.state.cert_text,\n        addr: this.state.numberList,\n        where_promo: this.state.where_promo,\n        promo_count: this.state.promo_count,\n        promo_len: this.state.promo_length,\n        promo_name: this.state.promo_name,\n        generate: this.state.generate_new ? 1 : 0,\n        promo_in_count: this.state.count_action,\n        promo_action: this.state.promo_action,\n        promo_type_sale: this.state.type_sale,\n        count_promo: count_promo,\n        promo_type: this.state.sale_type,\n        promo_conditions: this.state.promo_conditions,\n        \n        promo_summ: this.state.price_start,\n        promo_summ_to: this.state.price_end,\n        promo_when: this.state.date_promo,\n        \n        date_start: this.state.date_start,\n        date_end: this.state.date_end,\n        time_start: this.state.time_start,\n        time_end: this.state.time_end,\n        \n        day_1: this.state.day_1 ? 1 : 0,\n        day_2: this.state.day_2 ? 1 : 0,\n        day_3: this.state.day_3 ? 1 : 0,\n        day_4: this.state.day_4 ? 1 : 0,\n        day_5: this.state.day_5 ? 1 : 0,\n        day_6: this.state.day_6 ? 1 : 0,\n        day_7: this.state.day_7 ? 1 : 0,\n        \n        promo_type_order: this.state.type_order,\n        promo_where: this.state.where_order,\n        \n        numberList: this.state.numberList,\n        \n        promo_city: this.state.city,\n        promo_point: this.state.point,\n        \n        about_promo_text: this.state.promo_desc_true,\n        condition_promo_text: this.state.promo_desc_false,\n        textSMS: this.state.textSMS,\n        \n        \n        promo_items: JSON.stringify(promo_items),\n        promo_cat: JSON.stringify(promo_cat),\n        promo_items_add: JSON.stringify(this.state.itemsAdd),\n        promo_items_sale: JSON.stringify(this.state.itemsAddPrice),\n        promo_conditions_items: JSON.stringify(conditionItems),\n        \n        date_between: dateList\n      };\n      \n      let res = await this.getData('save_new_promo', data);\n      \n      console.log( res )\n      \n      if( res['st'] == false ){\n        this.setState({\n          modalDialog: true,\n          modalText: res.text_err\n        });\n\n        setTimeout( () => {\n          this.click = false;    \n        }, 300 )\n\n        return ;\n      }\n\n      this.setState({\n        createdPromo: res.promo_text\n      });\n\n      //создать\n      if( parseInt(this.state.where_promo) == 1 || parseInt(this.state.where_promo) == 8 ){\n        this.setState({\n          modalDialog: true,\n          modalText: 'Создано'\n        })\n      }\n      \n      //создать и показать\n      if( parseInt(this.state.where_promo) == 2 ){\n        this.setState({\n          modalDialog: true,\n          modalText: 'Промокоды: '+res.promo_text.join(', ')\n        })\n      }\n      \n      //почта\n      if( parseInt(this.state.where_promo) == 3 ){\n        this.setState({\n          modalDialog: true,\n          modalText: res.text\n        })\n      }\n      \n      //смс / смс рассылка / ЛК\n      if( parseInt(this.state.where_promo) == 4 || parseInt(this.state.where_promo) == 5 || parseInt(this.state.where_promo) == 6 ){\n        this.setState({\n          modalDialog: true,\n          modalText: res.text\n        })\n      }\n      \n      //сертификаты\n      if( parseInt(this.state.where_promo) == 7 ){\n        this.setState({\n          modalDialog: true,\n          modalText: res.text,\n          modalLink: res.link\n        })\n      }\n      \n      setTimeout( () => {\n        this.click = false;    \n      }, 300 )\n    }\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n        this.click = false;\n      }, 300 )\n    });\n  }\n  \n  changeData(type, event){\n    this.setState({\n      [ type ]: event.target.value\n    })\n    \n    if( type == 'date_promo' && (event.target.value == 2 || event.target.value == 3) ){\n      let thisDay = new Date();\n      let nextDay = new Date();\n      nextDay.setDate(nextDay.getDate() + 14);\n      \n      this.setState({\n        rangeDate: [formatDate(thisDay), formatDate(nextDay)],\n        date_start: formatDate(thisDay),\n        date_end: formatDate(nextDay),\n        \n        time_start: event.target.value == 2 ? '10:00' : '00:00',\n        time_end: event.target.value == 2 ? '21:40' : '23:59',\n      })\n    }\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();   \n      this.generateTextDescTrue();   \n    }, 300 )\n  }\n  \n  changeDataCheck(type, event){\n    this.setState({\n      [ type ]: event.target.checked\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();    \n      this.generateTextDescTrue();  \n    }, 300 )\n  }\n  \n  changeDateRange(data){\n    let dateStart = data[0] ? formatDate(data[0]) : '';\n    let dateEnd = data[1] ? formatDate(data[1]) : '';\n    \n    this.setState({\n      rangeDate: [dateStart, dateEnd],\n      date_start: dateStart,\n      date_end: dateEnd,\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  changeDataData(type, data){\n    this.setState({\n      [ type ]: data\n    });\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  generateTextDescTrue(){\n    \n    if( !this.state.auto_text ){\n      return ;\n    }\n    \n    let promo_action = this.state.promo_action;\n    let textTrue = '';\n    \n    if(parseInt(promo_action) == 1){//скидка\n      var promo_type_sale = this.state.type_sale,\n        count_promo = this.state.promo_sale_list.find( (item) => parseInt(item.id) == parseInt(this.state.promo_sale) )['name'],//размер скидки\n        promo_type = this.state.sale_type; //1 - рубли 2 %\n\n      if(parseInt(promo_type_sale) == 1){//товары\n        var promo_items = this.state.saleItem,\n          items = '';\n\n        promo_items.map(function(item, key){\n          items += item.name+', ';\n        })\n\n        items = items.substring(0, items.length - 2);\n\n        textTrue = 'скидку на '+items+' в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\t\n      if(parseInt(promo_type_sale) == 2){//категории\n        var promo_items = this.state.saleCat,\n          items = '';\n\n        promo_items.map(function(item, key){\n          items += item.name+', ';\n        })\n\n        items = items.substring(0, items.length - 2);\n\n        textTrue = 'скидку на '+items+' в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\n      if(parseInt(promo_type_sale) == 3){//все\n        textTrue = 'скидку на всё меню, кроме напитков, соусов, приправ и палочек, в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\n    }\n    \n    if(parseInt(promo_action) == 2){//добавляет товар\n      var itemText = '';\n\n      this.state.itemsAdd.map( (item, key) => {\n        if(parseInt(item['price']) == 0){\n          itemText += 'бесплатную '+item['name']+' '+item['count']+'шт. '+'за '+item['price']+'руб., ';\n        }else{\n          itemText += item['name']+' '+item['count']+'шт. '+'за '+item['price']+'руб., ';\n        }\n      } )\n      \n      itemText = itemText.substring(0, itemText.length - 2);\n\n      textTrue = this.state.itemsAdd.length == 1 ? 'позицию '+itemText : 'позиции '+itemText;\n    }\t\n    \n    if(parseInt(promo_action) == 3){//товар за цену\n      var itemText = '';\n\n      this.state.itemsAddPrice.map( (item, key) => {\n        itemText += item['name']+' по '+item['price']+'руб., ';\n      } )\n      \n      itemText = itemText.substring(0, itemText.length - 2);\n\n      textTrue = this.state.itemsAddPrice.length-1 == 1 ? 'позицию '+itemText : 'позиции '+itemText;\n    }\n    \n    let textSMS = 'Промокод --promo_name--, действует до '+formatDateName(this.state.date_end)+'. Заказывай на jacofood.ru!'\n    \n    this.setState({\n      promo_desc_true: textTrue,\n      textSMS: textSMS,\n      cert_text: textTrue\n    })\n  }\n  \n  generateTextDescFalse(){\n    \n    if( !this.state.auto_text ){\n      return ;\n    }\n    \n    var dop_text = '';\n    \n    let text = '';\n    \n    console.log( this.state.testDate )\n    \n    if( this.state.testDate.length > 0 ){\n      \n      let dateList = [];\n      \n      this.state.testDate.map( (item) => {\n        dateList.push( (new Date(item).toISOString()).split('T')[0] );\n      } )\n      \n\t\t\ttext = '(кроме ';\n\t\t\t\n\t\t\tdateList.map(function(item){\n\t\t\t\ttext += formatDateName(item) + ', ';\n\t\t\t});\n\t\t\t\n\t\t\ttext = text.slice(0, -1);\n\t\t\ttext = text.slice(0, -1);\n\n      text += ')';\n      \n      console.log( 'text', text )\n\t\t}\n    \n\t\tif( parseInt(this.state.where_order) == 1 ){\n\t\t\t//город\n\t\t\tif( parseInt(this.state.city) != 0 ){\n        let city_name = this.state.cities.find( (item) => parseInt(item.id) == parseInt(this.state.city) )['name'];\n        \n\t\t\t\tdop_text = ' в г. '+city_name;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif( parseInt(this.state.where_order) == 2 ){\n\t\t\t//точка\n\t\t\tif( parseInt(this.state.point) != 0 ){\n        let point_name = this.state.points.find( (item) => parseInt(item.id) == parseInt(this.state.point) )['name'];\n        \n\t\t\t\tdop_text = ' в г. '+point_name;\n\t\t\t}\n\t\t}\n    \n    let dateStart = formatDateDot(this.state.date_start);\n    let dateEnd = formatDateDot(this.state.date_end);\n    \n    let textFalse = 'Промокод действует c '+dateStart+' до '+dateEnd+' с '+this.state.time_start+' до '+this.state.time_end+' '+text+dop_text;\n    \n    this.setState({\n      promo_desc_false: textFalse\n    })\n\t}\n  \n  addItemAdd(){\n    let thisItems = this.state.itemsAdd;\n    \n    let check = thisItems.find( (item) => parseInt(item.item_id) == parseInt(this.state.addItem.id) );\n    \n    if( !check ){\n      let thisItem = this.state.items.find( (item) => parseInt(item.id) == parseInt(this.state.addItem.id) );\n      \n      thisItems.push({\n        item_id: this.state.addItem.id,\n        name: thisItem.name,\n        count: this.state.addItemCount,\n        price: this.state.addItemPrice,\n      })\n      \n      let addItemAllPrice = 0;\n      \n      thisItems.map( (item) => {\n        addItemAllPrice += parseInt(item.price)\n      } )\n      \n      this.setState({\n        itemsAdd: thisItems,\n        addItemAllPrice: addItemAllPrice\n      })\n    }\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  delItemAdd(item){\n    let thisItems = this.state.itemsAdd;\n    \n    let newItems = thisItems.filter( (it) => parseInt(it.item_id) != parseInt(item.item_id) );\n    \n    let addItemAllPrice = 0;\n      \n    newItems.map( (item) => {\n      addItemAllPrice += parseInt(item.price)\n    } )\n    \n    this.setState({\n      itemsAdd: newItems,\n      addItemAllPrice: addItemAllPrice\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  priceItemAdd(){\n    let thisItems = this.state.itemsAddPrice;\n    \n    let check = thisItems.find( (item) => parseInt(item.item_id) == parseInt(this.state.priceItem.id) );\n    \n    if( !check ){\n      let thisItem = this.state.items.find( (item) => parseInt(item.id) == parseInt(this.state.priceItem.id) );\n      \n      thisItems.push({\n        item_id: this.state.priceItem.id,\n        name: thisItem.name,\n        price: this.state.addItemPrice,\n      })\n      \n      this.setState({\n        itemsAddPrice: thisItems\n      })\n    }\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  delItemPrice(item){\n    let thisItems = this.state.itemsAddPrice;\n    \n    let newItems = thisItems.filter( (it) => parseInt(it.item_id) != parseInt(item.item_id) );\n    \n    let addItemAllPrice = 0;\n      \n    newItems.map( (item) => {\n      addItemAllPrice += parseInt(item.price)\n    } )\n    \n    this.setState({\n      itemsAddPrice: newItems\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false, modalLink: '' }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Результат операции</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            <Typography>{this.state.modalText}</Typography>\n\n            <br />\n\n            <Typography>Созданыне промокоды: { this.state.createdPromo.join(', ') }</Typography>\n\n            <br />\n            { this.state.modalLink == '' ? null :\n              <a href={this.state.modalLink} style={{ color: 'red' }}>Скачать</a>\n            }\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={ () => { this.setState({ modalDialog: false }) } }>Хорошо</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            { this.state.generate_new === true ? null :\n              <Grid item xs={12} sm={3}>\n                <MyTextInput classes={this.state.classes} value={this.state.promo_name} func={ this.changeData.bind(this, 'promo_name') } label='Название промокода' />\n              </Grid>\n            }\n            { this.state.generate_new === false ? null :\n              <Grid item xs={12} sm={3}>\n                <MyTextInput classes={this.state.classes} value={this.state.promo_length} func={ this.changeData.bind(this, 'promo_length') } label='Длина промокода' />\n              </Grid>\n            }\n            \n            <Grid item xs={12} sm={3}>\n              <MyCheckBox classes={this.state.classes} value={this.state.generate_new} func={ this.changeDataCheck.bind(this, 'generate_new') } label='Сгенерировать' />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <MyTextInput classes={this.state.classes} value={this.state.count_action} func={ this.changeData.bind(this, 'count_action') } label='Количество активаций' />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <MyTextInput classes={this.state.classes} value={this.state.promo_count} func={ this.changeData.bind(this, 'promo_count') } label='Количество промокодов' />\n            </Grid>\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={3}>\n              <MySelect classes={this.state.classes} data={this.state.promo_action_list} value={this.state.promo_action} func={ this.changeData.bind(this, 'promo_action') } label='Промокод дает:' />\n            </Grid>\n            \n          </Grid>\n          \n          { parseInt(this.state.promo_action) !== 1 ? null :\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n              \n              <Grid item xs={12} sm={3}>\n                <MySelect classes={this.state.classes} data={this.state.sale_list} value={this.state.type_sale} func={ this.changeData.bind(this, 'type_sale') } label='Скидка' />\n              </Grid>\n            \n              { parseInt(this.state.type_sale) !== 1 ? null :\n                <Grid item xs={12} sm={9}>\n                  <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.saleItem} func={ (event, data) => { this.changeDataData('saleItem', data) } } multiple={true} label='Товары' />\n                </Grid>\n              }\n              \n              { parseInt(this.state.type_sale) !== 2 ? null :\n                <Grid item xs={12} sm={9}>\n                  <MyAutocomplite classes={this.state.classes} data={this.state.cats} value={this.state.saleCat} func={ (event, data) => { this.changeDataData('saleCat', data) } } multiple={true} label='Категории' />\n                </Grid>\n              }\n            \n              <Grid item xs={12} sm={3}>\n                <MySelect classes={this.state.classes} data={this.state.promo_sale_list} value={this.state.promo_sale} func={ this.changeData.bind(this, 'promo_sale') } label='Размер скидки' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <MySelect classes={this.state.classes} data={this.state.type_sale_list} value={this.state.sale_type} func={ this.changeData.bind(this, 'sale_type') } label='Какая скидка' />\n              </Grid>\n            \n            </Grid>\n          }\n          \n          { parseInt(this.state.promo_action) !== 2 ? null :\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n              \n              <Grid item xs={12} sm={3}>\n                <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.addItem} func={ (event, data) => { this.changeDataData('addItem', data) } } label='Позиция' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <MyTextInput classes={this.state.classes} value={this.state.addItemCount} func={ this.changeData.bind(this, 'addItemCount') } label='Количество' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <MyTextInput classes={this.state.classes} value={this.state.addItemPrice} func={ this.changeData.bind(this, 'addItemPrice') } label='Цена за все' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <Button variant=\"contained\" onClick={this.addItemAdd.bind(this)}>Добавить</Button>\n              </Grid>\n              \n            </Grid>\n          }\n          \n          { parseInt(this.state.promo_action) !== 2 ? null :\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Позиция</TableCell>\n                      <TableCell>Количество</TableCell>\n                      <TableCell>Цена за все</TableCell>\n                      <TableCell></TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    \n                    { this.state.itemsAdd.map( (item, key) =>\n                      <TableRow key={key}>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell>{item.count}</TableCell>\n                        <TableCell>{item.price}</TableCell>\n                        <TableCell> <CloseIcon onClick={this.delItemAdd.bind(this, item)} style={{ cursor: 'pointer' }} /> </TableCell>\n                      </TableRow>\n                    ) }\n                    \n                    \n                  </TableBody>\n                  \n                  <TableFooter>\n                    <TableRow>\n                      <TableCell></TableCell>\n                      <TableCell></TableCell>\n                      <TableCell>{this.state.addItemAllPrice}</TableCell>\n                      <TableCell></TableCell>\n                    </TableRow>\n                  </TableFooter>\n                  \n                  \n                </Table>\n              </Grid>  \n            </Grid>\n          }\n          \n          { parseInt(this.state.promo_action) !== 3 ? null :\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n              \n              <Grid item xs={12} sm={3}>\n                <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.priceItem} func={ (event, data) => { this.changeDataData('priceItem', data) } } label='Позиция' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <MyTextInput classes={this.state.classes} value={this.state.addItemCount} func={ this.changeData.bind(this, 'addItemCount') } label='Цена за 1 ед' />\n              </Grid>\n            \n              <Grid item xs={12} sm={3}>\n                <Button variant=\"contained\" onClick={this.priceItemAdd.bind(this)}>Добавить</Button>\n              </Grid>\n              \n            </Grid>\n          }\n          \n          { parseInt(this.state.promo_action) !== 3 ? null :\n            <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Позиция</TableCell>\n                      <TableCell>Цена за 1 ед</TableCell>\n                      <TableCell></TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    \n                    { this.state.itemsAddPrice.map( (item, key) =>\n                      <TableRow key={key}>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell>{item.price}</TableCell>\n                        <TableCell> <CloseIcon onClick={this.delItemPrice.bind(this, item)} style={{ cursor: 'pointer' }} /> </TableCell>\n                      </TableRow>\n                    ) }\n                    \n                  </TableBody>\n                </Table>\n              </Grid>  \n            </Grid>\n          }\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.promo_conditions_list} value={this.state.promo_conditions} func={ this.changeData.bind(this, 'promo_conditions') } label='Условие' />\n            </Grid>\n            \n            { parseInt(this.state.promo_conditions) !== 1 ? null :\n              <>\n                <Grid item xs={12} sm={8}>\n                  <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.conditionItems} func={ (event, data) => { this.changeDataData('conditionItems', data) } } multiple={true} label='Товары' />\n                </Grid>\n              </>\n            }\n            \n            { parseInt(this.state.promo_conditions) !== 2 ? null :\n              <>\n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={this.state.price_start} func={ this.changeData.bind(this, 'price_start') } label='Сумма от' />\n                </Grid>\n              \n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={this.state.price_end} func={ this.changeData.bind(this, 'price_end') } label='Сумма до' />\n                </Grid>\n              </>\n            }\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={3}>\n              <MySelect classes={this.state.classes} data={this.state.date_promo_list} value={this.state.date_promo} func={ this.changeData.bind(this, 'date_promo') } label='Когда работает промокод' />\n            </Grid>\n            \n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={6} className=\"MyDaterange\">\n              <MyDaterange startText=\"Дата от\" endText=\"Дата до\" value={this.state.rangeDate} func={ this.changeDateRange.bind(this) } />\n            </Grid>\n           \n            <Grid item xs={12} sm={3}>\n              <MyTimePicker classes={this.state.classes} label=\"Время от\" value={this.state.time_start} func={ this.changeData.bind(this, 'time_start') } />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <MyTimePicker classes={this.state.classes} label=\"Время до\" value={this.state.time_end} func={ this.changeData.bind(this, 'time_end') } />\n            </Grid>\n              \n            \n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            <Grid item xs={12} sm={12}>\n              <MyDatePicker multiple={false} label={'Кроме дат'} value={this.state.testDate} func={ this.changeDataData.bind(this, 'testDate') } />\n            </Grid>\n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ marginTop: 20 }} spacing={3}>\n            \n            <MyCheckBox classes={this.state.classes} value={this.state.day_1} func={ this.changeDataCheck.bind(this, 'day_1') } label='Понедельник' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_2} func={ this.changeDataCheck.bind(this, 'day_2') } label='Вторник' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_3} func={ this.changeDataCheck.bind(this, 'day_3') } label='Среда' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_4} func={ this.changeDataCheck.bind(this, 'day_4') } label='Четверг' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_5} func={ this.changeDataCheck.bind(this, 'day_5') } label='Пятница' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_6} func={ this.changeDataCheck.bind(this, 'day_6') } label='Суббота' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_7} func={ this.changeDataCheck.bind(this, 'day_7') } label='Воскресенье' />\n           \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.type_order_list} value={this.state.type_order} func={ this.changeData.bind(this, 'type_order') } label='Тип заказа' />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.where_order_list} value={this.state.where_order} func={ this.changeData.bind(this, 'where_order') } label='Где работает' />\n            </Grid>\n            { parseInt(this.state.where_order) !== 1 ? null :\n              <Grid item xs={12} sm={4}>\n                <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city} func={ this.changeData.bind(this, 'city') } label='Город' />\n              </Grid>\n            }\n            { parseInt(this.state.where_order) !== 2 ? null :\n              <Grid item xs={12} sm={4}>\n                <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point} func={ this.changeData.bind(this, 'point') } label='Точка' />\n              </Grid>\n            }\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.where_promo_list} value={this.state.where_promo} func={ this.changeData.bind(this, 'where_promo') } label='Что сделать с промокодом' />\n            </Grid>\n            \n            { parseInt(this.state.where_promo) == 1 || parseInt(this.state.where_promo) == 2 ? null :\n              parseInt(this.state.where_promo) == 5 ?\n              \n                <Grid item xs={12} sm={4}>\n                  <span>Список номеров для рассылки</span>\n                  <TextareaAutosize\n                    aria-label=\"empty textarea\"\n                    placeholder=\"\"\n                    minRows={3}\n                    value={this.state.numberList}\n                    onChange={ this.changeData.bind(this, 'numberList') }\n                    label=\"Куда отправить\"\n                    style={{ width: '100%' }}\n                  />\n                </Grid>\n                  :\n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={this.state.numberList} func={ this.changeData.bind(this, 'numberList') } label='Куда отправить' />\n                </Grid>\n            \n            }\n            \n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            { parseInt(this.state.where_promo) !== 8 ? null :\n              <Grid item xs={12} sm={12}>\n                <span>Текст расссылки</span>\n                <TextareaAutosize\n                  aria-label=\"empty textarea\"\n                  placeholder=\"\"\n                  minRows={3}\n                  value={this.state.promo_prizw_vk}\n                  onChange={ this.changeData.bind(this, 'promo_prizw_vk') }\n                  style={{ width: '100%' }}\n                />\n              </Grid>\n            }\n            \n            { parseInt(this.state.where_promo) == 5 ?\n              <Grid item xs={12} sm={12}>\n                <MyTextInput classes={this.state.classes} value={this.state.spamNameSMS} func={ this.changeData.bind(this, 'spamNameSMS') } label='Наименование рассылки' />\n              </Grid>\n                :\n              null\n            }\n            \n            { parseInt(this.state.where_promo) == 4 || parseInt(this.state.where_promo) == 5 ?\n              <Grid item xs={12} sm={12}>\n                <MyTextInput classes={this.state.classes} value={this.state.textSMS} func={ this.changeData.bind(this, 'textSMS') } label='Текст СМС ( --promo_name-- )' />\n              </Grid>\n                :\n              null\n            }\n            \n            { parseInt(this.state.where_promo) == 7 ?\n              <Grid item xs={12} sm={12}>\n                <MyTextInput classes={this.state.classes} value={this.state.cert_text} func={ this.changeData.bind(this, 'cert_text') } label='Текст для описания сертификата' />\n              </Grid>\n                :\n              null\n            }\n            \n            <Grid item xs={12} sm={12}>\n              <MyCheckBox classes={this.state.classes} value={this.state.auto_text} func={ this.changeDataCheck.bind(this, 'auto_text') } label='Авто-текст' />\n            </Grid>\n            \n            <Grid item xs={12} sm={12}>\n              <MyTextInput classes={this.state.classes} value={this.state.promo_desc_true} func={ this.changeData.bind(this, 'promo_desc_true') } label='Описание промокода после активации (Промокод дает: )' />\n            </Grid>\n            \n            <Grid item xs={12} sm={12}>\n              <MyTextInput classes={this.state.classes} value={this.state.promo_desc_false} func={ this.changeData.bind(this, 'promo_desc_false') } label='Условие промокода, когда условия не соблюдены' />\n            </Grid>\n            \n          </Grid>\n          \n          \n          \n          <Grid container direction=\"row\" justifyContent=\"end\" style={{ paddingTop: 50 }} spacing={3}>\n            <Button variant=\"contained\" onClick={this.save.bind(this)}>Сохранить</Button>\n          </Grid>\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nclass SiteSale2_edit_ extends React.Component {\n  click = false;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'site_sale_2',\n      module_name: '',\n      is_load: false,\n      modalText: '',\n      \n      points: [],\n      point: 0,\n      cities: [],\n      city: 0,\n      \n      modalDialog: false,\n      modalLink: '',\n      \n      where_promo_list: [\n        {id: 1, name: 'Создать'},\n        {id: 2, name: 'Создать и показать'},\n        {id: 3, name: 'Отправить на почту'},\n        {id: 4, name: 'Отправить в смс'},\n        {id: 5, name: 'Рассылка смс'},\n        {id: 6, name: 'Отправить в ЛК (через 8)'},\n        {id: 7, name: 'Создать сертификат(ы)'},\n      ],\n      promo_action_list: [],\n      sale_list: [\n        {id: 1, name: 'На товары'},\n        {id: 2, name: 'На категории'},\n        {id: 3, name: 'На все меню (кроме допов и закусок)'},\n      ],\n      promo_conditions_list: [\n        {id: 1, name: 'В корзине есть определенные товар(ы)'},\n        {id: 2, name: 'В корзине набрана определенная сумма'},\n      ],\n      promo_sale_list: [],\n      type_sale_list: [\n        {id: 1, name: 'В рублях'},\n        {id: 2, name: 'В процентах'},\n      ],\n      date_promo_list: [\n        {id: 1, name: 'В определенные даты'},\n        {id: 2, name: '14 дней с 10:00 до 21:40'},\n        {id: 3, name: '14 дней с 00:00 до 23:59'},\n      ],\n      type_order_list: [\n        {id: 1, name: 'Все'},\n        {id: 2, name: 'Доставка'},\n        {id: 3, name: 'Самовывоз'},\n        {id: 4, name: 'Зал'},\n      ],\n      where_order_list: [\n        {id: 1, name: 'В городе'},\n        {id: 2, name: 'На точке'}\n      ],\n      \n      auto_text: false,\n      where_promo: 1,\n      promo_name: '',\n      generate_new: false,\n      count_action: 1,\n      promo_action: 1,\n      type_sale: 3,\n      promo_sale: 1,\n      sale_type: 2,\n      promo_conditions: 2,\n      \n      price_start: 0,\n      price_end: 0,\n      date_promo: 1,\n      \n      date_start: formatDate(new Date()),\n      date_end: formatDate(new Date()),\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\n      time_start: '10:00',\n      time_end: '21:30',\n      \n      promo_length: 5,\n      promo_count: 1,\n      \n      day_1: true,\n      day_2: true,\n      day_3: true,\n      day_4: true,\n      day_5: true,\n      day_6: true,\n      day_7: true,\n      \n      type_order: 1,\n      where_order: 1,\n      \n      numberList: '',\n      promo_desc_true: '',\n      promo_desc_false: '',\n      textSMS: '',\n      \n      \n      addItem: 1,\n      addItemCount: 1,\n      addItemPrice: 1,\n      addItemAllPrice: 0,\n      \n      itemsAdd: [],\n      itemsAddPrice: [],\n      items: [],\n      cats: [],\n      saleCat: [],\n      saleItem: [],\n      \n      priceItem: 1,\n      \n      conditionItems: [],\n      \n      testDate: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = {\n      promo_id: this.props.promoId\n    }\n    \n    let res = await this.getData('get_all_for_edit', data);\n    \n    let items = [];\n    \n    if( res.promo.promo_conditions_items.length > 4 ){\n      res.promo.promo_conditions_items = JSON.parse(res.promo.promo_conditions_items, true);\n      \n      res.promo.promo_conditions_items.map( (item) => {\n        let findItem = res.items.find( (it) => parseInt(it.id) == parseInt(item) );\n        \n        items.push(findItem)\n      } )\n    }\n    \n    setTimeout( () => {\n      \n      console.log( 'conditionItems', items )\n      console.log( 'items', res.items )\n      \n      let limDate = [];\n      \n      res.limit.map( (item) => {\n        limDate.push( new Date(item.date) )\n      } )\n      \n      this.setState({\n        points: res.points,\n        cities: res.cities,\n        module_name: res.module_info.name,\n        promo_action_list: res.promo_action_list,\n        promo_sale_list: res.promo_sale_list,\n        \n        date_start: res.promo.date1,\n        date_end: res.promo.date2,\n        time_start: res.promo.time1,\n        time_end: res.promo.time2,\n        rangeDate: [res.promo.date1, res.promo.date2],\n        \n        items: res.items,\n        cats: res.cats,\n        \n        day_1: parseInt(res.promo.d1) == 1 ? true : false,\n        day_2: parseInt(res.promo.d2) == 1 ? true : false,\n        day_3: parseInt(res.promo.d3) == 1 ? true : false,\n        day_4: parseInt(res.promo.d4) == 1 ? true : false,\n        day_5: parseInt(res.promo.d5) == 1 ? true : false,\n        day_6: parseInt(res.promo.d6) == 1 ? true : false,\n        day_7: parseInt(res.promo.d7) == 1 ? true : false,\n        \n        count_action: res.promo.count,\n        promo_name: res.promo.name,\n        \n        price_start: res.promo.promo_summ,\n        price_end: res.promo.promo_summ_to,\n        \n        conditionItems: items,\n        promo_conditions: items.length > 0 ? 1 : 2,\n        \n        point: res.promo.point_id,\n        city: res.promo.city_id,\n        \n        where_order: parseInt(res.promo.city_id) > 0 ? 1 : parseInt(res.promo.point_id) > 0 ? 2 : 1,\n        \n        type_order: res.promo.type_order,\n        \n        promo_desc_true: res.promo.coment,\n        promo_desc_false: res.promo.condition_text,\n        \n        promo_id: res.promo.id,\n        \n        testDate: limDate\n      })\n    }, 300 )\n    \n    \n    document.title = res.module_info.name;\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();     \n      this.generateTextDescTrue(); \n    }, 300 )\n  }\n  \n  async save(){\n    \n    if( !this.click ){\n      this.click = true;  \n      \n      let conditionItems = [];\n      \n      this.state.conditionItems.map( (item) => {\n        conditionItems.push(item.id)\n      } )\n      \n      \n      let promo_items = [];\n      \n      \n      let promo_cat = [];\n      let dateList = [];\n      \n      this.state.testDate.map( (item) => {\n        dateList.push( (new Date(item).toISOString()).split('T')[0] );\n      } )\n      \n      dateList = dateList.join(',')\n      \n      let data = {\n        promo_id: this.state.promo_id,\n        cert_text: this.state.cert_text,\n        addr: this.state.numberList,\n        where_promo: this.state.where_promo,\n        promo_count: this.state.promo_count,\n        promo_len: this.state.promo_length,\n        promo_name: this.state.promo_name,\n        generate: this.state.generate_new ? 1 : 0,\n        promo_in_count: this.state.count_action,\n        promo_action: this.state.promo_action,\n        promo_type_sale: this.state.type_sale,\n        promo_type: this.state.sale_type,\n        promo_conditions: this.state.promo_conditions,\n        \n        promo_summ: this.state.price_start,\n        promo_summ_to: this.state.price_end,\n        promo_when: this.state.date_promo,\n        \n        date_start: this.state.date_start,\n        date_end: this.state.date_end,\n        time_start: this.state.time_start,\n        time_end: this.state.time_end,\n        \n        day_1: this.state.day_1 ? 1 : 0,\n        day_2: this.state.day_2 ? 1 : 0,\n        day_3: this.state.day_3 ? 1 : 0,\n        day_4: this.state.day_4 ? 1 : 0,\n        day_5: this.state.day_5 ? 1 : 0,\n        day_6: this.state.day_6 ? 1 : 0,\n        day_7: this.state.day_7 ? 1 : 0,\n        \n        promo_type_order: this.state.type_order,\n        promo_where: this.state.where_order,\n        \n        numberList: this.state.numberList,\n        \n        promo_city: this.state.city,\n        promo_point: this.state.point,\n        \n        about_promo_text: this.state.promo_desc_true,\n        condition_promo_text: this.state.promo_desc_false,\n        textSMS: this.state.textSMS,\n        \n        \n        promo_items: JSON.stringify(promo_items),\n        promo_cat: JSON.stringify(promo_cat),\n        promo_items_add: JSON.stringify(this.state.itemsAdd),\n        promo_items_sale: JSON.stringify(this.state.itemsAddPrice),\n        promo_conditions_items: JSON.stringify(conditionItems),\n        \n        date_between: dateList\n      };\n      \n      let res = await this.getData('save_edit_promo', data);\n      \n      console.log( res )\n      \n      this.setState({\n        modalDialog: true,\n        modalText: res.text\n      })\n      \n      setTimeout( () => {\n        this.click = false;    \n      }, 300 )\n    }\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n        \n        this.click = false;    \n      }, 300 )\n    });\n  }\n  \n  changeData(type, event){\n    this.setState({\n      [ type ]: event.target.value\n    })\n    \n    if( type == 'date_promo' && (event.target.value == 2 || event.target.value == 3) ){\n      let thisDay = new Date();\n      let nextDay = new Date();\n      nextDay.setDate(nextDay.getDate() + 14);\n      \n      this.setState({\n        rangeDate: [formatDate(thisDay), formatDate(nextDay)],\n        date_start: formatDate(thisDay),\n        date_end: formatDate(nextDay),\n        \n        time_start: event.target.value == 2 ? '10:00' : '00:00',\n        time_end: event.target.value == 2 ? '21:40' : '23:59',\n      })\n    }\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();   \n      this.generateTextDescTrue();   \n    }, 300 )\n  }\n  \n  changeDataCheck(type, event){\n    this.setState({\n      [ type ]: event.target.checked\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();    \n      this.generateTextDescTrue();  \n    }, 300 )\n  }\n  \n  changeDateRange(data){\n    let dateStart = data[0] ? formatDate(data[0]) : '';\n    let dateEnd = data[1] ? formatDate(data[1]) : '';\n    \n    this.setState({\n      rangeDate: [dateStart, dateEnd],\n      date_start: dateStart,\n      date_end: dateEnd,\n    })\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  changeDataData(type, data){\n    this.setState({\n      [ type ]: data\n    });\n    \n    setTimeout( () => {\n      this.generateTextDescFalse();  \n      this.generateTextDescTrue();    \n    }, 300 )\n  }\n  \n  generateTextDescTrue(){\n    \n    if( !this.state.auto_text ){\n      return ;\n    }\n    \n    let promo_action = this.state.promo_action;\n    let textTrue = '';\n    \n    if(parseInt(promo_action) == 1){//скидка\n      var promo_type_sale = this.state.type_sale,\n        count_promo = this.state.promo_sale_list.find( (item) => parseInt(item.id) == parseInt(this.state.promo_sale) )['name'],//размер скидки\n        promo_type = this.state.sale_type; //1 - рубли 2 %\n\n      if(parseInt(promo_type_sale) == 1){//товары\n        var promo_items = this.state.saleItem,\n          items = '';\n\n        promo_items.map(function(item, key){\n          items += item.name+', ';\n        })\n\n        items = items.substring(0, items.length - 2);\n\n        textTrue = 'скидку на '+items+' в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\t\n      if(parseInt(promo_type_sale) == 2){//категории\n        var promo_items = this.state.saleCat,\n          items = '';\n\n        promo_items.map(function(item, key){\n          items += item.name+', ';\n        })\n\n        items = items.substring(0, items.length - 2);\n\n        textTrue = 'скидку на '+items+' в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\n      if(parseInt(promo_type_sale) == 3){//все\n        textTrue = 'скидку на всё меню, кроме напитков, соусов, приправ и палочек, в размере '+count_promo+(parseInt(promo_type) == 1 ? 'руб.' : '%');\n      }\n    }\n    \n    if(parseInt(promo_action) == 2){//добавляет товар\n      var itemText = '';\n\n      this.state.itemsAdd.map( (item, key) => {\n        if(parseInt(item['price']) == 0){\n          itemText += 'бесплатную '+item['name']+' '+item['count']+'шт. '+'за '+item['price']+'руб., ';\n        }else{\n          itemText += item['name']+' '+item['count']+'шт. '+'за '+item['price']+'руб., ';\n        }\n      } )\n      \n      itemText = itemText.substring(0, item.length - 2);\n\n      textTrue = this.state.itemsAdd.length == 1 ? 'позицию '+itemText : 'позиции '+itemText;\n    }\t\n    \n    if(parseInt(promo_action) == 3){//товар за цену\n      var itemText = '';\n\n      this.state.promo_items_sale.map( (item, key) => {\n        itemText += item['name']+' по '+item['price']+'руб., ';\n      } )\n      \n      itemText = itemText.substring(0, itemText.length - 2);\n\n      textTrue = this.state.promo_items_sale.length-1 == 1 ? 'позицию '+itemText : 'позиции '+itemText;\n    }\n    \n    let textSMS = 'Промокод --promo_name--, действует до '+formatDateName(this.state.date_end)+'. Заказывай на jacofood.ru!'\n    \n    this.setState({\n      promo_desc_true: textTrue,\n      textSMS: textSMS,\n      cert_text: textTrue\n    })\n  }\n  \n  generateTextDescFalse(){\n    \n    if( !this.state.auto_text ){\n      return ;\n    }\n    \n    var dop_text = '';\n\t\t\n\t\tif( parseInt(this.state.where_order) == 1 ){\n\t\t\t//город\n\t\t\tif( parseInt(this.state.city) != 0 ){\n        let city_name = this.state.cities.find( (item) => parseInt(item.id) == parseInt(this.state.city) )['name'];\n        \n\t\t\t\tdop_text = ' в г. '+city_name;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif( parseInt(this.state.where_order) == 2 ){\n\t\t\t//точка\n\t\t\tif( parseInt(this.state.point) != 0 ){\n        let point_name = this.state.points.find( (item) => parseInt(item.id) == parseInt(this.state.point) )['name'];\n        \n\t\t\t\tdop_text = ' в г. '+point_name;\n\t\t\t}\n\t\t}\n    \n    let dateStart = formatDateDot(this.state.date_start);\n    let dateEnd = formatDateDot(this.state.date_end);\n    \n    let textFalse = 'Промокод действует c '+dateStart+' до '+dateEnd+' с '+this.state.time_start+' до '+this.state.time_end+dop_text;\n    \n    this.setState({\n      promo_desc_false: textFalse\n    })\n\t}\n  \n  addItemAdd(){\n    let thisItems = this.state.itemsAdd;\n    \n    let check = thisItems.find( (item) => parseInt(item.item_id) == parseInt(this.state.addItem) );\n    \n    if( !check ){\n      let thisItem = this.state.items.find( (item) => parseInt(item.id) == parseInt(this.state.addItem) );\n      \n      thisItems.push({\n        item_id: this.state.addItem,\n        name: thisItem.name,\n        count: this.state.addItemCount,\n        price: this.state.addItemPrice,\n      })\n      \n      let addItemAllPrice = 0;\n      \n      thisItems.map( (item) => {\n        addItemAllPrice += parseInt(item.price)\n      } )\n      \n      this.setState({\n        itemsAdd: thisItems,\n        addItemAllPrice: addItemAllPrice\n      })\n    }\n  }\n  \n  priceItemAdd(){\n    let thisItems = this.state.itemsAddPrice;\n    \n    let check = thisItems.find( (item) => parseInt(item.item_id) == parseInt(this.state.priceItem) );\n    \n    if( !check ){\n      let thisItem = this.state.items.find( (item) => parseInt(item.id) == parseInt(this.state.priceItem) );\n      \n      thisItems.push({\n        item_id: this.state.priceItem,\n        name: thisItem.name,\n        price: this.state.addItemPrice,\n      })\n      \n      this.setState({\n        itemsAddPrice: thisItems\n      })\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false, modalLink: '' }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Результат операции</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            <Typography>{this.state.modalText}</Typography>\n            <br />\n            { this.state.modalLink == '' ? null :\n              <a href={this.state.modalLink} style={{ color: 'red' }}>Скачать</a>\n            }\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={ () => { this.setState({ modalDialog: false }) } }>Хорошо</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={3}>\n              <Typography>Промокод: {this.state.promo_name}</Typography>\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <MyTextInput classes={this.state.classes} value={this.state.count_action} func={ this.changeData.bind(this, 'count_action') } label='Количество активаций' />\n            </Grid>\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.promo_conditions_list} value={this.state.promo_conditions} func={ this.changeData.bind(this, 'promo_conditions') } label='Условие' />\n            </Grid>\n            \n            { parseInt(this.state.promo_conditions) !== 1 ? null :\n              <>\n                <Grid item xs={12} sm={8}>\n                  <MyAutocomplite classes={this.state.classes} data={this.state.items} value={this.state.conditionItems} func={ (event, data) => { this.changeDataData('conditionItems', data) } } multiple={true} label='Товары' />\n                </Grid>\n              </>\n            }\n            \n            { parseInt(this.state.promo_conditions) !== 2 ? null :\n              <>\n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={this.state.price_start} func={ this.changeData.bind(this, 'price_start') } label='Сумма от' />\n                </Grid>\n              \n                <Grid item xs={12} sm={4}>\n                  <MyTextInput classes={this.state.classes} value={this.state.price_end} func={ this.changeData.bind(this, 'price_end') } label='Сумма до' />\n                </Grid>\n              </>\n            }\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={3}>\n              <MySelect classes={this.state.classes} data={this.state.date_promo_list} value={this.state.date_promo} func={ this.changeData.bind(this, 'date_promo') } label='Когда работает промокод' />\n            </Grid>\n            \n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={6} className=\"MyDaterange\">\n              <MyDaterange startText=\"Дата от\" endText=\"Дата до\" value={this.state.rangeDate} func={ this.changeDateRange.bind(this) } />\n            </Grid>\n           \n            <Grid item xs={12} sm={3}>\n              <MyTimePicker classes={this.state.classes} label=\"Время от\" value={this.state.time_start} func={ this.changeData.bind(this, 'time_start') } />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <MyTimePicker classes={this.state.classes} label=\"Время до\" value={this.state.time_end} func={ this.changeData.bind(this, 'time_end') } />\n            </Grid>\n              \n          </Grid>\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            <Grid item xs={12} sm={12}>\n              <MyDatePicker multiple={false} label={'Кроме дат'} value={this.state.testDate} func={ this.changeDataData.bind(this, 'testDate') } />\n            </Grid>\n          </Grid>\n            \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ marginTop: 20 }} spacing={3}>\n            \n            <MyCheckBox classes={this.state.classes} value={this.state.day_1} func={ this.changeDataCheck.bind(this, 'day_1') } label='Понедельник' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_2} func={ this.changeDataCheck.bind(this, 'day_2') } label='Вторник' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_3} func={ this.changeDataCheck.bind(this, 'day_3') } label='Среда' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_4} func={ this.changeDataCheck.bind(this, 'day_4') } label='Четверг' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_5} func={ this.changeDataCheck.bind(this, 'day_5') } label='Пятница' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_6} func={ this.changeDataCheck.bind(this, 'day_6') } label='Суббота' />\n          \n            <MyCheckBox classes={this.state.classes} value={this.state.day_7} func={ this.changeDataCheck.bind(this, 'day_7') } label='Воскресенье' />\n           \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.type_order_list} value={this.state.type_order} func={ this.changeData.bind(this, 'type_order') } label='Тип заказа' />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.where_order_list} value={this.state.where_order} func={ this.changeData.bind(this, 'where_order') } label='Где работает' />\n            </Grid>\n            { parseInt(this.state.where_order) !== 1 ? null :\n              <Grid item xs={12} sm={4}>\n                <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city} func={ this.changeData.bind(this, 'city') } label='Город' />\n              </Grid>\n            }\n            { parseInt(this.state.where_order) !== 2 ? null :\n              <Grid item xs={12} sm={4}>\n                <MySelect classes={this.state.classes} data={this.state.points} value={this.state.point} func={ this.changeData.bind(this, 'point') } label='Точка' />\n              </Grid>\n            }\n            \n          </Grid>\n          \n          <Divider style={{ width: '100%', marginTop: 20 }} />\n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={12}>\n              <MyTextInput classes={this.state.classes} value={this.state.promo_desc_true} func={ this.changeData.bind(this, 'promo_desc_true') } label='Описание промокода после активации (Промокод дает: )' />\n            </Grid>\n            \n            <Grid item xs={12} sm={12}>\n              <MyTextInput classes={this.state.classes} value={this.state.promo_desc_false} func={ this.changeData.bind(this, 'promo_desc_false') } label='Условие промокода, когда условия не соблюдены' />\n            </Grid>\n            \n          </Grid>\n          \n          \n          \n          <Grid container direction=\"row\" justifyContent=\"end\" style={{ paddingTop: 50 }} spacing={3}>\n            <Button variant=\"contained\" onClick={this.save.bind(this)}>Сохранить</Button>\n          </Grid>\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\n\nclass SiteSale2_ extends React.Component {\n  click = false;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'site_sale_2',\n      module_name: '',\n      is_load: false,\n      modalText: '',\n      \n      modalDialog: false,\n      modalLink: '',\n      \n      city_list: [],\n      city_id: 0,\n      promoName: '',\n      \n      findPromoList: []\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      city_list: data.all_city_list\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n    });\n  }\n  \n  async showPromoList(){\n    let data = {\n      city_id: this.state.city_id,\n      promo_name: this.state.promoName\n    };\n    \n    let res = await this.getData('search_promo', data);\n    \n    console.log( res )\n    \n    this.setState({\n      findPromoList: res\n    })\n  }\n  \n  async delPromo(promo_id){\n    let check = confirm(\"Удалить промокод ?\");\n    \n    if( check ){\n      let data = {\n        promo_id: promo_id\n      };\n      \n      let res = await this.getData('remove_promo', data);\n      \n      setTimeout( () => {\n        this.showPromoList();\n      }, 300 )\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false, modalLink: '' }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Результат операции</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            <Typography>{this.state.modalText}</Typography>\n            <br />\n            { this.state.modalLink == '' ? null :\n              <a href={this.state.modalLink} style={{ color: 'red' }}>Скачать</a>\n            }\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={ () => { this.setState({ modalDialog: false }) } }>Хорошо</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          \n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12}>\n              \n              <Link to={\"/site_sale_2/new\"} style={{ zIndex: 10 }}>\n                <Button variant=\"contained\">Новый промокод</Button>\n              </Link>\n              \n              <Link to={\"/site_sale_2/stat\"} style={{ zIndex: 10, marginLeft: 20 }}>\n                <Button variant=\"contained\">Статистика</Button>\n              </Link>\n\n              <Link to={\"/site_sale_2/stat_list\"} style={{ zIndex: 10, marginLeft: 20 }}>\n                <Button variant=\"contained\">Выписанные промокоды</Button>\n              </Link>\n              \n            </Grid>\n            \n            \n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.city_list} value={this.state.city_id} func={ (event) => { this.setState({city_id: event.target.value}) } } label='Город' />\n            </Grid>\n            \n            <Grid item xs={12} sm={4}>\n              <MyTextInput classes={this.state.classes} value={this.state.promoName} func={ (event) => { this.setState({promoName: event.target.value}) } } label='Промокод' />\n            </Grid>\n            \n            <Grid item xs={12} sm={4}>\n              <Button variant=\"contained\" onClick={this.showPromoList.bind(this)}>Найти</Button>\n            </Grid>\n            \n          </Grid>  \n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            <Grid item xs={12}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Промокод</TableCell>\n                    <TableCell>Город</TableCell>\n                    <TableCell>Было кол-во</TableCell>\n                    <TableCell>Ост. кол-во</TableCell>\n                    <TableCell>Дата окончания</TableCell>\n                    <TableCell>Описание</TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  { this.state.findPromoList.map( (item, key) =>\n                    <TableRow key={key}>\n                      <TableCell>\n                        <Link to={\"/site_sale_2/edit/\"+item.id} style={{ zIndex: 10 }}>\n                          {item.name}    \n                        </Link>\n                      </TableCell>\n                      <TableCell>{ parseInt(item.city_id) == 0 ? 'Все города' : item.city_name }</TableCell>\n                      <TableCell>{item.def_count}</TableCell>\n                      <TableCell>{item.count}</TableCell>\n                      <TableCell>{item.date2}</TableCell>\n                      <TableCell>{item.coment}</TableCell>\n                      <TableCell> <CloseIcon style={{ cursor: 'pointer' }} onClick={this.delPromo.bind(this, item.id)} /> </TableCell>\n                    </TableRow>\n                  ) }\n                  \n                </TableBody>\n              </Table>\n            </Grid>  \n          </Grid>\n          \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nclass SiteSale2_Stat_ extends React.Component {\n  click = false;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'site_sale_2',\n      module_name: '',\n      is_load: false,\n      \n      spam_list: [],\n      spam_id: 0,\n      findPromoList: [],\n      \n      spam_list_data: [],\n      spam_list_data_stat: {\n        true: 0,\n        all: 0,\n        percent: 0\n      },\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_spam_list');\n    \n    console.log( data )\n    \n    this.setState({\n      module_name: data.module_info.name,\n      spam_list: data.spam_list\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n    });\n  }\n  \n  async show(){\n    let data = {\n      spam_id: this.state.spam_id\n    }\n    \n    let res = await this.getData('get_spam_data', data);\n    \n    console.log( res )\n    \n    this.setState({\n      spam_list_data: res.spam_list,\n      spam_list_data_stat: res.stat\n    })\n  }\n  \n  changeSpam(event){\n    this.setState({spam_id: event.target.value})\n    \n    setTimeout( () => {\n      this.show()\n    }, 300 )\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          \n          \n          <Grid container direction=\"row\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={4}>\n              <MySelect classes={this.state.classes} data={this.state.spam_list} value={this.state.spam_id} func={ this.changeSpam.bind(this) } label='Рассылка' />\n            </Grid>\n            \n            <Grid item xs={12} sm={4}>\n              <Button variant=\"contained\" onClick={this.show.bind(this)}>Обновить</Button>\n            </Grid>\n            \n          </Grid>  \n          \n          <Grid container direction=\"row\" justifyContent=\"center\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={6}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Всего</TableCell>\n                    <TableCell>Использовали</TableCell>\n                    <TableCell>%</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  <TableRow>\n                    <TableCell>{this.state.spam_list_data_stat.all}</TableCell>\n                    <TableCell>{this.state.spam_list_data_stat.true}</TableCell>\n                    <TableCell>{this.state.spam_list_data_stat.percent}</TableCell>\n                  </TableRow>\n                  \n                </TableBody>\n              </Table>\n            </Grid>  \n            \n            <Grid item xs={6}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>#</TableCell>\n                    <TableCell>Номер</TableCell>\n                    <TableCell>Ост активаций</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  \n                  { this.state.spam_list_data.map( (item, key) =>\n                    <TableRow key={key}>\n                      <TableCell>{key+1}</TableCell>\n                      <TableCell>{item.number}</TableCell>\n                      <TableCell>{item.count}</TableCell>\n                      \n                    </TableRow>\n                  ) }\n                  \n                </TableBody>\n              </Table>\n            </Grid>  \n          </Grid>\n          \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nclass SiteSale2_StatList_ extends React.Component {\n  click = false;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'site_sale_2',\n      module_name: '',\n      is_load: false,\n      \n      date_start: formatDate(new Date()),\n      date_end: formatDate(new Date()),\n      rangeDate: [formatDate(new Date()), formatDate(new Date())],\n\n      promo_list: []\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_spam_list');\n    \n    console.log( data )\n    \n    this.setState({\n      module_name: data.module_info.name,\n      spam_list: data.spam_list\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n    });\n  }\n  \n  async show(){\n    let data = {\n      spam_id: this.state.spam_id\n    }\n    \n    let res = await this.getData('get_spam_data', data);\n    \n    console.log( res )\n    \n    this.setState({\n      spam_list_data: res.spam_list,\n      spam_list_data_stat: res.stat\n    })\n  }\n\n  async getUsers(){\n    let data = {\n      dateStart: this.state.date_start,\n      dateEnd: this.state.date_end,\n    }\n    \n    let res = await this.getData('get_promo_users', data);\n    \n    this.setState({\n      promo_list: res.promo_list\n    })\n  }\n  \n  changeDateRange(data){\n    let dateStart = data[0] ? formatDate(data[0]) : '';\n    let dateEnd = data[1] ? formatDate(data[1]) : '';\n    \n    this.setState({\n      rangeDate: [dateStart, dateEnd],\n      date_start: dateStart,\n      date_end: dateEnd,\n    })\n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          \n          \n          <Grid container direction=\"row\" style={{ paddingTop: 20 }} spacing={3}>\n            \n            <Grid item xs={12} sm={6} className=\"MyDaterange\">\n              <MyDaterange startText=\"Дата от\" endText=\"Дата до\" value={this.state.rangeDate} func={ this.changeDateRange.bind(this) } />\n            </Grid>\n            \n            <Grid item xs={12} sm={3}>\n              <Button variant=\"contained\" onClick={this.getUsers.bind(this)}>Обновить</Button>\n            </Grid>\n\n          </Grid>  \n          \n          <Grid item xs={12} sm={12} style={{ marginTop: 20 }}>\n            \n            { this.state.promo_list.map( (item, key) => \n              <Accordion key={key} style={{ width: '100%' }}>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                >\n                  <Typography>{item.name}</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Table size={'small'} style={{ marginTop: 15 }}>\n                    <TableBody>\n                      { item.promo_list.map( (promo, k) =>\n                        <TableRow key={k} style={{ backgroundColor: parseInt(promo.is_delete) == 1 ? '#c03' : 'white', color: parseInt(promo.is_delete) == 1 ? 'white' : 'black' }}>\n                          <TableCell style={{ color: 'inherit' }}>{k+1}</TableCell>\n                          <TableCell style={{ color: 'inherit', backgroundColor: parseInt(promo.count) == 0 ? 'green' : '#c03' }}>{promo.name}</TableCell>\n                          <TableCell style={{ color: 'inherit' }}>{promo.coment}</TableCell>\n                          <TableCell style={{ color: 'inherit' }}>{ parseInt(promo.count) == 0 ? <CheckIcon /> : <CloseIcon /> }</TableCell>\n                        </TableRow>\n                      ) }\n                    </TableBody>\n                    \n                  </Table>\n                </AccordionDetails>\n              </Accordion>\n            ) }\n            \n          </Grid>\n        \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function SiteSale2_New () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <SiteSale2_new_ classes={classes} history={history} />\n  );\n}\n\nexport function SiteSale2_Edit () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  let { promoId } = useParams();\n  \n  return (\n    <SiteSale2_edit_ promoId={promoId} classes={classes} history={history} />\n  );\n}\n\nexport function SiteSale2 () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <SiteSale2_ classes={classes} history={history} />\n  );\n}\n\nexport function SiteSale2_Stat () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <SiteSale2_Stat_ classes={classes} history={history} />\n  );\n}\n\nexport function SiteSale2_StatList () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <SiteSale2_StatList_ classes={classes} history={history} />\n  );\n}\n\n","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyTextInput } from '../../stores/elements';\n\nimport axios from 'axios';\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    },\n    def: {\n      main: '#353b48',\n      secondary: '#fff'\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nclass SocialNetwork_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'socialnetwork',\n      module_name: '',\n      is_load: false,\n      \n      cityList: [],\n      city_id: 0,\n\n      dataInfo: null,\n      file: null\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      cityList: data.cities,\n      city_id: data.cities[0].id\n    })\n    \n    document.title = data.module_info.name;\n\n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  changeCity(event){\n    let data = event.target.value;\n    \n    this.setState({\n      city_id: data,\n      dataInfo: null,\n      file: null\n    })\n    \n    setTimeout( () => {\n      this.updateData();\n    }, 50 )\n  }\n\n  async updateData(){\n    let data = {\n      city_id: this.state.city_id\n    };\n\n    let res = await this.getData('get_data', data);\n\n    this.setState({\n      dataInfo: res,\n      file: null\n    })\n  }\n\n  changeData(type, event){\n    let data = event.target.value;\n    let info = this.state.dataInfo;\n    \n    info[ [type] ] = data;\n\n    this.setState({\n      dataInfo: info\n    })\n  }\n\n  async saveData(){\n    let data = {\n      city_id: this.state.city_id,\n      vk: this.state.dataInfo.vk,\n      inst: this.state.dataInfo.inst,\n      ok: this.state.dataInfo.ok,\n      tg: this.state.dataInfo.tg,\n      fb: this.state.dataInfo.fb,\n      file1: this.state.file ? this.state.file.name : ''\n    };\n\n    let res = await this.getData('save_data', data);\n    \n    if( this.state.file ){\n      setTimeout( () => {\n        this.setState({\n          is_load: true\n        })\n      }, 350 )\n      \n      \n      \n      const formData = new FormData(); \n    \n      formData.append( \n        \"file\", \n        this.state.file, \n        this.state.file.name \n      ); \n    \n      //console.log(this.state.file); \n    \n      axios.post('https://jacochef.ru/api/files/v2/upload/upload.php', formData)\n        .then( (response) => {\n          console.log(response);\n          this.setState({\n            is_load: false,\n            file: null\n          })\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }\n\n  handleFileInput(event){\n    let data = event.target.files[0];\n\n    console.log( data )\n\n    this.setState({\n      file: data\n    })\n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={6} sm={6}>\n            <MySelect data={this.state.cityList} value={this.state.city_id} func={ this.changeCity.bind(this) } label='Город' />\n          </Grid>\n          \n          {this.state.dataInfo == null ? null :\n            <Grid item xs={12}>\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <MyTextInput label=\"Вконтакте\" value={this.state.dataInfo ? this.state.dataInfo.vk : ''} func={this.changeData.bind(this, 'vk')} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <MyTextInput label=\"Инстаграм\" value={this.state.dataInfo ? this.state.dataInfo.inst : ''} func={this.changeData.bind(this, 'inst')} />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <MyTextInput label=\"Одноклассники\" value={this.state.dataInfo ? this.state.dataInfo.ok : ''} func={this.changeData.bind(this, 'ok')} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <MyTextInput label=\"Телеграм\" value={this.state.dataInfo ? this.state.dataInfo.tg : ''} func={this.changeData.bind(this, 'tg')} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <MyTextInput label=\"Facebook\" value={this.state.dataInfo ? this.state.dataInfo.fb : ''} func={this.changeData.bind(this, 'fb')} />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <MyTextInput type=\"file\" label=\"\" func={this.handleFileInput.bind(this)} />\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <Button variant=\"contained\" onClick={this.saveData.bind(this)}>Обновить данные</Button>\n                </Grid>\n\n              </Grid>\n            </Grid>\n          }\n        \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function SocialNetwork () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <SocialNetwork_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MyAutocomplite } from '../../stores/elements';\n\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\n\nconst queryString = require('query-string');\n\nconst dynamicCellStyle = params => {\n  if( params.colDef.headerName == 'Цена' ){\n    return { borderRight: '1px solid #bababa' };\n  }\n  return null;\n};\n\nclass Tender_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'tender',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      \n      testTable: [],\n      vendors: [],\n      myVendors: [],\n      showVendors: [],\n      \n      params_api: null,\n      params_columnApi: null\n    };\n  }\n  \n  async componentDidMount(){\n    let data = await this.getData('get_all');\n    \n    let table = [];\n    \n    data.items.map( (main_cat, k1) => {\n      \n      table.push({\n        section: 'big-title',\n        item: main_cat.name\n      })\n      \n      main_cat.cats.map( (cat, k2) => {\n        table.push({\n          section: 'big-title',\n          item: cat.name\n        })\n        \n        cat.items.map( (item, k3) => {\n          let tableItem = {};\n          \n          data['vendors'].map( (it, k4) => {\n            \n            let item_price = data.vendor_price.find( (item_price) => parseInt(item_price.vendor_id) == parseInt(it['id']) && parseInt(item_price.item_id) == parseInt(item['id']) );\n            \n            \n            if( item_price ){\n              tableItem[ 'vend_price_'+it['id'] ] = item_price['price'];  \n              tableItem[ 'vend_city_'+it['id'] ] = 'тлт';\n            }else{\n              tableItem[ 'vend_price_'+it['id'] ] = '';  \n              tableItem[ 'vend_city_'+it['id'] ] = '';\n            }\n            \n          } )\n          tableItem.item = item.name;\n          tableItem.section = 'last';\n          \n          let item_ras = data.ras.find( (item_ras) => parseInt(item_ras.item_id) == parseInt(item['id']) );\n          \n          if( item_ras ){\n            tableItem.ras = item_ras.count_pf;\n          }else{\n            tableItem.ras = '';\n          }\n          \n          table.push(tableItem)\n        } )\n      } )\n    } )\n    \n    \n    \n    \n    \n    \n    this.setState({\n      module_name: data.module_info.name,\n      testTable: table,\n      vendors: data['vendors'],\n      showVendors: data['vendors']\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n  \n  onCellClicked(event){\n    console.log( event.data );\n    console.log( event.colDef.field );\n  }\n  \n  onGridReady(params){\n    this.setState({\n      params_api: params.api,\n      params_columnApi: params.columnApi\n    });\n  }\n  \n  async show(){\n    let data = {\n      vendors: this.state.myVendors\n    };\n    \n    let res = await this.getData('get_data', data);\n    \n    let table = [];\n    \n    res.items.map( (main_cat, k1) => {\n      \n      table.push({\n        section: 'big-title',\n        item: main_cat.name\n      })\n      \n      main_cat.cats.map( (cat, k2) => {\n        table.push({\n          section: 'big-title',\n          item: cat.name\n        })\n        \n        cat.items.map( (item, k3) => {\n          let tableItem = {};\n          \n          res['vendors'].map( (it, k4) => {\n            \n            let item_price = res.vendor_price.find( (item_price) => parseInt(item_price.vendor_id) == parseInt(it['id']) && parseInt(item_price.item_id) == parseInt(item['id']) )\n            \n            if( item_price ){\n              tableItem[ 'vend_price_'+it['id'] ] = item_price['price'];  \n              tableItem[ 'vend_city_'+it['id'] ] = 'тлт';\n            }else{\n              tableItem[ 'vend_price_'+it['id'] ] = '';  \n              tableItem[ 'vend_city_'+it['id'] ] = '';\n            }\n            \n          } )\n          tableItem.item = item.name;\n          tableItem.section = 'last';\n          \n          let item_ras = res.ras.find( (item_ras) => parseInt(item_ras.item_id) == parseInt(item['id']) );\n          \n          if( item_ras ){\n            tableItem.ras = item_ras.count_pf;\n          }else{\n            tableItem.ras = '';\n          }\n          \n          table.push(tableItem)\n        } )\n      } )\n    } )\n    \n    \n    \n    \n    \n    \n    this.setState({\n      testTable: table,\n      showVendors: res['vendors']\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Новая категория</DialogTitle>\n          <DialogContent>\n            \n            \n            \n          </DialogContent>\n          <DialogActions>\n            <Button  color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n            <MyAutocomplite data={this.state.vendors} multiple={true} value={this.state.myVendors} func={ (event, val) => { this.setState({ myVendors: val }) } } label='Поставщики' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Button variant=\"contained\" onClick={this.show.bind(this)}>Показать</Button>\n          </Grid>\n          \n          <Grid item xs={12}>\n            <div className=\"ag-theme-alpine\" style={{height: 600, width: '100%'}}>\n              <AgGridReact\n                  onGridReady={this.onGridReady.bind(this)}\n                  onCellClicked={this.onCellClicked}\n                  rowData={ this.state.testTable }\n                  \n                  >\n                  <AgGridColumn field=\"ras\" width={120} pinned=\"left\"></AgGridColumn>\n                  <AgGridColumn field=\"item\" width={300} pinned=\"left\" cellClassRules={{'cell-span': \"data.section==='big-title'\"}}></AgGridColumn>\n                  <AgGridColumn hide={true}></AgGridColumn>\n                    \n                  { this.state.showVendors.map( (item, key) => \n                    <AgGridColumn key={key} headerName={item.name} resizable={true} width={180}>\n                      <AgGridColumn field={'vend_city_'+item.id} headerName={'Город'} resizable={true} width={90}></AgGridColumn>\n                      <AgGridColumn field={'vend_price_'+item.id} headerName={'Цена'} resizable={true} width={90} cellStyle={dynamicCellStyle}></AgGridColumn>\n                    </AgGridColumn>\n                  ) }\n                  \n                  \n              </AgGridReact>\n            </div>\n          </Grid>\n          \n          <Grid item xs={12} sm={12}>\n          \n          </Grid>    \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function Tender () {\n  let history = useHistory();\n  \n  return (\n    <Tender_ history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox, MyTextInput } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nclass VendorItemPrice_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'vendor_item_price',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      \n      vendors: [],\n      vendor: 0,\n      \n      items: [],\n      \n      cities: [],\n      city: -1,\n      allCity: false,\n      isPrioriti: false\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      cities: data.cities\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      console.log( err )\n    });\n  }\n   \n  async changeCity(event){\n    let data = {\n      city: event.target.value\n    }\n    \n    let res = await this.getData('get_vendors', data);\n    \n    this.setState({\n      vendors: res,\n      city: event.target.value,\n      vendor: 0,\n      items: []\n    })\n  }\n  \n  async changeVendor(event){\n    let data = {\n      city: this.state.city,\n      vendor_id: event.target.value,\n    }\n    \n    let res = await this.getData('get_vendor_items', data);\n    \n    this.setState({\n      items: res,\n      vendor: event.target.value,\n    })\n  }\n  \n  update(item_id, data, event){\n    let this_items = this.state.items;\n    \n    \n    \n    this_items.map( (item, key) => {\n      if( parseInt(item.item_id) == parseInt(item_id) ){\n        this_items[key][data] = event.target.value;\n        \n        this_items[key]['price'] = (parseFloat(this_items[key]['full_price']) / parseFloat(this_items[key]['rec_pq'])).toFixed(2);\n      }\n    } )\n    \n    this.setState({\n      items: this_items\n    })\n  }\n  \n  async save(){\n    let data = {\n      vendor_id: this.state.vendor,\n      items: this.state.items,\n      city_id: this.state.city,\n      all_city: this.state.allCity === true ? 1 : 0,\n      is_prioriti: this.state.isPrioriti === true ? 1 : 0,\n    }\n    \n    if( data.all_city == 1 ){\n      if( confirm(\"Точно сохранить на все города поставщика ?\") ){\n        let res = await this.getData('save_price', data);\n      }\n    }else{\n      let res = await this.getData('save_price', data);\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalDialog}\n          onClose={ () => { this.setState({ modalDialog: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              \n              \n              \n              \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city} func={ this.changeCity.bind(this) } label='Город' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.vendors} value={this.state.vendor} func={ this.changeVendor.bind(this) } label='Поставщик' />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <MyCheckBox classes={this.state.classes} value={this.state.allCity} func={ (event) => { this.setState({ allCity: event.target.checked }) } } label='На все города поставщика' />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <MyCheckBox classes={this.state.classes} value={this.state.isPrioriti} func={ (event) => { this.setState({ isPrioriti: event.target.checked }) } } label='Приоритетный постащик' />\n          </Grid>\n          \n          <Grid item xs={12}>\n            <Button onClick={this.save.bind(this)} variant=\"contained\">Сохранить</Button>\n          </Grid>\n          \n          \n          <Grid item xs={12}>\n              \n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Позиция</TableCell>\n                    <TableCell></TableCell>\n                    <TableCell>Комментарий</TableCell>\n                    <TableCell>Цена за упаковку</TableCell>\n                    <TableCell>Объем упаковки</TableCell>\n                    <TableCell>Цена за 1 ед.</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  { this.state.items.map( (item, key) => \n                    <TableRow key={key}>\n                      <TableCell>{item.name}</TableCell>\n                      <TableCell>{item.name_for_vendor}</TableCell>\n                      <TableCell>\n                        <MyTextInput label=\"\" value={item.comment} func={ this.update.bind(this, item.item_id, 'comment') } />\n                      </TableCell>\n                      <TableCell>\n                        <MyTextInput label=\"\" value={item.full_price} func={ this.update.bind(this, item.item_id, 'full_price') } />\n                      </TableCell>\n                      <TableCell>\n                        <MySelect classes={this.state.classes} data={item.pqs} value={item.rec_pq} func={ this.update.bind(this, item.item_id, 'rec_pq') } label='' />\n                      </TableCell>\n                      <TableCell>{item.price} / {item.ei_name}</TableCell>\n                    </TableRow>\n                  ) }\n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n          </Grid>\n            \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function VendorItemPrice () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <VendorItemPrice_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport DirectionsCarIcon from '@mui/icons-material/DirectionsCar';\n\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect, MyCheckBox, MyAutocomplite, MyTextInput } from '../../stores/elements';\nimport Typography from '@mui/material/Typography';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  formControl: {\n    //margin: theme.spacing(1),\n    width: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tableCel: {\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  tableCelHead: {\n    textAlign: 'center',\n    padding: 15\n  },\n  customCel: {\n    backgroundColor: \"#bababa\",\n    textAlign: 'center',\n    borderRight: '1px solid #e5e5e5',\n    padding: 15,\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: \"#e5e5e5\",\n    },\n  },\n  timePicker: {\n    width: '100%'\n  }\n});\n\nclass VendorModule_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'vendor_module',\n      module_name: '',\n      is_load: false,\n      \n      modalItems: false,\n      modalVendor: false,\n      modalVendorNew: false,\n      \n      vendors: [],\n      \n      allItems: [],\n      vendor_items: [],\n      openVendor: null,\n      customAdd: 0,\n      \n      vendorCities: [],\n      allCities: [],\n      \n      nds: [\n        { id: -1, name: 'Без НДС' },\n        { id: 10, name: '10% НДС' },\n        { id: 20, name: '20% НДС' },\n      ],\n      nds_: [\n        -1, 10, 20\n      ],\n      \n      cities: [],\n      city: -1\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      module_name: data.module_info.name,\n      vendors: data.vendors,\n      cities: data.cities\n    })\n    \n    document.title = data.module_info.name;\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      console.log( err )\n    });\n  }\n   \n  changeNDS(item_id, event){\n    this.state.vendor_items.map( (item, key) => {\n      if( parseInt(item.item_id) == parseInt(item_id) ){\n        item.nds = event.target.value;\n      }\n    } )\n    \n    this.setState({\n      vendor_items: this.state.vendor_items\n    })\n  }\n  \n  async openModalItems(vendor){\n    let data = {\n      vendor_id: vendor.id\n    }\n    \n    let res = await this.getData('get_vendor_items', data);\n    \n    this.setState({\n      modalItems: true,\n      allItems: res.all_items,\n      vendor_items: res.vendor_items,\n      openVendor: vendor\n    })\n  }\n  \n  async openModalVendor(vendor){\n    let data = {\n      vendor_id: vendor.id\n    }\n    \n    let res = await this.getData('get_vendor_info', data);\n    \n    this.setState({\n      modalVendor: true,\n      openVendor: res.vendor,\n      vendorCities: res.vendor_cities,\n      allCities: res.all_cities,\n    })\n  }\n  \n  async openModalVendorNew(){\n    let data = {\n      vendor_id: 0\n    }\n    \n    let res = await this.getData('get_vendor_info', data);\n    \n    this.setState({\n      modalVendorNew: true,\n      openVendor: {\n        addr: \"\",\n        bill_ex: \"0\",\n        email: \"\",\n        email_2: \"\",\n        inn: \"\",\n        min_price: \"\",\n        name: \"\",\n        need_img_bill_ex: \"0\",\n        ogrn: \"\",\n        phone: \"\",\n        text: \"\",\n      },\n      vendorCities: [],\n      allCities: res.all_cities,\n    })\n  }\n  \n  async saveVendorItems(){\n    let data = {\n      vendor_id: this.state.openVendor.id,\n      items: this.state.vendor_items\n    }\n    \n    let check = data.items.filter( (item, key) => !this.state.nds_.includes( parseInt(item.nds) ) );\n    \n    if( check.length > 0 ){\n      alert('У одной или нескольких позиций не заполнен НДС')\n      \n      return ;\n    }\n    \n    let res = await this.getData('save_vendor_items', data);\n    \n    this.setState({\n      modalItems: false,\n      vendor_items: [],\n      openVendor: null\n    })\n  }\n  \n  async saveVendor(){\n    let data = {\n      vendor: this.state.openVendor,\n      vendor_cities: this.state.vendorCities,\n      city: this.state.city\n    }\n    \n    let res = await this.getData('update_vendor', data);\n    \n    this.setState({\n      modalVendor: false,\n      openVendor: null,\n      vendorCities: [],\n      allCities: [],\n      vendors: res.vendors\n    })\n  }\n  \n  async addVendor(){\n    let data = {\n      vendor: this.state.openVendor,\n      vendor_cities: this.state.vendorCities,\n      city: this.state.city\n    }\n    \n    let res = await this.getData('new_vendor', data);\n    \n    if( res.st === false ){\n      alert(res.text);\n      return ;\n    }\n    \n    this.setState({\n      modalVendorNew: false,\n      openVendor: null,\n      vendorCities: [],\n      allCities: [],\n      vendors: res.vendors\n    })\n  }\n  \n  delItem(item_id){\n    let items = this.state.vendor_items;\n    \n    items = items.filter( (item) => parseInt(item.item_id) != parseInt(item_id) );\n    \n    this.setState({\n      vendor_items: items\n    })\n  }\n  \n  addItem(item){\n    let this_items = this.state.vendor_items;\n    let check = this_items.find( (it) => parseInt(it.item_id) == parseInt(item.id) );\n    \n    if( !check ){\n      this_items.push({\n        item_id: item.id,\n        item_name: item.name,\n        nds: -2\n      })\n    }\n    \n    this.setState({\n      vendor_items: this_items\n    })\n  }\n  \n  addItemCustom(){\n    let item = this.state.allItems.find( (item1) => parseInt(item1.id) == parseInt(this.state.customAdd) );\n    \n    this.addItem(item);\n  }\n  \n  testChange(data, event){\n    let vendor = this.state.openVendor;\n    \n    if( data == 'bill_ex' || data == 'need_img_bill_ex' ){\n      vendor[data] = event.target.checked === true ? 1 : 0;\n    }else{\n      vendor[data] = event.target.value;\n    }\n    \n    this.setState({ \n      openVendor: vendor\n    })\n  }\n  \n  async changeCity(event){\n    let data = {\n      city: event.target.value\n    }\n    \n    let res = await this.getData('get_vendors', data);\n    \n    this.setState({\n      vendors: res,\n      city: event.target.value\n    })\n  }\n  \n  changeSort(data, event){\n    this.state.vendor_items.map( (item, key) => {\n      if( parseInt(item.item_id) == parseInt(data) ){\n        this.state.vendor_items[key]['sort'] = event.target.value;\n      }\n    })\n    \n    this.setState({\n      vendor_items: this.state.vendor_items\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <Backdrop className={this.state.classes.backdrop} open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog\n          open={this.state.modalItems}\n          fullWidth={true}\n          maxWidth={'md'}\n          onClose={ () => { this.setState({ modalItems: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Товары поставщика {this.state.openVendor ? this.state.openVendor.name : ''}</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <Grid container style={{ paddingTop: 20 }}>\n              \n              <Grid item xs={12} sm={5} style={{ paddingRight: 10 }}>\n                \n                <Table>\n                  <TableBody>\n                    <TableRow style={{ height: 75 }}>\n                      <TableCell>\n                        <MySelect classes={this.state.classes} data={this.state.allItems} value={this.state.customAdd} func={ (event) => { this.setState({ customAdd: event.target.value }) } } />\n                      </TableCell>\n                      <TableCell><AddIcon onClick={this.addItemCustom.bind(this)} style={{ cursor: 'pointer' }} /></TableCell>\n                    </TableRow>\n                    \n                    { this.state.allItems.map( (item, key) => \n                      <TableRow key={key} style={{ height: 75 }}>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell><AddIcon onClick={this.addItem.bind(this, item)} style={{ cursor: 'pointer' }} /></TableCell>\n                      </TableRow>\n                    ) }\n                  </TableBody>\n                </Table>\n                \n              </Grid>\n              <Grid item xs={12} sm={7}>\n                \n                <Table>\n                  <TableBody>\n                    { this.state.vendor_items.map( (item, key) => \n                      <TableRow key={key} style={{ height: 75 }}>\n                        <TableCell>{item.item_name}</TableCell>\n                        <TableCell>\n                          <MyTextInput label=\"\" value={ item.sort } func={ this.changeSort.bind(this, item.item_id) } />\n                        </TableCell>\n                        <TableCell>\n                          <MySelect classes={this.state.classes} data={this.state.nds} value={item.nds} func={ this.changeNDS.bind(this, item.item_id) } />\n                        </TableCell>\n                        <TableCell><CloseIcon onClick={ this.delItem.bind(this, item.item_id) } style={{ cursor: 'pointer' }} /></TableCell>\n                      </TableRow>\n                    ) }\n                  </TableBody>\n                </Table>\n                \n              </Grid>\n              \n            </Grid>\n              \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.saveVendorItems.bind(this)} color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Dialog\n          open={this.state.modalVendor}\n          fullWidth={true}\n          maxWidth={'md'}\n          onClose={ () => { this.setState({ modalVendor: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Поставщик {this.state.openVendor ? this.state.openVendor.name : ''}</DialogTitle>\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\n            \n            <Grid container spacing={3}>\n              \n              {this.state.openVendor ?\n                <>\n                  <Grid item xs={12} sm={5}>\n                    <MyTextInput label=\"Наименование\" value={ this.state.openVendor.name } func={ this.testChange.bind(this, 'name') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Описание\" value={ this.state.openVendor.text } func={ this.testChange.bind(this, 'text') } />\n                  </Grid>\n                  <Grid item xs={12} sm={3}>\n                    <MyTextInput label=\"Мин. сумма заявки\" value={ this.state.openVendor.min_price } func={ this.testChange.bind(this, 'min_price') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyTextInput label=\"ИНН\" value={ this.state.openVendor.inn } func={ this.testChange.bind(this, 'inn') } disabled={true} />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <MyTextInput label=\"ОГРН\" value={ this.state.openVendor.ogrn } func={ this.testChange.bind(this, 'ogrn') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={8}>\n                    <MyTextInput label=\"Адрес компании\" value={ this.state.openVendor.addr } func={ this.testChange.bind(this, 'addr') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Контактное лицо\" value={ this.state.openVendor.user } func={ this.testChange.bind(this, 'user') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Телефон\" value={ this.state.openVendor.phone } func={ this.testChange.bind(this, 'phone') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Почта\" value={ this.state.openVendor.email } func={ this.testChange.bind(this, 'email') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Доп почта\" value={ this.state.openVendor.email_2 } func={ this.testChange.bind(this, 'email_2') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyCheckBox label=\"Работа по счетам\" value={ parseInt(this.state.openVendor.bill_ex) == 1 ? true : false } func={ this.testChange.bind(this, 'bill_ex') } />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <MyCheckBox label=\"Необходима картинка\" value={ parseInt(this.state.openVendor.need_img_bill_ex) == 1 ? true : false } func={ this.testChange.bind(this, 'need_img_bill_ex') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyAutocomplite multiple={true} label='Города' data={this.state.allCities} value={this.state.vendorCities} func={ (event, value) => { console.log(value); this.setState({ vendorCities: value }) } } />\n                  </Grid>\n                </>\n                  :\n                null\n              }\n            </Grid>\n              \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.saveVendor.bind(this)} color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        <Dialog\n          open={this.state.modalVendorNew}\n          fullWidth={true}\n          maxWidth={'md'}\n          onClose={ () => { this.setState({ modalVendorNew: false }) } }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Новый поставщик</DialogTitle>\n          <DialogContent>\n            \n            <Grid container spacing={3}>\n              \n              {this.state.openVendor ?\n                <>\n                  <Grid item xs={12} sm={5}>\n                    <MyTextInput label=\"Наименование\" value={ this.state.openVendor.name } func={ this.testChange.bind(this, 'name') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Описание\" value={ this.state.openVendor.text } func={ this.testChange.bind(this, 'text') } />\n                  </Grid>\n                  <Grid item xs={12} sm={3}>\n                    <MyTextInput label=\"Мин. сумма заявки\" value={ this.state.openVendor.min_price } func={ this.testChange.bind(this, 'min_price') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyTextInput label=\"ИНН\" value={ this.state.openVendor.inn } func={ this.testChange.bind(this, 'inn') } />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <MyTextInput label=\"ОГРН\" value={ this.state.openVendor.ogrn } func={ this.testChange.bind(this, 'ogrn') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={8}>\n                    <MyTextInput label=\"Адрес компании\" value={ this.state.openVendor.addr } func={ this.testChange.bind(this, 'addr') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Контактное лицо\" value={ this.state.openVendor.user } func={ this.testChange.bind(this, 'user') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Телефон\" value={ this.state.openVendor.phone } func={ this.testChange.bind(this, 'phone') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Почта\" value={ this.state.openVendor.email } func={ this.testChange.bind(this, 'email') } />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <MyTextInput label=\"Доп почта\" value={ this.state.openVendor.email_2 } func={ this.testChange.bind(this, 'email_2') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyCheckBox label=\"Работа по счетам\" value={ parseInt(this.state.openVendor.bill_ex) == 1 ? true : false } func={ this.testChange.bind(this, 'bill_ex') } />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <MyCheckBox label=\"Необходима картинка\" value={ parseInt(this.state.openVendor.need_img_bill_ex) == 1 ? true : false } func={ this.testChange.bind(this, 'need_img_bill_ex') } />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <MyAutocomplite label='Города' data={this.state.allCities} value={this.state.vendorCities} func={ (event, value) => { this.setState({ vendorCities: value }) } } />\n                  </Grid>\n                </>\n                  :\n                null\n              }\n            </Grid>\n              \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.addVendor.bind(this)} color=\"primary\">Сохранить</Button>\n          </DialogActions>\n        </Dialog>\n        \n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <MySelect classes={this.state.classes} data={this.state.cities} value={this.state.city} func={ this.changeCity.bind(this) } label='Город' />\n          </Grid>\n          \n          <Grid item xs={12} sm={3}>\n            <Button onClick={this.openModalVendorNew.bind(this)} variant=\"contained\">Добавить поставщика</Button>\n          </Grid>\n        \n          <Grid item xs={12}>\n          \n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell component=\"th\">Название</TableCell>\n                    <TableCell component=\"th\">Назначенные товары</TableCell>\n                    <TableCell component=\"th\"><VisibilityIcon /></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  { this.state.vendors.map( (item, key) => \n                    <TableRow key={key}>\n                      <TableCell><Typography onClick={ this.openModalVendor.bind(this, item) } style={{ cursor: 'pointer', width: 'max-content' }}>{item.name}</Typography></TableCell>\n                      <TableCell><DirectionsCarIcon onClick={ this.openModalItems.bind(this, item) } style={{ cursor: 'pointer' }} /></TableCell>\n                      <TableCell>{ parseInt(item.is_show) == 1 ? <VisibilityIcon /> : <VisibilityOffIcon /> }</TableCell>\n                    </TableRow>\n                  ) }\n                </TableBody>\n              </Table>\n            </TableContainer>\n            \n          </Grid>\n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function VendorModule () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <VendorModule_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableFooter from '@mui/material/TableFooter';\nimport Paper from '@mui/material/Paper';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddIcon from '@mui/icons-material/Add';\n\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\n\nimport PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { blue } from '@mui/material/colors';\n\nimport HomeWorkIcon from '@mui/icons-material/HomeWork';\nimport SyncAltIcon from '@mui/icons-material/SyncAlt';\n\nimport LooksOneIcon from '@mui/icons-material/LooksOne';\nimport LooksTwoIcon from '@mui/icons-material/LooksTwo';\nimport Looks3Icon from '@mui/icons-material/Looks3';\n\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport CheckIcon from '@mui/icons-material/Check';\n\nimport { MySelect, MyCheckBox, MyTimePicker } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c03',\n    }\n  },\n});\n\nconst useStyles = makeStyles({\n  timePicker: {\n    width: '100%'\n  }\n});\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <List sx={{ pt: 0 }}>\n        \n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AccessTimeIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Сменить часы на месяц\" />\n        </ListItem>\n        \n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <SyncAltIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Сменить смену\" />\n        </ListItem>\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <HomeWorkIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Сменить точку\" />\n        </ListItem>\n        \n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>{children}</Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nclass HeaderItem extends React.Component {\n  render(){\n    return (\n      <>\n        <TableRow>\n          <TableCell style={{ minWidth: 140, minHeight: 38 }}>Ур. кафе: {this.props.lv_cafe}</TableCell>\n          <TableCell style={{ minWidth: 165, minHeight: 38 }}>Число месяца</TableCell>\n\n          { this.props.kind == 'manager' ? null :\n            <TableCell></TableCell>\n          }\n          \n          {this.props.days.map( (item, key) => \n            <TableCell className=\"min_block\" style={{ backgroundColor: item.day == 'Пт' || item.day == 'Сб' || item.day == 'Вс' ? '#ffe9bd' : '#fff' }} key={key}>{item.date}</TableCell>\n          )}\n          \n          { this.props.kind == 'manager' ? null :\n            <>\n              <TableCell></TableCell>\n              \n              { this.props.dataKey > 0 ? \n                <>\n                  <TableCell style={{ textAlign: 'center' }}></TableCell>\n                  <TableCell style={{ textAlign: 'center' }}></TableCell>\n                </>\n                  :\n                <>\n                  <TableCell style={{ textAlign: 'center', cursor: 'pointer' }} onClick={this.props.changeDopBonus}>{ !this.props.bonus_other ? '+ / -' : parseInt(this.props.bonus_other) == 1 ? <AddIcon style={{ fontSize: 30, color: 'green' }} /> : <CloseIcon style={{ fontSize: 30, color: 'red' }} /> }</TableCell>\n                  <TableCell style={{ textAlign: 'center', cursor: 'pointer' }} onClick={this.props.changeLVDir}>Ур. дира: {this.props.lv_dir}</TableCell>\n                </>\n              }\n                  \n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n            </>\n          }\n\n        </TableRow>\n        <TableRow>\n          <TableCell style={{ minWidth: 140, minHeight: 38 }}>Сотрудник</TableCell>\n          <TableCell style={{ minWidth: 165, minHeight: 38 }}>Должность</TableCell>\n          \n          { this.props.kind == 'manager' ? null :\n            <TableCell></TableCell>\n          }\n          \n          {this.props.days.map( (item, key) => \n            <TableCell className=\"min_block\" style={{ backgroundColor: item.day == 'Пт' || item.day == 'Сб' || item.day == 'Вс' ? '#ffe9bd' : '#fff' }} key={key}>{item.day}</TableCell>\n          )}\n          \n          { this.props.kind == 'manager' ? null :\n            <>\n              <TableCell style={{ textAlign: 'center' }}>За 1ч</TableCell>\n              <TableCell style={{ textAlign: 'center' }}>Командный бонус</TableCell>\n              <TableCell style={{ textAlign: 'center' }}>За часы</TableCell>\n              <TableCell style={{ textAlign: 'center' }}>Ошибки</TableCell>\n              <TableCell style={{ textAlign: 'center' }}>Бонус</TableCell>\n              { this.props.show_zp == 1 || this.props.show_zp == 0 ?\n                <TableCell style={{ textAlign: 'center' }}>Всего</TableCell>\n                  :\n                null\n              }\n              <TableCell style={{ textAlign: 'center' }}>Выдано</TableCell>\n            </>\n          }\n        </TableRow>\n        \n        <TableRow style={{ backgroundColor: '#e5e5e5' }}>\n          <TableCell style={{ textAlign: 'center' }} colSpan={ this.props.days.length + 3 + 7 }>{this.props.item.data}</TableCell>\n        </TableRow>\n      </>\n    )\n  }\n}\n\nclass WorkSchedule_ extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      module: 'work_schedule',\n      module_name: '',\n      is_load: false,\n      \n      points: [],\n      mounths: [],\n      point: '0',\n      mounth: '0',\n      \n      one: null,\n      two: null,\n      test_one: [],\n      test_two: [],\n      \n      isOpenModalH: false,\n      \n      userInfo: null,\n      \n      hList: [],\n      mList: [],\n      \n      newTimeStart: '10:00',\n      newTimeEnd: '22:00',\n      \n      openNewTimeAdd: false,\n      \n      otherAppList: [],\n      otherApp: '',\n      \n      testVal: '',\n      testOpen: false,\n      \n      mainMenu: false,\n      mainMenuH: false,\n      mainMenuSmena: false,\n      show_bonus: false,\n      mainMenuPrice: false,\n      mainMenuLVDIR: false,\n      mainMenuDopBonus: false,\n\n      show_zp_one: 0,\n      show_zp_two: 0,\n      kind: '',\n\n      myOtherSmens: [],\n      \n      chooseUser: null,\n\n      tabTable: 1,\n\n      lv_cafe: 0,\n      lv_dir: 0,\n      arr_dir_lv: []\n    };\n  }\n  \n  async componentDidMount(){\n    let data = {\n      \n    };\n    \n    let res = await this.getData('get_all', data);\n    \n    let hList = [];\n    let mList = [];\n    \n    for(let h = 0; h <= 23; h ++){\n      hList.push({\n        id: h,\n        name: h\n      })\n    }\n    \n    for(let m = 0; m <= 50; m += 10){\n      mList.push({\n        id: m,\n        name: m\n      })\n    }\n    \n    this.setState({\n      points: res.point_list,\n      point: res.point_list[0].id,\n      \n      mounths: res.mounths,\n      mounth: res.mounths.find( (item) => parseInt( item.is_active ) == 1 )['id'],\n      \n      hList: hList,\n      mList: mList,\n      \n      module_name: res.module_info.name\n    })\n    \n    document.title = res.module_info.name;\n    \n    let arr_dir_lv = [];\n\n    for(let i = 1; i <= 20; i ++){\n      arr_dir_lv.push(i);\n    }\n\n    this.setState({\n      arr_dir_lv: arr_dir_lv\n    })\n\n    setTimeout( () => {\n      this.updateData();\n    }, 100 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      console.log( err )\n    });\n  }\n   \n  changeCheckOrders(event){\n    let data = event.target.checked;\n    \n    this.setState({\n      showReady: data\n    })\n  }\n  \n  async updateData(){\n    let data = {\n      point_id: this.state.point,\n      mounth: this.state.mounth\n    };\n    \n    let res = await this.getData('get_graph', data);\n    \n    console.log( res )\n    \n    this.setState({\n      one: res.date.one,\n      two: res.date.two,\n      \n      test_one: res.one,\n      test_two: res.two,\n\n      show_zp_one: res.show_zp_one,\n      show_zp_two: res.show_zp_two,\n      kind: res.kind,\n\n      lv_cafe: res.lv_cafe,\n      lv_dir: res.lv_dir\n    })\n  }\n  \n  async openH(item, this_date){\n    console.log( item )\n    \n    let data = {\n      smena_id: item.smena_id,\n      app_id: item.app_id,\n      user_id: item.id,\n      date: this_date,\n      date_start: item.date\n    };\n    \n    let res = await this.getData('get_user_day', data);\n    \n    console.log( res )\n    \n    this.setState({\n      isOpenModalH: true,\n      userInfo: res.h_info,\n      otherAppList: res.other_app,\n      show_bonus: res.show_bonus\n    })\n  }\n  \n  delTime(key_time){\n    let userInfo = this.state.userInfo;\n    \n    userInfo.hours = userInfo.hours.filter( (item, key) => parseInt(key) != parseInt(key_time) );\n    \n    this.setState({\n      userInfo: userInfo\n    })\n  }\n  \n  changeHourse(type, key, event){\n    let userInfo = this.state.userInfo;\n    \n    userInfo.hours[ key ][ [type] ] = event.target.value;\n    \n    this.setState({\n      userInfo: userInfo\n    })\n  }\n  \n  async saveDayHourse(){\n    let data = {\n      date: this.state.userInfo.date,\n      user_id: this.state.userInfo.user_id,\n      smena_id: this.state.userInfo.smena_id,\n      app_id: this.state.userInfo.app_id,\n      hours: this.state.userInfo.hours,\n      new_app: this.state.userInfo.new_app,\n      mentor_id: this.state.userInfo.mentor_id\n    }\n    \n    let res = await this.getData('save_user_day', data);\n    \n    if( res['st'] == true ){\n      this.setState({\n        mainMenu: false,\n        mainMenuH: false,\n        mainMenuSmena: false\n      })\n\n      this.updateData();\n    }else{\n      alert(res['text'])\n    }\n  }\n  \n  addTime(){\n    let userInfo = this.state.userInfo;\n    \n    let check = userInfo.hours.find( (item) => item.time_start == this.state.newTimeStart && item.time_end == this.state.newTimeEnd );\n    \n    if( check ){\n      this.setState({\n        openNewTimeAdd: false\n      })\n      \n      return ;\n    }\n    \n    userInfo.hours.push({\n      time_start: this.state.newTimeStart,\n      time_end: this.state.newTimeEnd\n    })\n    \n    this.setState({\n      userInfo: userInfo,\n      openNewTimeAdd: false\n    })\n  }\n  \n  async fastTime(type){\n    let data = {\n      type: type,\n      user_id: this.state.chooseUser.id,\n      app_id: this.state.chooseUser.app_id,\n      smena_id: this.state.chooseUser.smena_id,\n      date: this.state.mounth\n    }\n    \n    let res = await this.getData('save_fastTime', data);\n    \n    console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        mainMenu: false,\n        mainMenuH: false,\n        mainMenuSmena: false\n      })\n\n      this.updateData();\n    }else{\n      alert(res['text'])\n    }\n  }\n\n  async fastSmena(smena_id){\n    let data = {\n      new_smena_id: smena_id,\n      user_id: this.state.chooseUser.id,\n      app_id: this.state.chooseUser.app_id,\n      smena_id: this.state.chooseUser.smena_id,\n      date: this.state.mounth,\n      part: this.state.tabTable\n    }\n    \n    let res = await this.getData('save_fastSmena', data);\n    \n    console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        mainMenu: false,\n        mainMenuH: false,\n        mainMenuSmena: false\n      })\n\n      this.updateData();\n    }else{\n      alert(res['text'])\n    }\n  }\n\n  async changePriceH(price){\n    let data = {\n      price: price,\n      user_id: this.state.chooseUser.id,\n      app_id: this.state.chooseUser.app_id,\n      smena_id: this.state.chooseUser.smena_id,\n      date: this.state.mounth,\n      part: this.state.tabTable\n    }\n    \n    let res = await this.getData('save_userPriceH', data);\n    \n    console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        mainMenu: false,\n        mainMenuH: false,\n        mainMenuPrice: false\n      })\n\n      this.updateData();\n    }else{\n      alert(res['text'])\n    }\n  }\n\n  changeLVDir(){\n    this.setState({\n      mainMenuLVDIR: true\n    })\n  }\n\n  async newLvDir(LV){\n    let data = {\n      date: this.state.mounth,\n      point_id: this.state.point,\n      dir_lv: LV\n    }\n    \n    let res = await this.getData('save_dir_lv', data);\n    \n    console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        mainMenuLVDIR: false\n      })\n\n      this.updateData();\n    }else{\n      alert(res['text'])\n    }\n  }\n\n  changeDopBonus(){\n    this.setState({\n      mainMenuDopBonus: true\n    })\n  }\n\n  async dop_bonus(type){\n    let data = {\n      date: this.state.mounth,\n      part: this.state.tabTable,\n      point_id: this.state.point,\n      type: type\n    }\n    \n    let res = await this.getData('save_dop_bonus', data);\n    \n    console.log( res );\n\n    if( res['st'] == true ){\n      this.setState({\n        mainMenuDopBonus: false\n      })\n\n      this.updateData();\n    }else{\n      alert(res['text'])\n    }\n  }\n\n  render(){ \n    return (\n      <>\n        <Backdrop open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Dialog onClose={ () => { this.setState({ mainMenu: false }) } } open={this.state.mainMenu}>\n          \n          { !this.state.chooseUser ? null :\n            <DialogTitle>{this.state.chooseUser.full_app_name} {this.state.chooseUser.user_name} {this.state.mounth}</DialogTitle>\n          }\n          \n          <List sx={{ pt: 0 }}>\n            \n            <ListItem button onClick={ () => { this.setState({ mainMenu: false, mainMenuH: true }) } }>\n              <ListItemAvatar>\n                <Avatar>\n                  <AccessTimeIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Сменить часы на месяц\" />\n            </ListItem>\n            \n            <ListItem button onClick={ () => { this.setState({ mainMenu: false, mainMenuSmena: true, myOtherSmens: this.state.chooseUser.other_smens }) } }>\n              <ListItemAvatar>\n                <Avatar>\n                  <SyncAltIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Сменить смену\" />\n            </ListItem>\n            <ListItem button>\n              <ListItemAvatar>\n                <Avatar>\n                  <HomeWorkIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Сменить точку\" />\n            </ListItem>\n            \n          </List>\n        </Dialog>\n        \n        <Dialog onClose={ () => { this.setState({ mainMenuH: false }) } } open={this.state.mainMenuH}>\n          \n          { !this.state.chooseUser ? null :\n            <DialogTitle>{this.state.chooseUser.user_name} {this.state.mounth} Часы</DialogTitle>\n          }\n          \n          <List sx={{ pt: 0 }}>\n            \n            <ListItem button onClick={this.fastTime.bind(this, 1)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <LooksOneIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"С 1 числа 2/2 с 10 до 22 на месяц\" />\n            </ListItem>\n            \n            <ListItem button onClick={this.fastTime.bind(this, 2)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <LooksTwoIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Со 2 числа 2/2 с 10 до 22 на месяц\" />\n            </ListItem>\n            <ListItem button onClick={this.fastTime.bind(this, 3)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <Looks3Icon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"С 3 числа 2/2 с 10 до 22 на месяц\" />\n            </ListItem>\n            <ListItem button onClick={this.fastTime.bind(this, 4)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <Looks3Icon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"С 4 числа 2/2 с 10 до 22 на месяц\" />\n            </ListItem>\n            \n          </List>\n        </Dialog>\n\n        <Dialog onClose={ () => { this.setState({ mainMenuSmena: false }) } } open={this.state.mainMenuSmena}>\n          \n          { !this.state.chooseUser ? null :\n            <DialogTitle>{this.state.chooseUser.user_name} {this.state.mounth} Смена</DialogTitle>\n          }\n          \n          <List sx={{ pt: 0 }}>\n            \n            { this.state.myOtherSmens.map( (item, key) =>\n              <ListItem key={key} button onClick={this.fastSmena.bind(this, item.id)}>\n                <ListItemAvatar>\n                  <Avatar>\n                    <AssessmentIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={item.name} />\n              </ListItem>\n            ) }\n        \n          </List>\n        </Dialog>\n        \n        <Dialog onClose={ () => { this.setState({ mainMenuPrice: false }) } } open={this.state.mainMenuPrice}>\n          \n          { !this.state.chooseUser ? null :\n            <DialogTitle>{this.state.chooseUser.user_name} {this.state.mounth} Часовая ставка</DialogTitle>\n          }\n          \n          { !this.state.chooseUser ? null :\n            <List sx={{ pt: 0 }}>\n              \n              { this.state.chooseUser.price_arr.map( (item, key) =>\n                <ListItem key={key} button onClick={this.changePriceH.bind(this, item)} style={ parseFloat(this.state.chooseUser.price_p_h) == parseFloat(item) ? { backgroundColor: 'green', color: '#fff' } : {} }>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <AssessmentIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary={item} />\n                </ListItem>\n              ) }\n          \n            </List>\n          }\n        </Dialog>\n\n        <Dialog onClose={ () => { this.setState({ mainMenuLVDIR: false }) } } open={this.state.mainMenuLVDIR}>\n          \n          <DialogTitle>{this.state.mounth} Уровень директора</DialogTitle>\n          \n          <List sx={{ pt: 0 }}>\n            \n            { this.state.arr_dir_lv.map( (item, key) =>\n              <ListItem key={key} button style={ parseFloat(this.state.lv_dir) == parseFloat(item) ? { backgroundColor: 'green', color: '#fff' } : {} } onClick={this.newLvDir.bind(this, item)}>\n                <ListItemAvatar>\n                  <Avatar>\n                    <AssessmentIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={item+' уровень'} />\n              </ListItem>\n            ) }\n          </List>\n          \n        </Dialog>\n\n        <Dialog onClose={ () => { this.setState({ mainMenuDopBonus: false }) } } open={this.state.mainMenuDopBonus}>\n          \n          <DialogTitle>{this.state.mounth} Командный бонус</DialogTitle>\n          \n          <List sx={{ pt: 0 }}>\n            \n            <ListItem button>\n              <ListItemAvatar>\n                <Avatar style={{ backgroundColor: 'green' }}>\n                  <CheckIcon style={{ color: '#fff' }} />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={'Выдать'} />\n            </ListItem>\n            <ListItem button>\n              <ListItemAvatar>\n                <Avatar style={{ backgroundColor: 'red' }}>\n                  <CloseIcon style={{ color: '#fff' }} />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={'Отказать'} />\n            </ListItem>\n            \n          </List>\n          \n        </Dialog>\n        \n        { !this.state.userInfo ? null :\n          <Dialog\n            open={this.state.isOpenModalH}\n            onClose={ () => { this.setState({ isOpenModalH: false }) } }\n            scroll='paper'\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n          >\n            <DialogTitle id=\"scroll-dialog-title\">{this.state.userInfo.user.app_name + ' ' + this.state.userInfo.user.user_name + ' ' + this.state.userInfo.date}</DialogTitle>\n            <DialogContent dividers={true}>\n              \n              <Typography style={{ marginBottom: 10 }}>{'Моя нагрузка: ' + this.state.userInfo.user.my_load_h + ' / Средняя нагрузка: ' + this.state.userInfo.user.all_load_h}</Typography>\n              { this.state.show_bonus === false ? null :\n                <Typography style={{ marginBottom: 20 }}>{'Бонус: ' + this.state.userInfo.user.bonus}</Typography>\n              }\n              \n              { this.state.otherAppList.length == 0 ? null :\n                <MySelect data={this.state.otherAppList} value={this.state.userInfo.new_app} func={ (event) => { let userInfo = this.state.userInfo; userInfo.new_app = event.target.value; this.setState({ userInfo: userInfo }) } } label='Кем работает' />\n              }\n              \n              { this.state.userInfo.mentor_list.length == 0 ? null :\n                <MySelect data={this.state.userInfo.mentor_list} value={this.state.userInfo.mentor_id} func={ (event) => { let userInfo = this.state.userInfo; userInfo.mentor_id = event.target.value; this.setState({ userInfo: userInfo }) } } label='Кем работает' />\n              }\n              \n              <Accordion \n                style={{ marginTop: 10 }} \n                expanded={this.state.openNewTimeAdd} \n                onChange={ () => { this.setState({ openNewTimeAdd: !this.state.openNewTimeAdd }) } }>\n                  \n                <AccordionSummary\n                  expandIcon={<AddIcon />}\n                >\n                  <AccessTimeIcon style={{ marginRight: 10 }} />\n                  <Typography>Добавить время</Typography>\n                </AccordionSummary>\n                <AccordionDetails style={{ display: 'flex', flexDirection: 'row' }}>\n                  \n                  <MyTimePicker value={this.state.newTimeStart} func={ (event) => { this.setState({ newTimeStart: event.target.value }) } } classes={this.state.classes} label='Время начала работы' />\n                  <MyTimePicker value={this.state.newTimeEnd} func={ (event) => { this.setState({ newTimeEnd: event.target.value }) } } classes={this.state.classes} label='Время окончания работы' />\n                  \n                  <AddIcon style={{ minWidth: 50, minHeight: 38, cursor: 'pointer' }} onClick={ this.addTime.bind(this) } />\n                  \n                </AccordionDetails>\n              </Accordion>  \n              \n              { this.state.userInfo.hours.map( (item, key) =>\n                <Accordion key={key}>\n                  <AccordionSummary\n                    expandIcon={<CloseIcon onClick={ this.delTime.bind(this, key) } />}\n                  >\n                    <AccessTimeIcon style={{ marginRight: 10 }} />\n                    <Typography>{item.time_start + ' - ' + item.time_end}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails style={{ display: 'flex', flexDirection: 'row' }}>\n                    <MyTimePicker value={item.time_start} func={ this.changeHourse.bind(this, 'time_start', key) } classes={this.state.classes} label='Время начала работы' />\n                    <MyTimePicker value={item.time_end} func={ this.changeHourse.bind(this, 'time_end', key) } classes={this.state.classes} label='Время окончания работы' />\n                  </AccordionDetails>\n                </Accordion>  \n              ) }\n              \n              \n              <Accordion style={{ marginTop: 50 }} disabled>\n                <AccordionSummary>\n                  <Typography>История</Typography>\n                </AccordionSummary>\n              </Accordion>  \n              \n              { this.state.userInfo.hist.map( (item, key) =>\n                <Accordion key={key}>\n                  <AccordionSummary>\n                    <Typography>{item.date + ' - ' + item.user_name}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails style={{ display: 'flex', flexDirection: 'column' }}>\n                    \n                    { item.items.map( (it, k) =>\n                      <Typography key={k}>{it.time_start + ' - ' + it.time_end} {it.app_name == '' ? '' : ' - ' + it.app_name} </Typography>\n                    ) }\n                    \n                  </AccordionDetails>\n                </Accordion>  \n              ) }\n              \n            </DialogContent>\n            <DialogActions style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n              <Button style={{ backgroundColor: 'green', color: '#fff' }} onClick={this.saveDayHourse.bind(this)}>Сохранить</Button>\n              <Button style={{ backgroundColor: 'red', color: '#fff' }} onClick={() => { this.setState({ isOpenModalH: false }) }}>Отмена</Button>\n            </DialogActions>\n          </Dialog>\n        }\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n          \n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.points} value={this.state.point} func={ (event) => { this.setState({ point: event.target.value }) } } label='Точка' />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <MySelect data={this.state.mounths} value={this.state.mounth} func={ (event) => { this.setState({ mounth: event.target.value }) } } label='Месяц' />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Button variant=\"contained\" onClick={this.updateData.bind(this)}>Обновить данные</Button>\n          </Grid>\n          \n            \n              \n          <Box sx={{ width: '100%' }}>\n            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n              <Tabs value={this.state.tabTable} onChange={ (event, data) => { this.setState({ tabTable: data }) } } centered >\n                <Tab label=\"С 1 по 15 числа\" {...a11yProps(0)} />\n                <Tab label=\"С 16 по конец месяца\" {...a11yProps(1)} />\n              </Tabs>\n            </Box>\n            <TabPanel value={this.state.tabTable} index={0}>\n              { !this.state.one ? null :\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\" id=\"table_graph_one\">\n                    \n                    <TableBody>\n                      \n                      { this.state.test_one.map( (item, key) =>\n                        item.row == 'header' ?\n                          <HeaderItem key={key} bonus_other={this.state.one.bonus_other} changeLVDir={this.changeLVDir.bind(this)} changeDopBonus={this.changeDopBonus.bind(this)} kind={this.state.kind} show_zp={this.state.show_zp_one} lv_dir={this.state.lv_dir} lv_cafe={this.state.lv_cafe} dataKey={key} days={this.state.one.days} item={item} />\n                            :\n                          <TableRow key={key}>\n                            <TableCell style={{ minWidth: 140, minHeight: 38, position: 'absolute', backgroundColor: '#fff', marginLeft: '-1px', borderBottom: '2px solid #e5e5e5' }}>{item.data.user_name}</TableCell>\n                            <TableCell style={{ minWidth: 165, minHeight: 38 }}>{item.data.app_name}</TableCell>\n\n                            { this.state.kind == 'manager' ? null :\n                              <TableCell style={{ textAlign: 'center' }}> <SyncAltIcon style={{ cursor: 'pointer' }} onClick={ () => { this.setState({ mainMenu: true, chooseUser: item.data }) } } /> </TableCell>\n                            }\n\n                            { item.data.dates.map( (date, date_k) =>\n                              <TableCell onClick={ this.openH.bind(this, item.data, date.date) } className=\"min_block\" style={{ backgroundColor: date.info ? date.info.color : '#fff', cursor: 'pointer' }} key={date_k}>{date.info ? date.info.hours : ''}</TableCell>\n                            ) }\n                            \n                            { this.state.kind == 'manager' ? null :\n                              <>\n                                <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}} onClick={ () => {this.setState({ mainMenuPrice: true, chooseUser: item.data }) } }>{item.data.price_p_h}</TableCell>\n                                <TableCell style={{textAlign: 'center'}}>{item.data.dop_bonus}</TableCell>\n                                <TableCell style={{textAlign: 'center'}}>{item.data.h_price}</TableCell>\n                                <TableCell style={{textAlign: 'center'}}>{item.data.err_price}</TableCell>\n                                <TableCell style={{textAlign: 'center'}}>{item.data.my_bonus}</TableCell>\n\n                                { this.state.show_zp_one == 1 || this.state.show_zp_one == 0 ?\n                                  <TableCell style={{textAlign: 'center'}}>{ ( parseInt(item.data.dop_bonus) + parseInt(item.data.dir_price_dop) + parseInt(item.data.h_price) + parseInt(item.data.my_bonus) - parseInt(item.data.err_price) )+'' }</TableCell>\n                                    :\n                                  null\n                                }\n\n                                <TableCell style={{textAlign: 'center'}}>{item.data.given}</TableCell>\n                              </>\n                            }\n                          </TableRow>\n                      ) }\n                      \n                      \n                    </TableBody>\n                    \n                    <TableFooter>\n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell></TableCell>\n\n                        { this.state.kind == 'manager' ? null :\n                          <TableCell></TableCell>\n                        }\n                        \n                        {this.state.one.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" style={{ backgroundColor: item.type == 'cur' ? '#98e38d' : '#fff' }} key={key}>{item.res}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>Роллов</TableCell>\n                        \n                        { this.state.kind == 'manager' ? null :\n                          <TableCell></TableCell>\n                        }\n                        \n                        {this.state.one.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_rolls}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>Пиццы</TableCell>\n                        \n                        { this.state.kind == 'manager' ? null :\n                          <TableCell></TableCell>\n                        }\n                        \n                        {this.state.one.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_pizza}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell className=\"min_size\">Заказы готовились больше 40 минут</TableCell>\n                        \n                        { this.state.kind == 'manager' ? null :\n                          <TableCell></TableCell>\n                        }\n                        \n                        {this.state.one.order_stat.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_false}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                    </TableFooter>\n                    \n                    \n                  </Table>\n                </TableContainer>\n              }\n            </TabPanel>\n            <TabPanel value={this.state.tabTable} index={1}>\n              { !this.state.two ? null :\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"a dense table\" id=\"table_graph_two\">\n                    \n                    <TableBody>\n                      \n                      { this.state.test_two.map( (item, key) =>\n                        item.row == 'header' ?\n                          <HeaderItem bonus_other={this.state.two.bonus_other} changeLVDir={this.changeLVDir.bind(this)} changeDopBonus={this.changeDopBonus.bind(this)} key={key} kind={this.state.kind} show_zp={this.state.show_zp_two} lv_dir={this.state.lv_dir} lv_cafe={this.state.lv_cafe} dataKey={key} days={this.state.two.days} item={item} />\n                            :\n                          <TableRow key={key}>\n                            <TableCell style={{ minWidth: 140, minHeight: 38, position: 'absolute', backgroundColor: '#fff', marginLeft: '-1px', borderBottom: '2px solid #e5e5e5' }}>{item.data.user_name}</TableCell>\n                            <TableCell style={{ minWidth: 165, minHeight: 38 }}>{item.data.app_name}</TableCell>\n\n                            { this.state.kind == 'manager' ? null :\n                              <TableCell style={{ textAlign: 'center' }}> <SyncAltIcon style={{ cursor: 'pointer' }} onClick={ () => { this.setState({ mainMenu: true, chooseUser: item.data }) } } /> </TableCell>\n                            }\n\n                            { item.data.dates.map( (date, date_k) =>\n                              <TableCell onClick={ this.openH.bind(this, item.data, date.date) } className=\"min_block\" style={{ backgroundColor: date.info ? date.info.color : '#fff', cursor: 'pointer' }} key={date_k}>{date.info ? date.info.hours : ''}</TableCell>\n                            ) }\n                            \n                            { this.state.kind == 'manager' ? null :\n                              <>\n                                <TableCell style={{textAlign: 'center', minWidth: 70, cursor: 'pointer'}} onClick={ () => {this.setState({ mainMenuPrice: true, chooseUser: item.data }) } }>{item.data.price_p_h}</TableCell>\n                                <TableCell style={{textAlign: 'center'}}>{item.data.dop_bonus}</TableCell>\n                                <TableCell style={{textAlign: 'center'}}>{item.data.h_price}</TableCell>\n                                <TableCell style={{textAlign: 'center'}}>{item.data.err_price}</TableCell>\n                                <TableCell style={{textAlign: 'center'}}>{item.data.my_bonus}</TableCell>\n                                \n                                { this.state.show_zp_two == 1 || this.state.show_zp_two == 0 ?\n                                  <TableCell style={{textAlign: 'center'}}>{ ( parseInt(item.data.dop_bonus) + parseInt(item.data.dir_price_dop) + parseInt(item.data.h_price) + parseInt(item.data.my_bonus) - parseInt(item.data.err_price) )+'' }</TableCell>\n                                    :\n                                  null\n                                }\n\n                                <TableCell style={{textAlign: 'center'}}>{item.data.given}</TableCell>\n                              </>\n                            }\n                          </TableRow>\n                      ) }\n                      \n                      \n                    </TableBody>\n                    \n                    <TableFooter>\n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell></TableCell>\n                        \n                        { this.state.kind == 'manager' ? null :\n                          <TableCell></TableCell>\n                        }\n                        \n                        {this.state.two.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" style={{ backgroundColor: item.type == 'cur' ? '#98e38d' : '#fff' }} key={key}>{item.res}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>Роллов</TableCell>\n                        \n                        { this.state.kind == 'manager' ? null :\n                          <TableCell></TableCell>\n                        }\n                        \n                        {this.state.two.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_rolls}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell>Пиццы</TableCell>\n                        \n                        { this.state.kind == 'manager' ? null :\n                          <TableCell></TableCell>\n                        }\n                        \n                        {this.state.two.bonus.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_pizza}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell className=\"min_size\">Заказы готовились больше 40 минут</TableCell>\n                        \n                        { this.state.kind == 'manager' ? null :\n                          <TableCell></TableCell>\n                        }\n                        \n                        {this.state.two.order_stat.map( (item, key) => \n                          <TableCell className=\"min_block min_size\" key={key}>{item.count_false}</TableCell>\n                        )}\n                        \n                      </TableRow>\n                      \n                    </TableFooter>\n                    \n                    \n                  </Table>\n                </TableContainer>\n              }\n            </TabPanel>\n            \n          </Box>\n          \n          \n          \n        </Grid>\n      </>\n    )\n  }\n}\n\nexport function WorkSchedule () {\n  const classes = useStyles();\n  let history = useHistory();\n  \n  return (\n    <WorkSchedule_ classes={classes} history={history} />\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@mui/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\n\nimport Badge from '@mui/material/Badge';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { useHistory } from \"react-router-dom\";\n\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\n\nimport routes from '../../../server/routes';\n\nconst queryString = require('query-string');\n\nconst theme = createTheme({\n    palette: {\n      primary: {\n        main: '#c03',\n      },\n      def: {\n        main: '#353b48',\n        secondary: '#fff'\n      },\n    },\n});\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    width: '100%',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n});\n\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      history: this.props.history,\n      \n      module: 'header',\n      \n      open: false,\n      menu: [],\n      full_menu: [],\n      \n      left: false\n    };\n  }\n  \n  async componentDidMount(){\n    \n    let data = await this.getData('get_all');\n    \n    this.setState({\n      menu: data.info.left_menu,\n      full_menu: data.info.full_menu,\n    })\n  }\n  \n  getData = (method, data = {}) => {\n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        method: method, \n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify( data )\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      if( json.st === false && json.type == 'redir' ){\n        this.state.history.push(\"/\");\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      return json;\n    })\n    .catch(err => { \n        console.log( err )\n    });\n  }\n  \n  handleDrawerOpen(){\n    this.setState({\n      open: true\n    })\n  }\n  \n  handleDrawerClose(){\n    this.setState({\n      open: false\n    })\n  }\n  \n  render(){\n    return (\n      <>\n        <AppBar className={clsx(this.state.classes.appBar, this.state.open && this.state.classes.appBarShift)}>\n          <Toolbar className={this.state.classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={this.handleDrawerOpen.bind(this)}\n              className={clsx(this.state.classes.menuButton, this.state.open && this.state.classes.menuButtonHidden)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.state.classes.title}>\n              Dashboard\n            </Typography>\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        \n        \n        <React.Fragment >\n          <SwipeableDrawer\n            anchor={'left'}\n            open={ this.state.open }\n            onClose={ () => { this.setState({ open: false }) } }\n            onOpen={ () => { this.setState({ open: true }) } }\n          >\n            <div className={this.state.classes.toolbarIcon}>\n            \n              <Autocomplete\n                size=\"small\"\n                options={this.state.full_menu}\n                getOptionLabel={(option) => option.name}\n                onChange={(event, newValue) => {\n                  if( newValue ){\n                    this.state.history.push(\"/\"+newValue.key_query+\"/\");\n                  }\n                }}\n                style={{ width: 300 }}\n                renderInput={(params) => <TextField {...params} label=\"Поиск\" variant=\"outlined\" />}\n              />\n              \n              <IconButton onClick={this.handleDrawerClose.bind(this)}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            \n            { this.state.menu.map( (item, key) =>\n              <Accordion key={key} >\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography className={this.state.classes.heading}>{ item.parent.name }</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  \n                  <List style={{ width: '100%' }}>\n                  \n                    { item.chaild.map( (it, k) =>\n                      <ListItem button key={k}>\n                        <Link to={\"/\"+it.key_query+\"/\"}>\n                          <ListItemText primary={ it.name } />\n                        </Link>\n                      </ListItem>\n                    ) }\n                  \n                  </List>\n                  \n                </AccordionDetails>\n              </Accordion>\n            ) }\n          </SwipeableDrawer>\n        </React.Fragment>\n        \n        \n        \n      </>\n    )\n  }\n}\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nexport function App () {\n    const classes = useStyles();\n    let history = useHistory();\n    \n    let check_header = true;\n    \n    if( \n      history.location.pathname == '/auth/' || \n      history.location.pathname == '/auth' || \n      history.location.pathname == '/registration/' ||\n      history.location.pathname == '/registration'\n    ){\n      check_header = false;\n    }\n    \n    return (\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          { !check_header ? null :\n            <>\n              <CssBaseline />\n              <Header classes={classes} history={history} />\n            </>\n          }\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Container maxWidth={false} className={classes.container}>\n        \n              <Switch>\n                { routes.map( (item, key) =>\n                  <Route\n                    key={key}\n                    path={item.path}\n                    exact={ item.exact }\n                    component={ item.component }\n                  />\n                ) }\n                \n                <Route\n                  component={ () =>\n                    <Status code={404}>\n                      <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n                        </Grid>\n                      </Grid>\n                    </Status>\n                  }\n                />\n              </Switch>\n        \n            </Container>\n          </main>\n        </div>\n      </ThemeProvider>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.render( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n//ReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n","import React from 'react';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\n\nimport TextField from '@mui/material/TextField';\n\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Stack from '@mui/material/Stack';\n\n//import Grid from '@mui/material/Grid';\nimport ruLocale from \"date-fns/locale/ru\";\n\n/*import DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';*/\n\nimport DateRangePicker from '@mui/lab/DateRangePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\n//import DatePicker from '@mui/lab/DatePicker';\nimport Typography from '@mui/material/Typography';\n\nimport DatePicker from '@mui/lab/DatePicker';\n\nexport class MyDaterange extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={ruLocale} size=\"small\">\n        <DateRangePicker\n          \n          allowSameDateSelection={true}\n          showTodayButton={true}\n          startText={this.props.startText}\n          endText={this.props.endText}\n          value={this.props.value}\n          inputFormat=\"yyyy-MM-dd\"\n          //mask=\"____-__-__\"\n          onChange={this.props.func}\n          renderInput={(startProps, endProps) => (\n            <React.Fragment>\n              <TextField style={{ width: '100%' }} {...startProps} />\n              <TextField style={{ width: '100%' }} {...endProps} />\n            </React.Fragment>\n          )}\n        />\n      </LocalizationProvider>\n    )\n  }\n}\n\nexport class MyAutocomplite extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <Stack spacing={3}>\n        <Autocomplete\n          size=\"small\"\n          disableCloseOnSelect={true}\n          multiple={true}\n          id={ this.props.id ?? null }\n          options={this.props.data}\n          getOptionLabel={(option) => option.name}\n          value={this.props.value}\n          onChange={this.props.func}\n          filterSelectedOptions\n          multiple={ this.props.multiple && this.props.multiple === true ? true : false }\n          isOptionEqualToValue={(option, value) => option.id === value.id}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label={this.props.label}\n              placeholder={this.props.placeholder}\n            />\n          )}\n        />\n      </Stack>\n    )\n  }\n}\n\nexport class MySelect extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <FormControl fullWidth variant=\"outlined\" size=\"small\">\n        <InputLabel>{this.props.label}</InputLabel>\n        <Select\n          value={this.props.value}\n          label={this.props.label}\n          onChange={ this.props.func }\n          multiple={ this.props.multiple && this.props.multiple === true ? true : false }\n        >\n          <MenuItem value=\"\"><em>None</em></MenuItem>\n          { this.props.data.map( (item, key) =>\n            <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n          ) }\n        </Select>\n      </FormControl>\n    )\n  }\n}\n\nexport class MyTextInput extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      type: 'text'\n    };\n  }\n  \n  render(){\n    return (\n      <TextField \n        label={this.props.label}\n        value={this.props.value}\n        onChange={this.props.func}\n        onBlur={this.props.onBlur ? this.props.onBlur : null}\n        disabled={ this.props.disabled || this.props.disabled === true ? true : false }\n        variant=\"outlined\" \n        size={'small'} \n        color='primary'\n        multiline={this.props.multiline ? this.props.multiline : false}\n        maxRows={this.props.maxRows ? this.props.maxRows : 1}\n        type={ this.props.type ? this.props.type : this.state.type }\n        style={{ width: '100%' }} \n      />\n    )\n  }\n}\n\nexport class MyTimePicker extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      thisVal: ''\n    };\n  }\n  \n  onChange(event){\n    this.setState({\n      thisVal: event.target.value\n    })\n  }\n\n  onBlur(){\n    this.setState({\n      thisVal: ''\n    })\n\n    this.props.onBlur();\n  }\n\n  render(){\n    return (\n      <TextField\n        variant=\"outlined\"\n        size=\"small\"\n        color=\"primary\"\n        label={this.props.label}\n        type=\"time\"\n        id={ this.props.id ? this.props.id : null }\n        value={ this.props.func ? this.props.value : this.state.thisVal }\n        className={this.state.classes.timePicker}\n        onChange={this.props.func ? this.props.func : this.onChange.bind(this)}\n        onBlur={this.props.onBlur ? this.onBlur.bind(this) : null}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        step={600}\n        inputProps={{\n          step: 600, // 5 min\n        }}\n      />\n    )\n  }\n}\n\nexport class MyDatePicker extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <>\n        <Typography>{this.props.label}</Typography>\n        <DatePicker\n          format=\"YYYY-MM-DD\"\n          \n          multiple\n          sort\n          \n          //mask=\"____/__/__\"\n          //multiple={ this.props.multiple && this.props.multiple === true ? true : false }\n          //disableCloseOnSelect={true}\n          //inputFormat=\"yyyy-MM-dd\"\n          style={{ width: '100%' }}\n          label={this.props.label}\n          value={this.props.value}\n          onChange={this.props.func}\n        />\n      </>\n    )\n  }\n}\n\nexport class MyDatePickerNew extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={ruLocale}>\n        <DatePicker\n          multiple={true}\n          inputFormat=\"yyyy-MM-dd\"\n          label={this.props.label}\n          value={this.props.value}\n          onChange={this.props.func}\n          renderInput={(params) => <TextField variant=\"outlined\" size={'small'} color='primary' style={{ width: '100%' }} {...params} />}\n        />\n      </LocalizationProvider>\n    )\n  }\n}\n\nexport class MyDatePickerTest extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <DatePicker \n        multiple\n        value={this.props.value}\n        onChange={this.props.func}\n      />\n    )\n  }\n}\n\nexport class MyCheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.props.value}\n              onChange={this.props.func}\n              color=\"primary\"\n            />\n          }\n          label={this.props.label}\n        />\n      </FormGroup>\n    )\n  }\n}\n\nexport class TextEditor extends React.PureComponent {\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n    };\n  }\n  \n  render(){\n    return (\n      <tinymce-editor\n        apiKey=\"r0ihgs4ukfpmudzw7aexxgb88tnx5jw26h1xx9x6409ji3gx\"\n        id={this.props.id}\n        menubar={true}\n        plugins=\"advlist autolink lists link image charmap print preview anchor\n        searchreplace visualblocks code fullscreen\n        insertdatetime media table paste code help wordcount\"\n        toolbar=\"undo redo | formatselect | bold italic backcolor |\n        alignleft aligncenter alignright alignjustify |\n        bullist numlist outdent indent | removeformat | help\"\n        content_style=\"body\n        {\n          font-family:Helvetica,Arial,sans-serif;\n          font-size:14px\n        }\"\n        >\n\n        {this.props.text}\n\n      </tinymce-editor>\n    )\n  }\n}"],"names":["Home","require","Auth","Reg","LiveOrders","Events","RasByBill","CategoryItems","VendorModule","VendorItemPrice","Tender","Revizion","RevizionNew","WorkSchedule","SiteSale2","SiteSale2_New","SiteSale2_Edit","SiteSale2_Stat","SiteSale2_StatList","DriveMapStatAll","DriverStat","Concenter","SocialNetwork","CatWork","AppWorkPoint","AppWork","module","exports","path","exact","component","title","code","queryString","theme","createTheme","palette","primary","main","def","secondary","useStyles","makeStyles","formControl","width","selectEmpty","marginTop","spacing","tableCel","textAlign","borderRight","padding","cursor","backgroundColor","tableCelHead","customCel","timePicker","AppWork_","props","method","data","setState","is_load","fetch","headers","body","stringify","state","version","login","localStorage","getItem","JSON","then","res","json","st","type","setTimeout","window","location","pathname","history","push","err","console","log","classes","module_name","items","modalDialog","modalDialogNew","dows","id","name","types","itemsEdit","nameWork","itemsNew","this","getData","map","item","key","find","it","parseInt","dow","module_info","document","showCat","nameCat","editText","text","work","times_add","times_close","alert","event","target","value","time_action","newArr","k","getElementById","checked","Backdrop","className","backdrop","open","CircularProgress","color","Dialog","maxWidth","onClose","DialogTitle","DialogContent","style","paddingTop","Grid","container","xs","sm","func","chengeItem","bind","label","cats","type_new","time_min","max_count","multiline","maxRows","description","apps","app_id","type_time","List","ListItem","borderBottom","ListItemText","chengeTime","Close","onClick","delTime","onBlur","addTime","chengeTimeClose","DialogActions","Button","saveEdit","chengeItemNew","chengeTimeNew","delTimeNew","addTimeNew","chengeTimeCloseNew","saveNew","variant","openNewWork","Table","TableHead","TableRow","TableCell","Visibility","TableBody","openWork","fontWeight","work_name","app_name","dow_name","times_open","is_not_del","changeCheck","is_need","is_active","React","useHistory","AppWorkPoint_","points","point_id","allList","allListRender","thisList","getWorks","all_work","this_work","checkList","Titem","Aitem","check","new_arr","changeApp","Send","add","del","save","paper","display","flexDirection","alignItems","avatar","borderRadius","height","margin","avatar2","form","submit","textLink","Auth_","dialogTitle","dialogText","point","showReady","read","onstol","ordersQueue","prestol_new","pwd","setItem","token","DialogContentText","autoFocus","direction","justifyContent","md","lg","xl","Avatar","alt","src","noValidate","TextField","size","required","fullWidth","autoComplete","auth","href","CatWork_","nameCatNew","editTextNew","config","readonly","cat_id","button","openCat","CategoryItems_","modalDialog2","modalDialog3","newMainCatMy","editMainCatMy","newMainNameMy","editMainNameMy","editCat","allCats","allItems","thisValItems","thisDataItems","thisCatId","myVal","filter","cat","parent_id","paddingBottom","changeCatMain","onChange","changeNameMain","saveCat","val","saveItems","changeCatMainEdit","changeNameMainEdit","saveEditCat","createCat","main_cat","main_key","Accordion","AccordionSummary","expandIcon","ExpandMore","Menu","marginRight","Typography","AccordionDetails","parent_cat","parent_key","addItems","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","PropTypes","Concenter_","typeDel","modalDialogDel","cities","city_id","point_list","need_point_list","indexTab","orders","ordersRender","showOrder","radiogroup_options","textDel","number","addr","need_points","getOrders","index","split","filterNumber","order_id","deltype","confirm","order","typeCreate","ans","type_check","check_pos","prompt","isNaN","renderOrders","indexOf","street","home","toLowerCase","type_order","type_order_addr_new","time_order_name","time_order","delete_reason","date_time_delete","is_preorder","text_time","time_to_client","textTime","promo_name","promo_text","comment","sdacha","sum_order","check_pos_drive","order_items","count","price","TableFooter","order_items_","ready","is_delete","status_order","ButtonGroup","disableElevation","disableRipple","closeOrder","type_order_","fakeUser","FormControl","RadioGroup","changeAddr","FormControlLabel","control","Radio","onFocus","changeText","delOrder","closeOrderTrue","changeCity","changeDate","changeNumber","changeAddrSt","btnGetOrders","Tabs","changePoint","Tab","dist","type_user","date_time_order","need_time","give_data_time","close_order","to_time","unix_time_to_client","status","order_price","type_pay","driver","DriveMapStatAll_","drivers","updateData","objectManager","ymaps","ObjectManager","features","options","preset","iconColor","geometry","coordinates","latitude","longitude","point_color","properties","iconCaption","point_text","xy","positions","pos","parse","iconContent","geoObjects","removeAll","Map","center","zoom","searchControlProvider","myGeoObject","GeoObject","driver_name","DriverStat_","date_start","date_end","rangeDate","drive_stat_full","drive_stat_date","summ","choose_driver_id","check_cash","stat_drive_date","dateStart","dateEnd","driver_id","changeSumm","saveGivePrice","startText","endText","changeDateRange","TableContainer","Paper","full_sum","full_cash","full_bank","count_cash","count_bank","give_by_date","dop_price","err_summ","my_price","my_orders","my","ost_cash","giveCash","colSpan","unic_users","short_name","order_k","Events_","mounth","mounths","years","calendar","chooseDayHoly","events","chooseEvent","eventPoint1","everyYear1","timeStart2","timeEnd2","expanded","dayEvents","events_hist","this_m","this_y","m","y","full_day","chooseDay","holy","hist","this_events","every_year","time_start","time_end","del_id","changeEvent","changePoint1","changeTimeStart2","changeTimeEnd2","changeEveryYear1","delEvent","changeMounth","changeYear","overflow","m_key","dir","zIndex","drawer","Home_","Live_Orders","changeCheckOrders","preorder","date_time_preorder_","unix_start_stol_or","give_data_time_","close_date_time_order","type_","time_","test_time","stol_sborki","date_time_preorder","time_start_order","time_end_order","RasByBill_","items_cat","item_cat","myItems","start_date","end_date","items_ras","parseFloat","sum","resItems","pf_ras","rec_ras","toFixed","catItems","this_price","count_pos","multiple","changeItems","getItems","getCats","count_item","ei_name","count_pf","ei_name_pf","count_bill","pf_name","count_rolls","price_rolls","disabled","count_pizza","price_by_items","paddingLeft","parent_items","backButton","instructions","marginBottom","Reg_","activeStep","steps","phone","charCode","nextStep","Stepper","alternativeLabel","Step","StepLabel","onKeyPress","enterNextStep","TabPanel","children","other","role","hidden","Box","sx","p","a11yProps","propTypes","Revizion_","revList","chooseRev","pf","all_data","chooseTab","get_data_for_new_rev","getRevList","getDataRev","res2","rev_id","rec","to","changeRev","search","textColor","indicatorColor","centered","RevizionNewItem","change","nextProps","nextState","counts","need_pq","itemKey","clear","copy","RevizionNew_","storages","key_item","key_data","allVal","new_counts","saveData","copyData","clearData","SwipeableDrawer","anchor","onOpen","position","bottom","left","right","elevation","BottomNavigation","showLabels","newValue","BottomNavigationAction","icon","Restore","MyDatePicker","format","sort","formatDateDot","formatDateName","SiteSale2_new_","click","modalText","city","modalLink","where_promo_list","promo_action_list","sale_list","promo_conditions_list","promo_sale_list","type_sale_list","date_promo_list","type_order_list","where_order_list","promo_prizw_vk","spamNameSMS","auto_text","where_promo","generate_new","count_action","promo_action","type_sale","promo_sale","sale_type","promo_conditions","price_start","price_end","date_promo","promo_length","promo_count","day_1","day_2","day_3","day_4","day_5","day_6","day_7","where_order","numberList","promo_desc_true","promo_desc_false","textSMS","addItem","addItemCount","addItemPrice","addItemAllPrice","itemsAdd","itemsAddPrice","saleCat","saleItem","priceItem","conditionItems","testDate","createdPromo","Y","M","D","fullDate","generateTextDescFalse","generateTextDescTrue","count_promo","promo_items","promo_cat","dateList","toISOString","promo_vk_prize","cert_text","promo_len","generate","promo_in_count","promo_type_sale","promo_type","promo_summ","promo_summ_to","promo_when","promo_type_order","promo_where","promo_city","promo_point","about_promo_text","condition_promo_text","promo_items_add","promo_items_sale","promo_conditions_items","date_between","text_err","link","thisDay","nextDay","setDate","textTrue","substring","itemText","dop_text","slice","textFalse","thisItems","item_id","thisItem","newItems","changeData","changeDataCheck","Divider","changeDataData","addItemAdd","delItemAdd","priceItemAdd","delItemPrice","TextareaAutosize","placeholder","minRows","SiteSale2_edit_","promo_id","promoId","promo","findItem","limDate","limit","date1","date2","time1","time2","d1","d2","d3","d4","d5","d6","d7","coment","condition_text","SiteSale2_","city_list","promoName","findPromoList","all_city_list","showPromoList","marginLeft","city_name","def_count","delPromo","SiteSale2_Stat_","spam_list","spam_id","spam_list_data","spam_list_data_stat","true","all","percent","stat","show","changeSpam","SiteSale2_StatList_","promo_list","getUsers","Check","useParams","SocialNetwork_","cityList","dataInfo","file","info","vk","inst","ok","tg","fb","file1","formData","FormData","append","axios","response","error","files","handleFileInput","dynamicCellStyle","params","colDef","headerName","Tender_","testTable","vendors","myVendors","showVendors","params_api","params_columnApi","table","k1","section","k2","k3","tableItem","k4","item_price","vendor_price","vendor_id","item_ras","ras","field","api","columnApi","AgGridReact","onGridReady","onCellClicked","rowData","AgGridColumn","pinned","cellClassRules","hide","resizable","cellStyle","VendorItemPrice_","vendor","allCity","isPrioriti","this_items","all_city","is_prioriti","changeVendor","name_for_vendor","update","full_price","pqs","rec_pq","VendorModule_","modalItems","modalVendor","modalVendorNew","vendor_items","openVendor","customAdd","vendorCities","allCities","nds","nds_","all_items","vendor_cities","all_cities","bill_ex","email","email_2","inn","min_price","need_img_bill_ex","ogrn","includes","item_name","item1","paddingRight","Add","addItemCustom","changeSort","changeNDS","delItem","saveVendorItems","testChange","user","saveVendor","addVendor","openModalVendorNew","openModalVendor","DirectionsCar","openModalItems","is_show","VisibilityOff","HeaderItem","minWidth","minHeight","lv_cafe","kind","days","dataKey","changeDopBonus","bonus_other","fontSize","changeLVDir","lv_dir","show_zp","WorkSchedule_","one","two","test_one","test_two","isOpenModalH","userInfo","hList","mList","newTimeStart","newTimeEnd","openNewTimeAdd","otherAppList","otherApp","testVal","testOpen","mainMenu","mainMenuH","mainMenuSmena","show_bonus","mainMenuPrice","mainMenuLVDIR","mainMenuDopBonus","show_zp_one","show_zp_two","myOtherSmens","chooseUser","tabTable","arr_dir_lv","h","i","this_date","smena_id","user_id","h_info","other_app","key_time","hours","new_app","mentor_id","new_smena_id","part","LV","dir_lv","full_app_name","user_name","pt","ListItemAvatar","AccessTime","other_smens","SyncAlt","HomeWork","fastTime","LooksOne","LooksTwo","Looks3","fastSmena","Assessment","price_arr","changePriceH","price_p_h","newLvDir","scroll","dividers","my_load_h","all_load_h","bonus","mentor_list","changeHourse","saveDayHourse","borderColor","row","dates","date_k","openH","dop_bonus","h_price","err_price","my_bonus","dir_price_dop","given","order_stat","count_false","root","toolbar","toolbarIcon","mixins","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","fixedHeight","heading","typography","pxToRem","fontWeightRegular","Header","menu","full_menu","left_menu","AppBar","clsx","Toolbar","IconButton","edge","handleDrawerOpen","noWrap","Badge","badgeContent","Notifications","Autocomplete","getOptionLabel","option","key_query","renderInput","handleDrawerClose","ChevronLeft","parent","chaild","Status","render","staticContext","App","check_header","ThemeProvider","CssBaseline","Container","routes","ReactDOM","MyDaterange","dateAdapter","AdapterDateFns","locale","ruLocale","allowSameDateSelection","showTodayButton","inputFormat","startProps","endProps","MyAutocomplite","disableCloseOnSelect","filterSelectedOptions","MySelect","MyTextInput","MyTimePicker","thisVal","InputLabelProps","shrink","step","inputProps","MyDatePickerNew","MyCheckBox","TextEditor","apiKey","menubar","plugins","content_style"],"sourceRoot":""}