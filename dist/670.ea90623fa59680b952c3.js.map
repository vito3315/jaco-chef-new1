{"version":3,"file":"670.ea90623fa59680b952c3.js","mappings":"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","sources":["webpack://package.json/./src/components/category_items/category_items.component.jsx","webpack://package.json/./src/components/category_items/category_items.style.scss"],"sourcesContent":["import React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { MySelect, MyAutocomplite } from '../../stores/elements';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass ModalCategoryItems extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      newMainCatMy: '',\r\n      editMainCatMy: '',\r\n      newMainNameMy: '',\r\n      editMainNameMy: '',\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n\r\n    if(!this.props.event) {\r\n      return;\r\n    }\r\n\r\n    if (this.props.event !== prevProps.event) {\r\n      this.setState({\r\n        editMainCatMy: this.props.event.parent_id,\r\n        editMainNameMy: this.props.event.name,\r\n      });\r\n    }\r\n  }\r\n\r\n  changeNameMain(event) {\r\n    let data = event.target.value;\r\n\r\n    this.setState({\r\n      newMainNameMy: data,\r\n    });\r\n  }\r\n\r\n  changeCatMain(event) {\r\n    let data = event.target.value;\r\n\r\n    this.setState({\r\n      newMainCatMy: data,\r\n    });\r\n  }\r\n\r\n  changeCatMainEdit(event) {\r\n    let data = event.target.value;\r\n\r\n    this.setState({\r\n      editMainCatMy: data,\r\n    });\r\n  }\r\n\r\n  changeNameMainEdit(event) {\r\n    let data = event.target.value;\r\n\r\n    this.setState({\r\n      editMainNameMy: data,\r\n    });\r\n  }\r\n\r\n  onClose() {\r\n\r\n    this.setState({\r\n      newMainCatMy: '',\r\n      editMainCatMy: this.props.event ? this.props.event.parent_id : '',\r\n      newMainNameMy: '',\r\n      editMainNameMy: this.props.event ? this.props.event.name : '',\r\n    });\r\n    this.props.onClose();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.open}\r\n        onClose={this.onClose.bind(this)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{this.props.method}</DialogTitle>\r\n        <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={12}>\r\n              <MySelect\r\n                label=\"Главная категория\"\r\n                data={this.props.data}\r\n                value={\r\n                  this.props.method === 'Редактирование категории'\r\n                    ? this.state.editMainCatMy\r\n                    : this.state.newMainCatMy\r\n                }\r\n                func={\r\n                  this.props.method === 'Редактирование категории'\r\n                    ? this.changeCatMainEdit.bind(this)\r\n                    : this.changeCatMain.bind(this)\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                label=\"Название категории\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                style={{ width: '100%' }}\r\n                color=\"primary\"\r\n                value={\r\n                  this.props.method === 'Редактирование категории'\r\n                    ? this.state.editMainNameMy\r\n                    : this.state.newMainNameMy\r\n                }\r\n                onChange={\r\n                  this.props.method === 'Редактирование категории'\r\n                    ? this.changeNameMainEdit.bind(this)\r\n                    : this.changeNameMain.bind(this)\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={\r\n              this.props.method === 'Редактирование категории'\r\n                ? this.props.saveEditCat.bind(\r\n                    this,\r\n                    this.state.editMainNameMy,\r\n                    this.state.editMainCatMy\r\n                  )\r\n                : this.props.saveCat.bind(\r\n                    this,\r\n                    this.state.newMainNameMy,\r\n                    this.state.newMainCatMy\r\n                  )\r\n            }\r\n            color=\"primary\"\r\n          >\r\n            Сохранить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nclass CategoryItems_ extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      module: 'category_items',\r\n      module_name: '',\r\n      is_load: false,\r\n\r\n      modalDialog: false,\r\n      modalDialog2: false,\r\n\r\n      method: null,\r\n      data: null,\r\n\r\n      allCats: [],\r\n      allItems: [],\r\n\r\n      thisValItems: [],\r\n      thisDataItems: [],\r\n      thisCatId: 0,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let data = await this.getData('get_all');\r\n\r\n    this.setState({\r\n      module_name: data.module_info.name,\r\n      allCats: data.cats,\r\n      allItems: data.items,\r\n    });\r\n\r\n    document.title = data.module_info.name;\r\n  }\r\n\r\n  getData = (method, data = {}) => {\r\n    this.setState({\r\n      is_load: true,\r\n    });\r\n\r\n    return fetch('https://jacochef.ru/api/index_new.php', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: queryString.stringify({\r\n        method: method,\r\n        module: this.state.module,\r\n        version: 2,\r\n        login: localStorage.getItem('token'),\r\n        data: JSON.stringify(data),\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json.st === false && json.type == 'redir') {\r\n          window.location.pathname = '/';\r\n          return;\r\n        }\r\n\r\n        if (json.st === false && json.type == 'auth') {\r\n          window.location.pathname = '/auth';\r\n          return;\r\n        }\r\n\r\n        setTimeout(() => {\r\n          this.setState({\r\n            is_load: false,\r\n          });\r\n        }, 300);\r\n\r\n        return json;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({\r\n          is_load: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  onOpen(method, data, event) {\r\n    event.stopPropagation();\r\n\r\n    this.setState({\r\n      modalDialog: true,\r\n      method,\r\n      data,\r\n    });\r\n  }\r\n\r\n  addItems(cat_id) {\r\n    let myVal = this.state.allItems.filter(\r\n      (item) => parseInt(item.cat_id) == parseInt(cat_id)\r\n    );\r\n    let data = this.state.allItems.filter((item) => parseInt(item.cat_id) == 0);\r\n\r\n    this.setState({\r\n      modalDialog2: true,\r\n      thisValItems: myVal,\r\n      thisDataItems: data,\r\n      thisCatId: cat_id,\r\n    });\r\n  }\r\n\r\n  async saveItems() {\r\n    let data = {\r\n      cat_id: this.state.thisCatId,\r\n      items: this.state.thisValItems,\r\n    };\r\n\r\n    let res = await this.getData('save_items_cat', data);\r\n\r\n    this.setState({\r\n      allCats: res.cats,\r\n      allItems: res.items,\r\n      modalDialog2: false,\r\n\r\n      thisValItems: [],\r\n      thisDataItems: [],\r\n      thisCatId: 0,\r\n    });\r\n  }\r\n\r\n  async saveCat(newMainNameMy, newMainCatMy) {\r\n    let data = {\r\n      name: newMainNameMy,\r\n      cat_id: newMainCatMy,\r\n    };\r\n\r\n    let res = await this.getData('save_cat', data);\r\n\r\n    if (res.st === false) {\r\n      alert(res.text);\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      allCats: res.cats,\r\n      modalDialog: false,\r\n    });\r\n  }\r\n\r\n  async saveEditCat(editMainNameMy, editMainCatMy) {\r\n    let data = {\r\n      name: editMainNameMy,\r\n      cat_id: editMainCatMy,\r\n      id: this.state.event.id,\r\n    };\r\n\r\n    let res = await this.getData('edit_cat', data);\r\n\r\n    if (res.st === false) {\r\n      alert(res.text);\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      allCats: res.cats,\r\n      modalDialog: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Backdrop style={{ zIndex: 99 }} open={this.state.is_load}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      \r\n        <ModalCategoryItems\r\n          open={this.state.modalDialog}\r\n          onClose={() => {\r\n            this.setState({ modalDialog: false });\r\n          }}\r\n          data={this.state.allCats.filter(\r\n            (item) => parseInt(item.parent_id) == -1 || !item.parent_id\r\n          )}\r\n          saveCat={this.saveCat.bind(this)}\r\n          saveEditCat={this.saveEditCat.bind(this)}\r\n          method={this.state.method}\r\n          event={this.state.data}\r\n        />\r\n\r\n        <Dialog\r\n          open={this.state.modalDialog2}\r\n          onClose={() => {\r\n            this.setState({ modalDialog2: false });\r\n          }}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle>Позиции категории</DialogTitle>\r\n          <DialogContent style={{ paddingBottom: 10, paddingTop: 10 }}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={12}>\r\n                <MyAutocomplite\r\n                  label=\"Выбранные позиции\"\r\n                  multiple={true}\r\n                  func={(event, val) => {\r\n                    this.setState({ thisValItems: val });\r\n                  }}\r\n                  data={this.state.thisDataItems}\r\n                  value={this.state.thisValItems}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.saveItems.bind(this)} color=\"primary\">\r\n              Сохранить\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <h1>{this.state.module_name}</h1>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12}>\r\n            <Button\r\n              onClick={ () => this.setState({\r\n                    modalDialog: true,\r\n                    method: 'Новая категория',\r\n                  })}\r\n            >\r\n              Создать категорию\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} style={{ paddingBottom: '10px' }}>\r\n            {this.state.allCats.map((main_cat, main_key) =>\r\n              parseInt(main_cat.parent_id) != -1 ? null : (\r\n                <Accordion key={main_key}>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                  >\r\n                    <MenuIcon\r\n                      style={{ marginRight: 10 }}\r\n                      onClick={this.onOpen.bind(\r\n                        this,\r\n                        'Редактирование категории',\r\n                        main_cat\r\n                      )}\r\n                    />\r\n                    <Typography>{main_cat.name}</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    {this.state.allCats.map((parent_cat, parent_key) =>\r\n                      parseInt(main_cat.id) !=\r\n                      parseInt(parent_cat.parent_id) ? null : (\r\n                        <Accordion key={main_key + '_' + parent_key}>\r\n                          <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                          >\r\n                            <MenuIcon\r\n                              style={{ marginRight: 10 }}\r\n                              onClick={this.onOpen.bind(\r\n                                this,\r\n                                'Редактирование категории',\r\n                                parent_cat\r\n                              )}\r\n                            />\r\n                            <Typography>{parent_cat.name}</Typography>\r\n                          </AccordionSummary>\r\n                          <AccordionDetails>\r\n                            <Table>\r\n                              <TableBody>\r\n                                <TableRow>\r\n                                  <TableCell>\r\n                                    <Button\r\n                                      onClick={this.addItems.bind(\r\n                                        this,\r\n                                        parseInt(parent_cat.id)\r\n                                      )}\r\n                                    >\r\n                                      Добавить\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                                {this.state.allItems\r\n                                  .filter(\r\n                                    (item) =>\r\n                                      parseInt(item.cat_id) ==\r\n                                      parseInt(parent_cat.id)\r\n                                  )\r\n                                  .map((item, key) => (\r\n                                    <TableRow\r\n                                      key={\r\n                                        main_key + '_' + parent_key + '_' + key\r\n                                      }\r\n                                    >\r\n                                      <TableCell>{item.name}</TableCell>\r\n                                    </TableRow>\r\n                                  ))}\r\n                              </TableBody>\r\n                            </Table>\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      )\r\n                    )}\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              )\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport function CategoryItems() {\r\n  return <CategoryItems_ />;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1664539397486\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","ModalCategoryItems","props","state","newMainCatMy","editMainCatMy","newMainNameMy","editMainNameMy","prevProps","this","event","setState","parent_id","name","data","target","value","onClose","Dialog","open","bind","DialogTitle","id","method","DialogContent","style","paddingBottom","paddingTop","Grid","container","spacing","item","xs","sm","label","func","changeCatMainEdit","changeCatMain","TextField","size","variant","width","color","onChange","changeNameMainEdit","changeNameMain","DialogActions","Button","onClick","saveEditCat","saveCat","React","CategoryItems_","is_load","fetch","headers","body","stringify","module","version","login","localStorage","getItem","JSON","then","res","json","st","type","setTimeout","window","location","pathname","err","console","log","module_name","modalDialog","modalDialog2","allCats","allItems","thisValItems","thisDataItems","thisCatId","getData","module_info","cats","items","document","title","stopPropagation","cat_id","myVal","filter","parseInt","alert","text","Backdrop","zIndex","CircularProgress","multiple","val","saveItems","map","main_cat","main_key","Accordion","key","AccordionSummary","expandIcon","ExpandMore","Menu","marginRight","onOpen","Typography","AccordionDetails","parent_cat","parent_key","Table","TableBody","TableRow","TableCell","addItems","CategoryItems","cssReload","hot","dispose","accept","undefined"],"sourceRoot":""}