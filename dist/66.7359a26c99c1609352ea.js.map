{"version":3,"file":"66.7359a26c99c1609352ea.js","mappings":"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","sources":["webpack://package.json/./src/components/tender/tender.component.jsx","webpack://package.json/./src/components/tender/tender.style.scss?9070"],"sourcesContent":["import React from 'react';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableContainer from '@mui/material/TableContainer';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MyAutocomplite, MySelect } from '../../stores/elements';\n\nconst queryString = require('query-string');\n\nclass Tender_ extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      module: 'tender',\n      module_name: '',\n      is_load: false,\n\n      cities: [],\n      city: '',\n\n      towns: [\n        { id: '1', name: 'Все' },\n        { id: '2', name: 'ТЛТ' },\n        { id: '3', name: 'СМР' },\n      ],\n      town: '',\n\n      vendors: [],\n      vendor: '',\n\n      cats: []\n\n    };\n  }\n\n  async componentDidMount() {\n    let data = await this.getData('get_all');\n\n    console.log(data);\n\n    this.setState({\n      module_name: data.module_info.name,\n      cities: data.cities,\n      city: data.cities[0].id,\n      vendors: data.vendors,\n    });\n\n    document.title = data.module_info.name;\n  }\n\n  getData = (method, data = {}) => {\n    this.setState({\n      is_load: true,\n    });\n\n    return fetch('https://jacochef.ru/api/index_new.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: queryString.stringify({\n        method: method,\n        module: this.state.module,\n        version: 2,\n        login: localStorage.getItem('token'),\n        data: JSON.stringify(data),\n      }),\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        if (json.st === false && json.type == 'redir') {\n          window.location.pathname = '/';\n          return;\n        }\n\n        if (json.st === false && json.type == 'auth') {\n          window.location.pathname = '/auth';\n          return;\n        }\n\n        setTimeout(() => {\n          this.setState({\n            is_load: false,\n          });\n        }, 300);\n\n        return json;\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          is_load: false,\n        });\n      });\n  };\n\n  changeCity(event) {\n    this.setState({\n      city: event.target.value,\n    });\n  }\n\n  changeVendor(event, value) {\n    this.setState({\n      vendor: value,\n    });\n  }\n\n  async getDataTable() {\n    const data = {\n      city_id: this.state.city,\n    };\n\n    let res = await this.getData('get_data', data);\n\n    console.log(res);\n\n    const vendors = this.state.vendors;\n\n    const items = res.vendor_items_price;\n\n    const vendors_items = vendors.map((el) => {\n      el.price = [];\n\n      items.forEach((it) => {\n        if (it.vendor_id === el.id) {\n          el.price.push(it);\n        }\n      });\n\n      return el;\n    });\n\n    this.setState({\n      cats: res.items,\n      vendors: vendors_items,\n    });\n  }\n\n  changeSelect(event) {\n    this.setState({\n      town: event.target.value,\n    });\n\n  }\n\n  render() {\n    return (\n      <>\n        <Backdrop open={this.state.is_load}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n\n        <Grid container spacing={3} mb={3}>\n          <Grid item xs={12} sm={12}>\n            <h1>{this.state.module_name}</h1>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} justifyContent=\"center\" mb={5}>\n          <Grid item xs={12} sm={3}>\n            <MySelect\n              data={this.state.cities}\n              value={this.state.city}\n              func={this.changeCity.bind(this)}\n              label=\"Город\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <MyAutocomplite\n              label=\"Поставщик\"\n              multiple={false}\n              data={this.state.vendors}\n              value={this.state.vendor}\n              func={this.changeVendor.bind(this)}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <Button\n              variant=\"contained\"\n              style={{ whiteSpace: 'nowrap' }}\n              onClick={this.getDataTable.bind(this)}\n            >\n              Обновить данные\n            </Button>\n          </Grid>\n        </Grid>\n\n        {!this.state.cats.length ? null : (\n          <Grid container spacing={3} >\n            <Grid item xs={12} sm={12}>\n              <TableContainer sx={{ maxHeight: { xs: 'none', sm: 700 } }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell sx={{ backgroundColor: '#d87093' }}>\n                        Категория\n                      </TableCell>\n                      <TableCell sx={{ backgroundColor: '#d87093' }}>\n                        Параметры\n                      </TableCell>\n                      <TableCell sx={{ backgroundColor: '#d87093' }}>\n                        Все\n                      </TableCell>\n                      <TableCell sx={{ backgroundColor: '#d87093' }}>\n                        Тольятти\n                      </TableCell>\n                      <TableCell sx={{ backgroundColor: '#d87093' }}>\n                        Самара\n                      </TableCell>\n                      {this.state.vendors.map((vendor, key) => (\n                        <React.Fragment key={key}>\n                          <TableCell\n                            style={{\n                              whiteSpace: 'nowrap',\n                              backgroundColor: '#d87093',\n                            }}\n                            colSpan={2}\n                          >\n                            {vendor.name}\n                          </TableCell>\n                        </React.Fragment>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n\n                  <TableBody>\n                    {this.state.cats.map((item, key) => (\n                      <React.Fragment key={key}>\n                        <TableRow >\n                          <TableCell\n                            colSpan={`${5 + this.state.vendors.length * 2}`}\n                            sx={{\n                              backgroundColor: '#98FB98',\n                            }}\n                          >\n                            {item.name}\n                          </TableCell>\n                        </TableRow>\n\n                        {item.cats.map((category, key_cat) => (\n                          <React.Fragment key={key_cat}>\n                            <TableRow\n                              sx={{ '& td': { backgroundColor: '#40E0D0' } }}\n                            >\n                              <TableCell>{category.name}</TableCell>\n                              <TableCell></TableCell>\n                              {key_cat === 0 ? (\n                                <TableCell colSpan={3}>\n                                  Зафиксированные цены\n                                </TableCell>\n                              ) : (\n                                <React.Fragment key={key_cat}>\n                                  <TableCell></TableCell>\n                                  <TableCell></TableCell>\n                                  <TableCell></TableCell>\n                                </React.Fragment>\n                              )}\n                              {this.state.vendors.map((vendor, key) => (\n                                <React.Fragment key={key}>\n                                  <TableCell colSpan={2}></TableCell>\n                                </React.Fragment>\n                              ))}\n                            </TableRow>\n\n                            {category.items.map((item, k) => (\n                              <TableRow key={k} hover>\n                                <TableCell className=\"td_color\">\n                                  {item.name}\n                                </TableCell>\n                                <TableCell></TableCell>\n                                <TableCell></TableCell>\n                                <TableCell></TableCell>\n                                <TableCell></TableCell>\n                                {this.state.vendors.map((vendor, key) => (\n                                  <React.Fragment key={key}>\n                                    {vendor.price.find(\n                                      (it) => it.item_id === item.id\n                                    ) ? (\n                                      <>\n                                        <TableCell \n                                        style={{ backgroundColor: \n                                        this.state.town === '1' ? '#FFFF00' :\n                                        this.state.town === '2' ? '#FF4500' :\n                                        this.state.town === '3' ? '#8B008B' :\n                                        'none'\n                                      }}>\n                                          <MySelect\n                                            data={this.state.towns}\n                                            value={this.state.town}\n                                            func={this.changeSelect.bind(this)}\n                                            label=\"\"\n                                          />\n                                        </TableCell>\n                                        <TableCell\n                                          style={{\n                                            whiteSpace: 'nowrap',\n                                            backgroundColor: '#00BFFF',\n                                            textAlign: 'center',\n                                          }}\n                                        >\n                                          {`${Number(\n                                            vendor.price.find(\n                                              (it) => it.item_id === item.id\n                                            ).price\n                                          ).toFixed(2)} P`}\n                                        </TableCell>\n                                      </>\n                                    ) : (\n                                      <>\n                                        <TableCell></TableCell>\n                                        <TableCell\n                                          style={{\n                                            whiteSpace: 'nowrap',\n                                            color: 'rgba(0, 0, 0, 0.5)',\n                                          }}\n                                        >\n                                          нет\n                                        </TableCell>\n                                      </>\n                                    )}\n                                  </React.Fragment>\n                                ))}\n                              </TableRow>\n                            ))}\n                          </React.Fragment>\n                        ))}\n                      </React.Fragment>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Grid>\n          </Grid>\n        )}\n      </>\n    );\n  }\n}\n\nexport function Tender() {\n  return <Tender_ />;\n}\n","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1666789903721\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["queryString","require","Tender_","props","method","data","setState","is_load","fetch","headers","body","stringify","module","state","version","login","localStorage","getItem","JSON","then","res","json","st","type","setTimeout","window","location","pathname","err","console","log","module_name","cities","city","towns","id","name","town","vendors","vendor","cats","this","getData","module_info","document","title","event","target","value","city_id","items","vendor_items_price","vendors_items","map","el","price","forEach","it","vendor_id","push","Backdrop","open","CircularProgress","color","Grid","container","spacing","mb","item","xs","sm","justifyContent","func","changeCity","bind","label","multiple","changeVendor","Button","variant","style","whiteSpace","onClick","getDataTable","length","TableContainer","sx","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","backgroundColor","key","colSpan","TableBody","category","key_cat","k","hover","className","find","item_id","changeSelect","textAlign","Number","toFixed","React","Tender","cssReload","hot","dispose","accept","undefined"],"sourceRoot":""}